<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>STAR</title>
  <icon>https://www.gravatar.com/avatar/3bc5e602b2d4c7fffe79258e2ac6952e</icon>
  <subtitle>blog</subtitle>
  <link href="http://stardust14.com/atom.xml" rel="self"/>
  
  <link href="http://stardust14.com/"/>
  <updated>2021-11-19T09:45:17.532Z</updated>
  <id>http://stardust14.com/</id>
  
  <author>
    <name>stardust</name>
    <email>邮箱</email>
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>杂记</title>
    <link href="http://stardust14.com/2021/11/04/%E6%9D%82%E8%AE%B0/"/>
    <id>http://stardust14.com/2021/11/04/%E6%9D%82%E8%AE%B0/</id>
    <published>2021-11-04T02:30:15.000Z</published>
    <updated>2021-11-19T09:45:17.532Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="单片机部分"><a class="markdownIt-Anchor" href="#单片机部分"></a> 单片机部分</h1><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">   Stm32<span class="emphasis">_Clock_</span>Init(360,25,2,8);   //设置时钟,180Mhz</span><br><span class="line">   对应的函数：Stm32<span class="emphasis">_Clock_</span>Init(u32 plln,u32 pllm,u32 pllp,u32 pllq)</span><br><span class="line">   //plln:主PLL倍频系数(PLL倍频),取值范围:64~432.</span><br><span class="line">//pllm:主PLL和音频PLL分频系数(PLL之前的分频),取值范围:2~63.</span><br><span class="line">//pllp:系统时钟的主PLL分频系数(PLL之后的分频),取值范围:2,4,6,8.(仅限这4个值!)</span><br><span class="line">//pllq:USB/SDIO/随机数产生器等的主PLL分频系数(PLL之后的分频),取值范围:2~15.</span><br><span class="line">相当于生成了两个时钟，一个是180MHz的高速系统时钟，另一个是45MHz的用于USBUSB/SDIO/随机数产生器等的时钟</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">stm32f429的颜色库（<span class="number">14</span>种颜色）</span><br><span class="line">    <span class="comment">//画笔颜色</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> WHITE          0xFFFF</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BLACK          0x0000  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BLUE          0x001F  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BRED             0XF81F</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> GRED  0XFFE0</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> GBLUE 0X07FF</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> RED            0xF800</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAGENTA        0xF81F</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> GREEN          0x07E0</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> CYAN           0x7FFF</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> YELLOW         0xFFE0</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BROWN  0XBC40 <span class="comment">//棕色</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BRRED  0XFC07 <span class="comment">//棕红色</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> GRAY   0X8430 <span class="comment">//灰色</span></span></span><br></pre></td></tr></table></figure><p>遥控按键对应的码值</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">一种遥控器按键</span><br><span class="line"><span class="keyword">case</span> <span class="number">162</span>:str=<span class="string">&quot;POWER&quot;</span>;<span class="keyword">break</span>;    </span><br><span class="line"><span class="keyword">case</span> <span class="number">98</span>:str=<span class="string">&quot;Mode&quot;</span>;<span class="keyword">break</span>;    </span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:str=<span class="string">&quot;LEFT&quot;</span>;<span class="keyword">break</span>; </span><br><span class="line"><span class="keyword">case</span> <span class="number">226</span>:str=<span class="string">&quot;MUTE&quot;</span>;<span class="keyword">break</span>;  </span><br><span class="line"><span class="keyword">case</span> <span class="number">194</span>:str=<span class="string">&quot;RIGHT&quot;</span>;<span class="keyword">break</span>;   </span><br><span class="line"><span class="keyword">case</span> <span class="number">34</span>:str=<span class="string">&quot;PAUSE&quot;</span>;<span class="keyword">break</span>;  </span><br><span class="line"><span class="keyword">case</span> <span class="number">224</span>:str=<span class="string">&quot;EQ&quot;</span>;<span class="keyword">break</span>;  </span><br><span class="line"><span class="keyword">case</span> <span class="number">168</span>:str=<span class="string">&quot;VOL-&quot;</span>;<span class="keyword">break</span>;   </span><br><span class="line"><span class="keyword">case</span> <span class="number">144</span>:str=<span class="string">&quot;VOL+&quot;</span>;<span class="keyword">break</span>;    </span><br><span class="line"><span class="keyword">case</span> <span class="number">104</span>:str=<span class="string">&quot;0&quot;</span>;<span class="keyword">break</span>;  </span><br><span class="line"><span class="keyword">case</span> <span class="number">152</span>:str=<span class="string">&quot;RPT&quot;</span>;<span class="keyword">break</span>;   </span><br><span class="line"><span class="keyword">case</span> <span class="number">176</span>:str=<span class="string">&quot;U/SD&quot;</span>;<span class="keyword">break</span>;    </span><br><span class="line"><span class="keyword">case</span> <span class="number">48</span>:str=<span class="string">&quot;1&quot;</span>;<span class="keyword">break</span>;    </span><br><span class="line"><span class="keyword">case</span> <span class="number">24</span>:str=<span class="string">&quot;2&quot;</span>;<span class="keyword">break</span>;    </span><br><span class="line"><span class="keyword">case</span> <span class="number">122</span>:str=<span class="string">&quot;3&quot;</span>;<span class="keyword">break</span>;  </span><br><span class="line"><span class="keyword">case</span> <span class="number">16</span>:str=<span class="string">&quot;4&quot;</span>;<span class="keyword">break</span>;   </span><br><span class="line"><span class="keyword">case</span> <span class="number">56</span>:str=<span class="string">&quot;5&quot;</span>;<span class="keyword">break</span>; </span><br><span class="line"><span class="keyword">case</span> <span class="number">90</span>:str=<span class="string">&quot;6&quot;</span>;<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">66</span>:str=<span class="string">&quot;7&quot;</span>;<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">74</span>:str=<span class="string">&quot;8&quot;</span>;<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">82</span>:str=<span class="string">&quot;9&quot;</span>;<span class="keyword">break</span>;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">正点原子配套的遥控器按键对应键值：</span><br><span class="line"><span class="keyword">case</span> <span class="number">162</span>:str=<span class="string">&quot;POWER&quot;</span>;<span class="keyword">break</span>;    </span><br><span class="line"><span class="keyword">case</span> <span class="number">98</span>:str=<span class="string">&quot;UP&quot;</span>;<span class="keyword">break</span>;    </span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:str=<span class="string">&quot;PLAY&quot;</span>;<span class="keyword">break</span>; </span><br><span class="line"><span class="keyword">case</span> <span class="number">226</span>:str=<span class="string">&quot;ALIENTEK&quot;</span>;<span class="keyword">break</span>;  </span><br><span class="line"><span class="keyword">case</span> <span class="number">194</span>:str=<span class="string">&quot;RIGHT&quot;</span>;<span class="keyword">break</span>;   </span><br><span class="line"><span class="keyword">case</span> <span class="number">34</span>:str=<span class="string">&quot;LEFT&quot;</span>;<span class="keyword">break</span>;  </span><br><span class="line"><span class="keyword">case</span> <span class="number">224</span>:str=<span class="string">&quot;VOL-&quot;</span>;<span class="keyword">break</span>;  </span><br><span class="line"><span class="keyword">case</span> <span class="number">168</span>:str=<span class="string">&quot;DOWN&quot;</span>;<span class="keyword">break</span>;   </span><br><span class="line"><span class="keyword">case</span> <span class="number">144</span>:str=<span class="string">&quot;VOL+&quot;</span>;<span class="keyword">break</span>;    </span><br><span class="line"><span class="keyword">case</span> <span class="number">104</span>:str=<span class="string">&quot;1&quot;</span>;<span class="keyword">break</span>;  </span><br><span class="line"><span class="keyword">case</span> <span class="number">152</span>:str=<span class="string">&quot;2&quot;</span>;<span class="keyword">break</span>;   </span><br><span class="line"><span class="keyword">case</span> <span class="number">176</span>:str=<span class="string">&quot;3&quot;</span>;<span class="keyword">break</span>;    </span><br><span class="line"><span class="keyword">case</span> <span class="number">48</span>:str=<span class="string">&quot;4&quot;</span>;<span class="keyword">break</span>;    </span><br><span class="line"><span class="keyword">case</span> <span class="number">24</span>:str=<span class="string">&quot;5&quot;</span>;<span class="keyword">break</span>;    </span><br><span class="line"><span class="keyword">case</span> <span class="number">122</span>:str=<span class="string">&quot;6&quot;</span>;<span class="keyword">break</span>;  </span><br><span class="line"><span class="keyword">case</span> <span class="number">16</span>:str=<span class="string">&quot;7&quot;</span>;<span class="keyword">break</span>;   </span><br><span class="line"><span class="keyword">case</span> <span class="number">56</span>:str=<span class="string">&quot;8&quot;</span>;<span class="keyword">break</span>; </span><br><span class="line"><span class="keyword">case</span> <span class="number">90</span>:str=<span class="string">&quot;9&quot;</span>;<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">66</span>:str=<span class="string">&quot;0&quot;</span>;<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">82</span>:str=<span class="string">&quot;DELETE&quot;</span>;<span class="keyword">break</span>;</span><br></pre></td></tr></table></figure><p>枚举活用！！！</p><p>指针的用法：做底层操作系统（内存管理，消息队列），做模块化程序接口</p><p>指针和指针变量是两个概念，指针变量和普通变量一样，在使用前一定要定义和赋值，给指针变量赋的值和普通变量不同，给指针变量赋值只能赋地址，而不能赋予其他任何值，否则会引起错误。通过“&amp;”来获取普通变量的地址。</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">数组与指针</span><br><span class="line">一般给数组分配连续的地址值</span><br><span class="line">指针变量 = &amp;数组名[下标] ----- p = &amp;buff[0]</span><br><span class="line">指针变量 = 数组名————  p = buff</span><br><span class="line"></span><br><span class="line"><span class="emphasis">*p=a的意思:将a的值赋给p指针指向的地址的值;</span></span><br><span class="line"><span class="emphasis">p=&amp;a的意思是:将a的地址赋给指针p;</span></span><br><span class="line"><span class="emphasis">区别:*</span>p是一个值;p是一个地址;两者完全不相同。</span><br><span class="line"><span class="emphasis">*是取内容，&amp;取地址</span></span><br></pre></td></tr></table></figure><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">指针自加自减运算</span><br><span class="line">指针变量除了可以用来获取内存地址的值以外，还可以用来进行加减运算，指针变量的加减是地址。</span><br></pre></td></tr></table></figure><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">指向指针的指针</span><br><span class="line">一个指针变量用于指向指针类型变量时，就称为指向指针的变量——————双重指针</span><br><span class="line">定义方法：</span><br><span class="line">数据类型 <span class="strong">**指针变量名</span></span><br><span class="line"><span class="strong">双重指针实际上最终指向的是上一层指针指向的变量值</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20211109111457.png" alt="" /></p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">指针变量作为函数形参</span><br><span class="line">目的是为了改变指针指向地址的值，专业术语是通过改变实参的值</span><br></pre></td></tr></table></figure><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">函数指针</span><br><span class="line">指向函数的指针：函数返回值类型(<span class="emphasis">*指针变量名)(函数参数列表)；</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">unsigned char (*</span>func)(unsigned char,unsigned char);</span><br><span class="line"></span><br><span class="line">unsigned char sum(unsigned char v1,unsigned char v2)&#123;</span><br><span class="line"><span class="code">return v1+v2;</span></span><br><span class="line"><span class="code">&#125;</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="code">int main()&#123;</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="code">unsigned char a;</span></span><br><span class="line"><span class="code">func = sum;</span></span><br><span class="line"><span class="code">a = func(1,2);</span></span><br><span class="line"><span class="code">//a = (*func)(1,2);</span></span><br><span class="line"><span class="code">printf(&quot;a=%d\r\n&quot;,a);</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="code">&#125;</span></span><br></pre></td></tr></table></figure><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">函数指针数组</span><br><span class="line">函数返回值类型(<span class="emphasis">*指针变量名[数组大小])(函数参数列表);</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">void func1();</span></span><br><span class="line"><span class="emphasis">void func2();</span></span><br><span class="line"><span class="emphasis">void func3();</span></span><br><span class="line"><span class="emphasis">unsigned char (*</span>func[3])()=&#123;func1,func2,func3&#125;;</span><br><span class="line"></span><br><span class="line">void func1()&#123;</span><br><span class="line"><span class="code">printf(&quot;func1 running\r\n&quot;);</span></span><br><span class="line"><span class="code">&#125;</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="code">void func2()&#123;</span></span><br><span class="line"><span class="code">printf(&quot;func2 running\r\n&quot;);</span></span><br><span class="line"><span class="code">&#125;</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="code">void func3()&#123;</span></span><br><span class="line"><span class="code">printf(&quot;func3 running\r\n&quot;);</span></span><br><span class="line"><span class="code">&#125;</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="code">int main()&#123;</span></span><br><span class="line"><span class="code">func[0]();</span></span><br><span class="line"><span class="code">func[1]();</span></span><br><span class="line"><span class="code">func[2]();</span></span><br><span class="line"><span class="code">&#125;</span></span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//函数指针的用法举例</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">enum</span> &#123;</span><br><span class="line">    LED1,</span><br><span class="line">    LED2,</span><br><span class="line">    LED3,</span><br><span class="line">    LED_SUM</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Drive_Led1</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span> sta)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Drive_Led2</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span> sta)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Drive_Led3</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span> sta)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">unsigned</span> <span class="title">char</span> <span class="params">(*func[LED_SUM])</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span> sta)</span> </span>= &#123;Drive_Led1,Drive_Led2,Drive_Led3&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Drive_Led1</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span> sta)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(sta)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;LED1 ON\r\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;LED1 OFF\r\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Drive_Led2</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span> sta)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(sta)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;LED2 ON\r\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;LED2 OFF\r\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Drive_Led3</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span> sta)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(sta)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;LED3 ON\r\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;LED3 OFF\r\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    func[LED3](<span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>结构体</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="number">1.</span> </span><br><span class="line"><span class="class"><span class="keyword">struct</span> 结构体名称</span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    成员<span class="number">1</span>;</span><br><span class="line">    成员<span class="number">2</span>;</span><br><span class="line">    ···</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span>   </span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> </span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    成员<span class="number">1</span>;</span><br><span class="line">    成员<span class="number">2</span>;</span><br><span class="line">    ···</span><br><span class="line">&#125;结构体名称;</span><br><span class="line"></span><br><span class="line">结构体成员访问方法：结构体变量名.成员</span><br></pre></td></tr></table></figure><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">结构体数组</span><br><span class="line">1.直接用struct声明一个结构体，然后再定义结构体数组，定义格式：struct 结构体名称 数组名[数组大小]</span><br><span class="line"></span><br><span class="line">2.用typedef struct声明一个结构体，并且为结构体重命名，通过重命名的方式定义结构体数组。定义格式：结构体重命名 数组名[数组大小]</span><br><span class="line"></span><br><span class="line">结构体指针</span><br><span class="line">1.直接用struct声明一个结构体，然后再定义结构体指针，定义格式：struct 结构体名称 <span class="emphasis">*结构体指针变量名</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">2.用typedef struct声明一个结构体，并且为结构体重命名，通过别名的方式定义结构体数组。定义格式：结构体别名 *</span>结构体指针变量名</span><br></pre></td></tr></table></figure><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">包含结构体的结构体</span><br><span class="line">链表</span><br><span class="line"></span><br><span class="line">struct Student</span><br><span class="line">&#123;</span><br><span class="line"><span class="code">unsigned char Name[20];</span></span><br><span class="line"><span class="code">unsigned char number;</span></span><br><span class="line"><span class="code">unsigned char sex;</span></span><br><span class="line"><span class="code">struct Student *pLast;</span></span><br><span class="line"><span class="code">struct Student *pNext;</span></span><br><span class="line"><span class="code">&#125;;</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="code">int main()&#123;</span></span><br><span class="line"><span class="code">unsigned char i;</span></span><br><span class="line"><span class="code">struct Student Student4[4]=</span></span><br><span class="line"><span class="code">&#123;</span></span><br><span class="line"><span class="code">&#123;&quot;Stu1&quot;,1,&#x27;m&#x27;,0,0&#125;,</span></span><br><span class="line"><span class="code">&#123;&quot;Stu2&quot;,2,&#x27;m&#x27;,0,0&#125;,</span></span><br><span class="line"><span class="code">&#123;&quot;Stu3&quot;,3,&#x27;m&#x27;,0,0&#125;,</span></span><br><span class="line"><span class="code">&#123;&quot;Stu4&quot;,4,&#x27;m&#x27;,0,0&#125;,</span></span><br><span class="line"><span class="code">&#125;;</span></span><br><span class="line"><span class="code">struct Student *pStu;</span></span><br><span class="line"><span class="code">struct Student *pStud;</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="code">Student4[0].pNext = &amp;Student4[1];//正向</span></span><br><span class="line"><span class="code">Student4[1].pNext = &amp;Student4[2];</span></span><br><span class="line"><span class="code">Student4[2].pNext = &amp;Student4[3];</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="code">Student4[3].pLast = &amp;Student4[2];//反向</span></span><br><span class="line"><span class="code">Student4[2].pLast = &amp;Student4[1];</span></span><br><span class="line"><span class="code">Student4[1].pLast = &amp;Student4[0];</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="code">pStu = &amp;Student4[0];</span></span><br><span class="line"><span class="code">pStud = &amp;Student4[3];</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="code">for(i=0;i&lt;4;i++)&#123;</span></span><br><span class="line"><span class="code">printf(&quot;Name=%s,number = %d,sex = %c\r\n&quot;,pStu-&gt;Name,pStu-&gt;number,pStu-&gt;sex);</span></span><br><span class="line"><span class="code">pStu = pStu-&gt;pNext;</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="code">&#125;</span></span><br><span class="line"><span class="code">printf(&quot;\r\n&quot;);</span></span><br><span class="line"><span class="code">for(i=0;i&lt;4;i++)&#123;</span></span><br><span class="line"><span class="code">printf(&quot;Name=%s,number = %d,sex = %c\r\n&quot;,pStud-&gt;Name,pStud-&gt;number,pStud-&gt;sex);</span></span><br><span class="line"><span class="code">pStud = pStud-&gt;pLast;</span></span><br><span class="line"><span class="code">&#125;</span></span><br><span class="line"><span class="code">&#125;</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="code"></span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20211110104501.png" alt="链表" /></p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">结构体和链表的实际应用</span><br><span class="line">黄金法则：只要是具备多种属性的任何东西，都可以用结构体来构造，这种东西可称之为对象。</span><br><span class="line"></span><br><span class="line">链表作用：</span><br><span class="line"></span><br><span class="line">静态链表：连接在一起的结构体变量数量是固定的，适用于一些固定好数量的数据结构。</span><br><span class="line"></span><br><span class="line">动态链表：通过动态分配内存的方式把结构体变量连接起来，这种结构体变量数量是未知的，会随着某种条件增加或减少结构体变量数量。比方说要接收串口的数据，如果串口一次性接收10个数据那么很好处理，直接定义一个数组，把大小设置成10.那如果不知道串口会传输多少个数据，比如说有可能一帧来100个，下一帧来1000个，那么用数组来进行存储就很不方便。所以就可以用动态链表的方式来实现。</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>队列</li></ul><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">队列原理就像一个管道，如果不断往管道里塞乒乓球，每个乒乓球在管道里就会排成一条队列。先进去的乒乓球先出来，这就是队列的先进先出的规则。</span><br><span class="line">求从左边进去，进去的动作叫做“入列”，然后进去的球在管道里排成了一个队列，这个叫队列缓存也可以理解成数组，存入的5个球就相当于buff[5]；从右边出来的1号球是最早进去的球，这个动作叫出列，遵循先进先出的规则。</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20211111093107.png" alt="" /></p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">队列的作用</span><br><span class="line">队列最主要的作用是用来缓存数据，比如说串口接收数据，一般可以定义一个数组来存储数据，但是假如串口数据频率很快，可能这个数组里存储的数据还没处理完，下一组串口数据又过来了，那么这时候数组里的数据就会被新数据覆盖，导致老的数据丢失。像这种就可以通过队列的方式来处理，每收到一个字节数据都先入列，然后在应用程序同步解析处理，根据队列先进先出的规则，那么老的数据就不会被新的数据“插队”了。</span><br><span class="line">  </span><br><span class="line">应用场景：</span><br><span class="line">1.操作系统的消息传递</span><br><span class="line">2.大数据处理</span><br><span class="line"></span><br><span class="line">队列的3个核心关键点</span><br><span class="line">1.队列缓存</span><br><span class="line">2.入列</span><br><span class="line">3.出列</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">入列</span><br><span class="line"></span><br><span class="line">入列其实就是把数据存进数组的操作，但是在入队时要考虑2个问题：</span><br><span class="line">1.队列缓存可以存储的数组下标位置，一般称为队尾。</span><br><span class="line">2.队列是否已满，如果队列缓存满了又有新的数据入列，该怎么处理？一般处理方式是按照时间顺序，把最早入列的数据丢弃，以新的数据（就是最早入列的下一个数据）替换。</span><br><span class="line"></span><br><span class="line">用指针的特性，在用1个指针变量来代表队尾，然后这个队尾指针指向队列缓存数据的首地址，当入列1个数据时，队尾指针就加1，这样就可以知道当前队列缓存的存储的位置地址。</span><br><span class="line"></span><br><span class="line">出列</span><br><span class="line"></span><br><span class="line">数据出列的时候也是有原则的，从最早的入列那个数据的地址开始取，出列的数组下标称为队头，用指针变量来代表队头。</span><br><span class="line">下图为出列的流程，共有5个数据，队头指针指向队列缓存首地址，接着第一个出列的数据就是1，出列后队头指针加1，指向数据2的地址，那么数据2出列后，队头指针又加1，指向数据3的地址，以此类推，这样就可以实现先进先出的原则。</span><br><span class="line">注：同时队头指针和队尾指针在存储数据后，指针指向一般是不相等的。</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20211117084859.png" alt="" /></p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20211117084849.png" alt="" /></p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">main.c</span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;Queue.h&quot;</span></span></span><br><span class="line">Queue4 KeyMsg;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> a; </span><br><span class="line">QueueEmpty(KeyMsg);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;site:%d\r\n&quot;</span>,<span class="keyword">sizeof</span>(KeyMsg.Buff)); </span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;&amp;KeyMsg=0x%x, KeyMsg.Buff=0x%x, KeyMsg.Head=0x%x, KeyMsg.Tail=0x%x\r\n&quot;</span>,&amp;KeyMsg,KeyMsg.Buff,KeyMsg.Head,KeyMsg.Tail);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;&amp;buff[0]=0x%x, &amp;buff[1]=0x%x, &amp;buff[2]=0x%x, &amp;buff[3]=0x%x \r\n&quot;</span>,&amp;KeyMsg.Buff[<span class="number">0</span>],&amp;KeyMsg.Buff[<span class="number">1</span>],&amp;KeyMsg.Buff[<span class="number">2</span>],&amp;KeyMsg.Buff[<span class="number">3</span>]);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\r\n&quot;</span>); </span><br><span class="line"></span><br><span class="line">a = <span class="number">1</span>;</span><br><span class="line">QueueDataIn(KeyMsg,&amp;a,<span class="number">1</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;&amp;KeyMsg=0x%x, KeyMsg.Buff=0x%x, KeyMsg.Head=0x%x, KeyMsg.Tail=0x%x\r\n&quot;</span>,&amp;KeyMsg,KeyMsg.Buff,KeyMsg.Head,KeyMsg.Tail);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;buff[0]=0x%x, buff[1]=0x%x, buff[2]=0x%x, buff[3]=0x%x \r\n&quot;</span>,KeyMsg.Buff[<span class="number">0</span>],KeyMsg.Buff[<span class="number">1</span>],KeyMsg.Buff[<span class="number">2</span>],KeyMsg.Buff[<span class="number">3</span>]);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\r\n&quot;</span>); </span><br><span class="line"></span><br><span class="line">a = <span class="number">2</span>;</span><br><span class="line">QueueDataIn(KeyMsg,&amp;a,<span class="number">1</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;&amp;TestMsg=0x%x, TestMsg.Buff=0x%x, TestMsg.Head=0x%x, TestMsg.Tail=0x%x\r\n&quot;</span>,&amp;KeyMsg,KeyMsg.Buff,KeyMsg.Head,KeyMsg.Tail);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;buff[0]=0x%x, buff[1]=0x%x, buff[2]=0x%x, buff[3]=0x%x \r\n&quot;</span>,KeyMsg.Buff[<span class="number">0</span>],KeyMsg.Buff[<span class="number">1</span>],KeyMsg.Buff[<span class="number">2</span>],KeyMsg.Buff[<span class="number">3</span>]);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\r\n&quot;</span>); </span><br><span class="line"></span><br><span class="line">a = <span class="number">3</span>;</span><br><span class="line">QueueDataIn(KeyMsg,&amp;a,<span class="number">1</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;&amp;TestMsg=0x%x, TestMsg.Buff=0x%x, TestMsg.Head=0x%x, TestMsg.Tail=0x%x\r\n&quot;</span>,&amp;KeyMsg,KeyMsg.Buff,KeyMsg.Head,KeyMsg.Tail);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;buff[0]=0x%x, buff[1]=0x%x, buff[2]=0x%x, buff[3]=0x%x \r\n&quot;</span>,KeyMsg.Buff[<span class="number">0</span>],KeyMsg.Buff[<span class="number">1</span>],KeyMsg.Buff[<span class="number">2</span>],KeyMsg.Buff[<span class="number">3</span>]);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\r\n&quot;</span>); </span><br><span class="line"></span><br><span class="line"> a = <span class="number">4</span>;</span><br><span class="line">QueueDataIn(KeyMsg,&amp;a,<span class="number">1</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;&amp;TestMsg=0x%x, TestMsg.Buff=0x%x, TestMsg.Head=0x%x, TestMsg.Tail=0x%x\r\n&quot;</span>,&amp;KeyMsg,KeyMsg.Buff,KeyMsg.Head,KeyMsg.Tail);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;buff[0]=0x%x, buff[1]=0x%x, buff[2]=0x%x, buff[3]=0x%x \r\n&quot;</span>,KeyMsg.Buff[<span class="number">0</span>],KeyMsg.Buff[<span class="number">1</span>],KeyMsg.Buff[<span class="number">2</span>],KeyMsg.Buff[<span class="number">3</span>]);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\r\n&quot;</span>); </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> a = <span class="number">5</span>;</span><br><span class="line">QueueDataIn(KeyMsg,&amp;a,<span class="number">1</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;&amp;TestMsg=0x%x, TestMsg.Buff=0x%x, TestMsg.Head=0x%x, TestMsg.Tail=0x%x\r\n&quot;</span>,&amp;KeyMsg,KeyMsg.Buff,KeyMsg.Head,KeyMsg.Tail);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;buff[0]=0x%x, buff[1]=0x%x, buff[2]=0x%x, buff[3]=0x%x \r\n&quot;</span>,KeyMsg.Buff[<span class="number">0</span>],KeyMsg.Buff[<span class="number">1</span>],KeyMsg.Buff[<span class="number">2</span>],KeyMsg.Buff[<span class="number">3</span>]);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\r\n&quot;</span>); </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;&amp;TestMsg=0x%x, TestMsg.Buff=0x%x, TestMsg.Head=0x%x, KeyMsg.Tail=0x%x\r\n&quot;</span>,&amp;KeyMsg,KeyMsg.Buff,KeyMsg.Head,KeyMsg.Tail);</span><br><span class="line">QueueDataOut(KeyMsg,&amp;a);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;a=%d\r\n&quot;</span>,a); </span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;&amp;TestMsg=0x%x, TestMsg.Buff=0x%x, TestMsg.Head=0x%x, TestMsg.Tail=0x%x\r\n&quot;</span>,&amp;KeyMsg,KeyMsg.Buff,KeyMsg.Head,KeyMsg.Tail);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;buff[0]=0x%x, buff[1]=0x%x, buff[2]=0x%x, buff[3]=0x%x \r\n&quot;</span>,KeyMsg.Buff[<span class="number">0</span>],KeyMsg.Buff[<span class="number">1</span>],KeyMsg.Buff[<span class="number">2</span>],KeyMsg.Buff[<span class="number">3</span>]);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\r\n&quot;</span>); </span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//QueueEmpty(KeyMsg);</span></span><br><span class="line"><span class="comment">//printf(&quot;site:%d\r\n&quot;,sizeof(KeyMsg.Buff)); </span></span><br><span class="line"><span class="comment">//printf(&quot;&amp;TestMsg=0x%x, TestMsg.Buff=0x%x, TestMsg.Head=0x%x, KeyMsg.Tail=0x%x\r\n&quot;,&amp;KeyMsg,KeyMsg.Buff,KeyMsg.Head,KeyMsg.Tail);</span></span><br><span class="line"><span class="comment">//printf(&quot;&amp;buff[0]=0x%x, &amp;buff[1]=0x%x, &amp;buff[2]=0x%x, &amp;buff[3]=0x%x \r\n&quot;,&amp;KeyMsg.Buff[0],&amp;KeyMsg.Buff[1],&amp;KeyMsg.Buff[2],&amp;KeyMsg.Buff[3]);</span></span><br><span class="line"><span class="comment">//printf(&quot;\r\n&quot;); </span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//a = 1;</span></span><br><span class="line"><span class="comment">//QueueDataIn(KeyMsg,&amp;a,1);</span></span><br><span class="line"><span class="comment">//printf(&quot;&amp;TestMsg=0x%x, TestMsg.Buff=0x%x, TestMsg.Head=0x%x, TestMsg.Tail=0x%x\r\n&quot;,&amp;KeyMsg,KeyMsg.Buff,KeyMsg.Head,KeyMsg.Tail);</span></span><br><span class="line"><span class="comment">//printf(&quot;buff[0]=0x%x, buff[1]=0x%x, buff[2]=0x%x, buff[3]=0x%x \r\n&quot;,KeyMsg.Buff[0],KeyMsg.Buff[1],KeyMsg.Buff[2],KeyMsg.Buff[3]);</span></span><br><span class="line"><span class="comment">//printf(&quot;\r\n&quot;); </span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//a = 2;</span></span><br><span class="line"><span class="comment">//QueueDataIn(KeyMsg,&amp;a,1);</span></span><br><span class="line"><span class="comment">//printf(&quot;&amp;TestMsg=0x%x, TestMsg.Buff=0x%x, TestMsg.Head=0x%x, TestMsg.Tail=0x%x\r\n&quot;,&amp;KeyMsg,KeyMsg.Buff,KeyMsg.Head,KeyMsg.Tail);</span></span><br><span class="line"><span class="comment">//printf(&quot;buff[0]=0x%x, buff[1]=0x%x, buff[2]=0x%x, buff[3]=0x%x \r\n&quot;,KeyMsg.Buff[0],KeyMsg.Buff[1],KeyMsg.Buff[2],KeyMsg.Buff[3]);</span></span><br><span class="line"><span class="comment">//printf(&quot;\r\n&quot;); </span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//a = 3;</span></span><br><span class="line"><span class="comment">//QueueDataIn(KeyMsg,&amp;a,1);</span></span><br><span class="line"><span class="comment">//printf(&quot;&amp;TestMsg=0x%x, TestMsg.Buff=0x%x, TestMsg.Head=0x%x, TestMsg.Tail=0x%x\r\n&quot;,&amp;KeyMsg,KeyMsg.Buff,KeyMsg.Head,KeyMsg.Tail);</span></span><br><span class="line"><span class="comment">//printf(&quot;buff[0]=0x%x, buff[1]=0x%x, buff[2]=0x%x, buff[3]=0x%x \r\n&quot;,KeyMsg.Buff[0],KeyMsg.Buff[1],KeyMsg.Buff[2],KeyMsg.Buff[3]);</span></span><br><span class="line"><span class="comment">//printf(&quot;\r\n&quot;); </span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//a = 5;</span></span><br><span class="line"><span class="comment">//printf(&quot;&amp;TestMsg=0x%x, TestMsg.Buff=0x%x, TestMsg.Head=0x%x, KeyMsg.Tail=0x%x\r\n&quot;,&amp;KeyMsg,KeyMsg.Buff,KeyMsg.Head,KeyMsg.Tail);</span></span><br><span class="line"><span class="comment">//QueueDataOut(KeyMsg,&amp;a);</span></span><br><span class="line"><span class="comment">//printf(&quot;a=%d\r\n&quot;,a); </span></span><br><span class="line"><span class="comment">////printf(&quot;&amp;TestMsg=0x%x, TestMsg.Buff=0x%x, TestMsg.Head=0x%x, TestMsg.Tail=0x%x\r\n&quot;,&amp;KeyMsg,KeyMsg.Buff,KeyMsg.Head,KeyMsg.Tail);</span></span><br><span class="line"><span class="comment">////printf(&quot;buff[0]=0x%x, buff[1]=0x%x, buff[2]=0x%x, buff[3]=0x%x \r\n&quot;,KeyMsg.Buff[0],KeyMsg.Buff[1],KeyMsg.Buff[2],KeyMsg.Buff[3]);</span></span><br><span class="line"><span class="comment">////printf(&quot;\r\n&quot;); </span></span><br><span class="line"><span class="comment">// </span></span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">Queue.h</span><br><span class="line">    </span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> _QUEUE_H_</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _QUEUE_H_</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">extern</span> <span class="keyword">void</span> <span class="title">S_QueueEmpty</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span> **Head,<span class="keyword">unsigned</span> <span class="keyword">char</span> **Tail,<span class="keyword">unsigned</span> <span class="keyword">char</span> *pBuff)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">extern</span> <span class="keyword">void</span> <span class="title">S_QueueDataIn</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span> **Head,<span class="keyword">unsigned</span> <span class="keyword">char</span> **Tail,<span class="keyword">unsigned</span> <span class="keyword">char</span> *pBuff,<span class="keyword">unsigned</span> <span class="keyword">char</span> Len,<span class="keyword">unsigned</span> <span class="keyword">char</span> *pData,<span class="keyword">unsigned</span> <span class="keyword">char</span> DataLen)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">extern</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> <span class="title">S_QueueDataOut</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span> **Head,<span class="keyword">unsigned</span> <span class="keyword">char</span> **Tail,<span class="keyword">unsigned</span> <span class="keyword">char</span> *pBuff,<span class="keyword">unsigned</span> <span class="keyword">char</span> Len,<span class="keyword">unsigned</span> <span class="keyword">char</span> *pData)</span></span>; </span><br><span class="line"><span class="function"><span class="keyword">extern</span> <span class="keyword">unsigned</span> <span class="keyword">short</span> <span class="title">S_QueueDataLen</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span> **Head,<span class="keyword">unsigned</span> <span class="keyword">char</span> **Tail,<span class="keyword">unsigned</span> <span class="keyword">char</span> *pBuff,<span class="keyword">unsigned</span> <span class="keyword">char</span> Len)</span></span>; </span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> QueueEmpty(x)  S_QueueEmpty((unsigned char **)&amp;(x).Head,(unsigned char **)&amp;(x).Tail,(unsigned char *)(x).Buff)</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> QueueDataIn(x,y,z) S_QueueDataIn((unsigned char **)&amp;(x).Head,(unsigned char **)&amp;(x).Tail,(unsigned char *)&amp;(x).Buff,sizeof((x).Buff),y,z)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> QueueDataOut(x,y)  S_QueueDataOut((unsigned char **)&amp;(x).Head,(unsigned char **)&amp;(x).Tail,(unsigned char *)&amp;(x).Buff,sizeof((x).Buff),y)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> QueueDataLen(x) S_QueueDataLen((unsigned char **)&amp;(x).Head,(unsigned char **)&amp;(x).Tail,(unsigned char *)&amp;(x).Buff,sizeof((x).Buff))</span></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> *Head; <span class="comment">//队头指针，用来出列用的 </span></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> *Tail; <span class="comment">//队尾指针，用来入列用的 </span></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> Buff[<span class="number">4</span>];<span class="comment">//队列缓存 </span></span><br><span class="line">&#125;Queue4;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> *Head; <span class="comment">//队头指针，用来出列用的 </span></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> *Tail; <span class="comment">//队尾指针，用来入列用的 </span></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> Buff[<span class="number">128</span>];<span class="comment">//队列缓存 </span></span><br><span class="line">&#125;Queue128;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> *Head; <span class="comment">//队头指针，用来出列用的 </span></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> *Tail; <span class="comment">//队尾指针，用来入列用的 </span></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> Buff[<span class="number">512</span>];<span class="comment">//队列缓存 </span></span><br><span class="line">&#125;Queue512;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">Queue.c</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">S_QueueEmpty</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span> **Head,<span class="keyword">unsigned</span> <span class="keyword">char</span> **Tail,<span class="keyword">unsigned</span> <span class="keyword">char</span> *pBuff)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">*Head = pBuff;</span><br><span class="line">*Tail = pBuff; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">S_QueueDataIn</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span> **Head,<span class="keyword">unsigned</span> <span class="keyword">char</span> **Tail,<span class="keyword">unsigned</span> <span class="keyword">char</span> *pBuff,<span class="keyword">unsigned</span> <span class="keyword">char</span> Len,<span class="keyword">unsigned</span> <span class="keyword">char</span> *pData,<span class="keyword">unsigned</span> <span class="keyword">char</span> DataLen)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> num;</span><br><span class="line"><span class="comment">//关闭中断 </span></span><br><span class="line"><span class="keyword">for</span>(num=<span class="number">0</span>; num &lt; DataLen; num++,pData++)</span><br><span class="line">&#123;</span><br><span class="line">**Tail = *pData;<span class="comment">//这里把数据入列 </span></span><br><span class="line">(*Tail)++;<span class="comment">//队尾指针加1</span></span><br><span class="line"> <span class="keyword">if</span>(*Tail == pBuff+Len)</span><br><span class="line"> &#123;</span><br><span class="line"> *Tail = pBuff; </span><br><span class="line"> &#125;</span><br><span class="line"><span class="keyword">if</span>(*Tail == *Head)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(++(*Head) == pBuff+Len)</span><br><span class="line">&#123;</span><br><span class="line">*Head = pBuff;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//打开中断 </span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">unsigned</span> <span class="keyword">char</span> <span class="title">S_QueueDataOut</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span> **Head,<span class="keyword">unsigned</span> <span class="keyword">char</span> **Tail,<span class="keyword">unsigned</span> <span class="keyword">char</span> *pBuff,<span class="keyword">unsigned</span> <span class="keyword">char</span> Len,<span class="keyword">unsigned</span> <span class="keyword">char</span> *pData)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> status;</span><br><span class="line"><span class="comment">//关闭中断 </span></span><br><span class="line">status = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(*Head != *Tail)</span><br><span class="line">&#123;</span><br><span class="line">*pData = **Head;</span><br><span class="line">status = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(++(*Head) == pBuff+Len)</span><br><span class="line">&#123;</span><br><span class="line">*Head = pBuff;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//恢复中断 </span></span><br><span class="line"><span class="keyword">return</span> status;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">unsigned</span> <span class="keyword">short</span> <span class="title">S_QueueDataLen</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span> **Head,<span class="keyword">unsigned</span> <span class="keyword">char</span> **Tail,<span class="keyword">unsigned</span> <span class="keyword">char</span> *pBuff,<span class="keyword">unsigned</span> <span class="keyword">char</span> Len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(*Tail &gt; *Head)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> *Tail-*Head;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(*Tail &lt; *Head)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> *Tail+Len-*Head;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>回调函数</li></ul><p>要求：硬件层和应用层的程序代码分开，相互之间的控制和通讯使用接口，而且不会共享的共享的全局变量或数组。（可移植性，可扩展性）</p><p>核心作用：</p><ol><li>把数据从一个.c文件传递到另一个.c文件中，而不用全局变量共享数据</li><li>对于这种数据传递方式，回调函数更利于代码的封装。</li></ol><p>模拟按键检测</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//main.c</span></span><br><span class="line">    </span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;key.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">KeyScanHandle</span><span class="params">(KEY_ID_TYPEDEF KeyID,KEY_STATE_TYPEDEF KeyState)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(KeyID == KEY2)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(KeyState == KEY_PRESS)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;KeyID = %d,KeyState = %d\r\n&quot;</span>,KeyID,KeyState);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc,<span class="keyword">char</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    KeyInit();</span><br><span class="line">    KeyScanSBSRegister(KeyScanHandle);</span><br><span class="line">    KeyPoll();</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//key.c</span></span><br><span class="line">    </span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;key.h&quot;</span></span></span><br><span class="line"></span><br><span class="line">KEY_ID_TYPEDEF keyVal;<span class="comment">//按键ID</span></span><br><span class="line">KEY_STATE_TYPEDEF keyState;</span><br><span class="line"></span><br><span class="line">pKeyScanCallBack pKeyScanCBS;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">KeyInit</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    keyVal = <span class="number">0</span>;</span><br><span class="line">    KeyState = Key_IDLE;</span><br><span class="line">    pKeyScanCBS = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">KeyScanSBSRegister</span><span class="params">(pKeyScanCallBack pCBS)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(pKeyScanCBS == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        pKeyScanCBS = pCBS;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">KeyPoll</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Please Enter key value:&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;keyVal)==<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\r\n&quot;</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Please Enter key state:&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;keyState)==<span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(pKeyScanCBS != <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">           pKeyScanCBS(keyVal,keyState);<span class="comment">//相当于KeyScanHandle(keyVal,keyState);</span></span><br><span class="line">            &#125;</span><br><span class="line">          </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//key.h</span></span><br><span class="line">    </span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> _KEY_H_</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _KEY_H_</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">enum</span></span><br><span class="line">&#123;</span><br><span class="line">    KEY1,</span><br><span class="line">    KEY2,</span><br><span class="line">&#125;KEY_ID_TYPEDEF;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">enum</span></span><br><span class="line">&#123;</span><br><span class="line">    KEY_IDLE,<span class="comment">//空闲</span></span><br><span class="line">    KEY_PRESS,<span class="comment">//按键短按</span></span><br><span class="line">    KEY_LOG_PRESS,<span class="comment">//按键长按</span></span><br><span class="line">    KEY_PELEASE,<span class="comment">//按键释放</span></span><br><span class="line">&#125;KEY_STATE_TYPEDEF;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">typedef</span> <span class="title">void</span> <span class="params">(*pKeyScanCallBack)</span><span class="params">(KEY_ID_TYPEDEF KeyID,KEY_STATE_TYPEDEF KeyState)</span></span>;<span class="comment">//函数指针</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">KeyInit</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">KeyPoll</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">KeyScanSBSRegister</span><span class="params">(pKeyScanCallBack pCBS)</span></span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>程序架构内核</li></ul><ol><li>传统顺序执行的程序架构</li></ol><p>对于单片机程序的开发者来说，真正会使用架构的不多，碰到最多的就是在写单片机程序的时候都会使用while死循环然后按照顺序从上往下执行各种程序。这种方法程序设计比较简单。缺点：只适合做小项目，程序大了以后逻辑会非常混乱，实时性、稳定性、移植性差。</p><ol start="2"><li>实时操作系统</li></ol><p>除了以上传统架构以外呢，还有另外一种稳定地架构，就是实时操作系统,比如ucOs、RTOS这些，这个架构内核帮用户完成了很多复杂地功能，如任务调度、任务通讯、内存管理、定时器、消息队列等等，用户无需关心架构底层实现方法，只需要能将系统移植好跑起来就行了。<br />这种架构的优点是它自身就是一个稳定的、实时性高的、有些甚至提供了图形Guil和网络协议TCP/IP等强大的功能。<br />缺点就是虽然很强大，但是由于占用内存资源比较严重，移植起来也比较复杂，应用后如果不去深耕系统架构的工作原理出了问题会无从下手.所以这种系统一般针对大型项目，对某些功能有需求的，比方说带屏的需要做大量界面的，或者带网络通讯的。</p><ol start="3"><li>轻量级程序架构</li></ol><p>前面说的两种架构呢，第一个简单粗暴但是程序越大会让人摸不着头脑，第二个是实时性高稳定强大但是移植和使用都相对比较复杂，也非常占用单片机内存资源，程序执行的状态无法完全掌控。所以针对这两个架构的一些缺点，我们可以通过我们课程前面所学的一些c语言高级技巧配合实时操作系统的一些思维来做一个介于这2者之间的轻量级程序架构。那么这个程序架构的定位是能够应用大多数中低端单片机，所以要求程序本身占用单片机内存资源要少，在1KB左右。</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">程序架构分成两个部分：</span><br><span class="line"></span><br><span class="line">1.程序架构系统内核</span><br><span class="line">2.任务调度</span><br><span class="line">系统内核用于任务的统一分配管理。</span><br><span class="line">任务通信就是不同模块间的通信，比如说硬件层和应用层数据传递，这个就是通过回调函数来实现。</span><br><span class="line">我们把这两个最核心的问题解决了，其他小问题就迎刃而解了，像什么延时，全局变量共享等问题。那为了能够适应更多的单片机，尽量做到51都能用，所以我们不会把程序架构设计的太复杂。该设计能够解决单片机产品开发一些刚性的需求，比如灵活的延时、不同区域的数据通信等。同时也满足移植性高，稳定性强，实时性好的特点。</span><br><span class="line"></span><br><span class="line">程序架构内核代码的实现原理：</span><br><span class="line">程序架构内核代码就是我们前面说的系统内核代码，主要是用来分配任务和任务调度的，任务就是各功能模块轮询的处理函数。</span><br><span class="line">分配任务就创建任务，把各功能模块处理函数加入到任务管理列表里。任务调度就是定时唤醒和休眠任务列表里的任务。</span><br><span class="line">这里的唤醒就是调用，休眠就是把任务挂起，不让它执行。</span><br></pre></td></tr></table></figure><p>程序架构的系统内核工作流程：</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20211118094657.png" alt="" /></p><p>任务初始化:包含硬件的初始化，如GPIO的配置，定时器初始化，串口初始化等等。然后进行任务的创建和任务执行函数的初始化。<br />任务调度:即我们传统的While(1)循环里面轮询的程序，只是我们通过一些C语言高级技巧把功能做的更灵活强大一些，并且能为每个任务提供不一样的时间节拍，还可以让任意一个任务进入休眠。</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">系统内核说白了就是写一个任务的管理程序，通过这个程序可以更加灵活控制整个程序的运行状态，特别是对于需要做低功耗的产品来说。</span><br><span class="line">系统内核主要完成以下工作:</span><br><span class="line">1.任务创建</span><br><span class="line">2.任务调度</span><br><span class="line">3.任务挂起</span><br><span class="line">4.任务休眠</span><br><span class="line">优点:</span><br><span class="line">1.可以为每个任务提供不同时钟节拍。</span><br><span class="line">2.可以很灵活控制每个任务的执行状态。</span><br><span class="line">3.实时性更高。</span><br><span class="line">4.程序流程更加清晰。</span><br><span class="line">5.更适合做低功耗。</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">```</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">```c</span><br></pre></td></tr></table></figure><h1 id="matlab"><a class="markdownIt-Anchor" href="#matlab"></a> MATLAB</h1><table><thead><tr><th style="text-align:left">线型</th><th style="text-align:left">说明</th></tr></thead><tbody><tr><td style="text-align:left"><code>-</code></td><td style="text-align:left">实线</td></tr><tr><td style="text-align:left"><code>--</code></td><td style="text-align:left">虚线</td></tr><tr><td style="text-align:left"><code>:</code></td><td style="text-align:left">点线</td></tr><tr><td style="text-align:left"><code>-.</code></td><td style="text-align:left">点划线</td></tr></tbody></table><table><thead><tr><th style="text-align:left">标记</th><th style="text-align:left">说明</th></tr></thead><tbody><tr><td style="text-align:left"><code>'o'</code></td><td style="text-align:left">圆圈</td></tr><tr><td style="text-align:left"><code>'+'</code></td><td style="text-align:left">加号</td></tr><tr><td style="text-align:left"><code>'*'</code></td><td style="text-align:left">星号</td></tr><tr><td style="text-align:left"><code>'.'</code></td><td style="text-align:left">点</td></tr><tr><td style="text-align:left"><code>'x'</code></td><td style="text-align:left">叉号</td></tr><tr><td style="text-align:left"><code>'_'</code></td><td style="text-align:left">水平线条</td></tr><tr><td style="text-align:left"><code>'|'</code></td><td style="text-align:left">垂直线条</td></tr><tr><td style="text-align:left"><code>'s'</code></td><td style="text-align:left">方形</td></tr><tr><td style="text-align:left"><code>'d'</code></td><td style="text-align:left">菱形</td></tr><tr><td style="text-align:left"><code>'^'</code></td><td style="text-align:left">上三角</td></tr><tr><td style="text-align:left"><code>'v'</code></td><td style="text-align:left">下三角</td></tr><tr><td style="text-align:left"><code>'&gt;'</code></td><td style="text-align:left">右三角</td></tr><tr><td style="text-align:left"><code>'&lt;'</code></td><td style="text-align:left">左三角</td></tr><tr><td style="text-align:left"><code>'p'</code></td><td style="text-align:left">五角形</td></tr><tr><td style="text-align:left"><code>'h'</code></td><td style="text-align:left">六角形</td></tr></tbody></table><table><thead><tr><th style="text-align:left">颜色</th><th style="text-align:left">说明</th></tr></thead><tbody><tr><td style="text-align:left"><code>y</code></td><td style="text-align:left">黄色</td></tr><tr><td style="text-align:left"><code>m</code></td><td style="text-align:left">品红色</td></tr><tr><td style="text-align:left"><code>c</code></td><td style="text-align:left">青蓝色</td></tr><tr><td style="text-align:left"><code>r</code></td><td style="text-align:left">红色</td></tr><tr><td style="text-align:left"><code>g</code></td><td style="text-align:left">绿色</td></tr><tr><td style="text-align:left"><code>b</code></td><td style="text-align:left">蓝色</td></tr><tr><td style="text-align:left"><code>w</code></td><td style="text-align:left">白色</td></tr><tr><td style="text-align:left"><code>k</code></td><td style="text-align:left">黑色</td></tr></tbody></table><blockquote><p><code>LineWidth</code> - 线条宽度 <code>0.5</code> （默认） | 正值</p><p><code>Color</code> - 针状图颜色 <code>[0 0 0]</code> （默认） | RGB 三元组 | 十六进制颜色代码 | <code>'r'</code> | <code>'g'</code> | <code>'b'</code> | …</p></blockquote><p><code>Marker</code> - 标记符号 <code>'o'</code> （默认） | <code>'+'</code> | <code>'*'</code> | <code>'.'</code> | <code>'x'</code> | …</p><table><thead><tr><th style="text-align:left">值</th><th style="text-align:left">说明</th></tr></thead><tbody><tr><td style="text-align:left"><code>'o'</code></td><td style="text-align:left">圆圈</td></tr><tr><td style="text-align:left"><code>'+'</code></td><td style="text-align:left">加号</td></tr><tr><td style="text-align:left"><code>'*'</code></td><td style="text-align:left">星号</td></tr><tr><td style="text-align:left"><code>'.'</code></td><td style="text-align:left">点</td></tr><tr><td style="text-align:left"><code>'x'</code></td><td style="text-align:left">叉号</td></tr><tr><td style="text-align:left"><code>'_'</code></td><td style="text-align:left">水平线条</td></tr><tr><td style="text-align:left"><code>'|'</code></td><td style="text-align:left">垂直线条</td></tr><tr><td style="text-align:left"><code>'square'</code> 或 <code>'s'</code></td><td style="text-align:left">方形</td></tr><tr><td style="text-align:left"><code>'diamond'</code> 或 <code>'d'</code></td><td style="text-align:left">菱形</td></tr><tr><td style="text-align:left"><code>'^'</code></td><td style="text-align:left">上三角</td></tr><tr><td style="text-align:left"><code>'v'</code></td><td style="text-align:left">下三角</td></tr><tr><td style="text-align:left"><code>'&gt;'</code></td><td style="text-align:left">右三角</td></tr><tr><td style="text-align:left"><code>'&lt;'</code></td><td style="text-align:left">左三角</td></tr><tr><td style="text-align:left"><code>'pentagram'</code> 或 <code>'p'</code></td><td style="text-align:left">五角星（五角形）</td></tr><tr><td style="text-align:left"><code>'hexagram'</code> 或 <code>'h'</code></td><td style="text-align:left">六角星（六角形）</td></tr><tr><td style="text-align:left"><code>'none'</code></td><td style="text-align:left">无标记</td></tr></tbody></table><blockquote><p><code>MarkerSize</code> - 标记大小 <code>6</code> （默认） | 正值</p><p><code>MarkerEdgeColor</code> - 标记轮廓颜色 <code>'auto'</code> （默认） | RGB 三元组 | 十六进制颜色代码 | <code>'r'</code> | <code>'g'</code> | <code>'b'</code> | …</p></blockquote><h1 id="直达底部"><a class="markdownIt-Anchor" href="#直达底部"></a> 直达底部</h1>]]></content>
    
    
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; class=&quot;aplayer-secondary-script-marker&quot;&gt;&lt;/script&gt;&lt;h1 id=&quot;单片机部分&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#单片机部分&quot;&gt;&lt;/a&gt; 单片机部分&lt;/h1&gt;
&lt;figure class=&quot;highlight markdown&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;   Stm32&lt;span class=&quot;emphasis&quot;&gt;_Clock_&lt;/span&gt;Init(360,25,2,8);   //设置时钟,180Mhz&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   对应的函数：Stm32&lt;span class=&quot;emphasis&quot;&gt;_Clock_&lt;/span&gt;Init(u32 plln,u32 pllm,u32 pllp,u32 pllq)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   //plln:主PLL倍频系数(PLL倍频),取值范围:64~432.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//pllm:主PLL和音频PLL分频系数(PLL之前的分频),取值范围:2~63.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//pllp:系统时钟的主PLL分频系数(PLL之后的分频),取值范围:2,4,6,8.(仅限这4个值!)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//pllq:USB/SDIO/随机数产生器等的主PLL分频系数(PLL之后的分频),取值范围:2~15.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;相当于生成了两个时钟，一个是180MHz的高速系统时钟，另一个是45MHz的用于USBUSB/SDIO/随机数产生器等的时钟&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;stm32f429的颜色库（&lt;span class=&quot;number&quot;&gt;14&lt;/span&gt;种颜色）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//画笔颜色&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;define&lt;/span&gt; WHITE         	 0xFFFF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;define&lt;/span&gt; BLACK         	 0x0000	  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;define&lt;/span&gt; BLUE         	 0x001F  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;define&lt;/span&gt; BRED             0XF81F&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;define&lt;/span&gt; GRED 			 0XFFE0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;define&lt;/span&gt; GBLUE			 0X07FF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;define&lt;/span&gt; RED           	 0xF800&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;define&lt;/span&gt; MAGENTA       	 0xF81F&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;define&lt;/span&gt; GREEN         	 0x07E0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;define&lt;/span&gt; CYAN          	 0x7FFF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;define&lt;/span&gt; YELLOW        	 0xFFE0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;define&lt;/span&gt; BROWN 			 0XBC40 &lt;span class=&quot;comment&quot;&gt;//棕色&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;define&lt;/span&gt; BRRED 			 0XFC07 &lt;span class=&quot;comment&quot;&gt;//棕红色&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;define&lt;/span&gt; GRAY  			 0X8430 &lt;span class=&quot;comment&quot;&gt;//灰色&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;遥控按键对应的码值&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;一种遥控器按键			&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;162&lt;/span&gt;:str=&lt;span class=&quot;string&quot;&gt;&amp;quot;POWER&amp;quot;&lt;/span&gt;;&lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;	    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;98&lt;/span&gt;:str=&lt;span class=&quot;string&quot;&gt;&amp;quot;Mode&amp;quot;&lt;/span&gt;;&lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;	    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;:	str=&lt;span class=&quot;string&quot;&gt;&amp;quot;LEFT&amp;quot;&lt;/span&gt;;&lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;		 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;226&lt;/span&gt;:str=&lt;span class=&quot;string&quot;&gt;&amp;quot;MUTE&amp;quot;&lt;/span&gt;;&lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;		  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;194&lt;/span&gt;:str=&lt;span class=&quot;string&quot;&gt;&amp;quot;RIGHT&amp;quot;&lt;/span&gt;;&lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;	   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;34&lt;/span&gt;:str=&lt;span class=&quot;string&quot;&gt;&amp;quot;PAUSE&amp;quot;&lt;/span&gt;;&lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;		  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;224&lt;/span&gt;:str=&lt;span class=&quot;string&quot;&gt;&amp;quot;EQ&amp;quot;&lt;/span&gt;;&lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;		  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;168&lt;/span&gt;:str=&lt;span class=&quot;string&quot;&gt;&amp;quot;VOL-&amp;quot;&lt;/span&gt;;&lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;		   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;144&lt;/span&gt;:str=&lt;span class=&quot;string&quot;&gt;&amp;quot;VOL+&amp;quot;&lt;/span&gt;;&lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;		    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;104&lt;/span&gt;:str=&lt;span class=&quot;string&quot;&gt;&amp;quot;0&amp;quot;&lt;/span&gt;;&lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;		  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;152&lt;/span&gt;:str=&lt;span class=&quot;string&quot;&gt;&amp;quot;RPT&amp;quot;&lt;/span&gt;;&lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;	   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;176&lt;/span&gt;:str=&lt;span class=&quot;string&quot;&gt;&amp;quot;U/SD&amp;quot;&lt;/span&gt;;&lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;	    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;48&lt;/span&gt;:str=&lt;span class=&quot;string&quot;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;;&lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;		    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;24&lt;/span&gt;:str=&lt;span class=&quot;string&quot;&gt;&amp;quot;2&amp;quot;&lt;/span&gt;;&lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;		    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;122&lt;/span&gt;:str=&lt;span class=&quot;string&quot;&gt;&amp;quot;3&amp;quot;&lt;/span&gt;;&lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;		  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;16&lt;/span&gt;:str=&lt;span class=&quot;string&quot;&gt;&amp;quot;4&amp;quot;&lt;/span&gt;;&lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;			   					&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;56&lt;/span&gt;:str=&lt;span class=&quot;string&quot;&gt;&amp;quot;5&amp;quot;&lt;/span&gt;;&lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;	 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;90&lt;/span&gt;:str=&lt;span class=&quot;string&quot;&gt;&amp;quot;6&amp;quot;&lt;/span&gt;;&lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;66&lt;/span&gt;:str=&lt;span class=&quot;string&quot;&gt;&amp;quot;7&amp;quot;&lt;/span&gt;;&lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;74&lt;/span&gt;:str=&lt;span class=&quot;string&quot;&gt;&amp;quot;8&amp;quot;&lt;/span&gt;;&lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;82&lt;/span&gt;:str=&lt;span class=&quot;string&quot;&gt;&amp;quot;9&amp;quot;&lt;/span&gt;;&lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;	&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;正点原子配套的遥控器按键对应键值：	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;162&lt;/span&gt;:str=&lt;span class=&quot;string&quot;&gt;&amp;quot;POWER&amp;quot;&lt;/span&gt;;&lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;	    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;98&lt;/span&gt;:str=&lt;span class=&quot;string&quot;&gt;&amp;quot;UP&amp;quot;&lt;/span&gt;;&lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;	    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;:str=&lt;span class=&quot;string&quot;&gt;&amp;quot;PLAY&amp;quot;&lt;/span&gt;;&lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;		 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;226&lt;/span&gt;:str=&lt;span class=&quot;string&quot;&gt;&amp;quot;ALIENTEK&amp;quot;&lt;/span&gt;;&lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;		  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;194&lt;/span&gt;:str=&lt;span class=&quot;string&quot;&gt;&amp;quot;RIGHT&amp;quot;&lt;/span&gt;;&lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;	   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;34&lt;/span&gt;:str=&lt;span class=&quot;string&quot;&gt;&amp;quot;LEFT&amp;quot;&lt;/span&gt;;&lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;		  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;224&lt;/span&gt;:str=&lt;span class=&quot;string&quot;&gt;&amp;quot;VOL-&amp;quot;&lt;/span&gt;;&lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;		  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;168&lt;/span&gt;:str=&lt;span class=&quot;string&quot;&gt;&amp;quot;DOWN&amp;quot;&lt;/span&gt;;&lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;		   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;144&lt;/span&gt;:str=&lt;span class=&quot;string&quot;&gt;&amp;quot;VOL+&amp;quot;&lt;/span&gt;;&lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;		    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;104&lt;/span&gt;:str=&lt;span class=&quot;string&quot;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;;&lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;		  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;152&lt;/span&gt;:str=&lt;span class=&quot;string&quot;&gt;&amp;quot;2&amp;quot;&lt;/span&gt;;&lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;	   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;176&lt;/span&gt;:str=&lt;span class=&quot;string&quot;&gt;&amp;quot;3&amp;quot;&lt;/span&gt;;&lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;	    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;48&lt;/span&gt;:str=&lt;span class=&quot;string&quot;&gt;&amp;quot;4&amp;quot;&lt;/span&gt;;&lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;		    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;24&lt;/span&gt;:str=&lt;span class=&quot;string&quot;&gt;&amp;quot;5&amp;quot;&lt;/span&gt;;&lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;		    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;122&lt;/span&gt;:str=&lt;span class=&quot;string&quot;&gt;&amp;quot;6&amp;quot;&lt;/span&gt;;&lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;		  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;16&lt;/span&gt;:str=&lt;span class=&quot;string&quot;&gt;&amp;quot;7&amp;quot;&lt;/span&gt;;&lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;			   					&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;56&lt;/span&gt;:str=&lt;span class=&quot;string&quot;&gt;&amp;quot;8&amp;quot;&lt;/span&gt;;&lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;	 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;90&lt;/span&gt;:str=&lt;span class=&quot;string&quot;&gt;&amp;quot;9&amp;quot;&lt;/span&gt;;&lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;66&lt;/span&gt;:str=&lt;span class=&quot;string&quot;&gt;&amp;quot;0&amp;quot;&lt;/span&gt;;&lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;82&lt;/span&gt;:str=&lt;span class=&quot;string&quot;&gt;&amp;quot;DELETE&amp;quot;&lt;/span&gt;;&lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;枚举活用！！！&lt;/p&gt;
&lt;p&gt;指针的用法：做底层操作系统（内存管理，消息队列），做模块化程序接口&lt;/p&gt;
&lt;p&gt;指针和指针变量是两个概念，指针变量和普通变量一样，在使用前一定要定义和赋值，给指针变量赋的值和普通变量不同，给指针变量赋值只能赋地址，而不能赋予其他任何值，否则会引起错误。通过“&amp;amp;”来获取普通变量的地址。&lt;/p&gt;</summary>
    
    
    
    <category term="记录&amp;烂笔头" scheme="http://stardust14.com/categories/%E8%AE%B0%E5%BD%95-%E7%83%82%E7%AC%94%E5%A4%B4/"/>
    
    
    <category term="烂笔头" scheme="http://stardust14.com/tags/%E7%83%82%E7%AC%94%E5%A4%B4/"/>
    
  </entry>
  
  <entry>
    <title>Android</title>
    <link href="http://stardust14.com/2021/08/13/Android/"/>
    <id>http://stardust14.com/2021/08/13/Android/</id>
    <published>2021-08-13T07:31:55.000Z</published>
    <updated>2021-10-02T02:53:34.390Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="a7c6dbe93b649734ae5ecc7b85776dfff5c63a6522453491a2af3a69526a1bc9"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-xray">      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">Hey, password is required here.</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">&lt;div class=&quot;hbe hbe-container&quot; id=&quot;hexo-blog-encrypt&quot; data-wpm=&quot;Oh, this is an invalid password. Check and try again, please.&quot; data-whm=&quot;OOPS, these decrypted content may changed, but you can still have a look.&quot;&gt;
  &lt;script id=&quot;hbeData&quot; type=&quot;hbeData&quot; data-hmacdigest=&quot;a7c6dbe93b649734ae5ecc7b85776dfff5c63a6522453491a2af3a69526a1bc9&quot;&gt;&lt;/script&gt;
  &lt;div class=&quot;hbe hbe-content&quot;&gt;
    &lt;div class=&quot;hbe hbe-input hbe-input-xray&quot;&gt;
      &lt;input class=&quot;hbe hbe-input-field hbe-input-field-xray&quot; type=&quot;password&quot; id=&quot;hbePass&quot;&gt;
      &lt;label class=&quot;hbe hbe-input-label hbe-input-label-xray&quot; for=&quot;hbePass&quot;&gt;
        &lt;span class=&quot;hbe hbe-input-label-content hbe-input-label-content-xray&quot;&gt;Hey, password is required here.&lt;/span&gt;
      &lt;/label&gt;
      &lt;svg class=&quot;hbe hbe-graphic hbe-graphic-xray&quot; width=&quot;300%&quot; height=&quot;100%&quot; viewBox=&quot;0 0 1200 60&quot; preserveAspectRatio=&quot;none&quot;&gt;
        &lt;path d=&quot;M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0&quot;/&gt;
        &lt;path d=&quot;M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0&quot;/&gt;
      &lt;/svg&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;script data-pjax src=&quot;/lib/hbe.js&quot;&gt;&lt;/script&gt;&lt;link href=&quot;/css/hbe.style.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot;&gt;</summary>
    
    
    
    <category term="记录&amp;烂笔头" scheme="http://stardust14.com/categories/%E8%AE%B0%E5%BD%95-%E7%83%82%E7%AC%94%E5%A4%B4/"/>
    
    
    <category term="Android" scheme="http://stardust14.com/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>F4学习记录</title>
    <link href="http://stardust14.com/2021/06/15/F4%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/"/>
    <id>http://stardust14.com/2021/06/15/F4%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/</id>
    <published>2021-06-15T00:59:10.000Z</published>
    <updated>2021-11-25T09:04:13.203Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="阿波罗stm32"><a class="markdownIt-Anchor" href="#阿波罗stm32"></a> 阿波罗STM32</h1><h2 id="开发板底板引脚"><a class="markdownIt-Anchor" href="#开发板底板引脚"></a> 开发板底板引脚</h2><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210615090214.png" alt="" /></p><blockquote><p>JTAG调试，需要占用5个IO端口；SWD则只需要2个IO端口</p><p>KEY_UP 是高电平有效，而 KEY0、KEY1 和 KEY2 是低电平有效</p></blockquote><h2 id="核心板资源图"><a class="markdownIt-Anchor" href="#核心板资源图"></a> 核心板资源图</h2><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210615090543.png" alt="" /></p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210616094711.png" alt="" /></p><h2 id="gpio口通用io口"><a class="markdownIt-Anchor" href="#gpio口通用io口"></a> GPIO口（通用IO口）</h2><p>STM32F429芯片有176个引脚，其中140个可以作为GPIO口。</p><p>一共9组IO：PA~PI；其中PA-PH每组16个IO口，PI只有PI0-PI11（12）,一共有140个IO口（16*8+12=140）</p><p>复用可以大大节省IO口的资源。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210616102931.png" alt="" /></p><p>STM32引脚的功能：查找数据手册</p><p>FT可以容忍5V输入</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210616105528.png" alt="" /></p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210616105607.png" alt="" /></p><h3 id="gpio口的8种工作模式"><a class="markdownIt-Anchor" href="#gpio口的8种工作模式"></a> GPIO口的8种工作模式</h3><ul><li>4种输入模式：</li></ul><p>输入浮空</p><p>输入上拉</p><p>输入下拉</p><p>模拟输入</p><ul><li>4种输出模式（带上下拉）：</li></ul><p>开漏输出（带上拉或者下拉）</p><p>开漏复用功能（带上拉或者下拉）</p><p>推挽式输出（带上拉或者下拉）</p><p>推挽式复用功能（带上拉或者下拉 ）</p><ul><li>4种最大输出速度</li></ul><p>-2MHz    低速</p><p>-25MHz  中速</p><p>-50MHz  快速</p><p>-100MHz  高速</p><h3 id="io口的基本结构"><a class="markdownIt-Anchor" href="#io口的基本结构"></a> IO口的基本结构</h3><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210616112000.png" alt="" /></p><p>GPIO口的输入工作模式1——输入浮空模式</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210616113506.png" alt="" /></p><blockquote><p>在浮空状态下，上拉下拉没有设置（不起作用），输出驱动器不起作用，模拟通道，复用功能输入也不起作用，直接到输入数据寄存器被CPU读取</p></blockquote><p>GPIO的输入工作方式2——输入上拉模式</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210616113917.png" alt="" /></p><blockquote><p>在此模式下，上拉起作用，下拉不起作用，其他和浮空模式一样，被保存在输入数据寄存器</p></blockquote><p>GPIO的输入工作模式3——输入下拉模式</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210616114348.png" alt="" /></p><blockquote><p>与上拉模式类似，下拉起作用，上拉不起作用</p></blockquote><p>GPIO的输入工作模式4——模拟模式</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210616114959.png" alt="" /></p><blockquote><p>在信号到达TTL施密特触发器之前，会直接到模拟通道（也就是TTL施密特触发器开关是关闭的）；上拉和下拉是不起作用的</p></blockquote><p>GPIO的输出工作模式1——开漏输出模式</p><blockquote><p>输出不了高电平</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210616160210.png" alt="" /></p><blockquote><p>输入为1时，N-mos处于截至状态，对IO口电平没有影响，若是输出1，则需要接一个上拉电阻与电源相接</p><p>输入为0时，N-mos处于导通状态 ，IO口会是0，输出0，接下拉电阻</p><p>CPU可以通过输入数据寄存器读取到IO口的输出状态（1/0）</p></blockquote><p>GPIO的输出工作模式2——开漏复用输出模式</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210616160716.png" alt="" /></p><blockquote><p>此时，工作在复用功能输出</p></blockquote><p>GPIO的输出工作模式3——推挽输出模式</p><blockquote><p>推：灌电流 可以达到25mA（mos管内阻小）</p><p>挽：拉电流</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210616161250.png" alt="" /></p><blockquote><p>此时，P-mos和N-mos都是工作的</p><p>若输入为1，则P-mos导通，N-mos截至，输出VDD高电平</p><p>若输入为0，则P-mos截至，N-mos导通，输出0低电平</p></blockquote><p>GPIO的输出工作模式4——推挽复用输出模式</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210616161504.png" alt="" /></p><p>推挽输出：可以输出高低电平，连接数字器件</p><p>开漏输出：只可以输出强低电平，高电平得靠外部电阻拉高。输出端相当于三极管的集电极。要得到高电平状态需要上拉电阻才行，适合于做电流性的驱动，其吸收电流的能力相对强。</p><ul><li>上电复位后IO口的状态</li></ul><p>上电复位后，GPIO默认为输入浮空状态，部分特殊功能引脚为特定状态</p><p>复位后，调试引脚处于复位功能的上拉/下拉状态：</p><p>PA15：JTDI处于上拉状态<br />PA14:JTCK/SWCLK处于下拉状态<br />PA13:JTMS/SWDAT处于下拉状态<br />PB4:NJTRST处于上拉状态<br />PB3:JTDO处于浮空状态</p><h3 id="gpio寄存器"><a class="markdownIt-Anchor" href="#gpio寄存器"></a> GPIO寄存器</h3><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210616171206.png" alt="" /></p><p>1.端口模式寄存器</p><blockquote><p>x=A…K是对应的208个引脚的CPU；对于STM32F429来说，只用到x=A…I</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210616172058.png" alt="" /></p><blockquote><p>两位控制1个IO端口</p></blockquote><p>2.端口输出类型寄存器(GPIOx_OTYPER)</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210616172532.png" alt="" /></p><blockquote><p>每一位控制一个IO口，只用了低16位，16个IO口。</p></blockquote><p>3.端口输出速度寄存器(GPIOx_OSPEEDR)</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210616173713.png" alt="" /></p><blockquote><p>同32位寄存器，每两位控制一个IO口。</p></blockquote><p>4.端口上拉/下拉寄存器(GPIOx_PUPDR)</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210616174212.png" alt="" /></p><div class='tip' ><p>至此，通过这4个寄存器的配置就可以达到GPIO的8种工作模式<p></div><p>5.端口输入数据寄存器(GPIOx_IDR)</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210616174807.png" alt="" /></p><blockquote><p>低16位有效，输入是低电平还是高电平写入在此寄存器中</p></blockquote><p>6.端口输出数据寄存器(GPIOx_ODR)</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210616175955.png" alt="" /></p><blockquote><p>低16位，每一位控制一个输出电平；设置为1则输出高电平，设置为0则输出低电平</p></blockquote><p>7.端口置位/复位寄存器(GPIOx_BSRR)</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210616180029.png" alt="" /></p><blockquote><p>控制IO口输出电平状态，低16位是端口置位位，高16位是端口复位位；</p><p>低16位：设置为1则输出高电平，设置为0则不产生影响</p><p>高16位：设置为1则输出低电平，设置为0则不产生影响</p><p>优点：不用读写与ODR相比</p></blockquote><div class='tip warning' ><p>上图中的位设置/清除寄存器就是BSRR；输出数据寄存器就是ODR，这就是两者的关系<p></div><p>8.端口配置锁定寄存器(GPIOx_LCKR)</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210616180101.png" alt="" /></p><blockquote><p>低17位使用</p></blockquote><p>9.复用功能寄存器(GPIOx_AFRL、AFRH)</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210616180134.png" alt="" /></p><blockquote><p>分高位AFRH和低位AFRL，分别控制8个IO口；两个32位寄存器，一共64位；IO口是16个，所以每个IO口需要4位控制</p></blockquote><h2 id="跑马灯"><a class="markdownIt-Anchor" href="#跑马灯"></a> 跑马灯</h2><p>led灯的硬件连接</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210617165905.png" alt="" /></p><blockquote><p>以LED0为例，若输出为0，则有电位差，LED0亮；若输出为1，则DS0右边是3.3V，无电位差，LED0不亮</p><p>从电平方式上看，，总结出输出方式为推挽输出（上拉）</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210617193151.png" alt="" /></p><blockquote><p>外设使用之前，要使用使能IO口时钟。配置IO口时钟使能寄存器：RCC-&gt;AHB1ENR(外设时钟使能寄存器)</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210617193807.png" alt="" /></p><p><font color="red">初始化IO口模式。配置四个配置寄存器：GPIOx_MODER(模式)、GPIOx_OTYPER(输出类型)、GPIOx_OSPEEDR(输出速度)、GPIOx_PUPDR(上拉下拉)</font></p><p><font color="red">最后，操作IO口，输出高低电平。配置寄存器GPIOx_ODR或着GPIOx_BSRR。</font></p><div class='tip error'><p>出现了一些错误<p></div><p>1.编写led.h文件时出现</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210617162736.png" alt="" /></p><p>解决：由于<code>#ifndef__LED_H</code>应该有空格，即<code>ifndef __LED_H</code>；同理<code>#define__LED_H</code>也是要变成<code>#define __LED_H</code></p><p>2.出现宏定义无效的情况</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210617163357.png" alt="" /></p><p>这是因为led.h出错的结果，把led.h文件改好，就无错了；注意：led.h文件要添加到工程去</p><p>3.编译报错</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210617163717.png" alt="" /></p><p>这是由于工程中还有一个main函数的存在，把另一个移除就可以了</p><div class='tip success'><p>成功<p></div><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;sys.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;led.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;delay.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//初始化PB0和PB1为输出口，并使能这两个口的时钟</span></span><br><span class="line"><span class="comment">//LED IO初始化</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LED_Init</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">RCC-&gt;AHB1ENR |=<span class="number">1</span>&lt;&lt;<span class="number">1</span>;<span class="comment">//使能PORTB时钟</span></span><br><span class="line">    <span class="comment">//只用操作位1，其他位不用管</span></span><br><span class="line"><span class="comment">// “|=”是位或  “&lt;&lt;”：右移一位；使位1保持1，开时钟</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//GPIOB是要操作的GPIO组，PIN0和PIN1这两个引脚分别控制LED1和LED0</span></span><br><span class="line"><span class="comment">//GPIO_MODE_OUT在sys.h文件中宏定义为普通输出（也就是GPIO口模式选择输出）</span></span><br><span class="line"><span class="comment">//GPIO_OTYPE_PP在sys.h文件中宏定义为推挽输出</span></span><br><span class="line"><span class="comment">//GPIO_SPEED_100M在syys.h中宏定义为GPIO速度100Mhz</span></span><br><span class="line"><span class="comment">//GPIO_PUPD_PU在sys.h中宏定义为上拉</span></span><br><span class="line">GPIO_Set(GPIOB,PIN0|PIN1,GPIO_MODE_OUT,GPIO_OTYPE_PP,<span class="comment">//GPIO口设置：GPIO_Set函数</span></span><br><span class="line"> GPIO_SPEED_100M,GPIO_PUPD_PU);<span class="comment">//PB0,PB1设置</span></span><br><span class="line"></span><br><span class="line">LED0 = <span class="number">1</span>;<span class="comment">//LED0关闭</span></span><br><span class="line">LED1 = <span class="number">1</span>;<span class="comment">//LED1关闭</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Stm32_Clock_Init(<span class="number">360</span>,<span class="number">25</span>,<span class="number">2</span>,<span class="number">8</span>);<span class="comment">//设置时钟，180Mhz；初始化系统时钟</span></span><br><span class="line">delay_init(<span class="number">180</span>);<span class="comment">//初始化延时函数</span></span><br><span class="line">LED_Init();<span class="comment">//初始化LED时钟</span></span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">LED0 = <span class="number">0</span>;<span class="comment">//DS0亮</span></span><br><span class="line">LED1 = <span class="number">1</span>;<span class="comment">//DS1灭</span></span><br><span class="line">delay_ms(<span class="number">500</span>);</span><br><span class="line">LED0 = <span class="number">1</span>;<span class="comment">//DS0灭</span></span><br><span class="line">LED1 = <span class="number">0</span>;<span class="comment">//DS1亮</span></span><br><span class="line">delay_ms(<span class="number">1000</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>keil软件一般在最后打出一行空行。</p></blockquote><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> __LED_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> __LED_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&quot;sys.h&quot;</span></span></span><br><span class="line"><span class="comment">//LED端口定义</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LED0 PBout(1)<span class="comment">//DS0，PBout输出为1</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LED1 PBout(0)<span class="comment">//DS1，PBout输出为0</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LED_Init</span><span class="params">(<span class="keyword">void</span>)</span></span>;<span class="comment">//初始化</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="按键输入实验"><a class="markdownIt-Anchor" href="#按键输入实验"></a> 按键输入实验</h2><p>硬件连接</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210618101547.png" alt="" /></p><blockquote><p>当KEY0/KEY1/KEY2按下时，检测到低电平；松开检测到高电平</p><p>当KEY_UP按下时，检测到高电平；松开检测到低电平</p><p>通过上图可以看出，KEY0、KEY1、KEY2是低电平有效，KEY_UP是高电平有效；外部都没有上下拉电阻，所以，需要在 STM32F429 内部设置上下拉。</p><p>按键 KEY0 连接在 PH3 上、KEY1 连接在 PH2 上、KEY2 连接在 PC13 上、KEY_UP 连接在 PA0上。</p></blockquote><blockquote><p>KEY0-&gt;PH3  上拉输入<br />KEY1-&gt;PH2  上拉输入<br />KEY2-&gt;PC13  上拉输入<br />WK_UP-&gt;PA0  下拉输入</p></blockquote><p>由于使用了PA组、PC组、PH组三组GPIO口，所以外设时钟也要设置三种。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210618103813.png" alt="" /></p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210618103801.png" alt="" /></p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210618103742.png" alt="" /></p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210618104011.png" alt="" /></p><blockquote><p>再通过上面的图，设置时钟使能</p></blockquote><div class='tip error'><p>出现错误<p></div><p>多个main函数定义</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210618163923.png" alt="" /></p><blockquote><p>这是因为定义了多个main函数，实际上的main函数要定义在USER文件夹下面</p></blockquote><h2 id="复习"><a class="markdownIt-Anchor" href="#复习"></a> 复习</h2><ol><li>ifdef条件编译</li></ol><blockquote><p>单片机程序开发过程中，经常会遇到一种情况，当满足某条件时对一组语句进行编译，而当条件不满足时则编译另一组语句。</p></blockquote><p>和C语言（if语句）不同的是，可以定义函数当作成语句块，调用函数</p><p>ifndef条件编译与上一条ifdef语句相反，同样要用#endif结尾</p><ol start="2"><li>typedef类型别名</li></ol><blockquote><p>定义一种类型的别名，而不只是简单的宏替换，可以用作同时声名指针型的多个对象。</p></blockquote><p>相当于简化命名</p><ol start="3"><li>extern变量申明</li></ol><blockquote><p>C语言中的extern可以置于变量或着函数前，以表示变量（全局变量）或者函数的定义在别的文件中，提示编译器遇到此变量和函数是在其他的模块中寻找其定义。也要说明变量的类型</p><p>注意：对于extern申明变量可以多次，但是定义只有一次。</p></blockquote><ol start="4"><li>static静态关键字</li></ol><ul><li>static申明的局部变量，存储在静态存储区。只会被初始化一次，在被调用的话，会跳过。</li><li>在函数调用结束之后，不会被释放，值会一直保留下来</li><li>static申明的局部变量，具有记忆功能</li><li>static申明的函数作用域仅限当前.c文件，其他.c文件无法调用。</li></ul><ol start="5"><li>__weak弱函数</li></ol><p>①weak函数和重写的函数不能放在同一个文件</p><p>②避免重复定义</p><p>③若用户没有重写，那么会执行弱函数，若重写了该函数，则会执行重写的函数</p><ol start="6"><li>结构体：</li></ol><blockquote><p>将不同类型的数据存放在一起，作为一个整体进行处理</p></blockquote><p>可扩展性强</p><ol start="7"><li>位操作</li></ol><p><code>&gt;&gt;</code>右移操作，<code>&lt;&lt;</code>左移操作</p><p>二进制左移运算符。将一个运算对象的各二进制位全部左移若干位（左边的二进制位丢弃，右边补0）</p><p>二进制右移运算符。将一个数的各二进制位全部右移若干位，正数左补0，负数左补1，右边丢弃</p><h2 id="mdk使用"><a class="markdownIt-Anchor" href="#mdk使用"></a> MDK使用</h2><ol><li>书签</li></ol><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210707153710.png" alt="" /></p><ol start="2"><li>生成hex文件</li></ol><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210707154235.png" alt="" /></p><p>第一个框是生成hex文件</p><p>第二个框是查看函数变量定义的地方</p><ol start="3"><li>文本美化</li></ol><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210707155018.png" alt="" /></p><h2 id="时钟系统"><a class="markdownIt-Anchor" href="#时钟系统"></a> 时钟系统</h2><p>时钟系统和下一节的时钟系统初始化都是参考CSDN上一位博主的文章  <a class="btn-beautify button--animated " href="https://blog.csdn.net/qq_36243942/article/details/83655339"   title="跳转链接"><i class="far fa-hand-point-right fa-fw"></i><span>跳转链接</span></a></p><p>STM32有5个时钟源：HSI、HSE、LSI、LSE、PLL</p><p>①、HSI是<font color='red'>高速内部时钟</font>，RC振荡器，频率为16MHz，精度不高。可以直接作为系统时钟或者用作PLL时钟输入。　接的外部晶振</p><p>②、HSE是<font color='red'>高速外部时钟</font>，可接石英/陶瓷谐振器，或者接外部时钟源，频率范围为4MHz~26MHz。</p><p>③、LSI是<font color='red'>低速内部时钟</font>，RC振荡器，频率为32kHz，提供低功耗时钟。主要供独立看门狗和自动唤醒单元使用。</p><p>④、LSE是<font color='red'>低速外部时钟</font>，接频率为32.768kHz的石英晶体。RTC（实时时钟）</p><p>⑤、PLL为<font color='red'>锁相环倍频</font>输出。 来源可以是HSI/2、HSE、HSE/2，倍频范围为 2-16 倍</p><div class="note info flat"><p>任何一个外设在使用之前，必须首先使能其相应的时钟</p></div><blockquote><p>LSE接入外部晶振32.768kHz</p><p>HSE接入外部晶振2-26MHz，可通过分频器，做RTC的一个时钟源；可做系统时钟的一个时钟源；可做PLL锁相环时钟源</p><p>HSI可做系统时钟的一个时钟源；也可做锁相环的输入；也可做MCO1（PA8）信号输出引脚</p><p>PLL可做系统时钟的一个时钟源</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210708165624.png" alt="时钟树-F429" /></p><blockquote><p>PLL是一种反馈控制电路。锁相环通常由鉴相器（PD,Phase Detector）、环路滤波器（LF,Loop Filter）和压控振荡器（VCO,Voltage Controlled Oscillator）三部分组成。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210708172720.png" alt="img" /></p><p>特点是：通过外部输入的参考信号和控制环路的压控振荡器的输入信号的相位差，来得到它们的电压差，以这个电压作为误差电压来控制振荡器的频率，使压控振荡器频率达到与输入参考信号频率按一定比例输出的频率，因锁相环可以实现输出信号频率对输入信号频率的自动跟踪，所以锁相环通常用于闭环跟踪电路。锁相环在工作过程中，当输出信号的频率成比例地反映输入信号的频率时，输出电压与输入电压保持固定的相位差值，这样输出电压与输入电压的相位就被锁住了。</p></blockquote><blockquote><p><strong>STM32F4 有三个 PLL:</strong></p><p>1） 主 PLL(PLL)由 HSE 或者 HSI 提供时钟信号，并具有两个不同的输出时钟。第一个输出 PLLP 用于生成<strong>高速</strong>的系统时钟（最高 180MHz）第二个输出 PLLQ 为 48M 时钟， 用于 USB OTG FS 时钟，随机数发生器的时钟和SDIO时钟（SD卡）。VCO是压控振荡器。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210709095542.png" alt="img" /></p><p>2） 第一个专用 PLL(PLLI2S)用于生成精确时钟， 在 I2S 和 SAI1 上实现高品质音频性能。 其中， N 是用于 PLLI2S vco 的倍频系数，其取值范围是： 192~432； R 是 I2S 时钟的分频系数，其取值范围是： 2~7； Q 是 SAI 时钟分频系数，其取值范围是： 2~15； <font color='red'>P 没用到</font>。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210711174756.png" alt="img" /></p><p>3） 第二个专用 PLL(PLLSAI)同样用于生成精确时钟，用于 SAI1 输入时钟，同时还为 LCD_TFT接口提供精确时钟。 其中， N 是用于 PLLSAI vco 的倍频系数，其取值范围是： 192~432；Q 是 SAI 时钟分频系数，其取值范围是： 2~15； R 是 LTDC 时钟的分频系数，其取值范围是： 2~7；<font color='red'> P 没用到</font>。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210711174742.png" alt="img" /></p></blockquote><ul><li>主PLL时钟计算</li></ul><p>例子：主 PLL 时钟第一个高速时钟输出 PLLP 的计算方法：配置180MHz为例：</p><p>分析：主 PLL 时钟的时钟源要先经过一个分频系数为 M 的分频器，然后经过倍频系数为 N 的倍频器出来之后还需要经过一个分频系数为 P（第一个输出 PLLP）或者 Q（第二个输出 PLLQ）的分频器分频之后，最后才生成最终的主 PLL 时钟。例如我们的外部晶振选择 25MHz。同时我们设置相应的分频器 M=25，倍频器倍频系数 N=360，分频器分频系数 P=2，那么主 PLL 生成的第一个输出高速时钟 PLLP 为：</p><blockquote><p><strong>PLL=25MHz * N/ (M*P)=25MHz* 360 /(25*2) = 180MHz</strong></p></blockquote><p>配置过程如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210711174559.png" alt="" /></p><h2 id="时钟系统初始化"><a class="markdownIt-Anchor" href="#时钟系统初始化"></a> 时钟系统初始化</h2><h3 id="库函数版本源码分析"><a class="markdownIt-Anchor" href="#库函数版本源码分析"></a> 库函数版本源码分析</h3><p>在系统进入主函数之前，首先会执行SystemInit这个函数对系统进行初始化</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210711174453.png" alt="" /></p><p>程序源码：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SystemInit</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">/* FPU 设置------------------------------------------------------------*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> (__FPU_PRESENT == 1) &amp;&amp; (__FPU_USED == 1)</span></span><br><span class="line">SCB-&gt;CPACR |= ((<span class="number">3U</span>L &lt;&lt; <span class="number">10</span>*<span class="number">2</span>)|(<span class="number">3U</span>L &lt;&lt; <span class="number">11</span>*<span class="number">2</span>)); <span class="comment">/* set CP10 and CP11 Full Access */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"><span class="comment">/* 复位 RCC 时钟配置为默认配置-----------*/</span></span><br><span class="line">RCC-&gt;CR |= (<span class="keyword">uint32_t</span>)<span class="number">0x00000001</span>;<span class="comment">//打开 HSION 位，默认给的是HSI的时钟</span></span><br><span class="line">RCC-&gt;CFGR = <span class="number">0x00000000</span>;<span class="comment">//复位 CFGR 寄存器</span></span><br><span class="line">RCC-&gt;CR &amp;= (<span class="keyword">uint32_t</span>)<span class="number">0xFEF6FFFF</span>;<span class="comment">//复位 HSEON, CSSON and PLLON 位</span></span><br><span class="line">RCC-&gt;PLLCFGR = <span class="number">0x24003010</span>; <span class="comment">//复位寄存器 PLLCFGR</span></span><br><span class="line">RCC-&gt;CR &amp;= (<span class="keyword">uint32_t</span>)<span class="number">0xFFFBFFFF</span>;<span class="comment">//复位 HSEBYP 位</span></span><br><span class="line">RCC-&gt;CIR = <span class="number">0x00000000</span>;<span class="comment">//关闭所有中断</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> defined (DATA_IN_ExtSRAM) || defined (DATA_IN_ExtSDRAM)</span></span><br><span class="line">SystemInit_ExtMemCtl();</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">/* DATA_IN_ExtSRAM || DATA_IN_ExtSDRAM */</span></span></span><br><span class="line"><span class="comment">/* 配置中断向量表地址=基地址+偏移地址 ------------------*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> VECT_TAB_SRAM</span></span><br><span class="line">SCB-&gt;VTOR = SRAM_BASE | VECT_TAB_OFFSET;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line">SCB-&gt;VTOR = FLASH_BASE | VECT_TAB_OFFSET;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>程序的作用：</p><p>1） FPU 设置<br />2） 复位 RCC 时钟配置为默认复位值（默认开始了 HIS）<br />3） 外部存储器配置<br />4） 中断向量表地址配置</p><blockquote><p>在F4的HAL库汇总SystemInit函数，并没有设置系统的主频和外设时钟的频率，所以所以需要自己去写这个函数。</p></blockquote><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//系统时钟初始化函数</span></span><br><span class="line"><span class="comment">//plln:主PLL倍频系数(PLL倍频),取值范围:64~432.</span></span><br><span class="line"><span class="comment">//pllm:主PLL和音频PLL分频系数(PLL之前的分频),取值范围:2~63.</span></span><br><span class="line"><span class="comment">//pllp:系统时钟的主PLL分频系数(PLL之后的分频),取值范围:2,4,6,8.(仅限这4个值!)</span></span><br><span class="line"><span class="comment">//pllq:USB/SDIO/随机数产生器等的主PLL分频系数(PLL之后的分频),取值范围:2~15.</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Stm32_Clock_Init</span><span class="params">(u32 plln,u32 pllm,u32 pllp,u32 pllq)</span></span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">RCC-&gt;CR|=<span class="number">0x00000001</span>;<span class="comment">//设置HISON,开启内部高速RC振荡</span></span><br><span class="line">RCC-&gt;CFGR=<span class="number">0x00000000</span>;<span class="comment">//CFGR清零 </span></span><br><span class="line">RCC-&gt;CR&amp;=<span class="number">0xFEF6FFFF</span>;<span class="comment">//HSEON,CSSON,PLLON清零 </span></span><br><span class="line">RCC-&gt;PLLCFGR=<span class="number">0x24003010</span>;<span class="comment">//PLLCFGR恢复复位值 </span></span><br><span class="line">RCC-&gt;CR&amp;=~(<span class="number">1</span>&lt;&lt;<span class="number">18</span>);<span class="comment">//HSEBYP清零,外部晶振不旁路</span></span><br><span class="line">RCC-&gt;CIR=<span class="number">0x00000000</span>;<span class="comment">//禁止RCC时钟中断 </span></span><br><span class="line">Sys_Clock_Set(plln,pllm,pllp,pllq);<span class="comment">//设置时钟 </span></span><br><span class="line"><span class="comment">//配置向量表  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span>  VECT_TAB_RAM</span></span><br><span class="line">MY_NVIC_SetVectorTable(<span class="number">1</span>&lt;&lt;<span class="number">29</span>,<span class="number">0x0</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span>   </span></span><br><span class="line">MY_NVIC_SetVectorTable(<span class="number">0</span>,<span class="number">0x0</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> </span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个函数需要的参数是4个，分别与系统原理图对应的是，如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210711174358.png" alt="" /></p><p>然后，查看时钟控制CR寄存器（控制寄存器）的描述：</p><ol><li>开启HSION，开启内部高速RC震荡</li></ol><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210711164714.png" alt="" /></p><ol start="2"><li>时钟配置寄存器CFRG清零</li></ol><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210711165007.png" alt="" /></p><ol start="3"><li>配置时钟控制CR寄存器， 使位HSEON,CSSON,PLLON清零（第16、19、24位）</li></ol><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210711165527.png" alt="" /></p><ol start="4"><li>RCC PLL 配置寄存器 (RCC_PLLCFGR),恢复默认值：<code>RCC-&gt;PLLCFGR=0x24003010; //PLLCFGR恢复复位值</code></li></ol><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210711165728.png" alt="" /></p><ol start="5"><li>设置CR寄存器，外部晶振不旁路</li></ol><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210711170055.png" alt="" /></p><ol start="6"><li>RCC 时钟中断寄存器 (RCC_CIR)，RCC-&gt;CR=0X00000000; //禁止RCC时钟中断</li></ol><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210711170311.png" alt="" /></p><ol start="7"><li>设置时钟，使用函数Sys_Clock_Set(plln,pllm,pllp,pllq);//设置时钟，函数原型如下：</li></ol><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function">u8 <span class="title">Sys_Clock_Set</span><span class="params">(u32 plln,u32 pllm,u32 pllp,u32 pllq)</span></span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line">u16 retry=<span class="number">0</span>;</span><br><span class="line">u8 status=<span class="number">0</span>;</span><br><span class="line">RCC-&gt;CR|=<span class="number">1</span>&lt;&lt;<span class="number">16</span>;<span class="comment">//HSE 开启 </span></span><br><span class="line"><span class="keyword">while</span>(((RCC-&gt;CR&amp;(<span class="number">1</span>&lt;&lt;<span class="number">17</span>))==<span class="number">0</span>)&amp;&amp;(retry&lt;<span class="number">0X1FFF</span>))retry++;<span class="comment">//等待HSE RDY</span></span><br><span class="line"><span class="keyword">if</span>(retry==<span class="number">0X1FFF</span>)status=<span class="number">1</span>;<span class="comment">//HSE无法就绪</span></span><br><span class="line"><span class="keyword">else</span>   </span><br><span class="line">&#123;</span><br><span class="line">RCC-&gt;APB1ENR|=<span class="number">1</span>&lt;&lt;<span class="number">28</span>;<span class="comment">//电源接口时钟使能</span></span><br><span class="line">PWR-&gt;CR|=<span class="number">3</span>&lt;&lt;<span class="number">14</span>; <span class="comment">//高性能模式,时钟可到180Mhz</span></span><br><span class="line">RCC-&gt;CFGR|=(<span class="number">0</span>&lt;&lt;<span class="number">4</span>)|(<span class="number">5</span>&lt;&lt;<span class="number">10</span>)|(<span class="number">4</span>&lt;&lt;<span class="number">13</span>);<span class="comment">//HCLK 不分频;APB1 4分频;APB2 2分频. </span></span><br><span class="line">RCC-&gt;CR&amp;=~(<span class="number">1</span>&lt;&lt;<span class="number">24</span>);<span class="comment">//关闭主PLL</span></span><br><span class="line">RCC-&gt;PLLCFGR=pllm|(plln&lt;&lt;<span class="number">6</span>)|(((pllp&gt;&gt;<span class="number">1</span>)<span class="number">-1</span>)&lt;&lt;<span class="number">16</span>)|(pllq&lt;&lt;<span class="number">24</span>)|(<span class="number">1</span>&lt;&lt;<span class="number">22</span>);<span class="comment">//配置主PLL,PLL时钟源来自HSE</span></span><br><span class="line">RCC-&gt;CR|=<span class="number">1</span>&lt;&lt;<span class="number">24</span>;<span class="comment">//打开主PLL</span></span><br><span class="line"><span class="keyword">while</span>((RCC-&gt;CR&amp;(<span class="number">1</span>&lt;&lt;<span class="number">25</span>))==<span class="number">0</span>);<span class="comment">//等待PLL准备好 </span></span><br><span class="line">FLASH-&gt;ACR|=<span class="number">1</span>&lt;&lt;<span class="number">8</span>;<span class="comment">//指令预取使能.</span></span><br><span class="line">FLASH-&gt;ACR|=<span class="number">1</span>&lt;&lt;<span class="number">9</span>;<span class="comment">//指令cache使能.</span></span><br><span class="line">FLASH-&gt;ACR|=<span class="number">1</span>&lt;&lt;<span class="number">10</span>;<span class="comment">//数据cache使能.</span></span><br><span class="line">FLASH-&gt;ACR|=<span class="number">5</span>&lt;&lt;<span class="number">0</span>;<span class="comment">//5个CPU等待周期. </span></span><br><span class="line">RCC-&gt;CFGR&amp;=~(<span class="number">3</span>&lt;&lt;<span class="number">0</span>);<span class="comment">//清零</span></span><br><span class="line">RCC-&gt;CFGR|=<span class="number">2</span>&lt;&lt;<span class="number">0</span>;<span class="comment">//选择主PLL作为系统时钟 </span></span><br><span class="line"><span class="keyword">while</span>((RCC-&gt;CFGR&amp;(<span class="number">3</span>&lt;&lt;<span class="number">2</span>))!=(<span class="number">2</span>&lt;&lt;<span class="number">2</span>));<span class="comment">//等待主PLL作为系统时钟成功. </span></span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">return</span> status;</span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure><ol start="8"><li>RCC-&gt;CR|=1&lt;&lt;16;         //设置CR寄存器的第16位为1，HSE 开启</li></ol><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210711171512.png" alt="" /></p><ol start="9"><li>等待HSE时钟就绪，判断CR寄存器的第17位是否为1，返回1准备就绪，如果超时，返回标志位status=1.</li></ol><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210711172053.png" alt="" /></p><ol start="10"><li>如果准备就绪，使能电源接口时钟，RCC-&gt;APB1ENR|=1&lt;&lt;28;   //设置APB1ENR寄存器28位为1电源接口时钟使能</li></ol><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210711172112.png" alt="" /></p><ol start="11"><li>开始电源的高性能模式，PWR-&gt;CR|=3&lt;&lt;14;      //高性能模式,时钟可到180Mhz</li></ol><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210711172331.png" alt="" /></p><ol start="12"><li>配置RCC的CFGR寄存器，//HCLK 不分频;APB1 4分频;APB2 2分频</li></ol><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210711174144.png" alt="" /></p><ol start="13"><li><strong>RCC-&gt;CR&amp;=~(1&lt;&lt;24);   //关闭主PLL，配置主PLL的一些参数，配置完再重新打开</strong></li></ol><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210711175250.png" alt="" /></p><ol start="14"><li>配置主PLL,PLL时钟源来自HSE，<strong>RCC-&gt;PLLCFGR=pllm|(plln&lt;&lt;6)|(((pllp&gt;&gt;1)-1)&lt;&lt;16)|(pllq&lt;&lt;24)|(1&lt;&lt;22);</strong></li></ol><ul><li><strong>pllm,设置PLLM</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210712105826.png" alt="" /></p><ul><li><strong>(plln&lt;&lt;6)，设置PLLN</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210712105909.png" alt="" /></p><ul><li><strong>(((pllp&gt;&gt;1)-1)&lt;&lt;16),设置系统时钟的主PLL分频系数(PLL之后的分频),取值范围:2,4,6,8.(仅限这4个值!)</strong></li></ul><blockquote><p>为何是：(((pllp&gt;&gt;1)-1)&lt;&lt;16)呢？如下解释，当我们取值pllp为2时，可以得到(((pllp&gt;&gt;1)-1)&lt;&lt;16)=0</p><p>当pllp取值为4时，(((pllp&gt;&gt;1)-1)&lt;&lt;16)=1，同理，pllp取值为6时，(((pllp&gt;&gt;1)-1)&lt;&lt;16)=3.其实就是在调用函数的时候方便设置。可以看都这个寄存器的位，当第17:16为0时，就是这只pllp为2分频。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210712110414.png" alt="" /></p><ul><li><strong>(pllq&lt;&lt;24)，pllq:USB/SDIO/随机数产生器等的主PLL分频系数(PLL之后的分频),取值范围:2~15.</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210712110458.png" alt="" /></p><ul><li><strong>(1&lt;&lt;22)，选择主PLL的时钟源是HSE外部震荡时钟</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210712110533.png" alt="" /></p><p>此步骤完成的工作就是如下所示的设置：</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210712110808.png" alt="" /></p><ol start="15"><li>设置完主PLL之后，重新打开主PLL: <strong>RCC-&gt;CR|=1&lt;&lt;24;       //打开主PLL</strong></li></ol><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210712111026.png" alt="" /></p><ol start="16"><li>每次打开PLL之前，都要等待就绪：<strong>while((RCC-&gt;CR&amp;(1&lt;&lt;25))==0);//等待PLL准备好</strong></li></ol><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210712111334.png" alt="" /></p><ol start="17"><li>设置FLASH寄存器参数：</li></ol><blockquote><p>FLASH-&gt;ACR|=1&lt;&lt;8;     //指令预取使能.<br />FLASH-&gt;ACR|=1&lt;&lt;9;     //指令cache使能.<br />FLASH-&gt;ACR|=1&lt;&lt;10;     //数据cache使能.<br />FLASH-&gt;ACR|=5&lt;&lt;0;     //5个CPU等待周期.</p></blockquote><ol start="18"><li>设置CFRG(RCC时钟配置寄存器)选择PLL作为系统时钟，<strong>RCC-&gt;CFGR&amp;=~(3&lt;&lt;0);    //清零 RCC-&gt;CFGR|=2&lt;&lt;0;</strong></li></ol><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210712111614.png" alt="" /></p><ol start="19"><li>等待主PLL设置为系统主时钟成功：<strong>while((RCC-&gt;CFGR&amp;(3&lt;&lt;2))!=(2&lt;&lt;2));</strong></li></ol><p><strong>语句含义：</strong> <strong>当CFGR的3：2位不等于01时就说明主PLL还未就绪，就绪等待。</strong></p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210712112050.png" alt="" /></p><ol start="20"><li><strong>最后一步，配置向量表。</strong></li></ol><p>通过这样的设置系统时钟的整体配置就OK了。</p><p>如果调用函数：**u8 Sys_Clock_Set(u32 plln,u32 pllm,u32 pllp,u32 pllq)，**<strong>产生180Mhz的主频</strong></p><p>**设置参数：**外部晶振为25M的时候:plln=360,pllm=25,pllp=2,pllq=8.</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210712112224.png" alt="" /></p><h3 id="hal库函数版本源码分析"><a class="markdownIt-Anchor" href="#hal库函数版本源码分析"></a> HAL库函数版本源码分析</h3><p>HAL库主要是把寄存器进行封装，然后把一些参数合并到一个结构体，通过调用结构体的方式对寄存器进行赋值，间接的完成对STM32寄存器的配置。</p><p>主要是下面两个结构体：</p><p>1.RCC_OscInitTypeDef结构体：</p><blockquote><p>从结构体的名称中可以看出，这个结构体主要是选择时钟源，然后是时钟的状态（开启还是关闭）</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210713165115.png" alt="" /></p><p>可以看到RCC_OscInitTypeDef 里面还嵌套了一个RCC_PLLInitTypeDef结构体，主要是用于主PLL配置用的。比如设置M分频，vco倍频等。</p><ul><li>RCC_PLLInitTypeDef 结构体如下:</li></ul><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210713165242.png" alt="" /></p><p>所以，第一步是定义一个<font color='red'>RCC_OscInitTypeDef</font>结构体变量，并给这个结构体变量赋值，然后调用，HAL_RCC_OscConfig函数(时钟源配置函数)，把这个结构体变量传进去，使设置生效。</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">RCC_OscInitTypeDef RCC_OscInitStructure; </span><br><span class="line">RCC_ClkInitTypeDef RCC_ClkInitStructure;</span><br><span class="line"></span><br><span class="line">__HAL_RCC_PWR_CLK_ENABLE(); <span class="comment">//使能PWR时钟</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//下面这个设置用来设置调压器输出电压级别，以便在器件未以最大频率工作</span></span><br><span class="line"><span class="comment">//时使性能与功耗实现平衡，此功能只有STM32F42xx和STM32F43xx器件有，</span></span><br><span class="line">__HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);<span class="comment">//设置调压器输出电压级别1</span></span><br><span class="line"></span><br><span class="line">RCC_OscInitStructure.OscillatorType=RCC_OSCILLATORTYPE_HSE;    <span class="comment">//时钟源为HSE</span></span><br><span class="line">RCC_OscInitStructure.HSEState=RCC_HSE_ON;                      <span class="comment">//打开HSE</span></span><br><span class="line">RCC_OscInitStructure.PLL.PLLState=RCC_PLL_ON;<span class="comment">//打开PLL</span></span><br><span class="line">RCC_OscInitStructure.PLL.PLLSource=RCC_PLLSOURCE_HSE;<span class="comment">//PLL时钟源选择HSE</span></span><br><span class="line">RCC_OscInitStructure.PLL.PLLM=pllm; <span class="comment">//主PLL和音频PLL分频系数(PLL之前的分频),取值范围:2~63.</span></span><br><span class="line">RCC_OscInitStructure.PLL.PLLN=plln; <span class="comment">//主PLL倍频系数(PLL倍频),取值范围:64~432.  </span></span><br><span class="line">RCC_OscInitStructure.PLL.PLLP=pllp; <span class="comment">//系统时钟的主PLL分频系数(PLL之后的分频),取值范围:2,4,6,8.(仅限这4个值!)</span></span><br><span class="line">RCC_OscInitStructure.PLL.PLLQ=pllq; <span class="comment">//USB/SDIO/随机数产生器等的主PLL分频系数(PLL之后的分频),取值范围:2~15.</span></span><br><span class="line">ret=HAL_RCC_OscConfig(&amp;RCC_OscInitStructure);<span class="comment">//初始化</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210713165858.png" alt="" /></p><p>下面看一下<font color='red'>HAL_RCC_OscConfig</font>函数</p><ul><li>OscillatorType 这个成员变量是选择时钟时钟源的，可以看一下他的取值范围：取值范围小于15</li></ul><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210715102618.png" alt="" /></p><p>在HAL库有对每一个时钟源进行宏定义的，如下：</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210715102810.png" alt="" /></p><p>在上面的程序中，设置的成员变量的值为：<font color='red'>RCC_OSCILLATORTYPE_HSE </font>,就是值为：0x00000001</p><ul><li>HSEState 是选择时钟的工作方式，此处选择：<em>RCC_HSE_ON</em>,值为：0x01</li></ul><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210715103415.png" alt="" /></p><p>在<strong>HAL_RCC_OscConfig</strong>，函数中对HSE的配置如下,贴出一部分代码：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* Check the parameters */</span></span><br><span class="line">  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct-&gt;OscillatorType));</span><br><span class="line">  <span class="comment">/*------------------------------- HSE Configuration ------------------------*/</span> </span><br><span class="line">  <span class="keyword">if</span>(((RCC_OscInitStruct-&gt;OscillatorType) &amp; RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="comment">/* Check the parameters */</span></span><br><span class="line">    assert_param(IS_RCC_HSE(RCC_OscInitStruct-&gt;HSEState));</span><br><span class="line">    <span class="comment">/* When the HSE is used as system clock or clock source for PLL in these cases HSE will not disabled */</span></span><br><span class="line">  <span class="comment">//判断HSE是否作为系统时钟，或者作为PLL时钟的来源</span></span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line"> <span class="comment">// RCC_CFGR_SWS_HSE=0x00000004</span></span><br><span class="line"> <span class="comment">//__HAL_RCC_GET_SYSCLK_SOURCE函数，获取CFGR位 3:2 SWS： 系统时钟切换状态 (System clock switch status)</span></span><br><span class="line">  <span class="comment">//判断3:2位是否为01，含义：01： HSE 振荡器用作系统时钟，这两个位为只读</span></span><br><span class="line">  <span class="comment">//也就是判断此时系统时钟或者主PLL时钟是否已经设置为HSE</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment">//RCC_CFGR_SWS_PLL=0x00000008 ,判断CFGR的第3为是否为1</span></span><br><span class="line">    <span class="keyword">if</span>((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE)                                                                     ||\</span><br><span class="line">      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) &amp;&amp; ((RCC-&gt;PLLCFGR &amp; RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))</span><br><span class="line">    &#123;   <span class="comment">//PLL作为系统时钟，  RCC_PLLCFGR_PLLSRC=0x00400000，第22位，是否选择：1：选择 HSE 振荡器时钟作为 PLL 和 PLLI2S 时钟输入</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//如果HSE作为系统时钟来源，或者作为PLL时钟来源的话</span></span><br><span class="line">      <span class="keyword">if</span>((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) &amp;&amp; (RCC_OscInitStruct-&gt;HSEState == RCC_HSE_OFF))</span><br><span class="line">      &#123;</span><br><span class="line">  <span class="comment">//此时HSE已经打开了，或HSE没有使能，这里的任何一种情况都会导致失败</span></span><br><span class="line">        <span class="keyword">return</span> HAL_ERROR;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>  <span class="comment">//否则的话，系统的时钟还没有进行初始化</span></span><br><span class="line">    &#123;</span><br><span class="line">      <span class="comment">/* Reset HSEON and HSEBYP bits before configuring the HSE --------------*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//对RCC-&gt;CFGR 寄存器的23:16 清零，也就是复位HSEON(关闭振荡器) 和重置就绪位</span></span><br><span class="line">      __HAL_RCC_HSE_CONFIG(RCC_HSE_OFF);</span><br><span class="line">      </span><br><span class="line"><span class="comment">//获取当前系统时间戳，用于判断关闭HSE是否超时</span></span><br><span class="line">      <span class="comment">/* Get Start Tick*/</span></span><br><span class="line">      tickstart = HAL_GetTick();</span><br><span class="line">      </span><br><span class="line">      <span class="comment">/* Wait till HSE is disabled */</span>  </span><br><span class="line">      <span class="keyword">while</span>(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)  <span class="comment">//等待HSE关闭</span></span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">if</span>((HAL_GetTick() - tickstart ) &gt; HSE_TIMEOUT_VALUE)</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="keyword">return</span> HAL_TIMEOUT;  <span class="comment">//超过最大时间为关闭HSE则，出错</span></span><br><span class="line">        &#125;       </span><br><span class="line">      &#125;</span><br><span class="line">      </span><br><span class="line">      <span class="comment">/* Set the new HSE configuration ---------------------------------------*/</span></span><br><span class="line">  <span class="comment">//重新设置HSE,这个值来自于结构体，我们使用就需要使能，通过设置就可以对RCC-&gt;CFGR 寄存器的23:16，写此值</span></span><br><span class="line">      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct-&gt;HSEState);</span><br><span class="line">      </span><br><span class="line">      <span class="comment">/* Check the HSE State */</span></span><br><span class="line">  <span class="comment">//再一次进行确认，我们是否设置了打开HSE</span></span><br><span class="line">      <span class="keyword">if</span>((RCC_OscInitStruct-&gt;HSEState) != RCC_HSE_OFF)</span><br><span class="line">      &#123;</span><br><span class="line">  <span class="comment">//进入说明，我们的确是打开了</span></span><br><span class="line">        <span class="comment">/* Get Start Tick*/</span></span><br><span class="line">  <span class="comment">//获取当前系统时间戳</span></span><br><span class="line">        tickstart = HAL_GetTick();</span><br><span class="line">      </span><br><span class="line">        <span class="comment">/* Wait till HSE is ready */</span> </span><br><span class="line"><span class="comment">//获取HSE就绪标志位，未就绪就等待</span></span><br><span class="line">        <span class="keyword">while</span>(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="keyword">if</span>((HAL_GetTick() - tickstart ) &gt; HSE_TIMEOUT_VALUE)</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="keyword">return</span> HAL_TIMEOUT;</span><br><span class="line">          &#125; </span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">else</span> <span class="comment">//否则没有打开HSE的开关咯</span></span><br><span class="line">      &#123;</span><br><span class="line">        <span class="comment">/* Get Start Tick*/</span></span><br><span class="line">        tickstart = HAL_GetTick();</span><br><span class="line">         </span><br><span class="line">        <span class="comment">/* Wait till HSE is bypassed or disabled */</span></span><br><span class="line">        <span class="keyword">while</span>(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="keyword">if</span>((HAL_GetTick() - tickstart ) &gt; HSE_TIMEOUT_VALUE) <span class="comment">//HSE_TIMEOUT_VALUE=5000</span></span><br><span class="line">          &#123;</span><br><span class="line">            <span class="keyword">return</span> HAL_TIMEOUT;</span><br><span class="line">          &#125; </span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>在stm32f4xx_hal_rcc.c中239行</p></blockquote><p>分析：</p><p><strong>1.第一句是判断我们选择的时钟来源，此处选择的是RCC_OSCILLATORTYPE_HSE ，所以这个条件成立</strong>：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(((RCC_OscInitStruct-&gt;OscillatorType) &amp; RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)</span><br></pre></td></tr></table></figure><p>2.继续判断</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE)                                                                     ||\</span><br><span class="line">      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) &amp;&amp; ((RCC-&gt;PLLCFGR &amp; RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))</span><br><span class="line">    &#123;   <span class="comment">//PLL作为系统时钟，  RCC_PLLCFGR_PLLSRC=0x00400000，第22位，是否选择：1：选择 HSE 振荡器时钟作为 PLL 和 PLLI2S 时钟输入</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//如果HSE作为系统时钟来源，或者作为PLL时钟来源的话</span></span><br><span class="line">      <span class="keyword">if</span>((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) &amp;&amp; (RCC_OscInitStruct-&gt;HSEState == RCC_HSE_OFF))</span><br><span class="line">      &#123;</span><br><span class="line">  <span class="comment">//此时HSE已经打开了，或HSE没有使能，这里的任何一种情况都会导致失败</span></span><br><span class="line">        <span class="keyword">return</span> HAL_ERROR;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>此处有三个条件的判断，成立才会执行if里面的语句，否则执行后面else的语句咯。</p><p>重点看一下函数：__HAL_RCC_GET_SYSCLK_SOURCE()，是什么意思。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210715104613.png" alt="image-20210715104612082" /></p><p>这个函数的目的是获取CFGR寄存器中的SWS两个位的数值，其实就是获取当前系统时钟的来源</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210715105121.png" alt="" /></p><p>RCC_CFGR_SWS_HSE就是定义的是一个数组</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210715111411.png" alt="" /></p><p>可知if语句的第一个判断条件的意思就是，判断当前的系统时钟来源是否是HSE（外部高速时钟），如果是的话，因为后面接的是一个或的符号，那么这个条件就算是成立了。</p><p>在分析后面一条语句：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) &amp;&amp; ((RCC-&gt;PLLCFGR &amp; RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE))</span><br></pre></td></tr></table></figure><p>&amp;&amp;前面的一个语句，就是判断当前系统时钟来源是否为PLL,后面语句是获取RCC的PLL配置寄存器的内容</p><p>从下面的宏定义可以看的出来，其实就是获取获取RCC的PLL配置寄存器的22位进行判断此位是0还是1</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210715112729.png" alt="" /></p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210715113130.png" alt="3" /></p><p>通过查找手册可知，22位就是用来判断PLL的时钟来源，是HSE还是HSI</p><p><strong>那么总结上面的整条语句的意思：</strong></p><blockquote><p><strong>就是说，如果系统检测到你当前的系统时钟来源是HSE，或者说检测到系统失踪来源是PLL，而且PLL的时钟来源是HSE的话，那我就执行if里面的语句，其实里面就是返回一个错误提示，很好理解，因为上面的条件成立，说明你已经配置过时钟了，就不需要重新配置了。</strong></p><p><strong>其实在时钟系统图上也可以这样表示：</strong></p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210715113437.png" alt="" /></p><p>已上任何一种情况都代表系统时钟已经初始化了。所以就没必要再执行下面的语句了。</p></blockquote><p><strong>3.如果上面的条件不成立，那么就说明系统时钟还没有进行配置，接下来就是进行系统时钟的配置了</strong></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;对RCC-&gt;CFGR 寄存器的23:16 清零，也就是复位HSEON(关闭振荡器) 和重置就绪位</span><br><span class="line">      __HAL_RCC_HSE_CONFIG(RCC_HSE_OFF);</span><br></pre></td></tr></table></figure><p>通过查看__HAL_RCC_HSE_CONFIG(),即可知，这个函数的含义就是网一个寄存器里面写一个值</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210715160101.png" alt="" /></p><p>根据英文的备注是CR寄存器的第三个字节的基地址</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210715160956.png" alt="" /></p><p>返回的其实是四字节的一个地址，现在强制把它转换为一个8位的地址，那其实就是RCC的CR寄存器的第三个字节，直接往这个地址写入我们想要的值。</p><p>待续。。。。</p><h2 id="systick定时器"><a class="markdownIt-Anchor" href="#systick定时器"></a> Systick定时器</h2><p>Systick定时器，是一个简单的定时器，对于ST的CM3,CM4,CM7内核芯片，都有Systick定时器。内核的外设</p><p>Systick定时器常用来做延时，或着实时系统的心跳时钟。这样可以节省MCU资源，不用浪费一个定时器。比如UCOS中，分时复用，需要一个最小的时间戳，一般在STM32+UCOS系统中，都采用Systick做UCOS心跳时钟。</p><blockquote><p>一个能表示一份数据在某个特定时间之前已经存在的、 完整的、 可验证的数据,通常是一个字符序列,唯一地标识某一刻的时间</p></blockquote><p>Systick定时器就是系统滴答定时器，一个<strong>24位</strong>的倒计数定时器，计到0时，将从RELOAD寄存器中自动重装定时初值。只要不把它在SysTick控制及状态寄存器中的使能位清除，就用不停息，即使在睡眠模式下也能工作。</p><p>SysTick定时器被捆绑在NVIC中，用于产生SYSTICK异常（异常号：15）。</p><p>Systick中断的优先级也可以设置。</p><h3 id="相关的寄存器"><a class="markdownIt-Anchor" href="#相关的寄存器"></a> 相关的寄存器</h3><p>CTRL       SysTick 控制和状态寄存器</p><p>LOAD       SysTick 自动重装载除值寄存器</p><p>VAL        SysTick 当前值寄存器</p><p>CALIB      SysTick 校准值寄存器</p><ul><li>CTRL——控制和状态寄存器</li></ul><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210727174600.png" alt="" /></p><ul><li>LOAD——重装载数值寄存器</li></ul><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210727180637.png" alt="" /></p><ul><li>VAL——当前值寄存器</li></ul><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210727180736.png" alt="" /></p><ul><li>CALIB——校准寄存器</li></ul><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210727180955.png" alt="" /></p><p>程序中定义函数</p><p>在<code>stm32fxx_hal_cortex.c</code>中，配置的位2CLKSOURCE</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">HAL_SYSTICK_CLKSourceConfig</span><span class="params">(<span class="keyword">uint32_t</span> CLKSource)</span><span class="comment">//Systick时钟源选择</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="comment">/* Check the parameters */</span></span><br><span class="line">  assert_param(IS_SYSTICK_CLK_SOURCE(CLKSource));</span><br><span class="line">  <span class="keyword">if</span> (CLKSource == SYSTICK_CLKSOURCE_HCLK)</span><br><span class="line">  &#123;</span><br><span class="line">    SysTick-&gt;CTRL |= SYSTICK_CLKSOURCE_HCLK;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    SysTick-&gt;CTRL &amp;= ~SYSTICK_CLKSOURCE_HCLK;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在core_cm4.h中，配置经过多少个tick周期之后发生中断</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function">__STATIC_INLINE <span class="keyword">uint32_t</span> <span class="title">SysTick_Config</span><span class="params">(<span class="keyword">uint32_t</span> ticks)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">if</span> ((ticks - <span class="number">1U</span>L) &gt; SysTick_LOAD_RELOAD_Msk)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">return</span> (<span class="number">1U</span>L);                                                   <span class="comment">/* Reload value impossible */</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  SysTick-&gt;LOAD  = (<span class="keyword">uint32_t</span>)(ticks - <span class="number">1U</span>L);                         <span class="comment">/* set reload register */</span></span><br><span class="line">    <span class="comment">//设置优先级</span></span><br><span class="line">  NVIC_SetPriority (SysTick_IRQn, (<span class="number">1U</span>L &lt;&lt; __NVIC_PRIO_BITS) - <span class="number">1U</span>L); <span class="comment">/* set Priority for Systick Interrupt */</span></span><br><span class="line">  SysTick-&gt;VAL   = <span class="number">0U</span>L;                                             <span class="comment">/* Load the SysTick Counter Value */</span></span><br><span class="line">    <span class="comment">//开启了中断，设置了时钟源。使能了systick，并且设置了装载值</span></span><br><span class="line">  SysTick-&gt;CTRL  = SysTick_CTRL_CLKSOURCE_Msk |</span><br><span class="line">                   SysTick_CTRL_TICKINT_Msk   |</span><br><span class="line">                   SysTick_CTRL_ENABLE_Msk;                         <span class="comment">/* Enable SysTick IRQ and SysTick Timer */</span></span><br><span class="line">  <span class="keyword">return</span> (<span class="number">0U</span>L);                                                     <span class="comment">/* Function successful */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>用中断的方式实现delay延时</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">static</span> __IO <span class="keyword">uint32_t</span> TimingDelay;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Delay</span><span class="params">(__IO <span class="keyword">uint32_t</span> nTime)</span></span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line">   TimingDelay = nTime;</span><br><span class="line">   <span class="keyword">while</span>(TimingDelay != <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SysTick_Handler</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (TimingDelay != <span class="number">0x00</span>) </span><br><span class="line">     &#123; </span><br><span class="line">       TimingDelay--;<span class="comment">//递减</span></span><br><span class="line">     &#125;</span><br><span class="line">&#125;</span><br><span class="line"> <span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"> </span>&#123;  …</span><br><span class="line">    <span class="keyword">if</span> (SysTick_Config(SystemCoreClock / <span class="number">1000</span>)) <span class="comment">//systick时钟为HCLK，中断时间间隔1ms</span></span><br><span class="line">     &#123;</span><br><span class="line">     <span class="keyword">while</span> (<span class="number">1</span>);</span><br><span class="line">     &#125;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">     &#123; Delay(<span class="number">200</span>);<span class="comment">//2ms</span></span><br><span class="line">     … </span><br><span class="line">     &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>用查询方法实现delay延时</p><blockquote><p>使用中延时不一致的情况，一般是因为不同的内核时钟不一样，修改ticks值即可。</p></blockquote><h2 id="stm32cubemx"><a class="markdownIt-Anchor" href="#stm32cubemx"></a> STM32cubeMX</h2><p>这是用来生成初始化代码，具体的控制逻辑代码还需要自己来编写</p><h2 id="中断优先级管理nvic"><a class="markdownIt-Anchor" href="#中断优先级管理nvic"></a> 中断优先级管理（NVIC）</h2><p>CM4/CM7内核支持256个中断，其中包含了16个内核中断和240个外部中断，并且具有256级的可编程中断设置。</p><p>STM32F4/F7并没有使用CM4内核的全部东西，而是只用了一部分。</p><p>①  STM32F40xx/STM32F41xx总共有92个中断。10个内核中断，82个可屏蔽中断。</p><p>②  STM32F42xx/F43xx则总共有97个中断。10个内核中断，87个可屏蔽中断。</p><p>③  STM32F76xx总共有118个中断，10个内核中断，108个可屏蔽中断。</p><p>优先级设定：NVIC-&gt;IPRx（8位）</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210818171647.png" alt="" /></p><p>优先级分组：SCB-&gt;AIRCR:PRIGROUP[10:8]</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210818172029.png" alt="" /></p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210818173309.png" alt="" /></p><blockquote><p>注意：一般情况下，系统代码执行过程中，只设置一次中断优先级分组，比如分组2，设置好分组之后一般不会改变分组。随意改变分组会导致中断管理混乱，程序出现意想不到的执行结果。</p></blockquote><p>中断优先级分组函数HAL_NVIC_SetPriorityGrouping，位置在stm32f4xx_hal_cortex.c中</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">HAL_NVIC_SetPriorityGrouping</span><span class="params">(<span class="keyword">uint32_t</span> PriorityGroup)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="comment">/* Check the parameters */</span></span><br><span class="line">  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));</span><br><span class="line">  </span><br><span class="line">  <span class="comment">/* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */</span></span><br><span class="line">  NVIC_SetPriorityGrouping(PriorityGroup);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>一般默认设置分组2</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_2);<span class="comment">//中断优先级分组2</span></span><br></pre></td></tr></table></figure><p>中断设置相关的寄存器-&gt;core_cm4.h</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  __IOM <span class="keyword">uint32_t</span> ISER[<span class="number">8U</span>];               <span class="comment">/*!&lt; Offset: 0x000 (R/W)  Interrupt Set Enable Register */</span></span><br><span class="line">    <span class="comment">//中断使能寄存器</span></span><br><span class="line">        <span class="keyword">uint32_t</span> RESERVED0[<span class="number">24U</span>];</span><br><span class="line">  __IOM <span class="keyword">uint32_t</span> ICER[<span class="number">8U</span>];               <span class="comment">/*!&lt; Offset: 0x080 (R/W)  Interrupt Clear Enable Register */</span></span><br><span class="line">    <span class="comment">//中断失能寄存器</span></span><br><span class="line">        <span class="keyword">uint32_t</span> RSERVED1[<span class="number">24U</span>];</span><br><span class="line">  __IOM <span class="keyword">uint32_t</span> ISPR[<span class="number">8U</span>];               <span class="comment">/*!&lt; Offset: 0x100 (R/W)  Interrupt Set Pending Register */</span></span><br><span class="line">    <span class="comment">//中断挂起寄存器</span></span><br><span class="line">        <span class="keyword">uint32_t</span> RESERVED2[<span class="number">24U</span>];</span><br><span class="line">  __IOM <span class="keyword">uint32_t</span> ICPR[<span class="number">8U</span>];               <span class="comment">/*!&lt; Offset: 0x180 (R/W)  Interrupt Clear Pending Register */</span></span><br><span class="line">    <span class="comment">//中断解挂寄存器</span></span><br><span class="line">        <span class="keyword">uint32_t</span> RESERVED3[<span class="number">24U</span>];</span><br><span class="line">  __IOM <span class="keyword">uint32_t</span> IABR[<span class="number">8U</span>];               <span class="comment">/*!&lt; Offset: 0x200 (R/W)  Interrupt Active bit Register */</span></span><br><span class="line">    <span class="comment">//中断激活标志位寄存器</span></span><br><span class="line">        <span class="keyword">uint32_t</span> RESERVED4[<span class="number">56U</span>];</span><br><span class="line">  __IOM <span class="keyword">uint8_t</span>  IP[<span class="number">240U</span>];               <span class="comment">/*!&lt; Offset: 0x300 (R/W)  Interrupt Priority Register (8Bit wide) */</span></span><br><span class="line">    <span class="comment">//中断优先级控制的寄存器组</span></span><br><span class="line">        <span class="keyword">uint32_t</span> RESERVED5[<span class="number">644U</span>];</span><br><span class="line">  __OM  <span class="keyword">uint32_t</span> STIR;                   <span class="comment">/*!&lt; Offset: 0xE00 ( /W)  Software Trigger Interrupt Register */</span></span><br><span class="line">    <span class="comment">//软件触发中断寄存器</span></span><br><span class="line">&#125;  NVIC_Type;</span><br></pre></td></tr></table></figure><p>中断优先级设置步骤</p><p>① 系统运行后在HAL_Init函数中设置中断优先级分组。</p><p>​调用函数</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_2);<span class="comment">//中断优先级分组2整个系统执行过程中，只设置一次中断分组</span></span><br></pre></td></tr></table></figure><p>② 针对每个中断，设置对应的抢占优先级和响应优先级：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">HAL_NVIC_SetPriority</span><span class="params">(IRQn_Type IRQn, <span class="keyword">uint32_t</span> PreemptPriority, <span class="keyword">uint32_t</span> SubPriority)</span></span></span><br></pre></td></tr></table></figure><p>③ 使能中断通道</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">HAL_NVIC_EnableIRQ</span><span class="params">(IRQn_Type IRQn)</span></span>;</span><br></pre></td></tr></table></figure><h2 id="io引脚复用"><a class="markdownIt-Anchor" href="#io引脚复用"></a> IO引脚复用</h2><p>一个GPIO如果可以复用为内置外设的功能引脚，那么当这个GPIO作为内置外设使用的时候，叫做复用。</p><ul><li>对于复用的输入功能，端口必须配置成输入模式（浮空、上拉或下拉）且输入引脚必须由外部驱动。</li><li>对于服用的输出功能，端口必须配置成输出模式（推挽或开漏）。</li><li>对于双向复用功能，端口位必须配置复用功能输出模式（推挽或开漏）。这时，输入驱动器被配置成浮空输入模式。</li></ul><blockquote><p>在STM32F429IGT6.pdf文件中</p></blockquote><p>STM32系列微控制器IO引脚通过一个复用器连接到内置外设或模块。该复用器一次只允许一个外设的复用功能（AF）连接到对应的IO口，这样可以确保共用同一个IO引脚的外设之间不会发生冲突。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210830154714.png" alt="F42xx的端口复用" /></p><p>AFRL复用功能低位寄存器</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210830155158.png" alt="" /></p><p>AFRH复用功能高位寄存器</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210830155235.png" alt="" /></p><p>复用功能映射配置</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210830155722.png" alt="" /></p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210830155749.png" alt="" /></p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210830155811.png" alt="" /></p><p>PA9,PA10复用为串口1的配置过程</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210830163910.png" alt="" /></p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">__HAL_RCC_GPIOA_CLK_ENABLE();<span class="comment">//使能GPIOA时钟</span></span><br><span class="line">__HAL_RCC_USART1_CLK_ENABLE();<span class="comment">//使能USART1时钟</span></span><br><span class="line"></span><br><span class="line">GPIO_Initure.Pin=GPIO_PIN_9;<span class="comment">//PA9</span></span><br><span class="line">GPIO_Initure.Mode=GPIO_MODE_AF_PP;<span class="comment">//复用推挽输出</span></span><br><span class="line">GPIO_Initure.Pull=GPIO_PULLUP;<span class="comment">//上拉</span></span><br><span class="line">GPIO_Initure.Speed=GPIO_SPEED_FAST;<span class="comment">//高速</span></span><br><span class="line">GPIO_Initure.Alternate=GPIO_AF7_USART1;<span class="comment">//复用为USART1</span></span><br><span class="line">HAL_GPIO_Init(GPIOA,&amp;GPIO_Initure);   <span class="comment">//初始化PA9</span></span><br><span class="line"></span><br><span class="line">GPIO_Initure.Pin=GPIO_PIN_10;<span class="comment">//PA10</span></span><br><span class="line">HAL_GPIO_Init(GPIOA,&amp;GPIO_Initure);   <span class="comment">//初始化PA10</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="uart串口通信原理"><a class="markdownIt-Anchor" href="#uart串口通信原理"></a> UART串口通信原理</h2><blockquote><p>USART：通用同步异步收发器</p><p>UART：通用异步收发器</p></blockquote><p>并行、串行（单工、半双工、全双工）</p><p>UART异步通信方式引脚连接方法:</p><ul><li>RXD:数据输入引脚.数据接收</li><li>TXD:数据发送引脚.数据发送.</li></ul><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210831161701.png" alt="TTL协议" /></p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210831161724.png" alt="R232协议" /></p><p>通信协议</p><p>TTL串口&amp;R232协议&amp;RS485协议&amp;RS422</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210831162958.png" alt="" /></p><p>USB串口</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210831163643.png" alt="" /></p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210831164358.png" alt="UART异步通信方式引脚" /></p><p>STM32串口通信过程</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210831164707.png" alt="" /></p><p>异步通信需要定义的参数:</p><p>① 起始位：1个逻辑0数据位开始</p><p>② 数据位（8位或者9位）</p><p>③ 奇偶校验位（第9位）</p><p>④ 停止位（1,1.5,2位）</p><p>⑤ 波特率设置</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210831164855.png" alt="" /></p><h3 id="串口框图和波特率计算"><a class="markdownIt-Anchor" href="#串口框图和波特率计算"></a> 串口框图和波特率计算</h3><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210831201647.png" alt="USART框图" /></p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210901094736.png" alt="STM32F429IGT6芯片的USART引脚" /></p><p>数据寄存器——USART_DR:9位有效，包含一个发送数据寄存器TDR和一个接收数据寄存器RDR。一个地址对应了两个物理内存。</p><p>数据发送与接收的具体流程</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210901154813.png" alt="" /></p><p>数据是由USART_DR寄存器来发送，DR<a href="9%E4%BD%8D%E6%95%B0%E6%8D%AE">8:0</a>，具体多少位是由USART_CR1:M控制，若M=0,则为8位；若M=1，则为9位。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210902100130.png" alt="USART_CR1的M控制位" /></p><blockquote><p>n停止位需要USART_CR2寄存器配置。USART_CR2:STOP位，停止位</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210902100626.png" alt="USART_CR2停止位" /></p><p>奇偶校验位是由USART_CR1：PCE、PS、PEIE和USART_SR：PE配置<br /><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210902102458.png" alt="奇偶校验USART_CR1配置" /></p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210902104002.png" alt="USART_SR配置" /></p><h4 id="串口配置"><a class="markdownIt-Anchor" href="#串口配置"></a> 串口配置</h4><p>先把大开关打开，配置USART_CR1：UE、TE、RE</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210902104750.png" alt="" /></p><p>发送数据：配置USART_SR：TXE、USART_CR1：TXEIE、USART_SR：TC、USART_CR1：TCIE</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210902110606.png" alt="" /></p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210902110930.png" alt="" /></p><p>接收数据：USART_SR：RXNE、USART_CR1：RXNEIE</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210902112005.png" alt="" /></p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210902112125.png" alt="" /></p><h4 id="波特率"><a class="markdownIt-Anchor" href="#波特率"></a> 波特率</h4><p>每秒钟要发送多少数据</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210902153854.png" alt="" /></p><blockquote><p>USARTDIV：无符号的定点数</p><p>FPCLK：串口的时钟，注意区分APB2（最高90MHz）和APB1（最高45MHz）两条总线</p><p>OVER8：过采样模式</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210902155250.png" alt="" /></p><blockquote><p>通过计算波特率算出USARTDIV的值，在用这个值来给USART_BRR来赋值</p><p>得到的值，整数部分赋值给DIV_Mantissa，小数部分*16所得到的最大整数赋值给DIV_Fraction</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210902155736.png" alt="" /></p><h4 id="串口发送过程与配置"><a class="markdownIt-Anchor" href="#串口发送过程与配置"></a> 串口发送过程与配置</h4><p>串口字节发送流程</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210903101215.png" alt="" /></p><blockquote><p>配置步骤①~⑥：配置字长，停止位，奇偶校验位，波特率等：</p><p><code>HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart);</code></p><p>该函数内部会引用标识符__HAL_USART_ENABLE使能相应串口。</p><p>步骤⑦~⑧发送数据和等待发送完成：</p><p><code>HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32_t Timeout);</code></p></blockquote><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function">HAL_StatusTypeDef <span class="title">HAL_UART_Init</span><span class="params">(UART_HandleTypeDef *huart)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="comment">/* Check the UART handle allocation </span></span><br><span class="line"><span class="comment">  检测UART处理配置</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line">  <span class="keyword">if</span>(huart == <span class="literal">NULL</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">return</span> HAL_ERROR;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* Check the parameters（参数） */</span></span><br><span class="line">  <span class="keyword">if</span>(huart-&gt;Init.HwFlowCtl != UART_HWCONTROL_NONE)</span><br><span class="line">  &#123; </span><br><span class="line">    <span class="comment">/* The hardware flow control is available only for USART1, USART2, USART3 and USART6 </span></span><br><span class="line"><span class="comment">    配置USART1, USART2, USART3 and USART6</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    assert_param(IS_UART_HWFLOW_INSTANCE(huart-&gt;Instance));</span><br><span class="line">    assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart-&gt;Init.HwFlowCtl));</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    assert_param(IS_UART_INSTANCE(huart-&gt;Instance));</span><br><span class="line">  &#125;</span><br><span class="line">  assert_param(IS_UART_WORD_LENGTH(huart-&gt;Init.WordLength));</span><br><span class="line">  assert_param(IS_UART_OVERSAMPLING(huart-&gt;Init.OverSampling));</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">if</span>(huart-&gt;State == HAL_UART_STATE_RESET)</span><br><span class="line">  &#123;  </span><br><span class="line">    <span class="comment">/* Allocate lock resource and initialize it </span></span><br><span class="line"><span class="comment">    分配并初始化lock资源</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    huart-&gt;Lock = HAL_UNLOCKED;</span><br><span class="line">    <span class="comment">/* Init the low level hardware </span></span><br><span class="line"><span class="comment">    初始化低级别硬件</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    HAL_UART_MspInit(huart);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  huart-&gt;State = HAL_UART_STATE_BUSY;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* Disable the peripheral </span></span><br><span class="line"><span class="comment">  禁止外部设备</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line">  __HAL_UART_DISABLE(huart);</span><br><span class="line">  </span><br><span class="line">  <span class="comment">/* Set the UART Communication parameters */</span></span><br><span class="line">  UART_SetConfig(huart);</span><br><span class="line">  </span><br><span class="line">  <span class="comment">/* In asynchronous mode, the following bits must be kept cleared: </span></span><br><span class="line"><span class="comment">     - LINEN and CLKEN bits in the USART_CR2 register,</span></span><br><span class="line"><span class="comment">     - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/</span></span><br><span class="line">  huart-&gt;Instance-&gt;CR2 &amp;= ~(USART_CR2_LINEN | USART_CR2_CLKEN);</span><br><span class="line">  huart-&gt;Instance-&gt;CR3 &amp;= ~(USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN);</span><br><span class="line">  </span><br><span class="line">  <span class="comment">/* Enable the peripheral */</span></span><br><span class="line">  __HAL_UART_ENABLE(huart);</span><br><span class="line">  </span><br><span class="line">  <span class="comment">/* Initialize the UART state */</span></span><br><span class="line">  huart-&gt;ErrorCode = HAL_UART_ERROR_NONE;</span><br><span class="line">  huart-&gt;State= HAL_UART_STATE_READY;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">return</span> HAL_OK;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function">HAL_StatusTypeDef <span class="title">HAL_UART_Transmit</span><span class="params">(UART_HandleTypeDef *huart, <span class="keyword">uint8_t</span> *pData, <span class="keyword">uint16_t</span> Size, <span class="keyword">uint32_t</span> Timeout)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">uint16_t</span>* tmp;</span><br><span class="line">  <span class="keyword">uint32_t</span> tmp1 = <span class="number">0</span>;</span><br><span class="line">  </span><br><span class="line">  tmp1 = huart-&gt;State;</span><br><span class="line">  <span class="keyword">if</span>((tmp1 == HAL_UART_STATE_READY) || (tmp1 == HAL_UART_STATE_BUSY_RX))</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span>((pData == <span class="literal">NULL</span> ) || (Size == <span class="number">0</span>)) </span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">return</span>  HAL_ERROR;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/* Process Locked进程锁 */</span></span><br><span class="line">    __HAL_LOCK(huart);</span><br><span class="line">    </span><br><span class="line">    huart-&gt;ErrorCode = HAL_UART_ERROR_NONE;</span><br><span class="line">    <span class="comment">/* Check if a non-blocking receive process is ongoing or not */</span></span><br><span class="line">    <span class="keyword">if</span>(huart-&gt;State == HAL_UART_STATE_BUSY_RX) </span><br><span class="line">    &#123;</span><br><span class="line">      huart-&gt;State = HAL_UART_STATE_BUSY_TX_RX;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">      huart-&gt;State = HAL_UART_STATE_BUSY_TX;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    huart-&gt;TxXferSize = Size;</span><br><span class="line">    huart-&gt;TxXferCount = Size;</span><br><span class="line">    <span class="keyword">while</span>(huart-&gt;TxXferCount &gt; <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">      huart-&gt;TxXferCount--;</span><br><span class="line">      <span class="keyword">if</span>(huart-&gt;Init.WordLength == UART_WORDLENGTH_9B)</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">if</span>(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, Timeout) != HAL_OK)</span><br><span class="line">        &#123; </span><br><span class="line">          <span class="keyword">return</span> HAL_TIMEOUT;</span><br><span class="line">        &#125;</span><br><span class="line">        tmp = (<span class="keyword">uint16_t</span>*) pData;</span><br><span class="line">        huart-&gt;Instance-&gt;DR = (*tmp &amp; (<span class="keyword">uint16_t</span>)<span class="number">0x01FF</span>);</span><br><span class="line">        <span class="keyword">if</span>(huart-&gt;Init.Parity == UART_PARITY_NONE)</span><br><span class="line">        &#123;</span><br><span class="line">          pData +=<span class="number">2</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123; </span><br><span class="line">          pData +=<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125; </span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">if</span>(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, Timeout) != HAL_OK)</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="keyword">return</span> HAL_TIMEOUT;</span><br><span class="line">        &#125;</span><br><span class="line">        huart-&gt;Instance-&gt;DR = (*pData++ &amp; (<span class="keyword">uint8_t</span>)<span class="number">0xFF</span>);</span><br><span class="line">      &#125; </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, Timeout) != HAL_OK)</span><br><span class="line">    &#123; </span><br><span class="line">      <span class="keyword">return</span> HAL_TIMEOUT;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/* Check if a non-blocking receive process is ongoing or not */</span></span><br><span class="line">    <span class="keyword">if</span>(huart-&gt;State == HAL_UART_STATE_BUSY_TX_RX) </span><br><span class="line">    &#123;</span><br><span class="line">      huart-&gt;State = HAL_UART_STATE_BUSY_RX;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">      huart-&gt;State = HAL_UART_STATE_READY;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/* Process Unlocked */</span></span><br><span class="line">    __HAL_UNLOCK(huart);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> HAL_OK;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">return</span> HAL_BUSY;   </span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>串口发送程序配置过程（HAL库）：</p><ul><li>初始化串口相关参数，使能串口：HAL_UART_Init();</li><li>串口相关IO口配置，复用配置：在HAL_UART_MspInit中调用HAL_GPIO_Init函数。</li><li>发送数据，并等待数据发送完成：HAL_UART_Transmit()函数</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  <span class="keyword">uint32_t</span> BaudRate;                  <span class="comment">/*!&lt; This member configures the Usart communication baud rate.</span></span><br><span class="line"><span class="comment">  波特率BRR</span></span><br><span class="line"><span class="comment">                                           The baud rate is computed using the following formula:</span></span><br><span class="line"><span class="comment">                                           - IntegerDivider = ((PCLKx) / (8 * (husart-&gt;Init.BaudRate)))</span></span><br><span class="line"><span class="comment">                                           - FractionalDivider = ((IntegerDivider - ((uint32_t) IntegerDivider)) * 8) + 0.5 */</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">uint32_t</span> WordLength;                <span class="comment">/*!&lt; Specifies the number of data bits transmitted or received in a frame.</span></span><br><span class="line"><span class="comment">                                           字长CR1_M</span></span><br><span class="line"><span class="comment">                                           This parameter can be a value of @ref USART_Word_Length */</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">uint32_t</span> StopBits;                  <span class="comment">/*!&lt; Specifies the number of stop bits transmitted.</span></span><br><span class="line"><span class="comment">                                           停止位CR2_STOP</span></span><br><span class="line"><span class="comment">                                           This parameter can be a value of @ref USART_Stop_Bits */</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">uint32_t</span> Parity;                   <span class="comment">/*!&lt; Specifies the parity mode.</span></span><br><span class="line"><span class="comment">                                           校验控制CR1_PCE、CR1_PS</span></span><br><span class="line"><span class="comment">                                           This parameter can be a value of @ref USART_Parity</span></span><br><span class="line"><span class="comment">                                           @note When parity is enabled, the computed parity is inserted</span></span><br><span class="line"><span class="comment">                                                 at the MSB position of the transmitted data (9th bit when</span></span><br><span class="line"><span class="comment">                                                 the word length is set to 9 data bits; 8th bit when the</span></span><br><span class="line"><span class="comment">                                                 word length is set to 8 data bits). */</span></span><br><span class="line"> </span><br><span class="line">  <span class="keyword">uint32_t</span> Mode;                      <span class="comment">/*!&lt; Specifies whether the Receive or Transmit mode is enabled or disabled.</span></span><br><span class="line"><span class="comment">                                           模式选择CR1_TE、CR1_RE</span></span><br><span class="line"><span class="comment">                                           This parameter can be a value of @ref USART_Mode */</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">uint32_t</span> CLKPolarity;               <span class="comment">/*!&lt; Specifies the steady state of the serial clock.</span></span><br><span class="line"><span class="comment">                                           This parameter can be a value of @ref USART_Clock_Polarity */</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">uint32_t</span> CLKPhase;                  <span class="comment">/*!&lt; Specifies the clock transition on which the bit capture is made.</span></span><br><span class="line"><span class="comment">                                           This parameter can be a value of @ref USART_Clock_Phase */</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">uint32_t</span> CLKLastBit;                <span class="comment">/*!&lt; Specifies whether the clock pulse corresponding to the last transmitted</span></span><br><span class="line"><span class="comment">                                           data bit (MSB) has to be output on the SCLK pin in synchronous mode.</span></span><br><span class="line"><span class="comment">                                           This parameter can be a value of @ref USART_Last_Bit */</span></span><br><span class="line">&#125;USART_InitTypeDef;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>串口句柄UART_HandleTypeDef：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment">  * @brief  UART handle Structure definition  </span></span><br><span class="line"><span class="comment">  */</span>  </span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  USART_TypeDef                 *Instance;        <span class="comment">/*!&lt; UART registers base address寄存器的基地址        */</span></span><br><span class="line">  </span><br><span class="line">  UART_InitTypeDef              Init;             <span class="comment">/*!&lt; UART communication parameters      */</span></span><br><span class="line">  </span><br><span class="line">  <span class="keyword">uint8_t</span>                       *pTxBuffPtr;      <span class="comment">/*!&lt; Pointer to UART Tx transfer Buffer */</span></span><br><span class="line">  </span><br><span class="line">  <span class="keyword">uint16_t</span>                      TxXferSize;       <span class="comment">/*!&lt; UART Tx Transfer size              */</span></span><br><span class="line">  </span><br><span class="line">  <span class="keyword">uint16_t</span>                      TxXferCount;      <span class="comment">/*!&lt; UART Tx Transfer Counter           */</span></span><br><span class="line">  </span><br><span class="line">  <span class="keyword">uint8_t</span>                       *pRxBuffPtr;      <span class="comment">/*!&lt; Pointer to UART Rx transfer Buffer */</span></span><br><span class="line">  </span><br><span class="line">  <span class="keyword">uint16_t</span>                      RxXferSize;       <span class="comment">/*!&lt; UART Rx Transfer size              */</span></span><br><span class="line">  </span><br><span class="line">  <span class="keyword">uint16_t</span>                      RxXferCount;      <span class="comment">/*!&lt; UART Rx Transfer Counter           */</span>  </span><br><span class="line">  </span><br><span class="line">  DMA_HandleTypeDef             *hdmatx;          <span class="comment">/*!&lt; UART Tx DMA Handle parameters      */</span></span><br><span class="line">    </span><br><span class="line">  DMA_HandleTypeDef             *hdmarx;          <span class="comment">/*!&lt; UART Rx DMA Handle parameters      */</span></span><br><span class="line">  </span><br><span class="line">  HAL_LockTypeDef               Lock;             <span class="comment">/*!&lt; Locking object                     */</span></span><br><span class="line"></span><br><span class="line">  __IO HAL_UART_StateTypeDef    State;            <span class="comment">/*!&lt; UART communication state           */</span></span><br><span class="line">  </span><br><span class="line">  __IO <span class="keyword">uint32_t</span>                 ErrorCode;        <span class="comment">/*!&lt; UART Error code                    */</span></span><br><span class="line"></span><br><span class="line">&#125;UART_HandleTypeDef;</span><br></pre></td></tr></table></figure><p>其中USART_TypeDef就是定义的串口寄存器映射的结构体</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment">  * @brief Universal Synchronous Asynchronous Receiver Transmitter</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  __IO <span class="keyword">uint32_t</span> SR;         <span class="comment">/*!&lt; USART Status register,                   Address offset: 0x00 */</span></span><br><span class="line">  __IO <span class="keyword">uint32_t</span> DR;         <span class="comment">/*!&lt; USART Data register,                     Address offset: 0x04 */</span></span><br><span class="line">  __IO <span class="keyword">uint32_t</span> BRR;        <span class="comment">/*!&lt; USART Baud rate register,                Address offset: 0x08 */</span></span><br><span class="line">  __IO <span class="keyword">uint32_t</span> CR1;        <span class="comment">/*!&lt; USART Control register 1,                Address offset: 0x0C */</span></span><br><span class="line">  __IO <span class="keyword">uint32_t</span> CR2;        <span class="comment">/*!&lt; USART Control register 2,                Address offset: 0x10 */</span></span><br><span class="line">  __IO <span class="keyword">uint32_t</span> CR3;        <span class="comment">/*!&lt; USART Control register 3,                Address offset: 0x14 */</span></span><br><span class="line">  __IO <span class="keyword">uint32_t</span> GTPR;       <span class="comment">/*!&lt; USART Guard time and prescaler register, Address offset: 0x18 */</span></span><br><span class="line">&#125; USART_TypeDef;</span><br></pre></td></tr></table></figure><p>UART_InitTypeDef串口初始化，特性参数</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment">  * @brief UART Init Structure definition  </span></span><br><span class="line"><span class="comment">  */</span> </span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  <span class="keyword">uint32_t</span> BaudRate;                  <span class="comment">/*!&lt; This member configures the UART communication baud rate.</span></span><br><span class="line"><span class="comment">                                           波特率</span></span><br><span class="line"><span class="comment">                                           The baud rate is computed using the following formula:</span></span><br><span class="line"><span class="comment">                                           - IntegerDivider = ((PCLKx) / (8 * (OVR8+1) * (huart-&gt;Init.BaudRate)))</span></span><br><span class="line"><span class="comment">                                           - FractionalDivider = ((IntegerDivider - ((uint32_t) IntegerDivider)) * 8 * (OVR8+1)) + 0.5 </span></span><br><span class="line"><span class="comment">                                           Where OVR8 is the &quot;oversampling by 8 mode&quot; configuration bit in the CR1 register. */</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">uint32_t</span> WordLength;                <span class="comment">/*!&lt; Specifies the number of data bits transmitted or received in a frame.</span></span><br><span class="line"><span class="comment">                                           字长</span></span><br><span class="line"><span class="comment">                                           This parameter can be a value of @ref UART_Word_Length */</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">uint32_t</span> StopBits;                  <span class="comment">/*!&lt; Specifies the number of stop bits transmitted.</span></span><br><span class="line"><span class="comment">                                           停止位</span></span><br><span class="line"><span class="comment">                                           This parameter can be a value of @ref UART_Stop_Bits */</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">uint32_t</span> Parity;                    <span class="comment">/*!&lt; Specifies the parity mode.</span></span><br><span class="line"><span class="comment">                                           校验位</span></span><br><span class="line"><span class="comment">                                           This parameter can be a value of @ref UART_Parity</span></span><br><span class="line"><span class="comment">                                           @note When parity is enabled, the computed parity is inserted</span></span><br><span class="line"><span class="comment">                                                 at the MSB position of the transmitted data (9th bit when</span></span><br><span class="line"><span class="comment">                                                 the word length is set to 9 data bits; 8th bit when the</span></span><br><span class="line"><span class="comment">                                                 word length is set to 8 data bits). */</span></span><br><span class="line"> </span><br><span class="line">  <span class="keyword">uint32_t</span> Mode;                      <span class="comment">/*!&lt; Specifies whether the Receive or Transmit mode is enabled or disabled.</span></span><br><span class="line"><span class="comment">                                           极性模式</span></span><br><span class="line"><span class="comment">                                           This parameter can be a value of @ref UART_Mode */</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">uint32_t</span> HwFlowCtl;                 <span class="comment">/*!&lt; Specifies whether the hardware flow control mode is enabled</span></span><br><span class="line"><span class="comment">                                           硬件流控制</span></span><br><span class="line"><span class="comment">                                           or disabled.</span></span><br><span class="line"><span class="comment">                                           This parameter can be a value of @ref UART_Hardware_Flow_Control */</span></span><br><span class="line">  </span><br><span class="line">  <span class="keyword">uint32_t</span> OverSampling;              <span class="comment">/*!&lt; Specifies whether the Over sampling 8 is enabled or disabled, to achieve higher speed (up to fPCLK/8).</span></span><br><span class="line"><span class="comment">                                           过采样</span></span><br><span class="line"><span class="comment">                                           This parameter can be a value of @ref UART_Over_Sampling */</span> </span><br><span class="line">&#125;UART_InitTypeDef;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/** @defgroup UART_Private_Macros UART Private Macros</span></span><br><span class="line"><span class="comment">  * @&#123;</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> IS_UART_WORD_LENGTH(LENGTH) (((LENGTH) == UART_WORDLENGTH_8B) || \</span></span><br><span class="line">                                     ((LENGTH) == UART_WORDLENGTH_9B))</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> IS_UART_LIN_WORD_LENGTH(LENGTH) (((LENGTH) == UART_WORDLENGTH_8B))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> IS_UART_STOPBITS(STOPBITS) (((STOPBITS) == UART_STOPBITS_1) || \</span></span><br><span class="line">                                    ((STOPBITS) == UART_STOPBITS_2))</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> IS_UART_PARITY(PARITY) (((PARITY) == UART_PARITY_NONE) || \</span></span><br><span class="line">                                ((PARITY) == UART_PARITY_EVEN) || \</span><br><span class="line">                                ((PARITY) == UART_PARITY_ODD))</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> IS_UART_HARDWARE_FLOW_CONTROL(CONTROL)\</span></span><br><span class="line">                              (((CONTROL) == UART_HWCONTROL_NONE) || \</span><br><span class="line">                               ((CONTROL) == UART_HWCONTROL_RTS) || \</span><br><span class="line">                               ((CONTROL) == UART_HWCONTROL_CTS) || \</span><br><span class="line">                               ((CONTROL) == UART_HWCONTROL_RTS_CTS))</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> IS_UART_MODE(MODE) ((((MODE) &amp; (uint32_t)0x0000FFF3) == 0x00) &amp;&amp; ((MODE) != (uint32_t)0x000000))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> IS_UART_STATE(STATE) (((STATE) == UART_STATE_DISABLE) || \</span></span><br><span class="line">                              ((STATE) == UART_STATE_ENABLE))</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> IS_UART_OVERSAMPLING(SAMPLING) (((SAMPLING) == UART_OVERSAMPLING_16) || \</span></span><br><span class="line">                                        ((SAMPLING) == UART_OVERSAMPLING_8))</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> IS_UART_LIN_OVERSAMPLING(SAMPLING) (((SAMPLING) == UART_OVERSAMPLING_16))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> IS_UART_LIN_BREAK_DETECT_LENGTH(LENGTH) (((LENGTH) == UART_LINBREAKDETECTLENGTH_10B) || \</span></span><br><span class="line">                                                 ((LENGTH) == UART_LINBREAKDETECTLENGTH_11B))</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> IS_UART_WAKEUPMETHOD(WAKEUP) (((WAKEUP) == UART_WAKEUPMETHOD_IDLELINE) || \</span></span><br><span class="line">                                      ((WAKEUP) == UART_WAKEUPMETHOD_ADDRESSMARK))</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> IS_UART_BAUDRATE(BAUDRATE) ((BAUDRATE) &lt; 10500001)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> IS_UART_ADDRESS(ADDRESS) ((ADDRESS) &lt;= 0xF)</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> UART_DIV_SAMPLING16(_PCLK_, _BAUD_)            (((_PCLK_)*25)/(4*(_BAUD_)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> UART_DIVMANT_SAMPLING16(_PCLK_, _BAUD_)        (UART_DIV_SAMPLING16((_PCLK_), (_BAUD_))/100)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> UART_DIVFRAQ_SAMPLING16(_PCLK_, _BAUD_)        (((UART_DIV_SAMPLING16((_PCLK_), (_BAUD_)) - (UART_DIVMANT_SAMPLING16((_PCLK_), (_BAUD_)) * 100)) * 16 + 50) / 100)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> UART_BRR_SAMPLING16(_PCLK_, _BAUD_)            ((UART_DIVMANT_SAMPLING16((_PCLK_), (_BAUD_)) &lt;&lt; 4)|(UART_DIVFRAQ_SAMPLING16((_PCLK_), (_BAUD_)) &amp; 0x0F))</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> UART_DIV_SAMPLING8(_PCLK_, _BAUD_)             (((_PCLK_)*25)/(2*(_BAUD_)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> UART_DIVMANT_SAMPLING8(_PCLK_, _BAUD_)         (UART_DIV_SAMPLING8((_PCLK_), (_BAUD_))/100)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> UART_DIVFRAQ_SAMPLING8(_PCLK_, _BAUD_)         (((UART_DIV_SAMPLING8((_PCLK_), (_BAUD_)) - (UART_DIVMANT_SAMPLING8((_PCLK_), (_BAUD_)) * 100)) * 16 + 50) / 100)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> UART_BRR_SAMPLING8(_PCLK_, _BAUD_)             ((UART_DIVMANT_SAMPLING8((_PCLK_), (_BAUD_)) &lt;&lt; 4)|(UART_DIVFRAQ_SAMPLING8((_PCLK_), (_BAUD_)) &amp; 0x0F))</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>串口接收中断程序配置过程（HAL库）</p><p>①初始化串口相关参数，使能串口：HAL_UART_Init();</p><p>②串口相关IO口配置，复用配置：</p><p>在HAL_UART_MspInit中调用HAL_GPIO_Init函数。</p><p>③串口接收中断优先级配置和使能：</p><p>HAL_NVIC_EnableIRQ()；</p><p>HAL_NVIC_SetPriority();</p><p>④使能串口接收中断：HAL_UART_Receive_IT();</p><p>⑤编写中断服务函数：USARTx_IRQHandler</p><p>HAL库提供了详细的中断处理函数:HAL_UART_IRQHandler</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210915165516.png" alt="" /></p><h2 id="jtag"><a class="markdownIt-Anchor" href="#jtag"></a> JTAG</h2><p>Cortex-M内核（M0、M3、M4、M7等）集成了串行SWD/JTAG调试接口（SWJ-DP），包括JTAG-DP接口（5个引脚）和SW-DP接口（2个引脚）。</p><ul><li>JTAG调试接口（JTAG-DP）为5针标准JTAG接口。</li><li>串口调试接口（SW-DP）为2针串行调试（时钟+数据）接口。</li></ul><p>SW-DP的2个引脚和JTAG的5个引脚中部分引脚复用。</p><p>SWJ调试端口引脚</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210928103912.png" alt="" /></p><p>复位后，MCU会将用于SWJ-DP的全部5个引脚指定为专用引脚（AF0）,可供调试工具立即使用。但是MCU可以禁止部分或着全部SWJ-DP端口，进而释放相关引脚以用作GPIO口。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210928105730.png" alt="" /></p><blockquote><p>X表示未被禁止，被释放的用作GPIO口引脚即无调试功能。</p></blockquote><p>复位后,5个引脚默认映射AF0（JTAG+SWD同时开启），如果哪个引脚需要使用为GPIO,调用HAL_GPIO_Init函数配置即可。例如我们配置了PB3和PB4为通用推挽输出，那么根据前面表格可知，我们只能使用SWD接口。</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">GPIO_Initure.Pin=GPIO_PIN_3|GPIO_PIN_4;</span><br><span class="line">GPIO_Initure.Mode=GPIO_MODE_OUTPUT_PP;  <span class="comment">//推挽输出</span></span><br><span class="line">GPIO_Initure.Pull=GPIO_PULLUP;          <span class="comment">//上拉</span></span><br><span class="line">GPIO_Initure.Speed=GPIO_SPEED_FAST;     <span class="comment">//快速</span></span><br><span class="line">HAL_GPIO_Init(GPIOB,&amp;GPIO_Initure); </span><br><span class="line"></span><br></pre></td></tr></table></figure><p>如果引脚我们想作为其他复用功能使用，那么跟其他IO口复用映射配置方法是一致的：</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210928161715.png" alt="例如：复用成TIM" /></p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">GPIO_Initure.Pin=GPIO_PIN_3;</span><br><span class="line">GPIO_Initure.Mode=GPIO_MODE_OUTPUT_PP;  <span class="comment">//推挽输出</span></span><br><span class="line">GPIO_Initure.Pull=GPIO_PULLUP;          <span class="comment">//上拉</span></span><br><span class="line">GPIO_Initure.Speed=GPIO_SPEED_FAST;     <span class="comment">//快速</span></span><br><span class="line">GPIO_Initure.Alternate=GPIO_AF1_TIM2;      <span class="comment">//复用为TIM2_CH2</span></span><br><span class="line">HAL_GPIO_Init(GPIOB,&amp;GPIO_Initure); </span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="ltdc-lcdrgb屏实验"><a class="markdownIt-Anchor" href="#ltdc-lcdrgb屏实验"></a> LTDC LCD（RGB屏）实验</h2><p>RGBLCD实际上也是TFTLCD，只是接口不同。</p><p>RGB屏一般有2种驱动模式：DE模式和HV模式。DE模式使用DE信号来确定有效数据（DE为高/低时，数据有效），而HV模式，则需要行同步和场同步，来表示扫描的行和列。</p><p>ALIENTEK提供的RGB模块：ATK-4342（4.3寸，480*272）</p><p>LCD由于有液晶层的影响，在寒冷的状态下响应会变慢。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210929163241.png" alt=" RGBLCD的信号线" /></p><p>RGB565、RGB888，后面的数字对应前面对应字母的灰度等级，例如RGB565能显示<code>2^5*2^6*2^5=2^16</code>种颜色。若ARGB8888有4位，则其中一位代表的透明度。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210929171613.png" alt="" /></p><p>STM32F429的LTDC具有如下特点：</p><ul><li>24 位 RGB 并行像素输出；每像素8位数据(RGB888)</li><li>2个带有专用FIFO的显示层（FIFO深度64x32位）</li><li>支持查色表 (CLUT)，每层高达256种颜色（256x24位）</li><li>可针对不同显示面板编程时序</li><li>可编程背景色</li><li>可编程HSync、VSync和数据使能(DE)信号的极性</li><li>每层有多达8种颜色格式可供选择：ARGB8888、RGB888、RGB565、ARGB1555、ARGB4444、L8（8位Luminance或CLUT）、AL44（4位alpha+4位luminance）和AL88（8 位alpha+8位luminance）</li><li>每通道的低位采用伪随机抖动输出（红色、绿色、蓝色的抖动宽度为2位）</li><li>使用alpha值（每像素或常数）在两层之间灵活混合</li><li>色键（透明颜色）</li><li>可编程窗口位置和大小</li><li>支持薄膜晶体管 (TFT) 彩色显示器</li><li>AHB主接口支持16个字的突发</li><li>高达4个可编程中断事件</li></ul><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210929175846.png" alt="LTDC控制器框图" /></p><p>① 信号线</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20211006170013.png" alt="image-20211006170001508" /></p><p>LTDC总共有24位数据线，支持RGB888格式，但是我们为了节省IO，并提高图片显示速度，使用RGB565颜色格式，这样的话，只需要16个IO口，当使用RGB565格式的时候，LCD面板的数据线，必须连接到LTDC数据线的MSB，即：LTDC的LCD_R[7:3]接RGBLCD的R[7:3]，LTDC的LCD_G[7:2]接RGBLCD的G[7:2]，LTDC的LCD_B[7:3]接RGBLCD的B[7:3]，这样，RGB数据线分别是5:6:5，即RGB565格式。表中对应IO就是我们STM32F429核心板上面，LCD接口所连接的IO。</p><p>② 图像处理单元<br />此部分先从AHB接口获取显存中的图像数据，然后经过层FIFO（有2个，对应2个层）缓存，每个层FIFO具有64*32位存储深度，然后经过像素格式转换器（PFC），把从层的所选输入像素格式转换为ARGB8888格式，再通过混合单元，把两层数据合并，混合得到单层要显示的数据，最后经过抖动单元处理（可选）后，输出给LCD显示。</p><p>这里的ARGB8888，即带8位透明通道，即最高8位为透明通道参数，表示透明度，值越大，则约不透明，值越小，越透明。比如A=255时，表示完全不透明，而A=0时，表示完全透明。RGB888就表示R、G、B各8位，可表示的颜色深度为1600W色。<br />STM32F429的LTDC总共有三个层：背景层、第一层和第二层，其中，背景层只可以是纯色（即单色），而第一层和第二层都可以用来显示信息，混合单元会将三个层混合起来，进行显示。</p><p>③ AHB接口<br />由于LTDC驱动RGBLCD的时候，需要有很多内存来做显存，比如一个800<em>480的屏幕，按一般的16位RGB565模式，一个像素需要2个字节的内存，总共需要：800</em>480*2=768K字节内存，STM32内部是没有这么多内存的，所以必须借助外部SDRAM，而SDRAM是挂在AHB总线上的，LTDC的AHB接口，就是用来将显存数据，从SDRAM存储器传输到FIFO里面。</p><p>④ 配置和状态寄存器</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20211007172727.png" alt="LTDC同步时序框图（HV模式）" /></p><p>图中有效显示区域，就是我们RGBLCD面板的显示范围（即分辨率），有效宽度*有效高度，就是LCD的分辨率。参数说明如下：</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20211007173005.png" alt="LTDC驱动时序参数" /></p><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>HSW(horizontal sync width)</td><td>水平同步脉宽，单位为相素时钟（CLK）个数</td></tr><tr><td>VSW(vertical sync width)</td><td>垂直同步脉宽，单位为行周期个数</td></tr><tr><td>HBP(horizontal back porch)</td><td>水平后廊，表示水平同步信号开始到行有效数据开始之间的相素时钟（CLK）个数</td></tr><tr><td>HFP(horizontal front porch)</td><td>水平前廊，表示行有效数据结束到下一个水平有效信号开始之前的相素时钟（CLK）个数</td></tr><tr><td>VBP(vertical back porch)</td><td>垂直后廊，表示垂直同步信号后，无效行的个数</td></tr><tr><td>VFP(vertical front porch)</td><td>垂直前廊，表示一帧数据输出结束后，到下一个垂直同步信号开始之前的无效行数</td></tr></tbody></table><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20211007173812.png" alt="LTDC_GCR全局控制寄存器" /></p><p>LTDCEN：TFT LCD控制器使能位，也就是LTDC的开关，该位需要设置为1。<br />PCPOL：像素时钟极性。控制像素时钟的极性，根据LCD面板的特性来设置，我们所用的LCD一般设置为0即可，表示低电平有效。<br />DEPOL：数据使能极性。控制DE信号的极性，根据LCD面板的特性来设置，我们所用的LCD一般设置为0即可，表示低电平有效。<br />VSPOL：垂直同步极性。控制VSYNC信号的极性，根据LCD面板的特性来设置，我们所用的LCD一般设置为0即可，表示低电平有效。<br />HSPOL：水平同步极性。控制HSYNC信号的极性，根据LCD面板的特性来设置，我们所用的LCD一般设置为0即可，表示低电平有效。</p><blockquote><p>也就是说，使用RGB屏时，首先打开LTDCEN使能位，然后其他的极性都是低电平有效。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20211007174234.png" alt="LTDC_SSCR同步大小配置寄存器" /></p><p>VSH：表示垂直同步高度(以水平扫描行为单位），表示垂直同步脉宽减1，即VSW-1。<br />HSW：表示水平同步宽度(以像素时钟为单位），表示水平同步脉宽减1，即HSW-1。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20211007175039.png" alt="LTDC_BPCR后沿配置寄存器" /><br />AVBP：累加垂直后沿(以水平扫描行为单位)，表示：VSW+VBP-1（垂直同步脉宽+垂直后廊-1)<br />AHBP：累加水平后沿(以像素时钟为单位)，表示HSW+HBP-1（水平同步脉宽+水平后廊-1)</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20211007175711.png" alt="LTDC_AWCR有效宽度配置寄存器" /></p><p>AAH：累加有效高度（以水平扫描行为单位），表示：VSW+VBP+有效高度-1。<br />AAW：累加有效宽度（以像素时钟为单位），表示：HSW+HBP+有效宽度-1。</p><blockquote><p>有效高度和有效宽度，是指LCD面板的宽度和高度（构成分辨率，下同）。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20211007204142.png" alt="LTDC_TWCR总宽度配置寄存器" /></p><p>TOTALH：总高度（以水平扫描行为单位），表示：VSW+VBP+有效高度+VFP-1。<br />TOTALW：总宽度（以像素时钟为单位），表示：HSW+HBP+有效宽度+HFP-1。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20211007204313.png" alt="LTDC_BCCR背景色配置寄存器" /></p><blockquote><p>该寄存器定义背景层的颜色（RGB888），通过低24位配置，我们一般设置为全0即可。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20211007204802.png" alt="LTDC_LxCFBAR层颜色帧缓冲区地址寄存器（x=1/2）" /></p><p>该寄存器用来定义一层显存的起始地址。STM32F429的LTDC支持2个层，所以总共有两个寄存器，分别设置层1和层2的显存起始地址。</p><p>LTDC的层像素格式配置寄存器：LTDC_LxPFCR（x=1/2），该寄存器只有最低3位有效，用于设置层颜色的像素格式：000：ARGB8888；001：RGB888；010：RGB565；011：ARGB1555；100：ARGB4444；101：L8（8位Luminance）；110：AL44（4 位Alpha，4 位Luminance）；111：AL88（8 位Alpha，8 位Luminance）。一般使用RGB565格式，即该寄存器设置为：010即可。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20211007205718.png" alt="LTDC_LxCACR（x=1/2）层恒定Alpha配置寄存器" /></p><p>该寄存器低8位（CONSTA）有效，这些位配置混合时使用的恒定Alpha。恒定Alpha由硬件实现255分频。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20211007205904.png" alt="LTDC_LxDCCR（x=1/2）层默认颜色配置寄存器" /></p><p>该寄存器定义采用ARGB8888格式的层的默认颜色。默认颜色在定义的层窗口外使用或在层禁止时使用。一般情况下，用不到，所以该寄存器一般设置为0即可。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20211007210101.png" alt="LTDC_LxBFCR（x=1/2）层混合系数配置寄存" /></p><blockquote><p>该寄存器用于定义混合系数：BF1和BF2。BF1=100的时候，使用恒定的Alpha混合系数（由LTDC_LxCACR寄存器设置恒定Alpha值），BF1=110的时候，使用像素<code>Alpha*恒定Alpha</code>。像素Alpha即ARGB格式像素的A值（Alpha值），仅限ARGB颜色格式时使用。在RGB565格式下，我们设置BF1=100即可。BF2同BF1类似，BF2=101的时候，使用恒定的Alpha混合系数，BF2=111的时候，使用像素<code>Alpha*恒定Alpha</code>。在RGB565格式下，我们设置BF2=101即可。</p></blockquote><p>通用的混合公式为：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>B</mi><mi>C</mi><mo>=</mo><mi>B</mi><mi>F</mi><mn>1</mn><mo>∗</mo><mi>C</mi><mo>+</mo><mi>B</mi><mi>F</mi><mn>2</mn><mo>∗</mo><mi>C</mi><mi>s</mi></mrow><annotation encoding="application/x-tex">BC=BF1*C+BF2*Cs</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault">s</span></span></span></span></span></p><blockquote><p>BC=混合后的颜色；BF1=混合系数1；C=当前层颜色，即我们写入层显存的颜色值；BF2=混合系数2；Cs=底层混合后的颜色，对于层1来说，Cs=背景层的颜色，对于层2来说，Cs=背景层和层1混合后的颜色。</p></blockquote><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">以使用恒定的Alpha值，并仅使能第一层为例，给大家讲解一下混色的计算方式。恒定Alpha的值由LTDC<span class="emphasis">_LxCACR寄存器设置，恒定Alpha=LTDC_</span>LxCACR设置值/255。假设：LTDC<span class="emphasis">_LxCACR=240；C=128；Cs（背景色）=48；那么恒定Alpha=240/255=0.94，则：</span></span><br><span class="line"><span class="emphasis">                            BC=0.94*128+(1-0.94)*48=123 </span></span><br><span class="line"><span class="emphasis">则混合后，颜色值变成了123。另外，需要注意的是：BF1和BF2的恒定Alpha值互补，他们之和为1，且BF1使用的是恒定Alpha值，BF2使用的是互补值。一般情况下，我们设置LTDC_</span>LxCACR的值为255，这样，在使用恒定Alpha值的时候，可以得到BC=C，即混合后的颜色，就是显存里面的颜色（不进行混色）。</span><br></pre></td></tr></table></figure><p>LTDC的层支持窗口设置功能，通过LTDC_LxWHPCR和LTDC_LxWVPCR这两个寄存器设置，可以调整显示区域的大小</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20211007211316.png" alt="LTDC层窗口设置关系图" /></p><p>层中的第一个和最后一个可见像素通过配置LTDC_LxWHPCR寄存器中的WHSTPOS[11:0]和WHSPPOS[11:0]进行设置。层中的第一个和最后一个可见行通过配置LTDC_LxWVPCR寄存器中的WHSTPOS[11:0]和WHSPPOS[11:0]进行设置，配置完成后，即可确定窗口的大小。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20211008151940.png" alt="LTDC_LxWHPCR（x=1/2）层窗口水平位置配置寄存器" /></p><p>WHSTPOS：窗口水平起始位置，定义层窗口的一行的第一个可见像素。</p><p>WHSPPOS：窗口水平停止位置，定义层窗口的一行的最后一个可见像素。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20211008152217.png" alt="LTDC_LxWVPCR（x=1/2）层窗口垂直位置配置寄存器" /></p><p>WVSTPOS：窗口垂直起始位置，定义层窗口的第一个可见行。<br />WVSPPOS：窗口垂直停止位置，定义层窗口的最后一个可见行。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20211008152603.png" alt="LTDC_LxCFBLR(x=1/2)层颜色帧缓冲区长度寄存器" /></p><p>该寄存器定义颜色帧缓冲区的行长和行间距。</p><p>CFBLL：这些位定义一行像素的长度（以字节为单位）+3。行长的计算方法为：<code>有效宽度*每像素的字节数+3。比如，LCD面板的分辨率为800*480</code>，有效宽度为800，采用RGB565格式，那么CFBLL需要设置为：800*2+3=1603。</p><p>CFBP：这些位定义从像素某行的起始处到下一行的起始处的增量（以字节为单位）。这个设置，其实同样是一行像素的长度，对于<code>800*480</code>的LCD面板，RGB565格式，设置CFBP为：800*2=1600即可。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20211008153238.png" alt="LTDC_LxCFBLNR（x=1/2）层颜色帧缓冲区行数寄存器" /></p><p>该寄存器定义颜色帧缓冲区中的行数。CFBLNBR用于定义帧缓冲区行数，比如，LCD面板的分辨率为800*480，那么帧缓冲区的行数为480行，则设置CFBLNBR=480即可。</p><p>⑤ 时钟域</p><p>LTDC有三个时钟域：AHB时钟域（HCLK）、APB2时钟域（PCLK2）和像素时钟域（LCD_CLK），AHB时钟域用于驱动AHB接口，读取存储器的数据到FIFO里面，APB2时钟域用于配置寄存器，像素时钟域则用于生成LCD接口信号，LCD_CLK的输出应按照LCD面板要求进行配置。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20211008153734.png" alt="" /></p><p>LCD_CLK的来源，为外部晶振（假定外部晶振作为系统时钟源），经过分频器分频（/M），然后经过PLLSAI倍频器倍频（xN）后，经R分频因子输出分频后的时钟，得到PLLLCDCLK，然后在经过DIV分频和时钟使能后，得到LCD_CLK。配置LCD_CLK需要用到的一些寄存器。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20211008154807.png" alt="RCC_PLLSAICFGR配置寄存器" /></p><p>这个寄存器主要对PLLSAI倍频器的：N、Q和R等参数进行配置，他们的设置关系（假定使用外部HSE作为时钟源）为：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>V</mi><mi>C</mi><mi>O</mi><mi>c</mi><mi>l</mi><mi>o</mi><mi>c</mi><mi>k</mi><mo stretchy="false">)</mo><mo>=</mo><mi>f</mi><mo stretchy="false">(</mo><mi>h</mi><mi>s</mi><mi>e</mi><mo stretchy="false">)</mo><mo>×</mo><mo stretchy="false">(</mo><mi>P</mi><mi>L</mi><mi>L</mi><mi>S</mi><mi>A</mi><mi>I</mi><mi>N</mi><mi mathvariant="normal">/</mi><mi>P</mi><mi>L</mi><mi>L</mi><mi>M</mi><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mi>f</mi><mo stretchy="false">(</mo><mi>P</mi><mi>L</mi><mi>L</mi><mi>S</mi><mi>A</mi><mi>C</mi><mi>L</mi><mi>K</mi><mo stretchy="false">)</mo><mo>=</mo><mi>f</mi><mo stretchy="false">(</mo><mi>V</mi><mi>C</mi><mi>O</mi><mi>c</mi><mi>l</mi><mi>o</mi><mi>c</mi><mi>k</mi><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mi>P</mi><mi>L</mi><mi>L</mi><mi>S</mi><mi>A</mi><mi>I</mi><mi>Q</mi><mspace linebreak="newline"></mspace><mi>f</mi><mo stretchy="false">(</mo><mi>P</mi><mi>L</mi><mi>L</mi><mi>L</mi><mi>C</mi><mi>D</mi><mi>C</mi><mi>L</mi><mi>K</mi><mo stretchy="false">)</mo><mo>=</mo><mi>f</mi><mo stretchy="false">(</mo><mi>V</mi><mi>C</mi><mi>O</mi><mi>c</mi><mi>l</mi><mi>o</mi><mi>c</mi><mi>k</mi><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mi>P</mi><mi>L</mi><mi>L</mi><mi>S</mi><mi>A</mi><mi>I</mi><mi>R</mi></mrow><annotation encoding="application/x-tex">f(VCO clock) = f(hse) × (PLLSAIN / PLLM)  \\f(PLLSACLK) = f(VCO clock) / PLLSAIQ\\f(PLLLCDCLK) = f(VCO clock) / PLLSAIR</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mord mathdefault">c</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault">c</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">h</span><span class="mord mathdefault">s</span><span class="mord mathdefault">e</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault">L</span><span class="mord mathdefault">L</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mord">/</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault">L</span><span class="mord mathdefault">L</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault">L</span><span class="mord mathdefault">L</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault">L</span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mord mathdefault">c</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault">c</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mclose">)</span><span class="mord">/</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault">L</span><span class="mord mathdefault">L</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mord mathdefault">Q</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault">L</span><span class="mord mathdefault">L</span><span class="mord mathdefault">L</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault">L</span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mord mathdefault">c</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault">c</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mclose">)</span><span class="mord">/</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault">L</span><span class="mord mathdefault">L</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span></span></span></span></span></p><p>f(hse)为我们外部晶振的频率，PLLM就是M分频因子，PLLSAIN为PLLSAI的倍频数，取值范围为：<code>49~432</code>；PLLSAIQ为PLLSAI的Q分频系数，取值范围为：<code>2~15</code>；PLLSAIR为PLLSAI的R分频系数，取值范围为：<code>2~7</code>；阿波罗STM32F429核心板所用的HSE晶振频率为25Mhz，一般我们设置PLLM为25，那么输入PLLSAI的时钟频率就是1Mhz，然后可得：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>P</mi><mi>L</mi><mi>L</mi><mi>L</mi><mi>C</mi><mi>D</mi><mi>C</mi><mi>L</mi><mi>K</mi><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn><mi>M</mi><mi>h</mi><mi>z</mi><mo>∗</mo><mi>P</mi><mi>L</mi><mi>L</mi><mi>S</mi><mi>A</mi><mi>I</mi><mi>N</mi><mi mathvariant="normal">/</mi><mi>P</mi><mi>L</mi><mi>L</mi><mi>S</mi><mi>A</mi><mi>I</mi><mi>R</mi></mrow><annotation encoding="application/x-tex">f(PLLLCDCLK) =1Mhz* PLLSAIN/PLLSAIR</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault">L</span><span class="mord mathdefault">L</span><span class="mord mathdefault">L</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault">L</span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault">h</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault">L</span><span class="mord mathdefault">L</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mord">/</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault">L</span><span class="mord mathdefault">L</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span></span></span></span></p><p>在f(PLLLCDCLK)之后，还有一个分频器（DIV），分频后得到最终的LCD_CLK频率，该分频由RCC专用时钟配置寄存器：RCC_DCKCFGR配置，如下所示。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20211008155602.png" alt="RCC_DCKCFGR专用时钟配置寄存器" /></p><p>配置LCD的RGB屏，只关心该寄存器中PLLSAIDIVR的配置，这两个位用于配置f(PLLLCDCLK)之后的分频，设置范围为：0~2，表示：2^(PLLSAIDIVR+1)分频。因此，我们最终得到LCD_CLK的频率计算公式为(前提：HSE=25Mhz，PLLM=25)：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>L</mi><mi>C</mi><msub><mi>D</mi><mi>C</mi></msub><mi>L</mi><mi>K</mi><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn><mi>M</mi><mi>h</mi><mi>z</mi><mo>∗</mo><mi>P</mi><mi>L</mi><mi>L</mi><mi>S</mi><mi>A</mi><mi>I</mi><mi>N</mi><mi mathvariant="normal">/</mi><mi>P</mi><mi>L</mi><mi>L</mi><mi>S</mi><mi>A</mi><mi>I</mi><mi>R</mi><mi mathvariant="normal">/</mi><msup><mn>2</mn><mo stretchy="false">(</mo></msup><mi>P</mi><mi>L</mi><mi>L</mi><mi>S</mi><mi>A</mi><mi>I</mi><mi>D</mi><mi>I</mi><mi>V</mi><mi>R</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(LCD_CLK)= 1Mhz* PLLSAIN/PLLSAIR/2^(PLLSAIDIVR+1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">L</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">C</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault">L</span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault">h</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.188em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault">L</span><span class="mord mathdefault">L</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mord">/</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault">L</span><span class="mord mathdefault">L</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord">/</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mopen mtight">(</span></span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault">L</span><span class="mord mathdefault">L</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span></span></p><p>以群创AT070TN92面板为例，查其数据手册，可知DCLK的频率典型值为：33.3Mhz，我们需要设置：PLLSAIN=396，PLLSAIR=3，PLLSAIDIVR=1，得到：f(LCD_CLK)= 1Mhz* 396/3/2^(1+1)=33Mhz</p><h4 id="操作步骤"><a class="markdownIt-Anchor" href="#操作步骤"></a> 操作步骤</h4><p>LTDC相关HAL库操作分布在函数<code>stm32f4xx_hal_ltdc.c</code>和<code>stm32f4xx_hal_ltdc_ex.c</code>以及他们对应的头文件中。操作步骤如下：</p><p>1）使能LTDC时钟，并配置LTDC相关的IO及其时钟使能。</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">__HAL_RCC_LTDC_CLK_ENABLE(); <span class="comment">//使能LTDC时钟</span></span><br></pre></td></tr></table></figure><p>2）设置LCD_CLK时钟。</p><p>此步需要配置LCD的像素时钟，根据LCD的面板参数进行设置，LCD_CLK由PLLSAI进行配置，配置使用到的HAL库函数为：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function">HAL_StatusTypeDef <span class="title">HAL_RCCEx_PeriphCLKConfig</span><span class="params">(RCC_PeriphCLKInitTypeDef *PeriphClkInit)</span></span>;</span><br></pre></td></tr></table></figure><p>LCD_CLK计算公式</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>L</mi><mi>C</mi><msub><mi>D</mi><mi>C</mi></msub><mi>L</mi><mi>K</mi><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn><mi>M</mi><mi>h</mi><mi>z</mi><mo>∗</mo><mi>P</mi><mi>L</mi><mi>L</mi><mi>S</mi><mi>A</mi><mi>I</mi><mi>N</mi><mi mathvariant="normal">/</mi><mi>P</mi><mi>L</mi><mi>L</mi><mi>S</mi><mi>A</mi><mi>I</mi><mi>R</mi><mi mathvariant="normal">/</mi><msup><mn>2</mn><mrow><mo stretchy="false">(</mo><mi>P</mi><mi>L</mi><mi>L</mi><mi>S</mi><mi>A</mi><mi>I</mi><mi>D</mi><mi>I</mi><mi>V</mi><mi>R</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msup></mrow><annotation encoding="application/x-tex">f(LCD_CLK)= 1Mhz* PLLSAIN/PLLSAIR/2^{(PLLSAIDIVR+1)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">L</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">C</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault">L</span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault">h</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.188em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault">L</span><span class="mord mathdefault">L</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mord">/</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault">L</span><span class="mord mathdefault">L</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord">/</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">P</span><span class="mord mathdefault mtight">L</span><span class="mord mathdefault mtight">L</span><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span><span class="mord mathdefault mtight">A</span><span class="mord mathdefault mtight" style="margin-right:0.07847em;">I</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">D</span><span class="mord mathdefault mtight" style="margin-right:0.07847em;">I</span><span class="mord mathdefault mtight" style="margin-right:0.22222em;">V</span><span class="mord mathdefault mtight" style="margin-right:0.00773em;">R</span><span class="mbin mtight">+</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span></span></p><p>根据公式也可以看出需要配置PLLSAIN、PLLSAIR和PLLSAIDIVR等参数，配置历程如下：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">RCC_PeriphCLKInitTypeDef PeriphClkIniture;</span><br><span class="line">PeriphClkIniture.PeriphClockSelection=RCC_PERIPHCLK_LTDC; <span class="comment">//LTDC时钟</span></span><br><span class="line">PeriphClkIniture.PLLSAI.PLLSAIN= <span class="number">288</span>;</span><br><span class="line">PeriphClkIniture.PLLSAI.PLLSAIR=<span class="number">4</span>;</span><br><span class="line">PeriphClkIniture.PLLSAIDivR= RCC_PLLSAIDIVR_8;</span><br><span class="line">HAL_RCCEx_PeriphCLKConfig(&amp;PeriphClkIniture);</span><br></pre></td></tr></table></figure><p>3）设置RGBLCD的相关参数，并使能LTDC。</p><p>进行对LCD面板参数的配置，包括：LTDC使能、时钟极性、HSW、VSW、HBP、VBP和VEP等，通过LTDC_GCR(全局控制寄存器)、LTDC_SSCR(同步大小寄存器)、LTDC_BPCR(后沿配置寄存器)、LTDC_AWCR(有效宽度配置寄存器)和LTDC_TWCR(总宽度配置寄存器)及以上介绍的寄存器配置。HAL库配置LTDC参数并使能LTDC的函数如下：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function">HAL_StatusTypeDef <span class="title">HAL_LTDC_Init</span><span class="params">(LTDC_HandleTypeDef *hltdc)</span></span>;</span><br></pre></td></tr></table></figure><p>入口参数为hltdc，为LTDC_HandleTypeDef结构体指针类型。它的定义如下：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    LTDC_TypeDef *Instance;</span><br><span class="line">    LTDC_InitTypeDef Init;</span><br><span class="line">    LTDC_LayerCfgTypeDef LayerCfg[MAX_LAYER];</span><br><span class="line">    HAL_LockTypeDef Lock;</span><br><span class="line">    __IO HAL_LTDC_StateTypeDef State;</span><br><span class="line">    __IO <span class="keyword">uint32_t</span></span><br><span class="line">&#125; LTDC_HandleTypeDef;</span><br></pre></td></tr></table></figure><blockquote><p>该结构体有5个成员变量。成员变量Lock和State，他们是HAL库用来标识一些状态过程的变量。Instance变量是LTDC_TypeDef结构体指针类型，和其他初始化结构体成员变量Instance一样都是用来设置配置寄存器的基地址，这在HAL库中已经通过宏定义定好好了，设置值为LTDC即可。成员变量LayerCfg是一个数组，它是用来保存LTDC层配置参数，</p><p>成员变量Init才是真正用来初始化LTDC的结构体变量。</p></blockquote><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">uint32_t</span> HSPolarity; <span class="comment">//水平同步极性</span></span><br><span class="line">    <span class="keyword">uint32_t</span> VSPolarity; <span class="comment">//垂直同步极性</span></span><br><span class="line">    <span class="keyword">uint32_t</span> DEPolarity; <span class="comment">//数据使能极性</span></span><br><span class="line">    <span class="keyword">uint32_t</span> PCPolarity; <span class="comment">//像素时钟极性</span></span><br><span class="line">    <span class="keyword">uint32_t</span> HorizontalSync; <span class="comment">//水平同步宽度</span></span><br><span class="line">    <span class="keyword">uint32_t</span> VerticalSync; <span class="comment">//垂直同步高度</span></span><br><span class="line">    <span class="keyword">uint32_t</span> AccumulatedHBP; <span class="comment">//水平同步后沿宽度</span></span><br><span class="line">    <span class="keyword">uint32_t</span> AccumulatedVBP; <span class="comment">//垂直同步后沿高度</span></span><br><span class="line">    <span class="keyword">uint32_t</span> AccumulatedActiveW; <span class="comment">//累加有效宽度</span></span><br><span class="line">    <span class="keyword">uint32_t</span> AccumulatedActiveH; <span class="comment">//累加有效高度</span></span><br><span class="line">    <span class="keyword">uint32_t</span> TotalWidth; <span class="comment">//总宽度</span></span><br><span class="line">    <span class="keyword">uint32_t</span> TotalHeigh; <span class="comment">//总高度</span></span><br><span class="line">    LTDC_ColorTypeDef Backcolor; <span class="comment">//屏幕背景层颜色</span></span><br><span class="line">&#125; LTDC_InitTypeDef;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">LTDC_HandleTypeDef LTDC_Handler; <span class="comment">//LTDC句柄</span></span><br><span class="line">LTDC_Handler.Instance=LTDC;</span><br><span class="line">LTDC_Handler.Init.HSPolarity=LTDC_HSPOLARITY_AL; <span class="comment">//水平同步极性</span></span><br><span class="line">LTDC_Handler.Init.VSPolarity=LTDC_VSPOLARITY_AL; <span class="comment">//垂直同步极性</span></span><br><span class="line">LTDC_Handler.Init.DEPolarity=LTDC_DEPOLARITY_AL; <span class="comment">//数据使能极性</span></span><br><span class="line">LTDC_Handler.Init.PCPolarity=LTDC_PCPOLARITY_IPC; <span class="comment">//像素时钟极性</span></span><br><span class="line">LTDC_Handler.Init.HorizontalSync=<span class="number">10</span><span class="number">-1</span>; <span class="comment">//水平同步宽度</span></span><br><span class="line">LTDC_Handler.Init.VerticalSync=<span class="number">2</span><span class="number">-1</span>; <span class="comment">//垂直同步宽度</span></span><br><span class="line">LTDC_Handler.Init.AccumulatedHBP=<span class="number">10</span>+<span class="number">20</span><span class="number">-1</span>; <span class="comment">//水平同步后沿宽度</span></span><br><span class="line">LTDC_Handler.Init.AccumulatedVBP=<span class="number">2</span>+<span class="number">2</span><span class="number">-1</span>; <span class="comment">//垂直同步后沿高度</span></span><br><span class="line">LTDC_Handler.Init.AccumulatedActiveW=<span class="number">10</span>+<span class="number">20</span>+<span class="number">480</span><span class="number">-1</span>; <span class="comment">//有效宽度</span></span><br><span class="line">LTDC_Handler.Init.AccumulatedActiveH=<span class="number">2</span>+<span class="number">2</span>+<span class="number">272</span><span class="number">-1</span>; <span class="comment">//有效高度</span></span><br><span class="line">LTDC_Handler.Init.TotalWidth=<span class="number">10</span>+<span class="number">20</span>+<span class="number">480</span>+<span class="number">10</span><span class="number">-1</span>; <span class="comment">//总宽度</span></span><br><span class="line">LTDC_Handler.Init.TotalHeigh=<span class="number">2</span>+<span class="number">2</span>+<span class="number">272</span>+<span class="number">4</span><span class="number">-1</span>; <span class="comment">//总高度</span></span><br><span class="line">LTDC_Handler.Init.Backcolor.Red=<span class="number">0</span>; <span class="comment">//屏幕背景层红色部分</span></span><br><span class="line">LTDC_Handler.Init.Backcolor.Green=<span class="number">0</span>; <span class="comment">//屏幕背景层绿色部分</span></span><br><span class="line">LTDC_Handler.Init.Backcolor.Blue=<span class="number">0</span>; <span class="comment">//屏幕背景色蓝色部分</span></span><br><span class="line">HAL_LTDC_Init(&amp;LTDC_Handler); <span class="comment">//设置RGBLCD的相关参数，并使能LTDC</span></span><br></pre></td></tr></table></figure><p>HAL库提供了LTDC初始化MSP的回调函数，HAL_LTDC_MspInit，该函数一般用来使能时钟和初始化IO口等于MCU相关操作：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">HAL_LTDC_MspInit</span><span class="params">(LTDC_HandleTypeDef* hltdc)</span></span>;</span><br></pre></td></tr></table></figure><p>4）设置LTDC层参数。</p><p>设置LTDC某一层的相关参数，包括：帧缓存首地址、颜色格式、混合系数和层颜色等。通过LTDC_LxCFAR、LTDC_LxPFCR、LTDC_LxCACR、LTDC_LxDCCR和LTDC_LxBFCR等寄存器配置。HAL库提供的LTDC层参数配置函数为：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function">HAL_StatusTypeDef <span class="title">HAL_LTDC_ConfigLayer</span><span class="params">(LTDC_HandleTypeDef *hltdc,LTDC_LayerCfgTypeDef *pLayerCfg, <span class="keyword">uint32_t</span> LayerIdx)</span></span>;</span><br></pre></td></tr></table></figure><p>5）设置LTDC层窗口，并使能层。</p><p>对LTDC某个层的显示窗口设置（一般设置为整层显示，不开窗），通过LTDC_LxWHPCR、LTDC_LxWVPCR、LTDC_LxCFBLR和LTDC_LxCFBLNR等寄存器配置。层使能通过配置LTDC_LxCR寄存器的最低位实现，使能层以后，RGBLCD就可以正常工作了。</p><p>HAL库提供的LTDC层窗口配置函数为：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function">HAL_StatusTypeDef <span class="title">HAL_LTDC_SetWindowSize</span><span class="params">(LTDC_HandleTypeDef *hltdc,<span class="keyword">uint32_t</span> XSize, <span class="keyword">uint32_t</span> YSize, <span class="keyword">uint32_t</span> LayerIdx)</span></span>;<span class="comment">//层窗口尺寸配置</span></span><br><span class="line"><span class="function">HAL_StatusTypeDef <span class="title">HAL_LTDC_SetWindowPosition</span><span class="params">(LTDC_HandleTypeDef *hltdc,<span class="keyword">uint32_t</span> X0, <span class="keyword">uint32_t</span> Y0, <span class="keyword">uint32_t</span> LayerIdx)</span></span>;<span class="comment">//层窗口位置配置</span></span><br></pre></td></tr></table></figure><h4 id="dma"><a class="markdownIt-Anchor" href="#dma"></a> DMA</h4><blockquote><p><font color='red'>使用官方提供的HAL库DMA2D相关库函数进行颜色填充效率极为低下，大量时间浪费在函数的入栈出栈以及过程处理，所以在项目开发中一般都不会使用DMA2D库函数进行颜色填充，包括ST官方提供的STEMWIN实例关于DMA2D部分，均采用的寄存器操作</font></p></blockquote><p>为了提高STM32F429的图像处理能力，ST公司设计了一个专用于图像处理的专业DMA：Chrom-Art Accelerator™，即DMA2D，通过DMA2D对图像进行填充和搬运，可以完全不用CPU干预，从而提高效率，减轻CPU负担，可以执行下列操作：</p><ul><li>用特定颜色填充目标图像的一部分或全部（可用于快速单色填充）</li><li>将源图像的一部分（或全部）复制到目标图像的一部分（或全部）中（可用于快速图像填充）</li><li>通过像素格式转换将源图像的一部分（或全部）复制到目标图像的一部分（或全部）中</li><li>将像素格式不同的两个源图像部分和/ 或全部混合，再将结果复制到颜色格式不同的部分或整个目标图像中。</li></ul><p>DMA2D有四种工作模式，通过DMA2D_CR寄存器的MODE[1:0]位选择工作模式：<br />1， 寄存器到存储器<br />2， 存储器到存储器<br />3， 存储器到存储器并执行 PFC<br />4， 存储器到存储器并执行 PFC 和混合</p><p>​寄存器到存储器<br />寄存器到存储器模式用于以预定义颜色填充用户自定义区域，也就是可以实现快速的单色填充显示，比如清屏操作。<br />在该模式下：颜色格式在DMA2D_OPFCCR中设置，DMA2D不从任何源获取数据，它只是将DMA2D_OCOLR寄存器中定义的颜色写入通过DMA2D_OMA寻址以及DMA2D_NLR和DMA2D_OOR定义的区域。<br />​存储器到存储器<br />该模式下，DMA2D 不执行任何图形数据转换。前景层输入FIFO充当缓冲区，数据从DMA2D_FGMAR中定义的源存储单元传输到DMA2D_OMAR寻址的目标存储单元，可用于快速图像填充。DMA2D_FGPFCCR寄存器的CM[3:0]位中编程的颜色模式决定输入和输出的每像素位数。对于要传输的区域大小，源区域大小由DMA2D_NLR和DMA2D_FGOR寄存器定义，目标区域大小则由DMA2D_NLR和DMA2D_OOR寄存器定义。</p><h4 id="硬件设计"><a class="markdownIt-Anchor" href="#硬件设计"></a> 硬件设计</h4><p>在用于显示实验中的硬件资源有：</p><p>1） 指示灯DS0<br />2） SDRAM<br />3） LTDC<br />4） RGBLCD接口</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20211014175320.png" alt="RGBLCD接口原理图" /></p><h4 id="软件设计"><a class="markdownIt-Anchor" href="#软件设计"></a> 软件设计</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//LCD LTDC重要参数集</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span>  </span></span><br><span class="line"><span class="class">&#123;</span> </span><br><span class="line">u32 pwidth;<span class="comment">//LCD面板的宽度,固定参数,不随显示方向改变,如果为0,说明没有任何RGB屏接入</span></span><br><span class="line">u32 pheight;<span class="comment">//LCD面板的高度,固定参数,不随显示方向改变</span></span><br><span class="line">u16 hsw;<span class="comment">//水平同步宽度</span></span><br><span class="line">u16 vsw;<span class="comment">//垂直同步宽度</span></span><br><span class="line">u16 hbp;<span class="comment">//水平后廊</span></span><br><span class="line">u16 vbp;<span class="comment">//垂直后廊</span></span><br><span class="line">u16 hfp;<span class="comment">//水平前廊</span></span><br><span class="line">u16 vfp;<span class="comment">//垂直前廊 </span></span><br><span class="line">u8 activelayer;<span class="comment">//当前层编号:0/1</span></span><br><span class="line">u8 dir;<span class="comment">//0,竖屏;1,横屏;</span></span><br><span class="line">u16 width;<span class="comment">//LCD宽度</span></span><br><span class="line">u16 height;<span class="comment">//LCD高度</span></span><br><span class="line">u32 pixsize;<span class="comment">//每个像素所占字节数</span></span><br><span class="line">&#125;_ltdc_dev; </span><br></pre></td></tr></table></figure><p>该结构体用于保存一些RGBLCD重要参数信息，比如LCD面板的长宽、水平后廊和垂直后廊等参数.</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//根据不同的颜色格式,定义帧缓存数组</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> LCD_PIXFORMAT==LCD_PIXFORMAT_ARGB8888||LCD_PIXFORMAT==LCD_PIXFORMAT_RGB888</span></span><br><span class="line">u32 ltdc_lcd_framebuf[<span class="number">1280</span>][<span class="number">800</span>] __attribute__((at(LCD_FRAME_BUF_ADDR)));<span class="comment">//定义最大屏分辨率时,LCD所需的帧缓存数组大小</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line">u16 ltdc_lcd_framebuf[<span class="number">1280</span>][<span class="number">800</span>] __attribute__((at(LCD_FRAME_BUF_ADDR)));<span class="comment">//定义最大屏分辨率时,LCD所需的帧缓存数组大小</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line">u32 *ltdc_framebuf[<span class="number">2</span>];<span class="comment">//LTDC LCD帧缓存数组指针,必须指向对应大小的内存区域</span></span><br></pre></td></tr></table></figure><p>其中，ltdc_lcd_framebuf的大小是LTDC一帧图像的显存大小，STM32F429的LTDC最大可以支持<code>1280*800</code>的RGB屏，该数组根据选择的颜色格式（ARGB8888/RGB565），自动确定数组类型。采用<code>__attribute__</code>关键字，将数组的地址定向到LCD_FRAME_BUF_ADDR，它在ltdc.h里面定义，其值为：0XC0000000，也就是SDRAM的首地址。这样，我们就把ltdc_lcd_framebuf数组定义到了SDRAM的首地址，大小为<code>800*1280*2</code>字节（RGB565格式时）。</p><p>ltdc_framebuf则是LTDC的帧缓存数组指针，LTDC支持2个层，所以数组大小为2 。该指针为32位类型，必须指向对应的数组，才可以正常使用。在实际使用的时候，我们编写代码：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">ltdc_framebuf[<span class="number">0</span>]=(u32*)&amp;ltdc_lcd_framebuf;</span><br></pre></td></tr></table></figure><p>就将LTDC第一层的帧缓存，指向了ltdc_lcd_framebuf数组。往ltdc_lcd_framebuf里面写入不同的数据，就可以修改RGBLCD上面显示的内容。</p><p>画点函数：LTDC_Draw_Point，代码如下：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//读点函数</span></span><br><span class="line"><span class="comment">//x,y:读取点的坐标</span></span><br><span class="line"><span class="comment">//返回值:颜色值</span></span><br><span class="line"><span class="function">u32 <span class="title">LTDC_Read_Point</span><span class="params">(u16 x,u16 y)</span></span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> LCD_PIXFORMAT==LCD_PIXFORMAT_ARGB8888||LCD_PIXFORMAT==LCD_PIXFORMAT_RGB888</span></span><br><span class="line"><span class="keyword">if</span>(lcdltdc.dir)<span class="comment">//横屏</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> *(u32*)((u32)ltdc_framebuf[lcdltdc.activelayer]+lcdltdc.pixsize*(lcdltdc.pwidth*y+x));</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="comment">//竖屏</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> *(u32*)((u32)ltdc_framebuf[lcdltdc.activelayer]+lcdltdc.pixsize*(lcdltdc.pwidth*(lcdltdc.pheight-x)+y)); </span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line"><span class="keyword">if</span>(lcdltdc.dir)<span class="comment">//横屏</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> *(u16*)((u32)ltdc_framebuf[lcdltdc.activelayer]+lcdltdc.pixsize*(lcdltdc.pwidth*y+x));</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="comment">//竖屏</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> *(u16*)((u32)ltdc_framebuf[lcdltdc.activelayer]+lcdltdc.pixsize*(lcdltdc.pwidth*(lcdltdc.pheight-x<span class="number">-1</span>)+y)); </span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> </span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该函数实现往RGBLCD上面画点的功能，根据LCD_PIXFORMAT定义的颜色格式以及横竖屏状态，执行不同的操作。RGBLCD的画点，实际上就是往指定坐标的显存里面写数据，以7寸800*480的屏幕，RGB565格式，竖屏模式为例，画某个点对应到屏幕上面的关系如下所示：</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20211015160003.png" alt="画点与LCD显存对应关系" /></p><p>注意图中的LTDC扫描方向（LTDC在显存ltdc_framebuf里面读取GRAM数据的顺序也是这个方向），是从<strong>上到下，从右到左</strong>，而竖屏的时候，原点在左上角，所以有一个变换过程，经过变换后的画点函数为：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">*(u16*)((u32)ltdc_framebuf[lcdltdc.activelayer]+lcdltdc.pixsize*(lcdltdc.pwidth*(lcdltdc.pheight-x<span class="number">-1</span>)+y))=color; </span><br></pre></td></tr></table></figure><blockquote><p>activelayer代表当前层数编号0/1，pixsize代表每个像素所占字节数</p></blockquote><p>其中ltdc_framebuf，就是层帧缓冲的首地址；lcdltdc.activelayer表示层编号：0/1代表第1/2层；lcdltdc.pixsize表示每个像素的字节数，对于RGB565，它的值为2；lcdltdc.pwidth和lcdltdc.pheight为LCD面板的宽度和高度，lcdltdc.pwidth=800，lcdltdc.pheight=480；x，y就是要写入显存的坐标（也就是显示在LCD上面的坐标）；color为要写入的颜色值。</p><p>LTDC的读点函数：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//读点函数</span></span><br><span class="line"><span class="comment">//x,y:读取点的坐标</span></span><br><span class="line"><span class="comment">//返回值:颜色值</span></span><br><span class="line"><span class="function">u32 <span class="title">LTDC_Read_Point</span><span class="params">(u16 x,u16 y)</span></span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> LCD_PIXFORMAT==LCD_PIXFORMAT_ARGB8888||LCD_PIXFORMAT==LCD_PIXFORMAT_RGB888</span></span><br><span class="line"><span class="keyword">if</span>(lcdltdc.dir)<span class="comment">//横屏</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> *(u32*)((u32)ltdc_framebuf[lcdltdc.activelayer]+lcdltdc.pixsize*(lcdltdc.pwidth*y+x));</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="comment">//竖屏</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> *(u32*)((u32)ltdc_framebuf[lcdltdc.activelayer]+lcdltdc.pixsize*(lcdltdc.pwidth*(lcdltdc.pheight-x)+y)); </span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line"><span class="keyword">if</span>(lcdltdc.dir)<span class="comment">//横屏</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> *(u16*)((u32)ltdc_framebuf[lcdltdc.activelayer]+lcdltdc.pixsize*(lcdltdc.pwidth*y+x));</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="comment">//竖屏</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> *(u16*)((u32)ltdc_framebuf[lcdltdc.activelayer]+lcdltdc.pixsize*(lcdltdc.pwidth*(lcdltdc.pheight-x<span class="number">-1</span>)+y)); </span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> </span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>LTDC单色填充函数：LTDC_Fill，该函数使用了DMA2D操作，使得填充速度大大加快，代码如下：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//LTDC填充矩形,DMA2D填充</span></span><br><span class="line"><span class="comment">//(sx,sy),(ex,ey):填充矩形对角坐标,区域大小为:(ex-sx+1)*(ey-sy+1)   </span></span><br><span class="line"><span class="comment">//color:要填充的颜色</span></span><br><span class="line"><span class="comment">//有时候需要频繁的调用填充函数，所以为了速度，填充函数采用寄存器版本，</span></span><br><span class="line"><span class="comment">//不过下面有对应的库函数版本的代码。</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LTDC_Fill</span><span class="params">(u16 sx,u16 sy,u16 ex,u16 ey,u32 color)</span></span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line">u32 psx,psy,pex,pey;<span class="comment">//以LCD面板为基准的坐标系,不随横竖屏变化而变化</span></span><br><span class="line">u32 timeout=<span class="number">0</span>; </span><br><span class="line">u16 offline;</span><br><span class="line">u32 addr; </span><br><span class="line"><span class="comment">//坐标系转换</span></span><br><span class="line"><span class="keyword">if</span>(lcdltdc.dir)<span class="comment">//横屏</span></span><br><span class="line">&#123;</span><br><span class="line">psx=sx;psy=sy;</span><br><span class="line">pex=ex;pey=ey;</span><br><span class="line">&#125;<span class="keyword">else</span><span class="comment">//竖屏</span></span><br><span class="line">&#123;</span><br><span class="line">psx=sy;psy=lcdltdc.pheight-ex<span class="number">-1</span>;</span><br><span class="line">pex=ey;pey=lcdltdc.pheight-sx<span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line">offline=lcdltdc.pwidth-(pex-psx+<span class="number">1</span>);</span><br><span class="line">addr=((u32)ltdc_framebuf[lcdltdc.activelayer]+lcdltdc.pixsize*(lcdltdc.pwidth*psy+psx));</span><br><span class="line">__HAL_RCC_DMA2D_CLK_ENABLE();<span class="comment">//使能DM2D时钟</span></span><br><span class="line">DMA2D-&gt;CR&amp;=~(DMA2D_CR_START);<span class="comment">//先停止DMA2D</span></span><br><span class="line">DMA2D-&gt;CR=DMA2D_R2M;<span class="comment">//寄存器到存储器模式</span></span><br><span class="line">DMA2D-&gt;OPFCCR=LCD_PIXFORMAT;<span class="comment">//设置颜色格式</span></span><br><span class="line">DMA2D-&gt;OOR=offline;<span class="comment">//设置行偏移 </span></span><br><span class="line"></span><br><span class="line">DMA2D-&gt;OMAR=addr;<span class="comment">//输出存储器地址</span></span><br><span class="line">DMA2D-&gt;NLR=(pey-psy+<span class="number">1</span>)|((pex-psx+<span class="number">1</span>)&lt;&lt;<span class="number">16</span>);<span class="comment">//设定行数寄存器</span></span><br><span class="line">DMA2D-&gt;OCOLR=color;<span class="comment">//设定输出颜色寄存器 </span></span><br><span class="line">DMA2D-&gt;CR|=DMA2D_CR_START;<span class="comment">//启动DMA2D</span></span><br><span class="line"><span class="keyword">while</span>((DMA2D-&gt;ISR&amp;(DMA2D_FLAG_TC))==<span class="number">0</span>)<span class="comment">//等待传输完成</span></span><br><span class="line">&#123;</span><br><span class="line">timeout++;</span><br><span class="line"><span class="keyword">if</span>(timeout&gt;<span class="number">0X1FFFFF</span>)<span class="keyword">break</span>;<span class="comment">//超时退出</span></span><br><span class="line">&#125; </span><br><span class="line">DMA2D-&gt;IFCR|=DMA2D_FLAG_TC;<span class="comment">//清除传输完成标志 </span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>清屏函数：LTDC_Clear，函数代码如下：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//LCD清屏</span></span><br><span class="line"><span class="comment">//color:颜色值</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LTDC_Clear</span><span class="params">(u32 color)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">LTDC_Fill(<span class="number">0</span>,<span class="number">0</span>,lcdltdc.width<span class="number">-1</span>,lcdltdc.height<span class="number">-1</span>,color);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>清屏操作调用LTDC_FIll函数，采用DMA2A完成对LCD的清屏，提高了清屏速度。</p><p>LCD_CLK频率设置函数</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//LTDC时钟(Fdclk)设置函数</span></span><br><span class="line"><span class="comment">//Fvco=Fin*pllsain; </span></span><br><span class="line"><span class="comment">//Fdclk=Fvco/pllsair/2*2^pllsaidivr=Fin*pllsain/pllsair/2*2^pllsaidivr;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//Fvco:VCO频率</span></span><br><span class="line"><span class="comment">//Fin:输入时钟频率一般为1Mhz(来自系统时钟PLLM分频后的时钟,见时钟树图)</span></span><br><span class="line"><span class="comment">//pllsain:SAI时钟倍频系数N,取值范围:50~432.  </span></span><br><span class="line"><span class="comment">//pllsair:SAI时钟的分频系数R,取值范围:2~7</span></span><br><span class="line"><span class="comment">//pllsaidivr:LCD时钟分频系数,取值范围:RCC_PLLSAIDIVR_2/4/8/16,对应分频2~16 </span></span><br><span class="line"><span class="comment">//假设:外部晶振为25M,pllm=25的时候,Fin=1Mhz.</span></span><br><span class="line"><span class="comment">//例如:要得到20M的LTDC时钟,则可以设置:pllsain=400,pllsair=5,pllsaidivr=RCC_PLLSAIDIVR_4</span></span><br><span class="line"><span class="comment">//Fdclk=1*400/5/4=400/20=20Mhz</span></span><br><span class="line"><span class="comment">//返回值:0,成功;1,失败。</span></span><br><span class="line"><span class="function">u8 <span class="title">LTDC_Clk_Set</span><span class="params">(u32 pllsain,u32 pllsair,u32 pllsaidivr)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">RCC_PeriphCLKInitTypeDef PeriphClkIniture;</span><br><span class="line"></span><br><span class="line"><span class="comment">//LTDC输出像素时钟，需要根据自己所使用的LCD数据手册来配置！</span></span><br><span class="line">    PeriphClkIniture.PeriphClockSelection=RCC_PERIPHCLK_LTDC;<span class="comment">//LTDC时钟 </span></span><br><span class="line">PeriphClkIniture.PLLSAI.PLLSAIN=pllsain;    </span><br><span class="line">PeriphClkIniture.PLLSAI.PLLSAIR=pllsair;  </span><br><span class="line">PeriphClkIniture.PLLSAIDivR=pllsaidivr;</span><br><span class="line"><span class="keyword">if</span>(HAL_RCCEx_PeriphCLKConfig(&amp;PeriphClkIniture)==HAL_OK)    <span class="comment">//配置像素时钟</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;   <span class="comment">//成功</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> <span class="number">1</span>;  <span class="comment">//失败    </span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个函数对PLLSAI进行配置，最终控制输出LCD_CLK的频率。</p><p>LTDC层参数设置函数：LTDC_Layer_Parameter_Config，代码如下：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//LTDC,基本参数设置.</span></span><br><span class="line"><span class="comment">//注意:此函数,必须在LTDC_Layer_Window_Config之前设置.</span></span><br><span class="line"><span class="comment">//layerx:层值,0/1.</span></span><br><span class="line"><span class="comment">//bufaddr:层颜色帧缓存起始地址</span></span><br><span class="line"><span class="comment">//pixformat:颜色格式.0,ARGB8888;1,RGB888;2,RGB565;3,ARGB1555;4,ARGB4444;5,L8;6;AL44;7;AL88</span></span><br><span class="line"><span class="comment">//alpha:层颜色Alpha值,0,全透明;255,不透明</span></span><br><span class="line"><span class="comment">//alpha0:默认颜色Alpha值,0,全透明;255,不透明</span></span><br><span class="line"><span class="comment">//bfac1:混合系数1,4(100),恒定的Alpha;6(101),像素Alpha*恒定Alpha</span></span><br><span class="line"><span class="comment">//bfac2:混合系数2,5(101),恒定的Alpha;7(111),像素Alpha*恒定Alpha</span></span><br><span class="line"><span class="comment">//bkcolor:层默认颜色,32位,低24位有效,RGB888格式</span></span><br><span class="line"><span class="comment">//返回值:无</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LTDC_Layer_Parameter_Config</span><span class="params">(u8 layerx,u32 bufaddr,u8 pixformat,u8 alpha,u8 alpha0,u8 bfac1,u8 bfac2,u32 bkcolor)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">LTDC_LayerCfgTypeDef pLayerCfg;</span><br><span class="line"></span><br><span class="line">pLayerCfg.WindowX0=<span class="number">0</span>;                       <span class="comment">//窗口起始X坐标</span></span><br><span class="line">pLayerCfg.WindowY0=<span class="number">0</span>;                       <span class="comment">//窗口起始Y坐标</span></span><br><span class="line">pLayerCfg.WindowX1=lcdltdc.pwidth;          <span class="comment">//窗口终止X坐标</span></span><br><span class="line">pLayerCfg.WindowY1=lcdltdc.pheight;         <span class="comment">//窗口终止Y坐标</span></span><br><span class="line">pLayerCfg.PixelFormat=pixformat;    <span class="comment">//像素格式</span></span><br><span class="line">pLayerCfg.Alpha=alpha;        <span class="comment">//Alpha值设置，0~255,255为完全不透明</span></span><br><span class="line">pLayerCfg.Alpha0=alpha0;        <span class="comment">//默认Alpha值</span></span><br><span class="line">pLayerCfg.BlendingFactor1=(u32)bfac1&lt;&lt;<span class="number">8</span>;    <span class="comment">//设置层混合系数</span></span><br><span class="line">pLayerCfg.BlendingFactor2=(u32)bfac2&lt;&lt;<span class="number">8</span>;<span class="comment">//设置层混合系数</span></span><br><span class="line">pLayerCfg.FBStartAdress=bufaddr;        <span class="comment">//设置层颜色帧缓存起始地址</span></span><br><span class="line">pLayerCfg.ImageWidth=lcdltdc.pwidth;        <span class="comment">//设置颜色帧缓冲区的宽度    </span></span><br><span class="line">pLayerCfg.ImageHeight=lcdltdc.pheight;      <span class="comment">//设置颜色帧缓冲区的高度</span></span><br><span class="line">pLayerCfg.Backcolor.Red=(u8)(bkcolor&amp;<span class="number">0X00FF0000</span>)&gt;&gt;<span class="number">16</span>;   <span class="comment">//背景颜色红色部分</span></span><br><span class="line">pLayerCfg.Backcolor.Green=(u8)(bkcolor&amp;<span class="number">0X0000FF00</span>)&gt;&gt;<span class="number">8</span>;  <span class="comment">//背景颜色绿色部分</span></span><br><span class="line">pLayerCfg.Backcolor.Blue=(u8)bkcolor&amp;<span class="number">0X000000FF</span>;        <span class="comment">//背景颜色蓝色部分</span></span><br><span class="line">HAL_LTDC_ConfigLayer(&amp;LTDC_Handler,&amp;pLayerCfg,layerx);   <span class="comment">//设置所选中的层</span></span><br><span class="line">&#125;  </span><br><span class="line"></span><br></pre></td></tr></table></figure><p>该函数中主要调用 HAL 库函数 HAL_LTDC_ConfigLayer 设置 LTDC 层的基本参数，包括：层帧缓冲区首地址、颜色格式、Alpha 值、混合系数和层默认颜色等。</p><p>LTDC层窗口设置函数：LTDC_Layer_Window_Config，代码如下：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//LTDC,层颜窗口设置,窗口以LCD面板坐标系为基准</span></span><br><span class="line"><span class="comment">//注意:此函数必须在LTDC_Layer_Parameter_Config之后再设置.</span></span><br><span class="line"><span class="comment">//layerx:层值,0/1.</span></span><br><span class="line"><span class="comment">//sx,sy:起始坐标</span></span><br><span class="line"><span class="comment">//width,height:宽度和高度</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LTDC_Layer_Window_Config</span><span class="params">(u8 layerx,u16 sx,u16 sy,u16 width,u16 height)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    HAL_LTDC_SetWindowPosition(&amp;LTDC_Handler,sx,sy,layerx);  <span class="comment">//设置窗口的位置</span></span><br><span class="line">    HAL_LTDC_SetWindowSize(&amp;LTDC_Handler,width,height,layerx);<span class="comment">//设置窗口大小    </span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该函数依次调用 HAL 库 LTDC 窗口位置设置函数 HAL_LTDC_SetWindowPositio 和窗口大小设置函数 HAL_LTDC_SetWindowSizel 来控制 LTDC 在某一层（1/2）上面的开窗操作。一般设置层窗口为整个LCD的分辨率，也就是不进行开窗操作。</p><blockquote><p>注意：此函数必须在LTDC_Layer_Parameter_Config之后在进行设置。另外，当设置的窗口值不等于面板的尺寸，对层GRAM的操作（读/写点函数），也要根据层窗口的宽高来进行修改，否则显示不正常。</p></blockquote><p>LTDC_LCD_ID获取函数：LTDC_PandelID_Read，代码如下：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//读取面板参数</span></span><br><span class="line"><span class="comment">//PG6=R7(M0);PI2=G7(M1);PI7=B7(M2);</span></span><br><span class="line"><span class="comment">//M2:M1:M0</span></span><br><span class="line"><span class="comment">//0 :0 :0//4.3寸480*272 RGB屏,ID=0X4342</span></span><br><span class="line"><span class="comment">//0 :0 :1//7寸800*480 RGB屏,ID=0X7084</span></span><br><span class="line"><span class="comment">//0 :1 :0//7寸1024*600 RGB屏,ID=0X7016</span></span><br><span class="line"><span class="comment">//0 :1 :1//7寸1280*800 RGB屏,ID=0X7018</span></span><br><span class="line"><span class="comment">//1 :0 :0//8寸1024*768 RGB屏,ID=0X8017 </span></span><br><span class="line"></span><br><span class="line"><span class="comment">//返回值:LCD ID:0,非法;其他值,ID;</span></span><br><span class="line"><span class="function">u16 <span class="title">LTDC_PanelID_Read</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">u8 idx=<span class="number">0</span>;</span><br><span class="line">    GPIO_InitTypeDef GPIO_Initure;</span><br><span class="line">    __HAL_RCC_GPIOG_CLK_ENABLE();       <span class="comment">//使能GPIOG时钟</span></span><br><span class="line">__HAL_RCC_GPIOI_CLK_ENABLE();       <span class="comment">//使能GPIOI时钟</span></span><br><span class="line">    </span><br><span class="line">    GPIO_Initure.Pin=GPIO_PIN_6;        <span class="comment">//PG6</span></span><br><span class="line">    GPIO_Initure.Mode=GPIO_MODE_INPUT;  <span class="comment">//输入</span></span><br><span class="line">    GPIO_Initure.Pull=GPIO_PULLUP;      <span class="comment">//上拉</span></span><br><span class="line">    GPIO_Initure.Speed=GPIO_SPEED_HIGH; <span class="comment">//高速</span></span><br><span class="line">    HAL_GPIO_Init(GPIOG,&amp;GPIO_Initure); <span class="comment">//初始化</span></span><br><span class="line">    </span><br><span class="line">    GPIO_Initure.Pin=GPIO_PIN_2|GPIO_PIN_7; <span class="comment">//PI2,7</span></span><br><span class="line">    HAL_GPIO_Init(GPIOI,&amp;GPIO_Initure);     <span class="comment">//初始化</span></span><br><span class="line">    </span><br><span class="line">    idx=(u8)HAL_GPIO_ReadPin(GPIOG,GPIO_PIN_6); <span class="comment">//读取M0</span></span><br><span class="line">    idx|=(u8)HAL_GPIO_ReadPin(GPIOI,GPIO_PIN_2)&lt;&lt;<span class="number">1</span>;<span class="comment">//读取M1</span></span><br><span class="line">    idx|=(u8)HAL_GPIO_ReadPin(GPIOI,GPIO_PIN_7)&lt;&lt;<span class="number">2</span>;<span class="comment">//读取M2</span></span><br><span class="line"><span class="keyword">if</span>(idx==<span class="number">0</span>)<span class="keyword">return</span> <span class="number">0X4342</span>;    <span class="comment">//4.3寸屏,480*272分辨率</span></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(idx==<span class="number">1</span>)<span class="keyword">return</span> <span class="number">0X7084</span>;<span class="comment">//7寸屏,800*480分辨率</span></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(idx==<span class="number">2</span>)<span class="keyword">return</span> <span class="number">0X7016</span>;<span class="comment">//7寸屏,1024*600分辨率</span></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(idx==<span class="number">3</span>)<span class="keyword">return</span> <span class="number">0X7018</span>;<span class="comment">//7寸屏,1280*800分辨率</span></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(idx==<span class="number">4</span>)<span class="keyword">return</span> <span class="number">0X8017</span>; <span class="comment">//8寸屏,1024*768分辨率</span></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>由于RGBLCD屏并没有读的功能，所以，一般情况，外接RGB屏的时候，MCU是无法获取屏幕的任何信息的。但是ALIENTEK在RGBLCD模块上面，利用数据线（R7/G7/B7）做了一个巧妙的设计，可以让MCU读取到RGBLCD模块的ID，从而执行不同的初始化，实现对不同分辨率的RGBLCD模块的兼容。</p><p>LTDC_PanelID_Read函数，就是用这种方法来读取M[2:0]的值，并将结果（转换成屏型号）返回给上一层。</p><p>LTDC初始化函数：LTDC_Init，该函数的简化代码如下：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//LCD初始化函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LTDC_Init</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;   </span><br><span class="line">u16 lcdid=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">lcdid=LTDC_PanelID_Read();<span class="comment">//读取LCD面板ID</span></span><br><span class="line"><span class="keyword">if</span>(lcdid==<span class="number">0X4342</span>)</span><br><span class="line">&#123;</span><br><span class="line">lcdltdc.pwidth=<span class="number">480</span>;    <span class="comment">//面板宽度,单位:像素</span></span><br><span class="line">lcdltdc.pheight=<span class="number">272</span>;    <span class="comment">//面板高度,单位:像素</span></span><br><span class="line">lcdltdc.hsw=<span class="number">1</span>;    <span class="comment">//水平同步宽度</span></span><br><span class="line">lcdltdc.vsw=<span class="number">1</span>;    <span class="comment">//垂直同步宽度</span></span><br><span class="line">lcdltdc.hbp=<span class="number">40</span>;    <span class="comment">//水平后廊</span></span><br><span class="line">lcdltdc.vbp=<span class="number">8</span>;    <span class="comment">//垂直后廊</span></span><br><span class="line">lcdltdc.hfp=<span class="number">5</span>;    <span class="comment">//水平前廊</span></span><br><span class="line">lcdltdc.vfp=<span class="number">8</span>;    <span class="comment">//垂直前廊</span></span><br><span class="line">         LTDC_Clk_Set(<span class="number">288</span>,<span class="number">4</span>,RCC_PLLSAIDIVR_8);   <span class="comment">//设置像素时钟 9Mhz </span></span><br><span class="line"><span class="comment">//其他参数待定.</span></span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(lcdid==<span class="number">0X7084</span>)</span><br><span class="line">&#123;</span><br><span class="line">lcdltdc.pwidth=<span class="number">800</span>;    <span class="comment">//面板宽度,单位:像素</span></span><br><span class="line">lcdltdc.pheight=<span class="number">480</span>;    <span class="comment">//面板高度,单位:像素</span></span><br><span class="line">lcdltdc.hsw=<span class="number">1</span>;    <span class="comment">//水平同步宽度</span></span><br><span class="line">lcdltdc.vsw=<span class="number">1</span>;    <span class="comment">//垂直同步宽度</span></span><br><span class="line">lcdltdc.hbp=<span class="number">46</span>;    <span class="comment">//水平后廊</span></span><br><span class="line">lcdltdc.vbp=<span class="number">23</span>;    <span class="comment">//垂直后廊</span></span><br><span class="line">lcdltdc.hfp=<span class="number">210</span>;    <span class="comment">//水平前廊</span></span><br><span class="line">lcdltdc.vfp=<span class="number">22</span>;    <span class="comment">//垂直前廊</span></span><br><span class="line">        LTDC_Clk_Set(<span class="number">396</span>,<span class="number">3</span>,RCC_PLLSAIDIVR_4); <span class="comment">//设置像素时钟 33M(如果开双显,需要降低DCLK到:18.75Mhz  300/4/4,才会比较好)</span></span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(lcdid==<span class="number">0X7016</span>)</span><br><span class="line">&#123;</span><br><span class="line">lcdltdc.pwidth=<span class="number">1024</span>;<span class="comment">//面板宽度,单位:像素</span></span><br><span class="line">lcdltdc.pheight=<span class="number">600</span>;<span class="comment">//面板高度,单位:像素</span></span><br><span class="line">        lcdltdc.hsw=<span class="number">20</span>;    <span class="comment">//水平同步宽度</span></span><br><span class="line">lcdltdc.vsw=<span class="number">3</span>;    <span class="comment">//垂直同步宽度</span></span><br><span class="line">lcdltdc.hbp=<span class="number">140</span>;    <span class="comment">//水平后廊</span></span><br><span class="line">lcdltdc.vbp=<span class="number">20</span>;    <span class="comment">//垂直后廊</span></span><br><span class="line">lcdltdc.hfp=<span class="number">160</span>;    <span class="comment">//水平前廊</span></span><br><span class="line">lcdltdc.vfp=<span class="number">12</span>;    <span class="comment">//垂直前廊</span></span><br><span class="line">LTDC_Clk_Set(<span class="number">360</span>,<span class="number">2</span>,RCC_PLLSAIDIVR_4);<span class="comment">//设置像素时钟  45Mhz </span></span><br><span class="line"><span class="comment">//其他参数待定.</span></span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(lcdid==<span class="number">0X7018</span>)</span><br><span class="line">&#123;</span><br><span class="line">lcdltdc.pwidth=<span class="number">1280</span>;<span class="comment">//面板宽度,单位:像素</span></span><br><span class="line">lcdltdc.pheight=<span class="number">800</span>;<span class="comment">//面板高度,单位:像素</span></span><br><span class="line"><span class="comment">//其他参数待定.</span></span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(lcdid==<span class="number">0X8017</span>)</span><br><span class="line">&#123;</span><br><span class="line">lcdltdc.pwidth=<span class="number">1024</span>;<span class="comment">//面板宽度,单位:像素</span></span><br><span class="line">lcdltdc.pheight=<span class="number">768</span>;<span class="comment">//面板高度,单位:像素</span></span><br><span class="line"><span class="comment">//其他参数待定.</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">lcddev.width=lcdltdc.pwidth;</span><br><span class="line">lcddev.height=lcdltdc.pheight;</span><br><span class="line">    </span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> LCD_PIXFORMAT==LCD_PIXFORMAT_ARGB8888||LCD_PIXFORMAT==LCD_PIXFORMAT_RGB888 </span></span><br><span class="line">ltdc_framebuf[<span class="number">0</span>]=(u32*)&amp;ltdc_lcd_framebuf;</span><br><span class="line">lcdltdc.pixsize=<span class="number">4</span>;<span class="comment">//每个像素占4个字节</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span> </span></span><br><span class="line">    lcdltdc.pixsize=<span class="number">2</span>;<span class="comment">//每个像素占2个字节</span></span><br><span class="line">ltdc_framebuf[<span class="number">0</span>]=(u32*)&amp;ltdc_lcd_framebuf;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> </span></span><br><span class="line">    <span class="keyword">if</span>(lcdid==<span class="number">0X7084</span>)</span><br><span class="line">    &#123;</span><br><span class="line">       </span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(lcdid==<span class="number">0X4342</span>)</span><br><span class="line">    &#123;</span><br><span class="line">       </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//LTDC配置</span></span><br><span class="line">    LTDC_Handler.Instance=LTDC;</span><br><span class="line">    LTDC_Handler.Init.HSPolarity=LTDC_HSPOLARITY_AL;         <span class="comment">//水平同步极性</span></span><br><span class="line">    LTDC_Handler.Init.VSPolarity=LTDC_VSPOLARITY_AL;         <span class="comment">//垂直同步极性</span></span><br><span class="line">    LTDC_Handler.Init.DEPolarity=LTDC_DEPOLARITY_AL;         <span class="comment">//数据使能极性</span></span><br><span class="line">    LTDC_Handler.Init.PCPolarity=LTDC_PCPOLARITY_IPC;        <span class="comment">//像素时钟极性</span></span><br><span class="line">    LTDC_Handler.Init.HorizontalSync=lcdltdc.hsw<span class="number">-1</span>;          <span class="comment">//水平同步宽度</span></span><br><span class="line">    LTDC_Handler.Init.VerticalSync=lcdltdc.vsw<span class="number">-1</span>;            <span class="comment">//垂直同步宽度</span></span><br><span class="line">    LTDC_Handler.Init.AccumulatedHBP=lcdltdc.hsw+lcdltdc.hbp<span class="number">-1</span>; <span class="comment">//水平同步后沿宽度</span></span><br><span class="line">    LTDC_Handler.Init.AccumulatedVBP=lcdltdc.vsw+lcdltdc.vbp<span class="number">-1</span>; <span class="comment">//垂直同步后沿高度</span></span><br><span class="line">    LTDC_Handler.Init.AccumulatedActiveW=lcdltdc.hsw+lcdltdc.hbp+lcdltdc.pwidth<span class="number">-1</span>;<span class="comment">//有效宽度</span></span><br><span class="line">    LTDC_Handler.Init.AccumulatedActiveH=lcdltdc.vsw+lcdltdc.vbp+lcdltdc.pheight<span class="number">-1</span>;<span class="comment">//有效高度</span></span><br><span class="line">    LTDC_Handler.Init.TotalWidth=lcdltdc.hsw+lcdltdc.hbp+lcdltdc.pwidth+lcdltdc.hfp<span class="number">-1</span>;   <span class="comment">//总宽度</span></span><br><span class="line">    LTDC_Handler.Init.TotalHeigh=lcdltdc.vsw+lcdltdc.vbp+lcdltdc.pheight+lcdltdc.vfp<span class="number">-1</span>;  <span class="comment">//总高度</span></span><br><span class="line">    LTDC_Handler.Init.Backcolor.Red=<span class="number">0</span>;           <span class="comment">//屏幕背景层红色部分</span></span><br><span class="line">    LTDC_Handler.Init.Backcolor.Green=<span class="number">0</span>;         <span class="comment">//屏幕背景层绿色部分</span></span><br><span class="line">    LTDC_Handler.Init.Backcolor.Blue=<span class="number">0</span>;          <span class="comment">//屏幕背景色蓝色部分</span></span><br><span class="line">    HAL_LTDC_Init(&amp;LTDC_Handler);</span><br><span class="line"> </span><br><span class="line"><span class="comment">//层配置</span></span><br><span class="line">LTDC_Layer_Parameter_Config(<span class="number">0</span>,(u32)ltdc_framebuf[<span class="number">0</span>],LCD_PIXFORMAT,<span class="number">255</span>,<span class="number">0</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">0X000000</span>);<span class="comment">//层参数配置</span></span><br><span class="line">LTDC_Layer_Window_Config(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,lcdltdc.pwidth,lcdltdc.pheight);<span class="comment">//层窗口配置,以LCD面板坐标系为基准,不要随便修改!</span></span><br><span class="line"></span><br><span class="line"> LTDC_Display_Dir(<span class="number">0</span>);<span class="comment">//默认竖屏</span></span><br><span class="line">LTDC_Select_Layer(<span class="number">0</span>); <span class="comment">//选择第1层</span></span><br><span class="line">    LCD_LED=<span class="number">1</span>;                 <span class="comment">//点亮背光</span></span><br><span class="line">    LTDC_Clear(<span class="number">0XFFFFFFFF</span>);<span class="comment">//清屏</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>LTDC_Init的初始化步骤，先读取RGBLCD的ID，然后根据不同的RGBLCD型号，执行不同的面板参数初始化，然后调用HAL_LTDC_Init函数来设置RGBLCD的相关参数并使能LTDC，最后配置层参数和层窗口完成对LTDC的初始化。</p><p><code>ltdc.h</code>关键内容：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//LCD LTDC重要参数集</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span>  </span></span><br><span class="line"><span class="class">&#123;</span> </span><br><span class="line">u32 pwidth;<span class="comment">//LCD面板的宽度,固定参数,不随显示方向改变,如果为0,说明没有任何RGB屏接入</span></span><br><span class="line">u32 pheight;<span class="comment">//LCD面板的高度,固定参数,不随显示方向改变</span></span><br><span class="line">u16 hsw;<span class="comment">//水平同步宽度</span></span><br><span class="line">u16 vsw;<span class="comment">//垂直同步宽度</span></span><br><span class="line">u16 hbp;<span class="comment">//水平后廊</span></span><br><span class="line">u16 vbp;<span class="comment">//垂直后廊</span></span><br><span class="line">u16 hfp;<span class="comment">//水平前廊</span></span><br><span class="line">u16 vfp;<span class="comment">//垂直前廊 </span></span><br><span class="line">u8 activelayer;<span class="comment">//当前层编号:0/1</span></span><br><span class="line">u8 dir;<span class="comment">//0,竖屏;1,横屏;</span></span><br><span class="line">u16 width;<span class="comment">//LCD宽度</span></span><br><span class="line">u16 height;<span class="comment">//LCD高度</span></span><br><span class="line">u32 pixsize;<span class="comment">//每个像素所占字节数</span></span><br><span class="line">&#125;_ltdc_dev; </span><br><span class="line"></span><br><span class="line"><span class="keyword">extern</span> _ltdc_dev lcdltdc;            <span class="comment">//管理LCD LTDC参数</span></span><br><span class="line"><span class="keyword">extern</span> LTDC_HandleTypeDef LTDC_Handler;    <span class="comment">//LTDC句柄</span></span><br><span class="line"><span class="keyword">extern</span> DMA2D_HandleTypeDef DMA2D_Handler;   <span class="comment">//DMA2D句柄</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LCD_PIXEL_FORMAT_ARGB8888       0X00    </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LCD_PIXEL_FORMAT_RGB888         0X01    </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LCD_PIXEL_FORMAT_RGB565         0X02       </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LCD_PIXEL_FORMAT_ARGB1555       0X03      </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LCD_PIXEL_FORMAT_ARGB4444       0X04     </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LCD_PIXEL_FORMAT_L8             0X05     </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LCD_PIXEL_FORMAT_AL44           0X06     </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LCD_PIXEL_FORMAT_AL88           0X07      </span></span><br><span class="line"></span><br><span class="line"><span class="comment">///////////////////////////////////////////////////////////////////////</span></span><br><span class="line"><span class="comment">//用户修改配置部分:</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//定义颜色像素格式,一般用RGB565</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LCD_PIXFORMATLCD_PIXEL_FORMAT_RGB565</span></span><br><span class="line"><span class="comment">//定义默认背景层颜色</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LTDC_BACKLAYERCOLOR0X00000000</span></span><br><span class="line"><span class="comment">//LCD帧缓冲区首地址,这里定义在SDRAM里面.</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LCD_FRAME_BUF_ADDR0XC0000000  </span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LTDC_Switch</span><span class="params">(u8 sw)</span></span>;<span class="comment">//LTDC开关</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LTDC_Layer_Switch</span><span class="params">(u8 layerx,u8 sw)</span></span>;<span class="comment">//层开关</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LTDC_Select_Layer</span><span class="params">(u8 layerx)</span></span>;<span class="comment">//层选择</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LTDC_Display_Dir</span><span class="params">(u8 dir)</span></span>;<span class="comment">//显示方向控制</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LTDC_Draw_Point</span><span class="params">(u16 x,u16 y,u32 color)</span></span>;<span class="comment">//画点函数</span></span><br><span class="line"><span class="function">u32 <span class="title">LTDC_Read_Point</span><span class="params">(u16 x,u16 y)</span></span>;<span class="comment">//读点函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LTDC_Fill</span><span class="params">(u16 sx,u16 sy,u16 ex,u16 ey,u32 color)</span></span>;<span class="comment">//矩形单色填充函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LTDC_Color_Fill</span><span class="params">(u16 sx,u16 sy,u16 ex,u16 ey,u16 *color)</span></span>;<span class="comment">//矩形彩色填充函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LTDC_Clear</span><span class="params">(u32 color)</span></span>;<span class="comment">//清屏函数</span></span><br><span class="line"><span class="function">u8 <span class="title">LTDC_Clk_Set</span><span class="params">(u32 pllsain,u32 pllsair,u32 pllsaidivr)</span></span>;<span class="comment">//LTDC时钟配置</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LTDC_Layer_Window_Config</span><span class="params">(u8 layerx,u16 sx,u16 sy,u16 width,u16 height)</span></span>;<span class="comment">//LTDC层窗口设置</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LTDC_Layer_Parameter_Config</span><span class="params">(u8 layerx,u32 bufaddr,u8 pixformat,u8 alpha,u8 alpha0,u8 bfac1,u8 bfac2,u32 bkcolor)</span></span>;<span class="comment">//LTDC基本参数设置</span></span><br><span class="line"><span class="function">u16 <span class="title">LTDC_PanelID_Read</span><span class="params">(<span class="keyword">void</span>)</span></span>;<span class="comment">//LCD ID读取函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LTDC_Init</span><span class="params">(<span class="keyword">void</span>)</span></span>;<span class="comment">//LTDC初始化函数</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> </span></span><br></pre></td></tr></table></figure><blockquote><p>主要定义了__ltdc_dev结构体，用于保存LCD相关参数，另外，LCD_PIXFORMAT定义了颜色格式，我们一般使用 RGB565 格式，LCD_FRAME_BUF_ADDR 定义了帧缓存的首地址，我们定义在 SDRAM 的首地址。</p></blockquote><h2 id="adc实验"><a class="markdownIt-Anchor" href="#adc实验"></a> ADC实验</h2><p>STM32F429xx 系列有 3 个 ADC，这些 ADC 可以独立使用，也可以使用双重/三重模式（提高采样率）。STM32F429 的 ADC 是 12 位逐次逼近型的模拟数字转换器。它有 19 个通道，可测量 16 个外部源、2 个内部源和 Vbat 通道的信号。这些通道的 A/D 转换可以单次、连续、扫描或间断模式执行。ADC 的结果可以左对齐或右对齐方式存储在 16 位数据寄存器中。 模拟看门狗特性允许应用程序检测输入电压是否超出用户定义的高/低阀值。</p><p>STM32F429IGT6 包含有 3 个 ADC。STM32F429 的 ADC 最大的转换速率为 2.4Mhz，也就是转换时间为 0.41us（在 ADCCLK=36M,采样周期为 3 个 ADC 时钟下得到），不要让 ADC 的时钟超过 36M，否则将导致结果准确度下降。</p><p>STM32F429 将 ADC 的转换分为 2 个通道组：规则通道组和注入通道组。**规则通道相当于你正常运行的程序，而注入通道呢，就相当于中断。**在你程序正常执行的时候，中断是可以打断你的执行的。同这个类似，注入通道的转换可以打断规则通道的转换， 在注入通道被转换完成之后，规则通道才得以继续转换。</p><p>STM32F429 其 ADC 的规则通道组最多包含 16 个转换，而注入通道组最多包含 4 个通道。</p><p>STM32F429 的 ADC 在单次转换模式下，只执行一次转换，该模式可以通过 ADC_CR2 寄存器的 ADON 位（只适用于规则通道）启动，也可以通过外部触发启动（适用于规则通道和注入通道），这时 CONT 位为 0。</p><p>以规则通道为例，一旦所选择的通道转换完成，转换结果将被存在 ADC_DR 寄存器中，EOC（转换结束）标志将被置位，如果设置了 EOCIE，则会产生中断。然后 ADC 将停止，直到下次启动。</p><p>**执行规则通道的单次转换，需要用到的ADC寄存器。**ADC控制寄存器（ADC_CR1和ADC_CR2）</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20211122102231.png" alt="ADC_CR1寄存器各位描述" /></p><p>ADC_CR1的SCAN位：用于设置扫描模式，由软件设置和清除，若设置为1，则使用扫描模式，若为0，则关闭扫描模式。在扫描模式下，由ADC_SQRx或ADC_JSQRx寄存器选中的通道被转换。若设置了EOCIE或JEOCIE，只在最后一个通道转换完毕后才会产生EOC或JEOC中断。</p><p>ADC_CR1[25:24]用于设置ADC的分辨率，详细的对应关系如下：</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20211122102947.png" alt="ADC分辨率选择" /></p><blockquote><p>ADC的分辨率指的是模数转换器所能表示的最大数是多少,即ADC的位数,如果ADC是10位ADC,那么分辨率是2的10次方,即1024的分辨率</p></blockquote><p>ADC_CR2的描述如下：</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20211122103408.png" alt="image-20211122103405675" /></p><p>ADON位：用于开关AD转换器。</p><p>CONT位：用于设置是否进行连续转换，使用单次转换，设置为0.</p><p>ALIGN位：用于设置数据对齐，使用右对齐，设置为0。</p><p>EXTEN[1:0]用于规则通道的外部触发时能设置，如图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20211122104338.png" alt="ADC规则通道外部触发时能设置" /></p><p>ADC_CR2的SWSTART位用于开始规则通道的转换，每次转换（单次转换模式下）都需要向该位写1。</p><p>ADC 通用控制寄存器（ADC_CCR），描述如下：</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20211122105719.png" alt="ADC_CCR寄存器" /></p><p>TSVREFE位是内部温度传感器和Vrefint通道使能位。</p><p>ADCPRE[1:0]用于设置ADC输入时钟分频，00~11分别对应2、4、6、8分频，STM32F429的ADC最大工作频率是36MHz，而ADC时钟（ADCCLK）来自APB2，APB2频率一般是90MHz，设置ADCPRE=01，即4分频，这样得到ADCCLK频率为22.5MHz。MULTI[4:0]用于多重ADC模式选择，详细关系如下：</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20211122110336.png" alt="多重ADC模式选择设置" /></p><p>ADC采样时间寄存器（ADC_SMPR1和ADC_SMPR2）,这两个寄存器用于设置通道0~18的采样时间，每个通道占用3个位。ADC_SMPR1的各位描述如下：</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20211122111539.png" alt="ADC_SMPR1寄存器" /></p><p>ADC_SMPR2的各位描述如下：</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20211122111648.png" alt="ADC_SMPR2寄存器" /></p><p>对于每个要转换的通道，采样时间建议尽量长一点，以获得较高的准确度，但是这样会降低ADC的转换速率。ADC的转换时间可以由以下公式计算：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>T</mi><mi>c</mi><mi>o</mi><mi>v</mi><mi>n</mi><mo>=</mo><mi mathvariant="normal">采</mi><mi mathvariant="normal">样</mi><mi mathvariant="normal">时</mi><mi mathvariant="normal">间</mi><mo>+</mo><mn>12</mn><mi mathvariant="normal">个</mi><mi mathvariant="normal">周</mi><mi mathvariant="normal">期</mi></mrow><annotation encoding="application/x-tex">Tcovn = 采样时间+12个周期</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord mathdefault">c</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord cjk_fallback">采</span><span class="mord cjk_fallback">样</span><span class="mord cjk_fallback">时</span><span class="mord cjk_fallback">间</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">2</span><span class="mord cjk_fallback">个</span><span class="mord cjk_fallback">周</span><span class="mord cjk_fallback">期</span></span></span></span></span></p><blockquote><p>Tcovn为总转换时间，采样时间是根据每个通道的SMP位的设置来决定的。例如，当ADCCLK = 22.5MHz的时候，并设置3个周期的采样时间，则得到：Tcovn = 3+12 =15个周期=0.67us。</p><p>一般情况下，如果是软件启动，那么转换时间就是采样周期。</p><p>采样速率是转换时间的倒数</p></blockquote><p>ADC规则序列寄存器（ADC_SQR1~3），共有3个，这几个寄存器的功能都差不多，介绍一下ADC_SQR1，该寄存器的各位描述如图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20211122112447.png" alt="ADC_SQR1寄存器" /></p><p>L[3:0]用于存储规则序列的长度，这里只用到了1个，设置为0。其他的SQ13~16个通道的编号（0-18）。另外两个规则序列寄存器同ADC_SQR1大同小异。注意：单次转换，只有一个通道在规则序列里面，这个序列就是SQ1，至于SQ1里面那个通道，则需要自己设置，通过ADC_SQR3的最低5位（也就是SQ1）设置。</p><p>ADC规则数据寄存器（ADC_DR）。规则序列中的AD转化结果都将被存在这个寄存器里面，而注入通道的转换结果被保存在ADC_JDRx里面。ADC_DR描述如下：</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20211122150844.png" alt="ADC_DR寄存器" /></p><p>该寄存器的数据可以通过 ADC_CR2 的 ALIGN 位设置左对齐还是右对齐。在读取数据的时候要注意。</p><p>ADC状态寄存器（ADC_SR），该寄存器保存了ADC转换时的各种状态。各位描述如下：</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20211122151336.png" alt="ADC_SR" /></p><p>EOC位：判断该位来决定是否此次规则通道的AD转换已完成，若该位为1，则表示转换完成了，就可以从ADC_DR中读取转换结果，否则等待转换完成。</p><h3 id="配置步骤"><a class="markdownIt-Anchor" href="#配置步骤"></a> 配置步骤</h3><p>使用库函数来设置 ADC1 的通道 5 来进行 AD 转换的步骤，这里需要说明一下，使用到的库函数分布在 <code>stm32f4xx_hal_adc.c/stm32f4xx_hal_adc_ex.c</code>文件和<code>stm32f4xx_hal_adc.h/stm32f4xx_hal_adc_ex.h</code> 文件中。下面讲解其详细设置步骤：</p><p>1)开启PA口时钟和ADC1时钟，设置PA5为模拟输入</p><p>STM32F429IGT6的ADC1通道5在PA5上，所以，我们先要使能PORTA的时钟，然后设置PA5为模拟输入。同时把PA5复用为ADC，所以要使能ADC1时钟。</p><blockquote><p>对于IO口复用为ADC要设置模式为模拟输入，而不是复用功能。</p></blockquote><p>使能GPIOA时钟和ADC1时钟都很简单，具体方法为：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">__HAL_RCC_ADC1_CLK_ENABLE(); <span class="comment">//使能 ADC1 时钟</span></span><br><span class="line">__HAL_RCC_GPIOA_CLK_ENABLE(); <span class="comment">//开启 GPIOA 时钟</span></span><br></pre></td></tr></table></figure><p>初始化GPIOA5为模拟输入，关键代码为：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">GPIO_InitTypeDef GPIO_Initure;</span><br><span class="line">GPIO_Initure.Pin=GPIO_PIN_5; <span class="comment">//PA5</span></span><br><span class="line">GPIO_Initure.Mode=GPIO_MODE_ANALOG; <span class="comment">//模拟输入</span></span><br><span class="line">GPIO_Initure.Pull=GPIO_NOPULL; <span class="comment">//不带上下拉</span></span><br><span class="line">HAL_GPIO_Init(GPIOA,&amp;GPIO_Initure);</span><br></pre></td></tr></table></figure><p>ADC 的通道与引脚的对应关系在 STM32F4 的数据手册可以查到，这里使用 ADC1 的通道 5，在数据手册中的表格为：</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20211122153146.png" alt="ADC1通道5对应的引脚查看表" /></p><p>把 ADC1~ADC3 的引脚与通道对应关系列出来， 16 个外部源的对应关系如下表：</p><table><thead><tr><th>通道号</th><th>ADC1</th><th>ADC2</th><th>ADC3</th></tr></thead><tbody><tr><td>通道0</td><td>PA0</td><td>PA0</td><td>PA0</td></tr><tr><td>通道1</td><td>PA1</td><td>PA1</td><td>PA1</td></tr><tr><td>通道2</td><td>PA2</td><td>PA2</td><td>PA2</td></tr><tr><td>通道3</td><td>PA3</td><td>PA3</td><td>PA3</td></tr><tr><td>通道4</td><td>PA4</td><td>PA4</td><td>PF6</td></tr><tr><td>通道5</td><td>PA5</td><td>PA5</td><td>PF7</td></tr><tr><td>通道6</td><td>PA6</td><td>PA6</td><td>PF8</td></tr><tr><td>通道7</td><td>PA7</td><td>PA7</td><td>PF9</td></tr><tr><td>通道8</td><td>PB0</td><td>PB0</td><td>PF10</td></tr><tr><td>通道9</td><td>PB1</td><td>PB1</td><td>PF3</td></tr><tr><td>通道10</td><td>PC0</td><td>PC0</td><td>PC0</td></tr><tr><td>通道11</td><td>PC1</td><td>PC1</td><td>PC1</td></tr><tr><td>通道12</td><td>PC2</td><td>PC2</td><td>PC2</td></tr><tr><td>通道13</td><td>PC3</td><td>PC3</td><td>PC3</td></tr><tr><td>通道14</td><td>PC4</td><td>PC4</td><td>PF4</td></tr><tr><td>通道15</td><td>PC5</td><td>PC5</td><td>PF5</td></tr></tbody></table><p>2)初始化ADC，设置ADC时钟分频系数，分辨率，模式，扫描方式，对齐方式等信息</p><p>在HAL库中，初始化ADC是通过函数<code>HAL_ADC_Init</code>来实现的，该函数声明为：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function">HAL_StatusTypeDef <span class="title">HAL_ADC_Init</span><span class="params">(ADC_HandleTypeDef* hadc)</span></span>;</span><br></pre></td></tr></table></figure><p>该函数只有一个入口参数 hadc，为 ADC_HandleTypeDef 结构体指针类型，结构体定义为：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"> ADC_TypeDef *Instance; <span class="comment">//ADC1/ ADC2/ ADC3</span></span><br><span class="line"> ADC_InitTypeDef Init; <span class="comment">//初始化结构体变量</span></span><br><span class="line"> __IO <span class="keyword">uint32_t</span> NbrOfCurrentConversionRank; <span class="comment">//当前转换序列</span></span><br><span class="line"> DMA_HandleTypeDef *DMA_Handle; <span class="comment">//DMA 方式使用 </span></span><br><span class="line"> HAL_LockTypeDef Lock; </span><br><span class="line"> __IO HAL_ADC_StateTypeDef State; </span><br><span class="line"> __IO <span class="keyword">uint32_t</span> ErrorCode; </span><br><span class="line">&#125;ADC_HandleTypeDef;</span><br></pre></td></tr></table></figure><p>该结构体定义和其他外设比较类似，第二个成员变量Init含义，它是结构体ADC_InitTypeDef类型，结构体ADC_InitTypeDef定义为：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"> <span class="keyword">uint32_t</span> ClockPrescaler;<span class="comment">//分频系数 2/4/6/8 分频 ADC_CLOCK_SYNC_PCLK_DIV4</span></span><br><span class="line"> <span class="keyword">uint32_t</span> Resolution; <span class="comment">//分辨率 12/10/8/6 位：ADC_RESOLUTION_12B</span></span><br><span class="line"> <span class="keyword">uint32_t</span> DataAlign; <span class="comment">//对齐方式：左对齐还是右对齐：ADC_DATAALIGN_RIGHT</span></span><br><span class="line"> <span class="keyword">uint32_t</span> ScanConvMode; <span class="comment">//扫描模式 DISABLE </span></span><br><span class="line"> <span class="keyword">uint32_t</span> EOCSelection; <span class="comment">//EOC 标志是否设置 DISABLE</span></span><br><span class="line"> <span class="keyword">uint32_t</span> ContinuousConvMode;<span class="comment">//开启连续转换模式或者单次转换模式 DISABLE</span></span><br><span class="line"> <span class="keyword">uint32_t</span> DMAContinuousRequests;<span class="comment">//开启 DMA 请求连续模式或者单独模式 DISABLE</span></span><br><span class="line"> <span class="keyword">uint32_t</span> NbrOfConversion; <span class="comment">//规则序列中有多少个转换 1</span></span><br><span class="line"> <span class="keyword">uint32_t</span> DiscontinuousConvMode;<span class="comment">//不连续采样模式 DISABLE</span></span><br><span class="line"> <span class="keyword">uint32_t</span> NbrOfDiscConversion;<span class="comment">//不连续采样通道数 0</span></span><br><span class="line"> <span class="keyword">uint32_t</span> ExternalTrigConv; <span class="comment">//外部触发方式 ADC_SOFTWARE_START</span></span><br><span class="line"> <span class="keyword">uint32_t</span> ExternalTrigConvEdge;<span class="comment">//外部触发边沿</span></span><br><span class="line">&#125;ADC_InitTypeDef;</span><br></pre></td></tr></table></figure><p>和其他外设一样，HAL 库同样提供了 ADC 的 MSP 初始化函数，一般情况下，时钟使能和 GPIO 初始化都会放在 MSP 初始化函数中。函数声明为：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">HAL_ADC_MspInit</span><span class="params">(ADC_HandleTypeDef* hadc)</span></span>;</span><br></pre></td></tr></table></figure><p>4)开启AD转换器</p><p>设置完以上信息后，就开启AD转换器（通过ADC_CR2寄存器控制）</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">HAL_ADC_Start(&amp;ADC1_Handler); <span class="comment">//开启 ADC</span></span><br></pre></td></tr></table></figure><p>5)配置通道，读取通道ADC值。</p><p>设置规则序列1里面的通道，然后启动ADC转换。在转换结束后，读取转换结果值。</p><p>设置规则序列通道以及采样周期的函数是：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function">HAL_StatusTypeDef <span class="title">HAL_ADC_ConfigChannel</span><span class="params">(ADC_HandleTypeDef* hadc, ADC_ChannelConfTypeDef* sConfig)</span></span>;</span><br></pre></td></tr></table></figure><p>该函数有两个入口参数，第一个就是ADC_HandleTypeDef结构体指针类型，第二个入口参数sConfig，它是ADC_ChannelConfTypeDef结构体指针类型，结构体定义如下：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> </span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"> <span class="keyword">uint32_t</span> Channel; <span class="comment">//ADC 通道</span></span><br><span class="line"> <span class="keyword">uint32_t</span> Rank; <span class="comment">//规则通道中的第几个转换</span></span><br><span class="line"> <span class="keyword">uint32_t</span> SamplingTime; <span class="comment">//采样时间</span></span><br><span class="line"> <span class="keyword">uint32_t</span> Offset; <span class="comment">//备用，暂未用到</span></span><br><span class="line">&#125;ADC_ChannelConfTypeDef;</span><br></pre></td></tr></table></figure><p>该结构体有四个成员变量，对于STM32F4只用到前面三个。Channel用来设置ADC通道，Rank用来设置要配置的通道是规则序列中的第几个转换，SamplingTime用来设置采样时间。使用示例：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">ADC1_ChanConf.Channel= ADC_CHANNEL_5; <span class="comment">//通道 5</span></span><br><span class="line">ADC1_ChanConf.Rank=<span class="number">1</span>; <span class="comment">//第 1 个序列，序列 1</span></span><br><span class="line">ADC1_ChanConf.SamplingTime=ADC_SAMPLETIME_480CYCLES; <span class="comment">//采样时间</span></span><br><span class="line">ADC1_ChanConf.Offset=<span class="number">0</span>; </span><br><span class="line">HAL_ADC_ConfigChannel(&amp;ADC1_Handler,&amp;ADC1_ChanConf); <span class="comment">//通道配置</span></span><br></pre></td></tr></table></figure><p>配置好通道并且使能ADC后，接下来就是读取ADC值。这里采取查询方式读取，所以要等待上一次的转换结束。此过程HAL库提供了专用函数HAL_ADC_PollForConversion，函数定义为：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function">HAL_StatusTypeDef <span class="title">HAL_ADC_PollForConversion</span><span class="params">(ADC_HandleTypeDef* hadc, <span class="keyword">uint32_t</span> Timeout)</span></span>;</span><br></pre></td></tr></table></figure><p>等待上一次转换结束后，接下来就是读取ADC值，函数为：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">uint32_t</span> <span class="title">HAL_ADC_GetValue</span><span class="params">(ADC_HandleTypeDef* hadc)</span></span>;</span><br></pre></td></tr></table></figure><blockquote><p>注意：ADC参考电压，阿波罗STM32F429开发板使用的是STM32F429IGT6，该芯片只有Vref+参考电压引脚，Vref+的输入范围为：1.8~VDDA。阿波罗STM32F429开发板通过P5端口，来设置Vref+的参考电压，默认是通过跳线帽将ref+接到3.3V，参考电压就是3.3V。若想设置其他的参考电压，将参考电压接在Vref+上（注意需要共地）。</p></blockquote><p>以上步骤就能正常使用STM32F429的ADC1来执行AD转换操作。</p><h3 id="硬件设计-2"><a class="markdownIt-Anchor" href="#硬件设计-2"></a> 硬件设计</h3><p>用到的硬件资源：1）指示灯DS0，2）LCD模块，3）ADC，4）杜邦线</p><p>ADC属于STM32F429内部资源，实际上只需要设置软件就可以正常工作，但需要在外部连接其端口到被测电压上面。</p><p>因为要连接到其他地方测试电压，所以我们需要 1 跟杜邦线，或者自备的连接线也可以，一头插在多功能端口 P11 的 ADC 插针上（与 PA5 连接），另外一头就接你要测试的电压点（确保该电压不大于 3.3V 即可）。</p><h3 id="软件设计-2"><a class="markdownIt-Anchor" href="#软件设计-2"></a> 软件设计</h3><p>主要看下adc.c文件</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">ADC_HandleTypeDef ADC1_Handler;<span class="comment">//ADC句柄</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//初始化ADC</span></span><br><span class="line"><span class="comment">//ch: ADC_channels </span></span><br><span class="line"><span class="comment">//通道值 0~16取值范围为：ADC_CHANNEL_0~ADC_CHANNEL_16</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MY_ADC_Init</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line">    ADC1_Handler.Instance=ADC1;</span><br><span class="line">    ADC1_Handler.Init.ClockPrescaler=ADC_CLOCK_SYNC_PCLK_DIV4;   <span class="comment">//4分频，ADCCLK=PCLK2/4=90/4=22.5MHZ</span></span><br><span class="line">    ADC1_Handler.Init.Resolution=ADC_RESOLUTION_12B;             <span class="comment">//12位模式</span></span><br><span class="line">    ADC1_Handler.Init.DataAlign=ADC_DATAALIGN_RIGHT;             <span class="comment">//右对齐</span></span><br><span class="line">    ADC1_Handler.Init.ScanConvMode=DISABLE;                      <span class="comment">//非扫描模式</span></span><br><span class="line">    ADC1_Handler.Init.EOCSelection=DISABLE;                      <span class="comment">//关闭EOC中断</span></span><br><span class="line">    ADC1_Handler.Init.ContinuousConvMode=DISABLE;                <span class="comment">//关闭连续转换</span></span><br><span class="line">    ADC1_Handler.Init.NbrOfConversion=<span class="number">1</span>;                         <span class="comment">//1个转换在规则序列中 也就是只转换规则序列1 </span></span><br><span class="line">    ADC1_Handler.Init.DiscontinuousConvMode=DISABLE;             <span class="comment">//禁止不连续采样模式</span></span><br><span class="line">    ADC1_Handler.Init.NbrOfDiscConversion=<span class="number">0</span>;                     <span class="comment">//不连续采样通道数为0</span></span><br><span class="line">    ADC1_Handler.Init.ExternalTrigConv=ADC_SOFTWARE_START;       <span class="comment">//软件触发</span></span><br><span class="line">    ADC1_Handler.Init.ExternalTrigConvEdge=ADC_EXTERNALTRIGCONVEDGE_NONE;<span class="comment">//使用软件触发</span></span><br><span class="line">    ADC1_Handler.Init.DMAContinuousRequests=DISABLE;             <span class="comment">//关闭DMA请求</span></span><br><span class="line">    HAL_ADC_Init(&amp;ADC1_Handler);                                 <span class="comment">//初始化 </span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//ADC底层驱动，引脚配置，时钟使能</span></span><br><span class="line"><span class="comment">//此函数会被HAL_ADC_Init()调用</span></span><br><span class="line"><span class="comment">//hadc:ADC句柄</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">HAL_ADC_MspInit</span><span class="params">(ADC_HandleTypeDef* hadc)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    GPIO_InitTypeDef GPIO_Initure;</span><br><span class="line">    __HAL_RCC_ADC1_CLK_ENABLE();            <span class="comment">//使能ADC1时钟</span></span><br><span class="line">    __HAL_RCC_GPIOA_CLK_ENABLE();<span class="comment">//开启GPIOA时钟</span></span><br><span class="line"></span><br><span class="line">    GPIO_Initure.Pin=GPIO_PIN_5;            <span class="comment">//PA5</span></span><br><span class="line">    GPIO_Initure.Mode=GPIO_MODE_ANALOG;     <span class="comment">//模拟</span></span><br><span class="line">    GPIO_Initure.Pull=GPIO_NOPULL;          <span class="comment">//不带上下拉</span></span><br><span class="line">    HAL_GPIO_Init(GPIOA,&amp;GPIO_Initure);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//获得ADC值</span></span><br><span class="line"><span class="comment">//ch: 通道值 0~16，取值范围为：ADC_CHANNEL_0~ADC_CHANNEL_16</span></span><br><span class="line"><span class="comment">//返回值:转换结果</span></span><br><span class="line"><span class="function">u16 <span class="title">Get_Adc</span><span class="params">(u32 ch)</span>   </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ADC_ChannelConfTypeDef ADC1_ChanConf;</span><br><span class="line">    </span><br><span class="line">    ADC1_ChanConf.Channel=ch;                                   <span class="comment">//通道</span></span><br><span class="line">    ADC1_ChanConf.Rank=<span class="number">1</span>;                                       <span class="comment">//第1个序列，序列1</span></span><br><span class="line">    ADC1_ChanConf.SamplingTime=ADC_SAMPLETIME_480CYCLES;        <span class="comment">//采样时间</span></span><br><span class="line">    ADC1_ChanConf.Offset=<span class="number">0</span>;                 </span><br><span class="line">    HAL_ADC_ConfigChannel(&amp;ADC1_Handler,&amp;ADC1_ChanConf);        <span class="comment">//通道配置</span></span><br><span class="line"></span><br><span class="line">    HAL_ADC_Start(&amp;ADC1_Handler);                               <span class="comment">//开启ADC</span></span><br><span class="line"></span><br><span class="line">    HAL_ADC_PollForConversion(&amp;ADC1_Handler,<span class="number">10</span>);                <span class="comment">//轮询转换</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">return</span> (u16)HAL_ADC_GetValue(&amp;ADC1_Handler);        <span class="comment">//返回最近一次ADC1规则组的转换结果</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//获取指定通道的转换值，取times次,然后平均 </span></span><br><span class="line"><span class="comment">//times:获取次数</span></span><br><span class="line"><span class="comment">//返回值:通道ch的times次转换结果平均值</span></span><br><span class="line"><span class="function">u16 <span class="title">Get_Adc_Average</span><span class="params">(u32 ch,u8 times)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">u32 temp_val=<span class="number">0</span>;</span><br><span class="line">u8 t;</span><br><span class="line"><span class="keyword">for</span>(t=<span class="number">0</span>;t&lt;times;t++)</span><br><span class="line">&#123;</span><br><span class="line">temp_val+=Get_Adc(ch);</span><br><span class="line">delay_ms(<span class="number">5</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> temp_val/times;</span><br><span class="line">&#125; </span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="dac实验"><a class="markdownIt-Anchor" href="#dac实验"></a> DAC实验</h2><p>利用按键（或USMART）控制STM32F429内部DAC1来输出电压，通过ADC1的通道5采集DAC的输出电压，在LCD模块上面显示ADC获取到的电压值以及DAC的设定输出电压值等信息。</p><p>STM32F429的DAC模块（数字/模拟转换模块）是12位数字输入，电压输出型的DAC。DAC可以配置8位或12位模式，也可以与DMA控制器配合使用。DAC工作在12位模式时，数据可以设置成左对齐或右对齐。DAC模块有两个输出通道，每个通道都有单独的转换器。在双DAC模式下，2个通道可以独立地进行转换，也可以同时进行转换并同步的更新两个通道的输出。DAC可以通过引脚输入参考电压Vref+（通ADC共用）以获得更精确的转换结果。</p><p>STM32F429的DAC模块主要特点有：</p><p>① 2 个 DAC 转换器：每个转换器对应 1 个输出通道</p><p>② 8 位或者 12 位单调输出</p><p>③ 12 位模式下数据左对齐或者右对齐</p><p>④ 同步更新功能</p><p>⑤ 噪声波形生成</p><p>⑥ 三角波形生成</p><p>⑦ 双 DAC 通道同时或者分别转换</p><p>⑧ 每个通道都有 DMA 功能</p><p>单个DAC通道的框图如下：</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20211122212812.png" alt="DAC通道模块框图" /></p><p>图中 VDDA 和 VSSA 为 DAC 模块模拟部分的供电，而 Vref+则是 DAC 模块的参考电压。DAC_OUTx 就是 DAC 的输出通道了（对应 PA4 或者 PA5 引脚）。</p><p>由图可以看出，DAC输出是受到DORx寄存器直接控制的，但是不能直接往DORx寄存器写入数据，而是通过DHRx间接的传给DORx寄存器，实现对DAC输出的控制。已知STM32F429的DAC支持8/12位模式，8位模式的时候是固定的右对齐的，而12位模式又可以设置左对齐/右对齐。单DAC通道x，总共有3种情况：</p><p>① 8位数据右对齐：用户将数据写入DAC_DHR8Rx[7:0]位（实际存入DHRx[11:4]位）</p><p>② 12 位数据左对齐：用户将数据写入 DAC_DHR12Lx[15:4]位（实际存入 DHRx[11:0]位）。</p><p>③ 12 位数据右对齐：用户将数据写入 DAC_DHR12Rx[11:0]位（实际存入 DHRx[11:0]位）。</p><p>本次使用的是单DAC通道1，采用12位右对齐格式，所以采用第③种情况。</p><p>如果没有选中硬件触发（寄存器DAC_CR1的TENx位置‘0’），存入寄存器DAC_DHRx的数据会在一个APB1时钟周期后自动传至寄存器DAC_DORx。如果选中硬件触发（寄存器DAC_CR1的TENx位置‘1’），数据传输在出发发生以后3个APB1时钟周期后完成。一旦数据从DAC_DHRx寄存器装入DAC_DORx寄存器，在经过时间T_SETTLING之后，输出即有效，这段时间的长短依电源电压和模拟输出负载的不同会有所变化。从STM32F429IGT6数据手册查到T_SETTLING的典型值为3us，最大是6us。所以DAC的转换速度最快是333K左右。</p><p>转换的时间框图如图（使用硬件触发TEN = 0）:</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20211123095053.png" alt="TEN = 0时DAC模块转换时间框图" /></p><p>当DAC的参考电压为Vref+的时候，DAC的输出电压是线性的从0~Vref+，12位模式下DAC输出电压与Vref+以及DORx的计算公式如下：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>D</mi><mi>A</mi><mi>C</mi><mi>x</mi><mi mathvariant="normal">输</mi><mi mathvariant="normal">出</mi><mi mathvariant="normal">电</mi><mi mathvariant="normal">压</mi><mo>=</mo><mi>v</mi><mi>r</mi><mi>e</mi><mi>f</mi><mo>∗</mo><mo stretchy="false">(</mo><mi>D</mi><mi>O</mi><mi>R</mi><mi>x</mi><mi mathvariant="normal">/</mi><mn>4095</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">DACx输出电压 = vref*(DORx/4095)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault">x</span><span class="mord cjk_fallback">输</span><span class="mord cjk_fallback">出</span><span class="mord cjk_fallback">电</span><span class="mord cjk_fallback">压</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault">x</span><span class="mord">/</span><span class="mord">4</span><span class="mord">0</span><span class="mord">9</span><span class="mord">5</span><span class="mclose">)</span></span></span></span></span></p><h3 id="寄存器介绍"><a class="markdownIt-Anchor" href="#寄存器介绍"></a> 寄存器介绍</h3><p>DAC控制寄存器DAC_CR，描述如下：</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20211123095957.png" alt="DAC_CR" /></p><p>DAC_CR的低16位用于控制通道1，而高16位用于控制通道2，低8位比较重要。</p><p>DAC通道1使能位（EN1），该位用来控制DAC通道1使能的。</p><p>关闭DAC通道1输出缓存控制位（BOFF1），这里STM32F429的DAC输出缓存做的不好，如果使能的话，虽然输出能力强一点，但是输出没法到0，这是个很严重的问题。</p><p>DAC通道1触发使能位（TEN1），该位用来控制是否使用触发。DAC通道1触发选择位（TSEL1[2:0]）。DAC 通道 1 噪声/三角波生成使能位（WAVE1[1:0]），DAC 通道 1 屏蔽/复制选择器（MAMP[3:0]），这些位仅在使用到波形发生器的时候使用。DAC通道1DMA使能位（DMAEN1）。</p><p>在DAC_CR设置好之后，DAC就可以正常工作了，仅需再设置DAC的数据保持寄存器的值，就可以在DAC输出通道得到想要的电压（对应IO口设置为模拟输入）。采用的是DAC通道1的12位右对齐数据保持寄存器：DAC_DHR12R1，该寄存器描述如下：</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20211123103815.png" alt="" /></p><p>该寄存器用来设置DAC输出，通过写入12位数据到该寄存器，就可以在DAC输出通道1（PA4）得到所要的结果。</p><p>使用DAC模块的通道1来输出模拟电压。用的库函数及相关定义分布在文件<code>stm32f4xx_hal_dac.c</code>以及头文件<code>stm32f4xx_hal_dac.h</code>中。</p><h3 id="实现步骤"><a class="markdownIt-Anchor" href="#实现步骤"></a> 实现步骤</h3><p>1）开启DAC和PA口时钟，设置PA4为模拟输入</p><p>STM32F429的DAC通道1是接在PA4上的，所以，我们先要使能GPIOA的时钟，然后设置PA4为模拟输入。</p><blockquote><p>注意：虽然DAC引脚设置为输入，但是STM32F4内部会连接在DAC模拟输出上。</p></blockquote><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">__HAL_RCC_DAC_CLK_ENABLE(); <span class="comment">//使能 DAC 时钟</span></span><br><span class="line">__HAL_RCC_GPIOA_CLK_ENABLE(); <span class="comment">//开启 GPIOA 时钟</span></span><br><span class="line">GPIO_Initure.Pin=GPIO_PIN_4; <span class="comment">//PA4</span></span><br><span class="line">GPIO_Initure.Mode=GPIO_MODE_ANALOG; <span class="comment">//模拟</span></span><br><span class="line">GPIO_Initure.Pull=GPIO_NOPULL; <span class="comment">//不带上下拉</span></span><br><span class="line">HAL_GPIO_Init(GPIOA,&amp;GPIO_Initure);</span><br></pre></td></tr></table></figure><p>对于DAC通道与引脚对应关系，在STM32F4的数据手册引脚表上有列出，如下图：</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20211123104659.png" alt="DAC通道引脚对应关系" /></p><p>2）初始化DAC，设置DAC的工作模式。</p><p>HAL库中提供了一个DAC初始化函数HAL_DAC_Init，该声明如下：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function">HAL_StatusTypeDef <span class="title">HAL_DAC_Init</span><span class="params">(DAC_HandleTypeDef* hdac)</span></span>;</span><br></pre></td></tr></table></figure><p>该函数并没有设置任何DAC相关寄存器，也就是说没有对DAC进行任何配置，它只是HAL库提供用来在软件上初始化DAC，也就是说，为后面的HAL库操作DAC做好准备。它有一个很重要的作用就是在函数内部会调用DAC的MSP初始化函数HAL_DAC_MspInit，该函数声明如下：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">HAL_DAC_MspInit</span><span class="params">(DAC_HandleTypeDef* hdac)</span></span>;</span><br></pre></td></tr></table></figure><p>一般情况下，步骤1中的与MCU相关的时钟使能和IO口配置都放在该函数中实现。</p><p>HAL库提供了一个很重要的DAC配置函数HAL_DAC_ConfigChannel，该函数用来配置DAC通道的触发类型以及输出缓冲。该函数声明如下：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function">HAL_StatusTypeDef <span class="title">HAL_DAC_ConfigChannel</span><span class="params">(DAC_HandleTypeDef* hdac, DAC_ChannelConfTypeDef* sConfig, <span class="keyword">uint32_t</span> Channel)</span></span>;</span><br></pre></td></tr></table></figure><p>第一个入口参数为DAC初始化句柄，和HAL_DAC_Init保存一致即可。第三个入口参数Channel用来配置DAC通道，例如使用PA4，也就是DAC通道1，配置值为DAC_CHANNEL_1即可。</p><p>第二个入口参数sConfig，该参数是DAC_ChannelConfTypeDef结构体指针类型，结构体DAC_ChannelConfTypeDef定义如下：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"> <span class="keyword">uint32_t</span> DAC_Trigger; <span class="comment">// DAC 触发类型</span></span><br><span class="line"> <span class="keyword">uint32_t</span> DAC_OutputBuffer; <span class="comment">//输出缓冲</span></span><br><span class="line">&#125;DAC_ChannelConfTypeDef;</span><br></pre></td></tr></table></figure><p>成员变量DAC_Trigger用来设置DAC触发类型，DAC_OutBuffer用来设置输出缓冲，DAC初始化配置实例如下：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">DAC_HandleTypeDef DAC1_Handler;</span><br><span class="line">DAC_ChannelConfTypeDef DACCH1_Config;</span><br><span class="line">DAC1_Handler.Instance=DAC;</span><br><span class="line">HAL_DAC_Init(&amp;DAC1_Handler); <span class="comment">//初始化 DAC</span></span><br><span class="line"> </span><br><span class="line">DACCH1_Config.DAC_Trigger=DAC_TRIGGER_NONE; <span class="comment">//不使用触发功能</span></span><br><span class="line">DACCH1_Config.DAC_OutputBuffer=DAC_OUTPUTBUFFER_DISABLE; </span><br><span class="line">HAL_DAC_ConfigChannel(&amp;DAC1_Handler,&amp;DACCH1_Config,DAC_CHANNEL_1);</span><br></pre></td></tr></table></figure><p>3）使能DAC转换通道</p><p>初始化 DAC 之后，要使能 DAC 转换通道，HAL 库函数是：</p><p><code>HAL_StatusTypeDef HAL_DAC_Start(DAC_HandleTypeDef* hdac, uint32_t Channel);</code></p><p>该函数非常简单，第一个参数是 DAC 句柄，第二个用来设置 DAC 通道。</p><p>4）shezhiDAC的输出值</p><p>以上三个步骤后，DAC就可以开始工作，使用12位右对齐数据格式，可以在DAC输出引脚（PA4）得到不同的电压值，HAL库函数为：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function">HAL_StatusTypeDef <span class="title">HAL_DAC_SetValue</span><span class="params">(DAC_HandleTypeDef* hdac, <span class="keyword">uint32_t</span> Channel, <span class="keyword">uint32_t</span> Alignment, <span class="keyword">uint32_t</span> Data)</span></span>;</span><br></pre></td></tr></table></figure><p>这是配置DAC通道输出值，同时通过第三个入口参数设置对齐方式。采用的是3.3V的参考电压，即Vref+连接VDDA。</p><p>通过以上步骤就可以正常使用STM32F4的DAC通道1来输出不同的模拟电压。</p><h3 id="硬件设计-3"><a class="markdownIt-Anchor" href="#硬件设计-3"></a> 硬件设计</h3><p>硬件资源：</p><p>1）指示灯DS0，2）KEY_UP和KEY1按键，3）串口，4）LCD模块，5）ADC，6）DAC</p><p>使用DAC通道1输出模拟电压，然后通过ADC1的通道5对该输出电压进行读取，并显示在LCD模块上面，DAC的输出电压，通过按键（或USMART）进行设置。用到ADC采集DAC的输出电压，需要在硬件上把它们短接起来。P11是多功能端口，只需要通过跳线帽短接P11的ADC和DAC，就可以进行实验。</p><h3 id="软件设计-3"><a class="markdownIt-Anchor" href="#软件设计-3"></a> 软件设计</h3><p>在函数中主要是添加了dac支持的相关文件<code>stm32f4xx_hal_dac.c</code>以及包含头文件<code>stm32fxx_hal_dac.h</code>。并且在HARDWARE分组下新建dac.c源文件以及包含对应的文件dac.h。</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">DAC_HandleTypeDef DAC1_Handler;<span class="comment">//DAC句柄</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//初始化DAC</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DAC1_Init</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    DAC_ChannelConfTypeDef DACCH1_Config;</span><br><span class="line">    </span><br><span class="line">    DAC1_Handler.Instance=DAC;</span><br><span class="line">    HAL_DAC_Init(&amp;DAC1_Handler);                 <span class="comment">//初始化DAC</span></span><br><span class="line">    </span><br><span class="line">    DACCH1_Config.DAC_Trigger=DAC_TRIGGER_NONE;             <span class="comment">//不使用触发功能</span></span><br><span class="line">    DACCH1_Config.DAC_OutputBuffer=DAC_OUTPUTBUFFER_DISABLE;<span class="comment">//DAC1输出缓冲关闭</span></span><br><span class="line">    HAL_DAC_ConfigChannel(&amp;DAC1_Handler,&amp;DACCH1_Config,DAC_CHANNEL_1);<span class="comment">//DAC通道1配置</span></span><br><span class="line">    </span><br><span class="line">    HAL_DAC_Start(&amp;DAC1_Handler,DAC_CHANNEL_1);  <span class="comment">//开启DAC通道1</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//DAC底层驱动，时钟配置，引脚 配置</span></span><br><span class="line"><span class="comment">//此函数会被HAL_DAC_Init()调用</span></span><br><span class="line"><span class="comment">//hdac:DAC句柄</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">HAL_DAC_MspInit</span><span class="params">(DAC_HandleTypeDef* hdac)</span></span></span><br><span class="line"><span class="function"></span>&#123;      </span><br><span class="line">    GPIO_InitTypeDef GPIO_Initure;</span><br><span class="line">    __HAL_RCC_DAC_CLK_ENABLE();             <span class="comment">//使能DAC时钟</span></span><br><span class="line">    __HAL_RCC_GPIOA_CLK_ENABLE();<span class="comment">//开启GPIOA时钟</span></span><br><span class="line"></span><br><span class="line">    GPIO_Initure.Pin=GPIO_PIN_4;            <span class="comment">//PA4</span></span><br><span class="line">    GPIO_Initure.Mode=GPIO_MODE_ANALOG;     <span class="comment">//模拟</span></span><br><span class="line">    GPIO_Initure.Pull=GPIO_NOPULL;          <span class="comment">//不带上下拉</span></span><br><span class="line">    HAL_GPIO_Init(GPIOA,&amp;GPIO_Initure);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//设置通道1输出电压</span></span><br><span class="line"><span class="comment">//vol:0~3300,代表0~3.3V</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DAC1_Set_Vol</span><span class="params">(u16 vol)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">double</span> temp=vol;</span><br><span class="line">temp/=<span class="number">1000</span>;</span><br><span class="line">temp=temp*<span class="number">4096</span>/<span class="number">3.3</span>;</span><br><span class="line">    HAL_DAC_SetValue(&amp;DAC1_Handler,DAC_CHANNEL_1,DAC_ALIGN_12B_R,temp);<span class="comment">//12位右对齐数据格式设置DAC值</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>以上代码就3个函数，Dac_Init函数用于初始化DAC通道1，并开启DAC通道。函数HAL_DAC_MspInit是DAC的MSP初始化回调函数，内部实现的是时钟使能和IO口配置，和Dac_Init配合使用来初始化整个DAC通道。经过初始化之后，可以正常使用DAC通道1。第三个函数Dac_Set_Vol，用于设置DAC通道1的输出电压，实际就是将电压值转化为DAC输入值。</p><p>主函数代码如下：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    u16 adcx;</span><br><span class="line"><span class="keyword">float</span> temp;</span><br><span class="line"> u8 t=<span class="number">0</span>; </span><br><span class="line">u16 dacval=<span class="number">0</span>;</span><br><span class="line">u8 key;</span><br><span class="line">    HAL_Init();                     <span class="comment">//初始化HAL库   </span></span><br><span class="line">    Stm32_Clock_Init(<span class="number">360</span>,<span class="number">25</span>,<span class="number">2</span>,<span class="number">8</span>);   <span class="comment">//设置时钟,180Mhz</span></span><br><span class="line">    delay_init(<span class="number">180</span>);                <span class="comment">//初始化延时函数</span></span><br><span class="line">    uart_init(<span class="number">115200</span>);              <span class="comment">//初始化USART</span></span><br><span class="line">    usmart_dev.init(<span class="number">90</span>);     <span class="comment">//初始化USMART</span></span><br><span class="line">    LED_Init();                     <span class="comment">//初始化LED </span></span><br><span class="line">    KEY_Init();                     <span class="comment">//初始化按键</span></span><br><span class="line">    SDRAM_Init();                   <span class="comment">//初始化SDRAM</span></span><br><span class="line">    LCD_Init();                     <span class="comment">//初始化LCD</span></span><br><span class="line">    MY_ADC_Init();                  <span class="comment">//初始化ADC1</span></span><br><span class="line">    DAC1_Init();                    <span class="comment">//初始化DAC1</span></span><br><span class="line">    </span><br><span class="line">POINT_COLOR=RED; </span><br><span class="line">LCD_ShowString(<span class="number">30</span>,<span class="number">50</span>,<span class="number">200</span>,<span class="number">16</span>,<span class="number">16</span>,<span class="string">&quot;Apollo STM32F4/F7&quot;</span>);</span><br><span class="line">LCD_ShowString(<span class="number">30</span>,<span class="number">70</span>,<span class="number">200</span>,<span class="number">16</span>,<span class="number">16</span>,<span class="string">&quot;DAC TEST&quot;</span>);</span><br><span class="line">LCD_ShowString(<span class="number">30</span>,<span class="number">90</span>,<span class="number">200</span>,<span class="number">16</span>,<span class="number">16</span>,<span class="string">&quot;ATOM@ALIENTEK&quot;</span>);</span><br><span class="line">LCD_ShowString(<span class="number">30</span>,<span class="number">110</span>,<span class="number">200</span>,<span class="number">16</span>,<span class="number">16</span>,<span class="string">&quot;2016/1/24&quot;</span>); </span><br><span class="line">LCD_ShowString(<span class="number">30</span>,<span class="number">130</span>,<span class="number">200</span>,<span class="number">16</span>,<span class="number">16</span>,<span class="string">&quot;WK_UP:+  KEY1:-&quot;</span>); </span><br><span class="line">POINT_COLOR=BLUE;<span class="comment">//设置字体为蓝色       </span></span><br><span class="line">LCD_ShowString(<span class="number">30</span>,<span class="number">150</span>,<span class="number">200</span>,<span class="number">16</span>,<span class="number">16</span>,<span class="string">&quot;DAC VAL:&quot;</span>);      </span><br><span class="line">LCD_ShowString(<span class="number">30</span>,<span class="number">170</span>,<span class="number">200</span>,<span class="number">16</span>,<span class="number">16</span>,<span class="string">&quot;DAC VOL:0.000V&quot;</span>);      </span><br><span class="line">LCD_ShowString(<span class="number">30</span>,<span class="number">190</span>,<span class="number">200</span>,<span class="number">16</span>,<span class="number">16</span>,<span class="string">&quot;ADC VOL:0.000V&quot;</span>); </span><br><span class="line">    </span><br><span class="line">    HAL_DAC_SetValue(&amp;DAC1_Handler,DAC_CHANNEL_1,DAC_ALIGN_12B_R,<span class="number">0</span>);<span class="comment">//初始值为0 </span></span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">t++;</span><br><span class="line">key=KEY_Scan(<span class="number">0</span>);  </span><br><span class="line"><span class="keyword">if</span>(key==WKUP_PRES)</span><br><span class="line">&#123; </span><br><span class="line"><span class="keyword">if</span>(dacval&lt;<span class="number">4000</span>)dacval+=<span class="number">200</span>;</span><br><span class="line">            HAL_DAC_SetValue(&amp;DAC1_Handler,DAC_CHANNEL_1,DAC_ALIGN_12B_R,dacval);<span class="comment">//设置DAC值</span></span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(key==<span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(dacval&gt;<span class="number">200</span>)dacval-=<span class="number">200</span>;</span><br><span class="line"><span class="keyword">else</span> dacval=<span class="number">0</span>;</span><br><span class="line">            HAL_DAC_SetValue(&amp;DAC1_Handler,DAC_CHANNEL_1,DAC_ALIGN_12B_R,dacval);<span class="comment">//设置DAC值</span></span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">if</span>(t==<span class="number">10</span>||key==KEY1_PRES||key==WKUP_PRES)     <span class="comment">//WKUP/KEY1按下了,或者定时时间到了</span></span><br><span class="line">&#123;  </span><br><span class="line">            adcx=HAL_DAC_GetValue(&amp;DAC1_Handler,DAC_CHANNEL_1);<span class="comment">//读取前面设置DAC的值</span></span><br><span class="line">LCD_ShowxNum(<span class="number">94</span>,<span class="number">150</span>,adcx,<span class="number">4</span>,<span class="number">16</span>,<span class="number">0</span>);         <span class="comment">//显示DAC寄存器值</span></span><br><span class="line">temp=(<span class="keyword">float</span>)adcx*(<span class="number">3.3</span>/<span class="number">4096</span>);    <span class="comment">//得到DAC电压值</span></span><br><span class="line">adcx=temp;</span><br><span class="line"> LCD_ShowxNum(<span class="number">94</span>,<span class="number">170</span>,temp,<span class="number">1</span>,<span class="number">16</span>,<span class="number">0</span>);         <span class="comment">//显示电压值整数部分</span></span><br><span class="line"> temp-=adcx;</span><br><span class="line">temp*=<span class="number">1000</span>;</span><br><span class="line">LCD_ShowxNum(<span class="number">110</span>,<span class="number">170</span>,temp,<span class="number">3</span>,<span class="number">16</span>,<span class="number">0X80</span>);     <span class="comment">//显示电压值的小数部分</span></span><br><span class="line"> adcx=Get_Adc_Average(ADC_CHANNEL_5,<span class="number">10</span>);     <span class="comment">//得到ADC转换值  </span></span><br><span class="line">temp=(<span class="keyword">float</span>)adcx*(<span class="number">3.3</span>/<span class="number">4096</span>);    <span class="comment">//得到ADC电压值</span></span><br><span class="line">adcx=temp;</span><br><span class="line"> LCD_ShowxNum(<span class="number">94</span>,<span class="number">190</span>,temp,<span class="number">1</span>,<span class="number">16</span>,<span class="number">0</span>);         <span class="comment">//显示电压值整数部分</span></span><br><span class="line"> temp-=adcx;</span><br><span class="line">temp*=<span class="number">1000</span>;</span><br><span class="line">LCD_ShowxNum(<span class="number">110</span>,<span class="number">190</span>,temp,<span class="number">3</span>,<span class="number">16</span>,<span class="number">0X80</span>);     <span class="comment">//显示电压值的小数部分</span></span><br><span class="line">LED0=!LED0;   </span><br><span class="line">t=<span class="number">0</span>;</span><br><span class="line">&#125;    </span><br><span class="line">delay_ms(<span class="number">10</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>首先需要对用到的模块进行初始化，然后显示一些提示信息。通过KEY_UP（WKUP按键）和KEY1（上下按键）来实现对DAC输出的幅值控制。按下KEY_UP增加，按KEY1减少。同时在LCD上面显示DHR12R1寄存器的值、DAC设计输出电压以及ADC采集到的DAC输出电压。</p><h2 id="dma实验"><a class="markdownIt-Anchor" href="#dma实验"></a> DMA实验</h2><p>DMA全称为：Direct Memory Access，即直接存储器访问。DMA传输方式无需CPU直接控制传输，也没有中断处理方式的保留现场和回复现场的过程，通过硬件为RAM与I/O设备开辟一条直接传送数据的道路，能使CPU的效率大为提高。</p><p>STM32F429最多有2个DMA控制器（DMA1和DMA2），共16个数据流（每个控制器8个），每一个DMA控制器都用于管理一个或多个外设的存储访问请求。每个DMA控制器都用于管理一个或多个外设的存储器访问请求。每个数据流总共可以有多达8个通道（或称请求）。每个数据流通道都有一个仲裁器，用于处理DMA请求间的优先级。</p><p>STM32F429的DMA有以下一些特性：</p><ul><li>双AHB主总线架构，一个用于存储器访问，另一个用于外设访问</li><li>仅支持32位访问的AHB从编程接口</li><li>每个DMA控制器有8个数据流，每个数据流有多达8个通道（或称请求）</li><li>每个数据流有单独的四级32位先进先出存储器缓冲区（FIFO），可用于FIFO模式或直接模式。</li><li>通过硬件可以将每个数据流配置为：1. 支持外设到存储器、存储器到外设和存储器传输的常规通道 2. 支持在存储器双方缓冲的双缓冲区通道</li><li>8个数据流中的每一个都连接到专用硬件DMA通道（请求）</li><li>DMA数据流请求之间的优先级可用软件编程（4个级别：非常高、高、中、低），在软件优先级相同的情况下可以通过硬件决定优先级（例如：请求0的优先级高于请求1）</li><li>每个数据流也支持通过软件触发存储器到存储器的传输（仅限DMA2控制器）</li><li>可供每个数据流选择的通道请求多达8个。此选择可由软件配置，允许几个外设启动DMA请求。</li><li>要传输的数据项的数目可以由DMA控制器或外设管理：1. DMA流控制器：要传输的数据项是1到65535，可用软件编程 2. 外设流控制器：要传输的数据项的数目未知并由源或目标外设控制，这些外设通过硬件发出传输结束的信号</li><li>独立的源和目标传输宽度（字节、半字、字）：源和目标的数据宽度不相等时，DMA自动封装/解封必要的传输数据来优化带宽。这个特性尽在FIFO模式下可用</li><li>对源和目标的增量或非增量寻址</li><li>支持4个、8个和16个节拍的增量突发传输。突发增量的大小可由软件配置，通常等于外设FIFO大小的一半。</li><li>每个数据流都支持循环缓冲区管理</li><li>5个事件标志（DMA半传输、DMA传输完成、DMA传输错误、DMA FIFO错误、直接模式错误），进行逻辑或运算，从而产生每个数据流的单个中断请求。</li></ul><p>STM32F429的DMA控制器框图如下：</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20211123173855.png" alt="DMA控制器框图" /></p><p>DMA控制器执行直接存储器传输：因为采用AHB主总线，它可以控制AHB总线矩阵来启动AHB事务。可执行以下事务：</p><p>1.外设到存储器的传输</p><p>2.存储器到外设的传输</p><p>3.存储器到存储器的传输</p><blockquote><p>注意：存储器到存储器需要外设接口可以访问存储器，而仅DMA2的外设接口可以访问存储器，所以仅DMA2控制器支持存储器到存储器的传输，DMA1不支持</p></blockquote><p>数据流的多通道选择，是通过DMA_SxCR寄存器控制的，如图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20211123175536.png" alt="DMA数据流通道选择" /></p><p>DMA_SxCR 控制数据流到底使用哪一个通道，每个数据流有 8 个通道可供选择，每次只能选择其中一个通道进行 DMA 传输。DMA2的各数据流通道映射表，如下表：</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20211123214807.png" alt="DMA2各数据流通道映射表" /></p><p>列出了DMA2所有可能的选择情况，总共64种组合，比如要实现串口1的DMA发送，即USART1_TX，就必须算则DMA2的数据流7，通道4，来进行DMA传输。</p><h3 id="寄存器介绍-2"><a class="markdownIt-Anchor" href="#寄存器介绍-2"></a> 寄存器介绍</h3><p>DMA中断状态寄存器，该寄存器总共有2个：DMA_LISR和DMA_HISR，每个寄存器管理4个数据流（总共8个），DMA_LISR寄存器用于管理数据流0~3，而DMA_HISR用于管理数据流4-7。这两个寄存器各位描述都完全一模一样，只是管理的数据流不一样。</p><p>DMA_LISR（低中断状态寄存器）寄存器描述如下：</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20211124093322.png" alt="DMA_LISR寄存器各位描述" /></p><p>如果开启了DMA_LISR种这些对应的中断，则在达到条件后就会跳到终端服务函数里面去，即使没开启，也可以通过查询这些位来获得当前DMA传输的状态。常用的是TCIFx位，即数据流x的DMA传输完成与否标志。注意此寄存器为只读寄存器，所以在这些位被置位之后，只能通过其他的操作来清除。DMA_HISR寄存器各位描述与DMA_LISR寄存器各位描述完全一样。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20211124101051.png" alt="DMA_HISR（高中断状态寄存器）寄存器" /></p><p>DMA中断标志清除寄存器，该寄存器同样有2个：DMA_LIFCR和DMA_HIFCR，同样是每个寄存器控制4个数据流，DMA_LIFCR寄存器用于管理数据流0~3，而DMA_HIFCR用于管理数据流4-7。两个寄存器各位描述都完全一模一样，只是管理的数据流不一样。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20211124101509.png" alt="DMA_LIFCR（低中断标志清零寄存器）寄存器" /></p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20211124101627.png" alt="DMA_HIFCR高中断标志清零寄存器" /></p><p>DMA_LIFCR的各位就是用来清除DMA_LISR的对应位的，通过写1清除。在DMA_LISR被置位后，必须通过向该寄存器对应的位写入1来清除。DMA_HIFCR的使用同DMA_LIFCR使用类似。</p><p>DMA数据流x配置寄存器（DMA_SxCR）（x=0~7，下同）。该寄存器控制着DMA的很多相关信息，包括数据宽度、外设及存储器的宽度、优先级、增量模式、传输方向、中断允许、使能等都是通过该寄存器来设置的。所以DMA_SxCR是DMA传输的核心控制寄存器。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20211124105001.png" alt="DMA数据流x配置寄存器" /></p><p>DMA数据流x数据项数寄存器（DMA_SxNDTR）。这个寄存器控制DMA数据流x的每次传输所要的数据量。其设置范围为0-65535。并且该寄存器的值会随着传输的进行而减少，当该寄存器的值为0的时候就代表此次数据传输就已经全部发送完成了。所以可以通过这个寄存器的值来知道当前DMA传输的进度。需要注意的是，这是数据项数目，而不是指的是字节数。比如设置数据位宽为16位，那么传输一次（一个项）就是2个字节。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20211124105448.png" alt="DMA数据流x数据项数寄存器" /></p><p>DMA数据流x的外设地址寄存器（DMA_SxPAR）。该寄存器用来存储STM32F429外设的地址。比如使用串口1，那么该寄存器必须写入0x40011004（其实就是&amp;USART1_DR）.若使用其他外设，就修改成相应外设的地址。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20211124110253.png" alt="DMA数据流x的外设地址寄存器" /></p><p>DMA数据流x的存储器地址寄存器，由于STM32F429的DMA支持双缓存，所以存储器地址寄存器有两个：DMA_SxM0AR和DMA_SxM1AR，其中DMA_SxM1AR仅在双缓冲模式下才有效。在本次实验中，没用到双缓冲模式，所以存储器地址寄存器就是DMA_SxM0AR，该寄存器和DMA_CPARx类似，但是是用来放存储器的地址。比如使用SendBuff[8200]数组来做存储器，那么在DMA_SxM0AR中写入&amp;SendBuff即可。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20211124110644.png" alt="DMA数据流x的存储器地址寄存器" /></p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20211124110737.png" alt="DMA_SxM1AR" /></p><p>用到了串口1的发送，属于DMA2的数据流7，通道4。DMA相关的库函数支持在文件stm32f4xx_hal_dma.c/stm32f4xx_hal_dma_ex.c以及对应的头文件中，同时用到串口的DMA功能，所以要加入串口相关的文件stm32f4xx_hal_uart.c。</p><h3 id="步骤"><a class="markdownIt-Anchor" href="#步骤"></a> 步骤</h3><p>1）使能DMA2时钟</p><p>DMA的时钟使能是通过AHB1ENR寄存器来控制的，先使能时钟，再配置DMA相关寄存器。HAL库方法：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">__HAL_RCC_DMA2_CLK_ENABLE();<span class="comment">//DMA2 时钟使能</span></span><br><span class="line">__HAL_RCC_DMA1_CLK_ENABLE();<span class="comment">//DMA1 时钟使能</span></span><br></pre></td></tr></table></figure><p>2）初始化DMA2数据流7，包括配置通道，外设地址，存储器地址，传输数据量等</p><p>DMA的某个数据流各种配置参数初始化是通过HAL_DMA_Init函数实现的，该函数声明为：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function">HAL_StatusTypeDef <span class="title">HAL_DMA_Init</span><span class="params">(DMA_HandleTypeDef *hdma)</span></span>;</span><br></pre></td></tr></table></figure><p>该函数只有一个DMA_HandleTypeDef结构体指针类型入口参数，结构体定义为：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> __<span class="title">DMA_HandleTypeDef</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">DMA_Stream_TypeDef *Instance; </span><br><span class="line">DMA_InitTypeDef Init; </span><br><span class="line"> HAL_LockTypeDef Lock; </span><br><span class="line"> __IO HAL_DMA_StateTypeDef State; </span><br><span class="line"> <span class="keyword">void</span> *Parent; </span><br><span class="line"><span class="keyword">void</span> (* XferCpltCallback)( </span><br><span class="line">struct __DMA_HandleTypeDef * hdma); </span><br><span class="line"> <span class="keyword">void</span> (* XferHalfCpltCallback)( </span><br><span class="line">struct __DMA_HandleTypeDef * hdma); </span><br><span class="line"> <span class="keyword">void</span> (* XferM1CpltCallback)(</span><br><span class="line"> struct __DMA_HandleTypeDef * hdma); </span><br><span class="line"><span class="keyword">void</span> (* XferErrorCallback)( </span><br><span class="line">struct __DMA_HandleTypeDef * hdma); </span><br><span class="line">__IO <span class="keyword">uint32_t</span> ErrorCode; </span><br><span class="line"><span class="keyword">uint32_t</span> StreamBaseAddress; </span><br><span class="line"><span class="keyword">uint32_t</span> StreamIndex; </span><br><span class="line">&#125;DMA_HandleTypeDef;</span><br></pre></td></tr></table></figure><p>成员变量Instance是用来设置寄存器基地址，比如设置DMA2的数据流7，那么取值为DMA_Stream7。</p><p>成员变量Parent是HAL库处理中间变量，用来指向DMA通道外设句柄。</p><p>成员变量XferCpltCallback（传输完成回调函数），XferHalCpltCallback（半传输完成回调函数），XferMlCpltCallback（Memory1传输完成回调函数）和XferErrorCallback（传输错误回调函数）是四个函数指针，用来指向回调函数入口地址。</p><p>成员变量StreamBaseAddress和StreamIndex是数据流基地址和索引号，这个是HAL库处理的时候会自动计算，用户无需设置。</p><p>其他成员变量HAL库处理过程状态标识变量。重点看成员变量Init，它是DMA_InitTypeDef结构体类型，定义如下：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"> <span class="keyword">uint32_t</span> Channel; <span class="comment">//通道，例如：DMA_CHANNEL_4</span></span><br><span class="line"> <span class="keyword">uint32_t</span> Direction;<span class="comment">//传输方向，例如存储器到外设 DMA_MEMORY_TO_PERIPH</span></span><br><span class="line"> <span class="keyword">uint32_t</span> PeriphInc;<span class="comment">//外设（非）增量模式，非增量模式 DMA_PINC_DISABLE</span></span><br><span class="line"> <span class="keyword">uint32_t</span> MemInc;<span class="comment">//存储器（非）增量模式，增量模式 DMA_MINC_ENABLE</span></span><br><span class="line"> <span class="keyword">uint32_t</span> PeriphDataAlignment; <span class="comment">//外设数据大小：8/16/32 位。</span></span><br><span class="line"> <span class="keyword">uint32_t</span> MemDataAlignment; <span class="comment">//存储器数据大小：8/16/32 位。</span></span><br><span class="line"> <span class="keyword">uint32_t</span> Mode;<span class="comment">//模式：外设流控模式/循环模式/普通模式 </span></span><br><span class="line"> <span class="keyword">uint32_t</span> Priority; <span class="comment">//DMA 优先级：低/中/高/非常高</span></span><br><span class="line"> <span class="keyword">uint32_t</span> FIFOMode;<span class="comment">//FIFO 模式开启或者禁止</span></span><br><span class="line"> <span class="keyword">uint32_t</span> FIFOThreshold; <span class="comment">//FIFO 阈值选择：</span></span><br><span class="line"> <span class="keyword">uint32_t</span> MemBurst; <span class="comment">//存储器突发模式：单次/4 个节拍/8 个节拍/16 个节拍 </span></span><br><span class="line"> <span class="keyword">uint32_t</span> PeriphBurst; <span class="comment">//外设突发模式：单次/4 个节拍/8 个节拍/16 个节拍 </span></span><br><span class="line">&#125;DMA_InitTypeDef;</span><br></pre></td></tr></table></figure><p>每个成员变量配置的基本都是DMA_SxCR寄存器和DMA_SxFCR寄存器的相应位。</p><p>要用到 DMA2_Stream7 的 DMA_CHANNEL_4，把内存中数组的值发送到串口外设发送寄存器 DR，所以方向为存储器到外设 DMA_MEMORY_TO_PERIPH，一个一个字节发送，需要数字索引自动增加，所以是存储器增量模式 DMA_MINC_ENABLE，存储器和外设的字宽都是字节 8 位。具体配置如下：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">DMA_HandleTypeDef UART1TxDMA_Handler; <span class="comment">//DMA 句柄</span></span><br><span class="line">UART1TxDMA_Handler.Instance= DMA2_Stream7; <span class="comment">//数据流选择</span></span><br><span class="line">UART1TxDMA_Handler.Init.Channel=DMA_CHANNEL_4; <span class="comment">//通道选择</span></span><br><span class="line">UART1TxDMA_Handler.Init.Direction=DMA_MEMORY_TO_PERIPH; <span class="comment">//存储器到外设</span></span><br><span class="line">UART1TxDMA_Handler.Init.PeriphInc=DMA_PINC_DISABLE; <span class="comment">//外设非增量模式</span></span><br><span class="line">UART1TxDMA_Handler.Init.MemInc=DMA_MINC_ENABLE; <span class="comment">//存储器增量模式</span></span><br><span class="line">UART1TxDMA_Handler.Init.PeriphDataAlignment=DMA_PDATAALIGN_BYTE;<span class="comment">//外设：8 位</span></span><br><span class="line">UART1TxDMA_Handler.Init.MemDataAlignment=DMA_MDATAALIGN_BYTE; <span class="comment">//存储器：8 位</span></span><br><span class="line">UART1TxDMA_Handler.Init.Mode=DMA_NORMAL; <span class="comment">//普通模式</span></span><br><span class="line">UART1TxDMA_Handler.Init.Priority=DMA_PRIORITY_MEDIUM; <span class="comment">//中等优先级</span></span><br><span class="line">UART1TxDMA_Handler.Init.FIFOMode=DMA_FIFOMODE_DISABLE; </span><br><span class="line">UART1TxDMA_Handler.Init.FIFOThreshold=DMA_FIFO_THRESHOLD_FULL; </span><br><span class="line">UART1TxDMA_Handler.Init.MemBurst=DMA_MBURST_SINGLE; <span class="comment">//存储器突发单次传输</span></span><br><span class="line">UART1TxDMA_Handler.Init.PeriphBurst=DMA_PBURST_SINGLE; <span class="comment">//外设突发单次传输</span></span><br></pre></td></tr></table></figure><p>HAL库为了处理各类外设的DMA请求，在调用相关函数之前，需要调用一个宏定义标识符，来连接DMA和外设句柄。如要使用串口DMA发送，方式为：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">__HAL_LINKDMA(&amp;UART1_Handler,hdmatx,UART1TxDMA_Handler);</span><br></pre></td></tr></table></figure><blockquote><p>其中UART_Handler是串口初始化句柄，在usart.c中定义。UART1TxDMA_Handler是DMA初始化句柄。hdmatx是外设句柄结构体的成员变量，在这里实际就是UART1_Handler的成员变量。在HAL库中，任何一个可以使用DMA的外设，它的初始化结构体句柄都会有一个DMA_HandleTypeDef指针类型的成员变量，是HAL库用来做相关指向的。Hdmatx就是DMA_HandleTypeDef结构体指针类型。</p><p>这句话的含义就是把UART1_Handler句柄的成员变量hdmatx和DMA句柄UART1TxDMA_Handler连接起来，纯软件处理，无任何硬件操作。</p></blockquote><p>3）使能串口1的DMA发送</p><p>串口1的DMA发送是串口控制寄存器CR3的位7来控制的，在HAL库中，多次操作该寄存器来使能串口DMA发送，但没有提供一个独立的使能函数，因此可以通过直接操作寄存器方式来实现：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">USART1-&gt;CR3 |= USART_CR3_DMAT;<span class="comment">//使能串口 1 的 DMA 发送</span></span><br></pre></td></tr></table></figure><p>HAL库还提供了对串口的DMA发送的停止，暂停，继续等操作函数：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function">HAL_StatusTypeDef <span class="title">HAL_UART_DMAStop</span><span class="params">(UART_HandleTypeDef *huart)</span></span>; <span class="comment">//停止</span></span><br><span class="line"><span class="function">HAL_StatusTypeDef <span class="title">HAL_UART_DMAPause</span><span class="params">(UART_HandleTypeDef *huart)</span></span>; <span class="comment">//暂停</span></span><br><span class="line"><span class="function">HAL_StatusTypeDef <span class="title">HAL_UART_DMAResume</span><span class="params">(UART_HandleTypeDef *huart)</span></span>;<span class="comment">//恢复</span></span><br></pre></td></tr></table></figure><p>4）使能DMA2数据流7，启动传输</p><p>使能DMA数据流的函数为：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function">HAL_StatusTypeDef <span class="title">HAL_DMA_Start</span><span class="params">(DMA_HandleTypeDef *hdma, <span class="keyword">uint32_t</span> SrcAddress, <span class="keyword">uint32_t</span> DstAddress, <span class="keyword">uint32_t</span> DataLength)</span></span>;</span><br></pre></td></tr></table></figure><p>第一个参数是DMA句柄，第二个是传输源地址，第三个是传输目标地址，第四个是传输的数据长度。</p><p>通过这四步设置，就可以启动一次USART的DMA传输。</p><p>5）查询DMA传输状态</p><p>在DMA传输过程中，要查询DMA传输通道的状态，使用方法：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">__HAL_DMA_GET_FLAG(&amp;UART1TxDMA_Handler,DMA_FLAG_TCIF3_7);</span><br></pre></td></tr></table></figure><p>获取当前传输剩余数据量：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">__HAL_DMA_GET_COUNTER(&amp;UART1TxDMA_Handler);</span><br></pre></td></tr></table></figure><p>同样，也可以设置对应的DMA数据流传输的数据量大小，函数为：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">__HAL_DMA_SET_COUNTER(&amp;UART1TxDMA_Handler,<span class="number">1000</span>);</span><br></pre></td></tr></table></figure><p>6）DMA终端使用方法</p><p>DMA中断对于每个流都有一个中断服务函数，如DMA2_Stream7的终端服务函数为DMA2_Stream7_IRQHandler。同样，HAL 库也提供了一个通用的 DMA 中断处理函数HAL_DMA_IRQHandler，在该函数内部，会对 DMA 传输状态进行分析，然后调用相应的中断处理回调函数：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">HAL_UART_TxCpltCallback</span><span class="params">(UART_HandleTypeDef *huart)</span></span>;<span class="comment">//发送完成回调函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">HAL_UART_TxHalfCpltCallback</span><span class="params">(UART_HandleTypeDef *huart)</span></span>;/发送一半回调函数</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">HAL_UART_RxCpltCallback</span><span class="params">(UART_HandleTypeDef *huart)</span></span>;<span class="comment">//接收完成回调函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">HAL_UART_RxHalfCpltCallback</span><span class="params">(UART_HandleTypeDef *huart)</span></span>;<span class="comment">//接收一半回调函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">HAL_UART_ErrorCallback</span><span class="params">(UART_HandleTypeDef *huart)</span></span>;<span class="comment">//传输出错回调函数</span></span><br></pre></td></tr></table></figure><p>对于串口 DMA 开启，使能数据流，启动传输，这些步骤，如果使用了中断，可以直接调用 HAL 库函数 HAL_USART_Transmit_DMA，该函数声明如下：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function">HAL_StatusTypeDef <span class="title">HAL_USART_Transmit_DMA</span><span class="params">(USART_HandleTypeDef *husart, <span class="keyword">uint8_t</span> *pTxData, <span class="keyword">uint16_t</span> Size)</span></span>;</span><br></pre></td></tr></table></figure><h3 id="硬件设计-4"><a class="markdownIt-Anchor" href="#硬件设计-4"></a> 硬件设计</h3><p>硬件资源：1）指示灯DS0，2）KEY0按键，3）串口，4）LCD模块，5）DMA</p><p>利用外部按键KEY0来控制DMA的传送，每按一次KEY0，DMA就传送一次数据到USART1，然后再LCD模块上显示进度等信息。DS0用来作为程序运行的指示灯。</p><blockquote><p>注意P4口的RXD和TXD是否和PA9和PA10连接上，若没有，请先连接。</p></blockquote><h3 id="软件设计-4"><a class="markdownIt-Anchor" href="#软件设计-4"></a> 软件设计</h3><p>DMA 支持文件stm32f4xx_dma.c，同时引入了 stm32f4xx_hal_dma.h 头文件支持。在 HARDWARE 分组下面新增了 dma.c 以及对应头文件 dma.h 用来存放 dma 相关的函数和定义。</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//dma.c文件</span></span><br><span class="line">DMA_HandleTypeDef  UART1TxDMA_Handler;      <span class="comment">//DMA句柄</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//DMAx的各通道配置</span></span><br><span class="line"><span class="comment">//这里的传输形式是固定的,这点要根据不同的情况来修改</span></span><br><span class="line"><span class="comment">//从存储器-&gt;外设模式/8位数据宽度/存储器增量模式</span></span><br><span class="line"><span class="comment">//DMA_Streamx:DMA数据流,DMA1_Stream0~7/DMA2_Stream0~7</span></span><br><span class="line"><span class="comment">//chx:DMA通道选择,@ref DMA_channel DMA_CHANNEL_0~DMA_CHANNEL_7</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MYDMA_Config</span><span class="params">(DMA_Stream_TypeDef *DMA_Streamx,u32 chx)</span></span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line"><span class="keyword">if</span>((u32)DMA_Streamx&gt;(u32)DMA2)<span class="comment">//得到当前stream是属于DMA2还是DMA1</span></span><br><span class="line">&#123;</span><br><span class="line">        __HAL_RCC_DMA2_CLK_ENABLE();<span class="comment">//DMA2时钟使能</span></span><br><span class="line">&#125;<span class="keyword">else</span> </span><br><span class="line">&#123;</span><br><span class="line">        __HAL_RCC_DMA1_CLK_ENABLE();<span class="comment">//DMA1时钟使能 </span></span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line">    __HAL_LINKDMA(&amp;UART1_Handler,hdmatx,UART1TxDMA_Handler);    <span class="comment">//将DMA与USART1联系起来(发送DMA)</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">//Tx DMA配置</span></span><br><span class="line">    UART1TxDMA_Handler.Instance=DMA_Streamx;                            <span class="comment">//数据流选择</span></span><br><span class="line">    UART1TxDMA_Handler.Init.Channel=chx;                                <span class="comment">//通道选择</span></span><br><span class="line">    UART1TxDMA_Handler.Init.Direction=DMA_MEMORY_TO_PERIPH;             <span class="comment">//存储器到外设</span></span><br><span class="line">    UART1TxDMA_Handler.Init.PeriphInc=DMA_PINC_DISABLE;                 <span class="comment">//外设非增量模式</span></span><br><span class="line">    UART1TxDMA_Handler.Init.MemInc=DMA_MINC_ENABLE;                     <span class="comment">//存储器增量模式</span></span><br><span class="line">    UART1TxDMA_Handler.Init.PeriphDataAlignment=DMA_PDATAALIGN_BYTE;    <span class="comment">//外设数据长度:8位</span></span><br><span class="line">    UART1TxDMA_Handler.Init.MemDataAlignment=DMA_MDATAALIGN_BYTE;       <span class="comment">//存储器数据长度:8位</span></span><br><span class="line">    UART1TxDMA_Handler.Init.Mode=DMA_NORMAL;                            <span class="comment">//外设普通模式</span></span><br><span class="line">    UART1TxDMA_Handler.Init.Priority=DMA_PRIORITY_MEDIUM;               <span class="comment">//中等优先级</span></span><br><span class="line">    UART1TxDMA_Handler.Init.FIFOMode=DMA_FIFOMODE_DISABLE;              </span><br><span class="line">    UART1TxDMA_Handler.Init.FIFOThreshold=DMA_FIFO_THRESHOLD_FULL;      </span><br><span class="line">    UART1TxDMA_Handler.Init.MemBurst=DMA_MBURST_SINGLE;                 <span class="comment">//存储器突发单次传输</span></span><br><span class="line">    UART1TxDMA_Handler.Init.PeriphBurst=DMA_PBURST_SINGLE;              <span class="comment">//外设突发单次传输</span></span><br><span class="line">    </span><br><span class="line">    HAL_DMA_DeInit(&amp;UART1TxDMA_Handler);   </span><br><span class="line">    HAL_DMA_Init(&amp;UART1TxDMA_Handler);</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//开启一次DMA传输</span></span><br><span class="line"><span class="comment">//huart:串口句柄</span></span><br><span class="line"><span class="comment">//pData：传输的数据指针</span></span><br><span class="line"><span class="comment">//Size:传输的数据量</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MYDMA_USART_Transmit</span><span class="params">(UART_HandleTypeDef *huart, <span class="keyword">uint8_t</span> *pData, <span class="keyword">uint16_t</span> Size)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    HAL_DMA_Start(huart-&gt;hdmatx, (u32)pData, (<span class="keyword">uint32_t</span>)&amp;huart-&gt;Instance-&gt;DR, Size);<span class="comment">//开启DMA传输</span></span><br><span class="line">    </span><br><span class="line">    huart-&gt;Instance-&gt;CR3 |= USART_CR3_DMAT;<span class="comment">//使能串口DMA发送</span></span><br><span class="line">&#125;  </span><br><span class="line"></span><br></pre></td></tr></table></figure><p>该部分仅定义了两个函数，MYDMA_Config函数，就是来使能DMA时钟和初始化DMA的，该函数是一个通用的DMA配置函数，DMA1/DMA2的所有通道，都可以利用该函数配置，不过有些固定参数可能要适当修改（比如位宽，传输方向等）。该函数在外部只能修改DMA数据流编号和通道号，更多的其他设置只能在该函数内部修改。MYDMA_USART_Teansmit函数是来启动串口DMA传输的。</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//main函数部分</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SEND_BUF_SIZE 7800<span class="comment">//发送数据长度,最好等于sizeof(TEXT_TO_SEND)+2的整数倍.</span></span></span><br><span class="line"></span><br><span class="line">u8 SendBuff[SEND_BUF_SIZE]; <span class="comment">//发送数据缓冲区</span></span><br><span class="line"><span class="keyword">const</span> u8 TEXT_TO_SEND[]=&#123;<span class="string">&quot;ALIENTEK Apollo STM32F4 DMA 串口实验&quot;</span>&#125;; </span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">u16 i;</span><br><span class="line">u8 t=<span class="number">0</span>;</span><br><span class="line">u8 j,mask=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">float</span> pro=<span class="number">0</span>;                    <span class="comment">//进度</span></span><br><span class="line">    HAL_Init();                     <span class="comment">//初始化HAL库   </span></span><br><span class="line">    Stm32_Clock_Init(<span class="number">360</span>,<span class="number">25</span>,<span class="number">2</span>,<span class="number">8</span>);   <span class="comment">//设置时钟,180Mhz</span></span><br><span class="line">    delay_init(<span class="number">180</span>);                <span class="comment">//初始化延时函数</span></span><br><span class="line">    uart_init(<span class="number">115200</span>);              <span class="comment">//初始化USART</span></span><br><span class="line">    LED_Init();                     <span class="comment">//初始化LED </span></span><br><span class="line">    KEY_Init();                     <span class="comment">//初始化按键</span></span><br><span class="line">    SDRAM_Init();                   <span class="comment">//初始化SDRAM</span></span><br><span class="line">    LCD_Init();                     <span class="comment">//初始化LCD</span></span><br><span class="line"></span><br><span class="line">    MYDMA_Config(DMA2_Stream7,DMA_CHANNEL_4);<span class="comment">//初始化DMA</span></span><br><span class="line">    POINT_COLOR=RED; </span><br><span class="line">LCD_ShowString(<span class="number">30</span>,<span class="number">50</span>,<span class="number">200</span>,<span class="number">16</span>,<span class="number">16</span>,<span class="string">&quot;Apollo STM32F4/F7&quot;</span>);</span><br><span class="line">LCD_ShowString(<span class="number">30</span>,<span class="number">70</span>,<span class="number">200</span>,<span class="number">16</span>,<span class="number">16</span>,<span class="string">&quot;DMA TEST&quot;</span>);</span><br><span class="line">LCD_ShowString(<span class="number">30</span>,<span class="number">90</span>,<span class="number">200</span>,<span class="number">16</span>,<span class="number">16</span>,<span class="string">&quot;ATOM@ALIENTEK&quot;</span>);</span><br><span class="line">LCD_ShowString(<span class="number">30</span>,<span class="number">110</span>,<span class="number">200</span>,<span class="number">16</span>,<span class="number">16</span>,<span class="string">&quot;2016/1/24&quot;</span>); </span><br><span class="line">LCD_ShowString(<span class="number">30</span>,<span class="number">130</span>,<span class="number">200</span>,<span class="number">16</span>,<span class="number">16</span>,<span class="string">&quot;KEY0:Start&quot;</span>); </span><br><span class="line">POINT_COLOR=BLUE;<span class="comment">//设置字体为蓝色 </span></span><br><span class="line">    <span class="comment">//显示提示信息</span></span><br><span class="line">j=<span class="keyword">sizeof</span>(TEXT_TO_SEND);   </span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;SEND_BUF_SIZE;i++)<span class="comment">//填充ASCII字符集数据</span></span><br><span class="line">    &#123;</span><br><span class="line"><span class="keyword">if</span>(t&gt;=j)<span class="comment">//加入换行符</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(mask)</span><br><span class="line">&#123;</span><br><span class="line">SendBuff[i]=<span class="number">0x0a</span>;</span><br><span class="line">t=<span class="number">0</span>;</span><br><span class="line">&#125;<span class="keyword">else</span> </span><br><span class="line">&#123;</span><br><span class="line">SendBuff[i]=<span class="number">0x0d</span>;</span><br><span class="line">mask++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">else</span><span class="comment">//复制TEXT_TO_SEND语句</span></span><br><span class="line">&#123;</span><br><span class="line">mask=<span class="number">0</span>;</span><br><span class="line">SendBuff[i]=TEXT_TO_SEND[t];</span><br><span class="line">t++;</span><br><span class="line">&#125;      </span><br><span class="line">    &#125;   </span><br><span class="line">POINT_COLOR=BLUE;<span class="comment">//设置字体为蓝色  </span></span><br><span class="line">i=<span class="number">0</span>;</span><br><span class="line">       <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">        t=KEY_Scan(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(t==KEY0_PRES)  <span class="comment">//KEY0按下</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\r\nDMA DATA:\r\n&quot;</span>);     </span><br><span class="line">LCD_ShowString(<span class="number">30</span>,<span class="number">150</span>,<span class="number">200</span>,<span class="number">16</span>,<span class="number">16</span>,<span class="string">&quot;Start Transimit....&quot;</span>);</span><br><span class="line">LCD_ShowString(<span class="number">30</span>,<span class="number">170</span>,<span class="number">200</span>,<span class="number">16</span>,<span class="number">16</span>,<span class="string">&quot;   %&quot;</span>) ;     <span class="comment">//显示百分号</span></span><br><span class="line"></span><br><span class="line">            MYDMA_USART_Transmit(&amp;UART1_Handler,(u8*)SendBuff,SEND_BUF_SIZE); <span class="comment">//启动传输       </span></span><br><span class="line">    </span><br><span class="line"><span class="comment">//  HAL_UART_Transmit_DMA(&amp;UART1_Handler,SendBuff,SEND_BUF_SIZE);</span></span><br><span class="line"><span class="comment">//使能串口1的DMA发送 //等待DMA传输完成，此时我们来做另外一些事，点灯</span></span><br><span class="line">    <span class="comment">//实际应用中，传输数据期间，可以执行另外的任务</span></span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">                <span class="keyword">if</span>(__HAL_DMA_GET_FLAG(&amp;UART1TxDMA_Handler,DMA_FLAG_TCIF3_7))<span class="comment">//等待DMA2_Steam7传输完成</span></span><br><span class="line">                &#123;</span><br><span class="line">                    __HAL_DMA_CLEAR_FLAG(&amp;UART1TxDMA_Handler,DMA_FLAG_TCIF3_7);<span class="comment">//清除DMA2_Steam7传输完成标志</span></span><br><span class="line">                    HAL_UART_DMAStop(&amp;UART1_Handler);      <span class="comment">//传输完成以后关闭串口DMA</span></span><br><span class="line"><span class="keyword">break</span>; </span><br><span class="line">                &#125;</span><br><span class="line">pro=__HAL_DMA_GET_COUNTER(&amp;UART1TxDMA_Handler);<span class="comment">//得到当前还剩余多少个数据</span></span><br><span class="line">pro=<span class="number">1</span>-pro/SEND_BUF_SIZE;    <span class="comment">//得到百分比  </span></span><br><span class="line">pro*=<span class="number">100</span>;          <span class="comment">//扩大100倍</span></span><br><span class="line">LCD_ShowNum(<span class="number">30</span>,<span class="number">170</span>,pro,<span class="number">3</span>,<span class="number">16</span>);    </span><br><span class="line">    &#125;</span><br><span class="line">LCD_ShowNum(<span class="number">30</span>,<span class="number">170</span>,<span class="number">100</span>,<span class="number">3</span>,<span class="number">16</span>);<span class="comment">//显示100%  </span></span><br><span class="line">    LCD_ShowString(<span class="number">30</span>,<span class="number">150</span>,<span class="number">200</span>,<span class="number">16</span>,<span class="number">16</span>,<span class="string">&quot;Transimit Finished!&quot;</span>);<span class="comment">//提示传送完成</span></span><br><span class="line">&#125;</span><br><span class="line">i++;</span><br><span class="line">delay_ms(<span class="number">10</span>);</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">20</span>)</span><br><span class="line">&#123;</span><br><span class="line">LED0=!LED0;<span class="comment">//提示系统正在运行</span></span><br><span class="line">i=<span class="number">0</span>;</span><br><span class="line">&#125;   </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>main函数的大致流程：先初始化内存SendBuff的值，然后通过KEY0开启串口DMA发送，再发送过程中，通过<code>__HAL_DMA_GET_COUNTER(&amp;UART1TxDMA_Handler)</code>获取当前还剩余的数据量来计算传输百分比，最后在传输结束后清除相应标志位，提示已经传输完成。</p><h2 id="定时器实验"><a class="markdownIt-Anchor" href="#定时器实验"></a> 定时器实验</h2><h1 id="直达底部"><a class="markdownIt-Anchor" href="#直达底部"></a> 直达底部</h1>]]></content>
    
    
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; class=&quot;aplayer-secondary-script-marker&quot;&gt;&lt;/script&gt;&lt;h1 id=&quot;阿波罗stm32&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#阿波罗stm32&quot;&gt;&lt;/a&gt; 阿波罗STM32&lt;/h1&gt;
&lt;h2 id=&quot;开发板底板引脚&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#开发板底板引脚&quot;&gt;&lt;/a&gt; 开发板底板引脚&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210615090214.png&quot; alt&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;JTAG调试，需要占用5个IO端口；SWD则只需要2个IO端口&lt;/p&gt;
&lt;p&gt;KEY_UP 是高电平有效，而 KEY0、KEY1 和 KEY2 是低电平有效&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;核心板资源图&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#核心板资源图&quot;&gt;&lt;/a&gt; 核心板资源图&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210615090543.png&quot; alt&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210616094711.png&quot; alt&gt;&lt;/p&gt;
&lt;h2 id=&quot;gpio口通用io口&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#gpio口通用io口&quot;&gt;&lt;/a&gt; GPIO口（通用IO口）&lt;/h2&gt;
&lt;p&gt;STM32F429芯片有176个引脚，其中140个可以作为GPIO口。&lt;/p&gt;</summary>
    
    
    
    <category term="记录&amp;烂笔头" scheme="http://stardust14.com/categories/%E8%AE%B0%E5%BD%95-%E7%83%82%E7%AC%94%E5%A4%B4/"/>
    
    
    <category term="STM32" scheme="http://stardust14.com/tags/STM32/"/>
    
  </entry>
  
  <entry>
    <title>雷达</title>
    <link href="http://stardust14.com/2021/05/13/%E9%9B%B7%E8%BE%BE/"/>
    <id>http://stardust14.com/2021/05/13/%E9%9B%B7%E8%BE%BE/</id>
    <published>2021-05-13T06:54:10.000Z</published>
    <updated>2021-05-21T09:53:31.507Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="理论积累"><a class="markdownIt-Anchor" href="#理论积累"></a> 理论积累</h1><p>奈奎斯特采样定理讨论的是频谱分布在(0,fH)上的基带信号的采样问题，但是，对于雷达接收机，接收信号大多为调制的射频信号，射频信号的频率上限远高于基带信号的频率上限，但是分布在有限的(fL,fH)范围内。虽然可以按高于最高频率的2倍进行奈奎斯特采样。</p><p>但是，很快就会发现当最高频率远远大于信号带宽B时，如果按照奈奎斯特采样率来采样，则其采样率会非常高，但是其信号带宽并不一定很宽，现实中的A/D难以实现的。这时，低通采样定理已经不能满足实际中的使用要求，从而催生了带通采样的应用。</p><ul><li>带通采样定理：</li></ul><p>设一个频率信号x(t)的频带限制在<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><msub><mi>f</mi><mi>L</mi></msub><mo separator="true">,</mo><msub><mi>f</mi><mi>H</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(f_L,f_H)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>内</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210513201147.png" alt="" /></p><p>由于带限信号频谱具有轴对称性，故只需对一边的信号进行分析即可。如上图所示，进行采样时以采样频率fs为间隔对信号频谱进行搬移，不失真条件为搬移后的频谱在原频谱区域不发生混叠。</p><p>第一次搬移时不混叠条件：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><msub><mi>f</mi><mi>H</mi></msub><mo>+</mo><msub><mi>f</mi><mi>S</mi></msub><mo>≥</mo><mo>−</mo><msub><mi>f</mi><mi>L</mi></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><msub><mi>f</mi><mi>L</mi></msub><mo>+</mo><msub><mi>f</mi><mi>S</mi></msub><mo>≤</mo><msub><mi>f</mi><mi>L</mi></msub><mo>−</mo><msub><mi>f</mi><mi>S</mi></msub></mrow></mstyle></mtd></mtr></mtable></mrow><annotation encoding="application/x-tex">\begin{cases}-f_H+f_S\geq -f_L\\ -f_L+f_S \leq f_L-f_S\end{cases}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.0000299999999998em;vertical-align:-1.25003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">−</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">−</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">−</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>连理求得</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>f</mi><mi>L</mi></msub><mo>−</mo><msub><mi>f</mi><mi>H</mi></msub><mo>≤</mo><msub><mi>f</mi><mi>S</mi></msub><mo>≤</mo><msub><mi>f</mi><mi>L</mi></msub></mrow><annotation encoding="application/x-tex">f_L-f_H \leq f_S \leq f_L</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></p><p>此后对频谱进行搬移时，在两个最邻近右侧原频谱的移位频谱处发生不混叠的边界条件，即设第m次搬移频谱在原频谱左侧，第m+1次搬移频谱在原频谱右侧，得：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><msub><mi>f</mi><mi>H</mi></msub><mo>+</mo><mi>m</mi><msub><mi>f</mi><mi>S</mi></msub><mo>≤</mo><mo>−</mo><msub><mi>f</mi><mi>L</mi></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><msub><mi>f</mi><mi>H</mi></msub><mo>+</mo><mo stretchy="false">(</mo><mi>m</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><msub><mi>f</mi><mi>S</mi></msub><mo>≥</mo><msub><mi>f</mi><mi>H</mi></msub></mrow></mstyle></mtd></mtr></mtable></mrow><annotation encoding="application/x-tex">\begin{cases}-f_H+mf_S\leq -f_L\\ -f_H+(m+1)f_S \geq f_H \end{cases}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.0000299999999998em;vertical-align:-1.25003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">−</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">m</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">−</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">−</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>连理求得</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mn>2</mn><msub><mi>f</mi><mi>H</mi></msub></mrow><mrow><mi>m</mi><mo>+</mo><mn>1</mn></mrow></mfrac><mo>≤</mo><msub><mi>f</mi><mi>S</mi></msub><mo>≤</mo><mfrac><mrow><mn>2</mn><msub><mi>f</mi><mi>L</mi></msub></mrow><mi>m</mi></mfrac><mspace width="1em"/><mspace width="1em"/><mi>m</mi><mo>≤</mo><mfrac><msub><mi>f</mi><mi>L</mi></msub><mrow><msub><mi>f</mi><mi>H</mi></msub><mo>−</mo><msub><mi>f</mi><mi>L</mi></msub></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{2f_H}{m+1} \leq f_S \leq \frac{2f_L}{m}    \quad \quad m \leq \frac{f_L}{f_H-f_L}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.14077em;vertical-align:-0.7693300000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714399999999998em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693300000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.0574399999999997em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714399999999998em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">m</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.25188em;vertical-align:-0.8804400000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714399999999998em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804400000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>通常情况下我们需要fs的带通采样最小值，此时由2fH/(m+1)≤ 2fL/m可知m≤[ fL/(fH-fL) ]，[ ]为向下取整符号。</p><blockquote><p><strong>带通采样的限制条件</strong></p><p>带通采样定理使用的前提条件是：只允许在其中一个频带上存在信号，而不允许在不同的频带同时存在信号，否则将会引起信号混叠。</p></blockquote><p>#############</p><p>阵列输出的绝对值与来波方向之间的关系称为<strong>天线的方向图</strong></p>]]></content>
    
    
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; class=&quot;aplayer-secondary-script-marker&quot;&gt;&lt;/script&gt;&lt;h1 id=&quot;理论积累&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#理论积累&quot;&gt;&lt;/a&gt; 理论积累&lt;/h1&gt;
&lt;p&gt;奈奎斯特采样定理讨论的是频谱分布在(0,fH)上的基带信号的采样问题，但是，对于雷达接收机，接收信号大多为调制的射频信号，射频信号的频率上限远高于基带信号的频率上限，但是分布在有限的(fL,fH)范围内。虽然可以按高于最高频率的2倍进行奈奎斯特采样。&lt;/p&gt;
&lt;p&gt;但是，很快就会发现当最高频率远远大于信号带宽B时，如果按照奈奎斯特采样率来采样，则其采样率会非常高，但是其信号带宽并不一定很宽，现实中的A/D难以实现的。这时，低通采样定理已经不能满足实际中的使用要求，从而催生了带通采样的应用。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;带通采样定理：&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;设一个频率信号x(t)的频带限制在&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mo stretchy=&quot;false&quot;&gt;(&lt;/mo&gt;&lt;msub&gt;&lt;mi&gt;f&lt;/mi&gt;&lt;mi&gt;L&lt;/mi&gt;&lt;/msub&gt;&lt;mo separator=&quot;true&quot;&gt;,&lt;/mo&gt;&lt;msub&gt;&lt;mi&gt;f&lt;/mi&gt;&lt;mi&gt;H&lt;/mi&gt;&lt;/msub&gt;&lt;mo stretchy=&quot;false&quot;&gt;)&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;(f_L,f_H)&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:1em;vertical-align:-0.25em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mopen&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.10764em;&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.32833099999999993em;&quot;&gt;&lt;span style=&quot;top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mathdefault mtight&quot;&gt;L&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.15em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mpunct&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.16666666666666666em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.10764em;&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.32833099999999993em;&quot;&gt;&lt;span style=&quot;top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mathdefault mtight&quot; style=&quot;margin-right:0.08125em;&quot;&gt;H&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.15em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mclose&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;内&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210513201147.png&quot; alt&gt;&lt;/p&gt;
&lt;p&gt;由于带限信号频谱具有轴对称性，故只需对一边的信号进行分析即可。如上图所示，进行采样时以采样频率fs为间隔对信号频谱进行搬移，不失真条件为搬移后的频谱在原频谱区域不发生混叠。&lt;/p&gt;
&lt;p&gt;第一次搬移时不混叠条件：&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;katex-display&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mo fence=&quot;true&quot;&gt;{&lt;/mo&gt;&lt;mtable rowspacing=&quot;0.3599999999999999em&quot; columnalign=&quot;left left&quot; columnspacing=&quot;1em&quot;&gt;&lt;mtr&gt;&lt;mtd&gt;&lt;mstyle scriptlevel=&quot;0&quot; displaystyle=&quot;false&quot;&gt;&lt;mrow&gt;&lt;mo&gt;−&lt;/mo&gt;&lt;msub&gt;&lt;mi&gt;f&lt;/mi&gt;&lt;mi&gt;H&lt;/mi&gt;&lt;/msub&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;msub&gt;&lt;mi&gt;f&lt;/mi&gt;&lt;mi&gt;S&lt;/mi&gt;&lt;/msub&gt;&lt;mo&gt;≥&lt;/mo&gt;&lt;mo&gt;−&lt;/mo&gt;&lt;msub&gt;&lt;mi&gt;f&lt;/mi&gt;&lt;mi&gt;L&lt;/mi&gt;&lt;/msub&gt;&lt;/mrow&gt;&lt;/mstyle&gt;&lt;/mtd&gt;&lt;/mtr&gt;&lt;mtr&gt;&lt;mtd&gt;&lt;mstyle scriptlevel=&quot;0&quot; displaystyle=&quot;false&quot;&gt;&lt;mrow&gt;&lt;mo&gt;−&lt;/mo&gt;&lt;msub&gt;&lt;mi&gt;f&lt;/mi&gt;&lt;mi&gt;L&lt;/mi&gt;&lt;/msub&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;msub&gt;&lt;mi&gt;f&lt;/mi&gt;&lt;mi&gt;S&lt;/mi&gt;&lt;/msub&gt;&lt;mo&gt;≤&lt;/mo&gt;&lt;msub&gt;&lt;mi&gt;f&lt;/mi&gt;&lt;mi&gt;L&lt;/mi&gt;&lt;/msub&gt;&lt;mo&gt;−&lt;/mo&gt;&lt;msub&gt;&lt;mi&gt;f&lt;/mi&gt;&lt;mi&gt;S&lt;/mi&gt;&lt;/msub&gt;&lt;/mrow&gt;&lt;/mstyle&gt;&lt;/mtd&gt;&lt;/mtr&gt;&lt;/mtable&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;\begin{cases}-f_H+f_S\geq -f_L\\ -f_L+f_S \leq f_L-f_S\end{cases}
&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:3.0000299999999998em;vertical-align:-1.25003em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;minner&quot;&gt;&lt;span class=&quot;mopen delimcenter&quot; style=&quot;top:0em;&quot;&gt;&lt;span class=&quot;delimsizing size4&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mtable&quot;&gt;&lt;span class=&quot;col-align-l&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:1.69em;&quot;&gt;&lt;span style=&quot;top:-3.69em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3.008em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord&quot;&gt;−&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.10764em;&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.32833099999999993em;&quot;&gt;&lt;span style=&quot;top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mathdefault mtight&quot; style=&quot;margin-right:0.08125em;&quot;&gt;H&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.15em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222222222222222em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mbin&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222222222222222em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.10764em;&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.32833099999999993em;&quot;&gt;&lt;span style=&quot;top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mathdefault mtight&quot; style=&quot;margin-right:0.05764em;&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.15em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mrel&quot;&gt;≥&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;−&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.10764em;&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.32833099999999993em;&quot;&gt;&lt;span style=&quot;top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mathdefault mtight&quot;&gt;L&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.15em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;top:-2.25em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3.008em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord&quot;&gt;−&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.10764em;&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.32833099999999993em;&quot;&gt;&lt;span style=&quot;top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mathdefault mtight&quot;&gt;L&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.15em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222222222222222em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mbin&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222222222222222em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.10764em;&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.32833099999999993em;&quot;&gt;&lt;span style=&quot;top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mathdefault mtight&quot; style=&quot;margin-right:0.05764em;&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.15em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mrel&quot;&gt;≤&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.10764em;&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.32833099999999993em;&quot;&gt;&lt;span style=&quot;top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mathdefault mtight&quot;&gt;L&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.15em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222222222222222em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mbin&quot;&gt;−&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222222222222222em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.10764em;&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.32833099999999993em;&quot;&gt;&lt;span style=&quot;top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mathdefault mtight&quot; style=&quot;margin-right:0.05764em;&quot;&gt;S&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.15em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:1.19em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mclose nulldelimiter&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="记录&amp;烂笔头" scheme="http://stardust14.com/categories/%E8%AE%B0%E5%BD%95-%E7%83%82%E7%AC%94%E5%A4%B4/"/>
    
    
    <category term="雷达" scheme="http://stardust14.com/tags/%E9%9B%B7%E8%BE%BE/"/>
    
  </entry>
  
  <entry>
    <title>butterfly主题美化</title>
    <link href="http://stardust14.com/2021/04/08/butterfly%E4%B8%BB%E9%A2%98%E7%BE%8E%E5%8C%96/"/>
    <id>http://stardust14.com/2021/04/08/butterfly%E4%B8%BB%E9%A2%98%E7%BE%8E%E5%8C%96/</id>
    <published>2021-04-08T00:52:42.000Z</published>
    <updated>2021-04-08T03:04:44.170Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="butterfly主题美化记录"><a class="markdownIt-Anchor" href="#butterfly主题美化记录"></a> butterfly主题美化记录</h1><h2 id="社交图标"><a class="markdownIt-Anchor" href="#社交图标"></a> 社交图标</h2><p>在<a href="https://www.iconfont.cn/">阿里巴巴矢量图标库</a>，找到自己想要的图标，看中那个就加入购物车</p><p>加购完毕之后点击右上角的购物车，添加至项目，选择其中一种快捷方式登录，项目名称随便填</p><p>然后在我的项目里选择 <code>Font class</code>，点击查看在线链接并在浏览器中打开此链接，最后另存为本地<strong>主题文件夹</strong>下的<code>source\css</code>中。</p><p>然后在主题配置文件（_config.yml）里，inject引用图标css文件</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210408090314.png" alt="" /></p><p>然后继续在配置文件中找到social配置项</p><p>格式为：iconfont class名：链接||名称</p><p>其中</p><ul><li><p>iconfont：是固定的</p></li><li><p>class 名：可在刚刚的阿里巴巴矢量图标库生成的 css 文件里找到</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210408090734.png" alt="" /></p></li><li><p>链接：点击图标之后跳转的链接</p></li><li><p>名称：对应你图标的含义，例如：QQ、Github</p></li></ul><p>自定义图标的颜色：</p><p>打开下载到本地的css文件，换身衣裳</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210408091858.png" alt="" /></p><p>其他图标同样的做法</p><h2 id="电子时钟"><a class="markdownIt-Anchor" href="#电子时钟"></a> 电子时钟</h2><blockquote><p>有错误，未解决</p></blockquote><h3 id="插件安装"><a class="markdownIt-Anchor" href="#插件安装"></a> 插件安装</h3><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">npm i hexo-electric-clock --save</span><br><span class="line"></span><br><span class="line"><span class="section"># 或者</span></span><br><span class="line"></span><br><span class="line">cnpm i hexo-electric-clock --save</span><br></pre></td></tr></table></figure><h3 id="添加博客根目录_config配置项"><a class="markdownIt-Anchor" href="#添加博客根目录_config配置项"></a> 添加博客根目录_config配置项</h3><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">electric<span class="emphasis">_clock:</span></span><br><span class="line"><span class="emphasis">  priority: 5</span></span><br><span class="line"><span class="emphasis">  enable: true</span></span><br><span class="line"><span class="emphasis">  enable_</span>page: all</span><br><span class="line">  layout:</span><br><span class="line"><span class="code">    type: class</span></span><br><span class="line"><span class="code">    name: sticky_layout</span></span><br><span class="line"><span class="code">    index: 0</span></span><br><span class="line"><span class="code">  temple_html: &#x27;&lt;div class=&quot;card-widget card-clock&quot;&gt;&lt;div class=&quot;card-glass&quot;&gt;&lt;div class=&quot;card-background&quot;&gt;&lt;div class=&quot;card-content&quot;&gt;&lt;div id=&quot;hexo_electric_clock&quot;&gt;&lt;img id=&quot;card-clock-loading&quot; src=&quot;https://cdn.jsdelivr.net/gh/Zfour/Butterfly-clock/clock/images/weather/loading.gif&quot; style=&quot;height: 120px; width: 100%;&quot; data-ll-status=&quot;loading&quot; class=&quot;entered loading&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="enable"><a class="markdownIt-Anchor" href="#enable"></a> enable</h3><p>**参数：**true/false<br />**含义：**是否开启插件</p><h3 id="enable_page"><a class="markdownIt-Anchor" href="#enable_page"></a> enable_page</h3><p>**参数：**all<br />**含义：**路由地址，all 代表全局开启。如 / 代表主页。</p><h3 id="priority"><a class="markdownIt-Anchor" href="#priority"></a> priority</h3><p>**参数：**1<br />**含义：**插件的叠放顺序，数字越大，叠放约靠前。</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">electric<span class="emphasis">_clock:</span></span><br><span class="line"><span class="emphasis">  enable: true</span></span><br><span class="line"><span class="emphasis">  priority: 5 # 这里是参数</span></span><br></pre></td></tr></table></figure><h3 id="layout"><a class="markdownIt-Anchor" href="#layout"></a> layout</h3><p>**参数：**type; （class&amp;id）<br />**参数：**name;<br />**参数：**index；（数字）<br />**含义：**如果说 electric_clock 是一幅画，那么这个 layout 就是指定了哪面墙来挂画<br />而在 HTML 的是世界里有两种墙分别 type 为 id 和 class。<br />其中在定义 class 的时候会出现多个 class 的情况，这时就需要使用 index，确定是哪一个。<br />最后墙的名字即是 name;</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">desc</span>=<span class="string">&quot;我是墙&quot;</span> <span class="attr">id</span>=<span class="string">&quot;recent-posts&quot;</span>&gt;</span></span></span><br><span class="line">  <span class="xml"><span class="comment">&lt;!-- id=&gt;</span></span>type  recent-posts=&gt;name    --&gt;</span><br><span class="line">  <span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">desc</span>=<span class="string">&quot;我是画框&quot;</span>&gt;</span></span></span><br><span class="line"><span class="code">    &lt;div desc=&quot;我是纸&quot;&gt;</span></span><br><span class="line"><span class="code">      &lt;!--这里通过js挂载electric_clock，也就是画画--&gt;</span></span><br><span class="line"><span class="code">    &lt;/div&gt;</span></span><br><span class="line"><span class="code">  &lt;/div&gt;</span></span><br><span class="line"><span class="code">&lt;/div&gt;</span></span><br></pre></td></tr></table></figure><h3 id="temple_html"><a class="markdownIt-Anchor" href="#temple_html"></a> temple_html</h3><p>**参数：**html 模板字段<br />**含义：**包含挂载容器</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">HTML</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;card-widget card-clock&quot;</span>&gt;</span></span></span><br><span class="line">  <span class="xml"><span class="comment">&lt;!-- 挂载容器 --&gt;</span></span></span><br><span class="line">  <span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;card-glass&quot;</span>&gt;</span></span></span><br><span class="line"><span class="code">    &lt;div class=&quot;card-background&quot;&gt;</span></span><br><span class="line"><span class="code">      &lt;div class=&quot;card-content&quot;&gt;</span></span><br><span class="line"><span class="code">        &lt;div id=&quot;hexo_electric_clock&quot;&gt;</span></span><br><span class="line"><span class="code">          &lt;img</span></span><br><span class="line"><span class="code">            id=&quot;card-clock-loading&quot;</span></span><br><span class="line"><span class="code">            src=&quot;https://cdn.jsdelivr.net/gh/Zfour/Butterfly-clock/clock/images/weather/loading.gif&quot;</span></span><br><span class="line"><span class="code">            style=&quot;height: 120px; width: 100%;&quot;</span></span><br><span class="line"><span class="code">            data-ll-status=&quot;loading&quot;</span></span><br><span class="line"><span class="code">            class=&quot;entered loading&quot;</span></span><br><span class="line"><span class="code">          /&gt;</span></span><br><span class="line"><span class="code">        &lt;/div&gt;</span></span><br><span class="line"><span class="code">      &lt;/div&gt;</span></span><br><span class="line"><span class="code">    &lt;/div&gt;</span></span><br><span class="line"><span class="code">  &lt;/div&gt;</span></span><br><span class="line"><span class="code">&lt;/div&gt;</span></span><br></pre></td></tr></table></figure><h2 id="历史今日"><a class="markdownIt-Anchor" href="#历史今日"></a> 历史今日</h2><h3 id="安装插件"><a class="markdownIt-Anchor" href="#安装插件"></a> 安装插件</h3><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">npm i hexo-history-calendar --save</span><br><span class="line"></span><br><span class="line"><span class="section"># 或者</span></span><br><span class="line"></span><br><span class="line">cnpm i hexo-history-calendar --save</span><br></pre></td></tr></table></figure><h3 id="博客根目录_config-配置项"><a class="markdownIt-Anchor" href="#博客根目录_config-配置项"></a> 博客根目录_config 配置项 ：</h3><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">YAML</span><br><span class="line">复制成功history<span class="emphasis">_calendar:</span></span><br><span class="line"><span class="emphasis">  priority: 4</span></span><br><span class="line"><span class="emphasis">  enable: true</span></span><br><span class="line"><span class="emphasis">  enable_</span>page: all</span><br><span class="line">  layout:</span><br><span class="line"><span class="code">    type: class</span></span><br><span class="line"><span class="code">    name: sticky_layout</span></span><br><span class="line"><span class="code">    index: 0</span></span><br><span class="line"><span class="code">  temple_html: &#x27;&lt;div class=&quot;card-widget card-history&quot;&gt;&lt;div class=&quot;card-content&quot;&gt;&lt;div class=&quot;item-headline&quot;&gt;&lt;i class=&quot;fas fa-clock fa-spin&quot;&gt;&lt;/i&gt;&lt;span&gt;那年今日&lt;/span&gt;&lt;/div&gt;&lt;div id=&quot;history-baidu&quot; style=&quot;height: 100px;overflow: hidden&quot;&gt;&lt;div class=&quot;history_swiper-container&quot; id=&quot;history-container&quot; style=&quot;width: 100%;height: 100%&quot;&gt;&lt;div class=&quot;swiper-wrapper&quot; id=&quot;history_container_wrapper&quot; style=&quot;height:20px&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="enable-2"><a class="markdownIt-Anchor" href="#enable-2"></a> enable</h3><p>**参数：**true/false<br />**含义：**是否开启插件</p><h3 id="enable_page-2"><a class="markdownIt-Anchor" href="#enable_page-2"></a> enable_page</h3><p>**参数：**all<br />**含义：**路由地址，all 代表全局开启。如 / 代表主页。</p><h3 id="priority-2"><a class="markdownIt-Anchor" href="#priority-2"></a> priority</h3><p>**参数：**1<br />**含义：**插件的叠放顺序，数字越大，叠放约靠前。</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">YAML</span><br><span class="line">history<span class="emphasis">_calendar:</span></span><br><span class="line"><span class="emphasis">  enable: true</span></span><br><span class="line"><span class="emphasis">  priority: 4 # 这里是参数</span></span><br></pre></td></tr></table></figure><h3 id="layout-2"><a class="markdownIt-Anchor" href="#layout-2"></a> layout</h3><p>**参数：**type; （class&amp;id）<br />**参数：**name;<br />**参数：**index；（数字）<br />**含义：**如果说 history_calendar 是一幅画，那么这个 layout 就是指定了哪面墙来挂画<br />而在 HTML 的是世界里有两种墙分别 type 为 id 和 class。<br />其中在定义 class 的时候会出现多个 class 的情况，这时就需要使用 index，确定是哪一个。<br />最后墙的名字即是 name;</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">HTML</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">desc</span>=<span class="string">&quot;我是墙&quot;</span> <span class="attr">id</span>=<span class="string">&quot;recent-posts&quot;</span>&gt;</span></span></span><br><span class="line">  <span class="xml"><span class="comment">&lt;!-- id=&gt;</span></span>type  recent-posts=&gt;name    --&gt;</span><br><span class="line">  <span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">desc</span>=<span class="string">&quot;我是画框&quot;</span>&gt;</span></span></span><br><span class="line"><span class="code">    &lt;div desc=&quot;我是纸&quot;&gt;</span></span><br><span class="line"><span class="code">      &lt;!--这里通过js挂载history_calendar，也就是画画--&gt;</span></span><br><span class="line"><span class="code">    &lt;/div&gt;</span></span><br><span class="line"><span class="code">  &lt;/div&gt;</span></span><br><span class="line"><span class="code">&lt;/div&gt;</span></span><br></pre></td></tr></table></figure><h3 id="temple_html-2"><a class="markdownIt-Anchor" href="#temple_html-2"></a> temple_html</h3><p>**参数：**html 模板字段<br />**含义：**包含挂载容器</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">XML</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;card-widget card-history&quot;</span>&gt;</span></span> <span class="xml"><span class="comment">&lt;!-- 挂载容器 --&gt;</span></span></span><br><span class="line">  <span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;card-content&quot;</span>&gt;</span></span></span><br><span class="line"><span class="code">    &lt;div class=&quot;item-headline&quot;&gt;</span></span><br><span class="line"><span class="code">      &lt;i class=&quot;fas fa-clock fa-spin&quot;&gt;&lt;/i&gt;</span></span><br><span class="line"><span class="code">      &lt;span&gt;那年今日&lt;/span&gt;</span></span><br><span class="line"><span class="code">    &lt;/div&gt;</span></span><br><span class="line"><span class="code">  &lt;div id=&quot;history-baidu&quot; style=&quot;height: 100px;overflow: hidden&quot;&gt; &lt;!-- 挂载器 --&gt;</span></span><br><span class="line"><span class="code">    &lt;div class=&quot;history_swiper-container&quot; id=&quot;history-container&quot; style=&quot;width: 100%;height: 100%&quot;&gt;</span></span><br><span class="line"><span class="code">          &lt;div class=&quot;swiper-wrapper&quot; id=&quot;history_container_wrapper&quot; style=&quot;height:20px&quot;&gt;&lt;/div&gt;</span></span><br><span class="line"><span class="code">    &lt;/div&gt;</span></span><br><span class="line"><span class="code">  &lt;/div&gt;</span></span><br><span class="line"><span class="code">&lt;/div&gt;</span></span><br></pre></td></tr></table></figure><h1 id="参考来自"><a class="markdownIt-Anchor" href="#参考来自"></a> 参考来自</h1><a class="btn-beautify button--animated block" href="https://blog.imzjw.cn/posts/b74f504f/"   title="点此跳转"><i class="far fa-hand-point-right fa-fw"></i><span>点此跳转</span></a><a class="btn-beautify button--animated block" href="https://zfe.space/post/hexo-electric-clock.html"   title="点此跳转"><i class="far fa-hand-point-right fa-fw"></i><span>点此跳转</span></a><a class="btn-beautify button--animated block" href="https://zfe.space/post/hexo-history-calendar.html"   title="点此跳转"><i class="far fa-hand-point-right fa-fw"></i><span>点此跳转</span></a>]]></content>
    
    
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; class=&quot;aplayer-secondary-script-marker&quot;&gt;&lt;/script&gt;&lt;h1 id=&quot;butterfly主题美化记录&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#butterfly主题美化记录&quot;&gt;&lt;/a&gt; butterfly主题美化记录&lt;/h1&gt;
&lt;h2 id=&quot;社交图标&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#社交图标&quot;&gt;&lt;/a&gt; 社交图标&lt;/h2&gt;
&lt;p&gt;在&lt;a href=&quot;https://www.iconfont.cn/&quot;&gt;阿里巴巴矢量图标库&lt;/a&gt;，找到自己想要的图标，看中那个就加入购物车&lt;/p&gt;
&lt;p&gt;加购完毕之后点击右上角的购物车，添加至项目，选择其中一种快捷方式登录，项目名称随便填&lt;/p&gt;
&lt;p&gt;然后在我的项目里选择 &lt;code&gt;Font class&lt;/code&gt;，点击查看在线链接并在浏览器中打开此链接，最后另存为本地&lt;strong&gt;主题文件夹&lt;/strong&gt;下的&lt;code&gt;source\css&lt;/code&gt;中。&lt;/p&gt;
&lt;p&gt;然后在主题配置文件（_config.yml）里，inject引用图标css文件&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210408090314.png&quot; alt&gt;&lt;/p&gt;
&lt;p&gt;然后继续在配置文件中找到social配置项&lt;/p&gt;
&lt;p&gt;格式为：iconfont class名：链接||名称&lt;/p&gt;</summary>
    
    
    
    <category term="记录&amp;烂笔头" scheme="http://stardust14.com/categories/%E8%AE%B0%E5%BD%95-%E7%83%82%E7%AC%94%E5%A4%B4/"/>
    
    
    <category term="随笔" scheme="http://stardust14.com/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>分享&amp;记录</title>
    <link href="http://stardust14.com/2021/04/07/%E5%88%86%E4%BA%AB-%E8%AE%B0%E5%BD%95/"/>
    <id>http://stardust14.com/2021/04/07/%E5%88%86%E4%BA%AB-%E8%AE%B0%E5%BD%95/</id>
    <published>2021-04-07T08:39:32.000Z</published>
    <updated>2021-04-07T09:29:03.186Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="46a8446ac2579460331ee3c7dc7fe6908781964e48de315e58f9093e41af2d2d">31242a41c922984c3c7e6ed39d2c978a39cd93922d549058b144463d7a1519272fa19dce3629f278aaed84c96a5c85cfb21d90190581ad32f40bbabf9b62b7250d325eea2bf076e2cdbf55e3c24285bf6e8b911be2da55e80e31eb116cedd161373c576f9c7eaa34b0c22d52333648cbf1b2b32bce14fc44950b046203047fc8965e48c16a0577d7647ad1aa56ad7a4484d547b335e841275628ebe6cebe760b9fd61250d56736073b6ecd28ad45846bba3f5259cc41984812e7d4a99811c18466a3d31dc1150a203670051b3b07265a6a81fde20fe261ddd6b07f9001256de791c796602283c7045ce9c585d9165b9bb33c144c782ecc9a705562505efbb8f1e77a8555cd0468f569fb23a2579cf7476dd2194d4d78b619b79d8c07b1f9c217e24b3dd100b992eccfe8760a2b2e5f1ceaf80cc202fdb05c6e423614b71ac53229e07cb1c15aa27b1c828b09b12a9e7cf050ea65c3f74cb87f59c90e1f4952c261e9429e9552705e7262841a2ba58dc4915ddc01cec332935b7ef0e9cf96a74f42f42ea910adb03b8a60927ab33b75d2</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-xray">      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">Hey, password is required here.</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">&lt;div class=&quot;hbe hbe-container&quot; id=&quot;hexo-blog-encrypt&quot; data-wpm=&quot;Oh, this is an invalid password. Check and try again, please.&quot; data-whm=&quot;OOPS, these decrypted content may changed, but you can still have a look.&quot;&gt;
  &lt;script id=&quot;hbeData&quot; type=&quot;hbeData&quot; data-hmacdigest=&quot;46a8446ac2579460331ee3c7dc7fe6908781964e48de315e58f9093e41af2d2d&quot;&gt;31242a41c922984c3c7e6ed39d2c978a39cd93922d549058b144463d7a1519272fa19dce3629f278aaed84c96a5c85cfb21d90190581ad32f40bbabf9b62b7250d325eea2bf076e2cdbf55e3c24285bf6e8b911be2da55e80e31eb116cedd161373c576f9c7eaa34b0c22d52333648cbf1b2b32bce14fc44950b046203047fc8965e48c16a0577d7647ad1aa56ad7a4484d547b335e841275628ebe6cebe760b9fd61250d56736073b6ecd28ad45846bba3f5259cc41984812e7d4a99811c18466a3d31dc1150a203670051b3b07265a6a81fde20fe261ddd6b07f9001256de791c796602283c7045ce9c585d9165b9bb33c144c782ecc9a705562505efbb8f1e77a8555cd0468f569fb23a2579cf7476dd2194d4d78b619b79d8c07b1f9c217e24b3dd100b992eccfe8760a2b2e5f1ceaf80cc202fdb05c6e423614b71ac53229e07cb1c15aa27b1c828b09b12a9e7cf050ea65c3f74cb87f59c90e1f4952c261e9429e9552705e7262841a2ba58dc4915ddc01cec332935b7ef0e9cf96a74f42f42ea910adb03b8a60927ab33b75d2&lt;/script&gt;
  &lt;div class=&quot;hbe hbe-content&quot;&gt;
    &lt;div class=&quot;hbe hbe-input hbe-input-xray&quot;&gt;
      &lt;input class=&quot;hbe hbe-input-field hbe-input-field-xray&quot; type=&quot;password&quot; id=&quot;hbePass&quot;&gt;
      &lt;label class=&quot;hbe hbe-input-label hbe-input-label-xray&quot; for=&quot;hbePass&quot;&gt;
        &lt;span class=&quot;hbe hbe-input-label-content hbe-input-label-content-xray&quot;&gt;Hey, password is required here.&lt;/span&gt;
      &lt;/label&gt;
      &lt;svg class=&quot;hbe hbe-graphic hbe-graphic-xray&quot; width=&quot;300%&quot; height=&quot;100%&quot; viewBox=&quot;0 0 1200 60&quot; preserveAspectRatio=&quot;none&quot;&gt;
        &lt;path d=&quot;M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0&quot;/&gt;
        &lt;path d=&quot;M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0&quot;/&gt;
      &lt;/svg&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;script data-pjax src=&quot;/lib/hbe.js&quot;&gt;&lt;/script&gt;&lt;link href=&quot;/css/hbe.style.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot;&gt;</summary>
    
    
    
    <category term="记录&amp;烂笔头" scheme="http://stardust14.com/categories/%E8%AE%B0%E5%BD%95-%E7%83%82%E7%AC%94%E5%A4%B4/"/>
    
    
    <category term="随笔" scheme="http://stardust14.com/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>批注记录</title>
    <link href="http://stardust14.com/2021/04/07/%E6%89%B9%E6%B3%A8%E8%AE%B0%E5%BD%95/"/>
    <id>http://stardust14.com/2021/04/07/%E6%89%B9%E6%B3%A8%E8%AE%B0%E5%BD%95/</id>
    <published>2021-04-07T08:23:11.000Z</published>
    <updated>2021-04-08T10:01:04.320Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="e99185e194cbc1bdc862d3675a95450e8a32640f4c5e5bfd8d4f58ea7c045463">22064b17c03cb0c0e58c99349b6889d0c7e9d327de57f2d214b057f3875d6b37b9b20ab3b449f9d3b0ba6ffe12bb71d82eff8171349bc71e3a2c9718b358eacc07c1e2d0dcdcc94bb927d4bdef70eb39fd8e7de731fdf8f27d06339a84133e4a974b5fae5fee1809df024fdfbb238fba030fdd8003e2826f0a33da9ce588a76e8e6bc91b4049cb9065bb5b9840402572bd86834c2d0c361fdb4259dd56633b9d286b14b14b74d50d4ca10de4c2e54f118835e2ea5a28de2ac78c4f57666f83faa6cf49198dbd3f86312e8ae6475e1ad55bc0f991fa504124763e450733221c2a781fb4c5fbae0d7123703d7ac9a38542095b3da435e03cc3247b4eff26b05bc0b9e2a2c706e61562c7bb934180842f9b6dc301690938c4f21c78468483f3e95d8b5dcc7048e9b21da20cd49dde4a8cd683cfc91feffd222c011316f664973126e4043ce5ae95c4d8525c789c438811513f1e1e24c9c959b845bf2deea1d05706ff1f2329ebab25d94e9279b7c0fd1d9ee3aa82b99359db5e871c7a25108f476257793f525ba22c58640459f6a1aea50dde2e5235bfe06d545ff7679ed63014c1ce5952d5f0a15d87729a286948e556a176cefc62cf843f24a49c7c5a2561365d86aa9e69a2262222e85bb229dfbdbaed5616c4080b33cf91e776db2a892d9de18239228cd12fb10d9592911362bf9cfaf192d6dc168710a260c8711fdde489ac8cd703b4a4a62d7185f1a8de98ae066c037af3e20c42459297416aa070706a01ef89cc1fdc055d1931bf4d7e0e26c9a2fc5ab84b2098e2e98e4f9f52b11ddc2f45b8f4f6f1450deda1642de8b63ad477bc947b0ddb74d9d9080d3a71a2dd72a46a5fbf08df811aff67d4e34a400ebe3259e62ba9e8abe68e488008b4b4772ec3e8ad50afa1b9e023cb606c4b83a9569125c2962bd9000927b6b4f086ae21aa65b2b369a101fd92b93dcdea5d70253a3a9032c1737af2756f772fe8274374de56fcf55e82f30e41dab7c940c59135ad056e5e27be785fa697d791224ea112c1d5bb959db56b9b1af931b738b4518fdebaf12e6d7cd0d8af565b0dcd5d5b53c1ab9c3e01ffef6518c7447bb9adeacdd864a675d7b744efd458112b1bc41591fa73be3107d2193f75b49c5a6378f274392bd8709089fedee4ec6298aa0c60e9cbd864a3610b26f1a03a3097e24a11a7c4dccbf2a678ae13a1ed6220ea04fb48835984a8a76190eaee5af6e1b4d2c78fb8143b16af4627abcdc174cb256747eb1d501a846a8c359c1c9572819a14b708e2180ab4cae9a034d485d5ad286f6bdf5c4f69c7f9fb10d22d1945b2d366ba10c786d7c39256f529b404dd7f3dbe9c0a54508c5b101cbcc98cb13b62ed16210ab8b5f0fefed3759224b8defaf1c1201b9af1f870d6dccc969a200014bd4dc018344757a3f0f19f9d9247aa39d208e64f387e22ab9db3d48ed2be536c210cbe5c621c0bf8738b46996325f42bef7f6d3531de7b5f3256812fca6a6d11c155b3d451b32c9e622a5ef79ba38070ebe9c9e63449ebe1069d1cdc18b739cb4f1cf043378dfc4e0fcc1ca9429d083c93f4c3cf8010eb8073a4b33faa8252435e4655e8a12014dc4e402a7d4268285bcce9aaf20df5b3fc1e6c3b687a55b012fa1951a61dfbd26594930fce7fbba571116b6e6ecca78c0b7a2daeb04c389d02cb8ba132dc4a9c8b11bac72555949c60e56ce65d9710e677bed26e5bcbb0008d8107f3d54815973a185c101562064ebefaa3b311562fbdb64465d5870eecaec7907934b0cc86b6303b563d3595f364b93a0c42dff89a8424fd710de017a6d0c21aac393ba15039bd5b4e28c063b76258927eb1a4cf4c383117df7ed4f18334c8d7d0893670b55bc9cea768712225e95f431f90ebcc499da17b2efc57ed3451bd1cc3c8c5d866b60dbfae8dfd060884b074b29d2e987ca6a886494469d0f47f94eb7cc687c563882e52c1835ccc4a3300659d17e78184e5dbcdf77429178d0c660976add7ae088f3b1e30252b2dc312eb60af1b1770963ac407ea6736e454db86ea60cce4a75d40f6dd77bb65f7c1890b20e93989027b6cde33d8822ea7a3b0e7ab0f2e3ecac96ed012f976fd23ef23471f755357c7631836b7a2cd130b5f911441b42d4f6273852be541eb3b3975d9a5174c43eaffc5a41784f60d6fb150bc19016d8e69279e8bc471a9e8af0474ddc9675dc2d249406ded0bb32490a15ee777b915912c1b37311892df6dde9cd11ee3ff5ec8d4a5b300fd592d2072917ae46a0a28b50fc57fdceda9d661c32b67304843d68cd8a1f51c98edd51754b20562351ec9a16b01d46c30dd9aecc16dea2e9614b42fabed3554c1655b528b9d26fe5bf75d241028e33b7a3fe4f7e19299f8d9b6b874d339c6</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-xray">      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">Hey, password is required here.</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">&lt;div class=&quot;hbe hbe-container&quot; id=&quot;hexo-blog-encrypt&quot; data-wpm=&quot;Oh, this is an invalid password. Check and try again, please.&quot; data-whm=&quot;OOPS, these decrypted content may changed, but you can still have a look.&quot;&gt;
  &lt;script id=&quot;hbeData&quot; type=&quot;hbeData&quot; data-hmacdigest=&quot;e99185e194cbc1bdc862d3675a95450e8a32640f4c5e5bfd8d4f58ea7c045463&quot;&gt;22064b17c03cb0c0e58c99349b6889d0c7e9d327de57f2d214b057f3875d6b37b9b20ab3b449f9d3b0ba6ffe12bb71d82eff8171349bc71e3a2c9718b358eacc07c1e2d0dcdcc94bb927d4bdef70eb39fd8e7de731fdf8f27d06339a84133e4a974b5fae5fee1809df024fdfbb238fba030fdd8003e2826f0a33da9ce588a76e8e6bc91b4049cb9065bb5b9840402572bd86834c2d0c361fdb4259dd56633b9d286b14b14b74d50d4ca10de4c2e54f118835e2ea5a28de2ac78c4f57666f83faa6cf49198dbd3f86312e8ae6475e1ad55bc0f991fa504124763e450733221c2a781fb4c5fbae0d7123703d7ac9a38542095b3da435e03cc3247b4eff26b05bc0b9e2a2c706e61562c7bb934180842f9b6dc301690938c4f21c78468483f3e95d8b5dcc7048e9b21da20cd49dde4a8cd683cfc91feffd222c011316f664973126e4043ce5ae95c4d8525c789c438811513f1e1e24c9c959b845bf2deea1d05706ff1f2329ebab25d94e9279b7c0fd1d9ee3aa82b99359db5e871c7a25108f476257793f525ba22c58640459f6a1aea50dde2e5235bfe06d545ff7679ed63014c1ce5952d5f0a15d87729a286948e556a176cefc62cf843f24a49c7c5a2561365d86aa9e69a2262222e85bb229dfbdbaed5616c4080b33cf91e776db2a892d9de18239228cd12fb10d9592911362bf9cfaf192d6dc168710a260c8711fdde489ac8cd703b4a4a62d7185f1a8de98ae066c037af3e20c42459297416aa070706a01ef89cc1fdc055d1931bf4d7e0e26c9a2fc5ab84b2098e2e98e4f9f52b11ddc2f45b8f4f6f1450deda1642de8b63ad477bc947b0ddb74d9d9080d3a71a2dd72a46a5fbf08df811aff67d4e34a400ebe3259e62ba9e8abe68e488008b4b4772ec3e8ad50afa1b9e023cb606c4b83a9569125c2962bd9000927b6b4f086ae21aa65b2b369a101fd92b93dcdea5d70253a3a9032c1737af2756f772fe8274374de56fcf55e82f30e41dab7c940c59135ad056e5e27be785fa697d791224ea112c1d5bb959db56b9b1af931b738b4518fdebaf12e6d7cd0d8af565b0dcd5d5b53c1ab9c3e01ffef6518c7447bb9adeacdd864a675d7b744efd458112b1bc41591fa73be3107d2193f75b49c5a6378f274392bd8709089fedee4ec6298aa0c60e9cbd864a3610b26f1a03a3097e24a11a7c4dccbf2a678ae13a1ed6220ea04fb48835984a8a76190eaee5af6e1b4d2c78fb8143b16af4627abcdc174cb256747eb1d501a846a8c359c1c9572819a14b708e2180ab4cae9a034d485d5ad286f6bdf5c4f69c7f9fb10d22d1945b2d366ba10c786d7c39256f529b404dd7f3dbe9c0a54508c5b101cbcc98cb13b62ed16210ab8b5f0fefed3759224b8defaf1c1201b9af1f870d6dccc969a200014bd4dc018344757a3f0f19f9d9247aa39d208e64f387e22ab9db3d48ed2be536c210cbe5c621c0bf8738b46996325f42bef7f6d3531de7b5f3256812fca6a6d11c155b3d451b32c9e622a5ef79ba38070ebe9c9e63449ebe1069d1cdc18b739cb4f1cf043378dfc4e0fcc1ca9429d083c93f4c3cf8010eb8073a4b33faa8252435e4655e8a12014dc4e402a7d4268285bcce9aaf20df5b3fc1e6c3b687a55b012fa1951a61dfbd26594930fce7fbba571116b6e6ecca78c0b7a2daeb04c389d02cb8ba132dc4a9c8b11bac72555949c60e56ce65d9710e677bed26e5bcbb0008d8107f3d54815973a185c101562064ebefaa3b311562fbdb64465d5870eecaec7907934b0cc86b6303b563d3595f364b93a0c42dff89a8424fd710de017a6d0c21aac393ba15039bd5b4e28c063b76258927eb1a4cf4c383117df7ed4f18334c8d7d0893670b55bc9cea768712225e95f431f90ebcc499da17b2efc57ed3451bd1cc3c8c5d866b60dbfae8dfd060884b074b29d2e987ca6a886494469d0f47f94eb7cc687c563882e52c1835ccc4a3300659d17e78184e5dbcdf77429178d0c660976add7ae088f3b1e30252b2dc312eb60af1b1770963ac407ea6736e454db86ea60cce4a75d40f6dd77bb65f7c1890b20e93989027b6cde33d8822ea7a3b0e7ab0f2e3ecac96ed012f976fd23ef23471f755357c7631836b7a2cd130b5f911441b42d4f6273852be541eb3b3975d9a5174c43eaffc5a41784f60d6fb150bc19016d8e69279e8bc471a9e8af0474ddc9675dc2d249406ded0bb32490a15ee777b915912c1b37311892df6dde9cd11ee3ff5ec8d4a5b300fd592d2072917ae46a0a28b50fc57fdceda9d661c32b67304843d68cd8a1f51c98edd51754b20562351ec9a16b01d46c30dd9aecc16dea2e9614b42fabed3554c1655b528b9d26fe5bf75d241028e33b7a3fe4f7e19299f8d9b6b874d339c6&lt;/script&gt;
  &lt;div class=&quot;hbe hbe-content&quot;&gt;
    &lt;div class=&quot;hbe hbe-input hbe-input-xray&quot;&gt;
      &lt;input class=&quot;hbe hbe-input-field hbe-input-field-xray&quot; type=&quot;password&quot; id=&quot;hbePass&quot;&gt;
      &lt;label class=&quot;hbe hbe-input-label hbe-input-label-xray&quot; for=&quot;hbePass&quot;&gt;
        &lt;span class=&quot;hbe hbe-input-label-content hbe-input-label-content-xray&quot;&gt;Hey, password is required here.&lt;/span&gt;
      &lt;/label&gt;
      &lt;svg class=&quot;hbe hbe-graphic hbe-graphic-xray&quot; width=&quot;300%&quot; height=&quot;100%&quot; viewBox=&quot;0 0 1200 60&quot; preserveAspectRatio=&quot;none&quot;&gt;
        &lt;path d=&quot;M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0&quot;/&gt;
        &lt;path d=&quot;M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0&quot;/&gt;
      &lt;/svg&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;script data-pjax src=&quot;/lib/hbe.js&quot;&gt;&lt;/script&gt;&lt;link href=&quot;/css/hbe.style.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot;&gt;</summary>
    
    
    
    <category term="随笔" scheme="http://stardust14.com/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
    <category term="随笔" scheme="http://stardust14.com/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>MUSIC算法</title>
    <link href="http://stardust14.com/2021/03/15/MUSIC%E7%AE%97%E6%B3%95/"/>
    <id>http://stardust14.com/2021/03/15/MUSIC%E7%AE%97%E6%B3%95/</id>
    <published>2021-03-15T03:22:31.000Z</published>
    <updated>2021-12-08T10:00:37.691Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="music算法"><a class="markdownIt-Anchor" href="#music算法"></a> MUSIC算法</h1><div class="note warning flat"><p>以下部分是基于线阵阵列！！！还有许多不完善的地方，待续···</p></div><h2 id="经典算法"><a class="markdownIt-Anchor" href="#经典算法"></a> 经典算法</h2><p>假设入射到天线阵列的近似为远场窄带信号，它们分别来自<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>θ</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>θ</mi><mn>2</mn></msub><mo separator="true">,</mo><mo separator="true">⋅</mo><mo separator="true">⋅</mo><mo separator="true">⋅</mo><mo separator="true">,</mo><msub><mi>θ</mi><mi>K</mi></msub></mrow><annotation encoding="application/x-tex">\theta_1,\theta_2,···,\theta_K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">⋅</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">⋅</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">⋅</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">K</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>共K个方向，则有</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mi>A</mi><mi>s</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>+</mo><mi>v</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">x(n)=As(n)+v(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">x</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">A</span><span class="mord mathdefault">s</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span></p><blockquote><p>x(n)是天线阵各阵元的接收数据向量，M*1</p><p>A是阵列的方向矩阵，M*K</p><p>s(n)为空间信号向量,K*1</p><p>v(n)是白噪声向量，M*1</p></blockquote><p>接收信号向量的空间相关矩阵可表示为</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>R</mi><mo>=</mo><mi>E</mi><mo stretchy="false">[</mo><mi>X</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mi>X</mi><mo stretchy="false">(</mo><mi>n</mi><msup><mo stretchy="false">)</mo><mi>H</mi></msup><mo stretchy="false">]</mo><mo>=</mo><mi>A</mi><msub><mi>R</mi><mi>s</mi></msub><msup><mi>A</mi><mi>H</mi></msup><mo>+</mo><msup><mi>σ</mi><mn>2</mn></msup><mi>I</mi></mrow><annotation encoding="application/x-tex">R=E[X(n)X(n)^H]=AR_sA^H+\sigma^2I</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.0913309999999998em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span></span></span></span></span></span></span></span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.991331em;vertical-align:-0.15em;"></span><span class="mord mathdefault">A</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span></span></span></span></p><blockquote><p>I是单位矩阵</p></blockquote><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><mo>=</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>j</mi><msub><mi>w</mi><mn>0</mn></msub><mi>τ</mi></mrow></msup><mo>=</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>j</mi><mn>2</mn><mi>π</mi><mi>f</mi><mi>τ</mi></mrow></msup><mo>=</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>j</mi><mn>2</mn><mi>π</mi><mfrac><mi>c</mi><mi>λ</mi></mfrac><msub><mi>x</mi><mi>k</mi></msub><mi>s</mi><mi>i</mi><mi>n</mi><msub><mi>θ</mi><mi>i</mi></msub></mrow></msup></mrow><annotation encoding="application/x-tex">A=e^{-jw_0\tau}=e^{-j2 \pi f\tau}=e^{-j2\pi \frac{c}{\lambda}x_ksin{\theta_i}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.824664em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.02691em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mord mathdefault mtight" style="margin-right:0.1132em;">τ</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8491079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mtight">2</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span><span class="mord mathdefault mtight" style="margin-right:0.1132em;">τ</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.849108em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.363em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mtight">2</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6915428571428572em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">λ</span></span></span></span><span style="top:-3.2255000000000003em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.384em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.344em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15122857142857138em;"><span></span></span></span></span></span></span><span class="mord mathdefault mtight">s</span><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight">n</span><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:-0.02778em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>τ</mi></mrow><annotation encoding="application/x-tex">\tau</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.1132em;">τ</span></span></span></span>是波程差（距离差)<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>τ</mi><mo>=</mo><mfrac><mi>c</mi><mi>λ</mi></mfrac></mrow><annotation encoding="application/x-tex">\tau=\frac{c}{\lambda}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.1132em;">τ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.040392em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.695392em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">λ</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>，c是光速，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>λ</mi></mrow><annotation encoding="application/x-tex">\lambda</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">λ</span></span></span></span>为波长，x_k是位置信息（以原点为坐标），<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>λ</mi><mo>=</mo><mfrac><mi>c</mi><mi>f</mi></mfrac></mrow><annotation encoding="application/x-tex">\lambda=\frac{c}{f}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">λ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1764999999999999em;vertical-align:-0.481108em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.695392em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.481108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p><blockquote><p>为何要进行协方差矩阵处理？</p><p>雷达接收到的信号是累加的！！（二维FFT）</p><p>任何方阵都可以求特征值和特征向量。矩阵可以对角化，那么非零特征值的个数就等于矩阵的秩。</p></blockquote><p>由于实际中采集的接收数据矩阵是有限长的，需要对有限的采样数据的协方差矩阵进行最大似然估计</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi>R</mi><mo stretchy="true">^</mo></mover><mo>=</mo><mfrac><mn>1</mn><mi>L</mi></mfrac><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>L</mi></msubsup><mi>X</mi><msup><mi>X</mi><mi>H</mi></msup></mrow><annotation encoding="application/x-tex">\widehat{R}=\frac{1}{L}\sum_{i=1}^{L}XX^H</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.92333em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.92333em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span></span></span><span class="svg-align" style="width:calc(100% - 0.16668em);margin-left:0.16668em;top:-3.6833299999999998em;"><span class="pstrut" style="height:3em;"></span><span style="height:0.24em;"><svg width='100%' height='0.24em' viewBox='0 0 1062 239' preserveAspectRatio='none'><path d='M529 0h5l519 115c5 1 9 5 9 10 0 1-1 2-1 3l-4 22c-1 5-5 9-11 9h-2L532 67 19 159h-2c-5 0-9-4-11-9l-5-22c-1-6 2-12 8-13z'/></svg></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.326231em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">L</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.981231em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">L</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span></span></span></span></span></span></span></span></span></span></span></p><blockquote><p>L代表矩阵长度</p></blockquote><p>对<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><msub><mi>R</mi><mi>s</mi></msub><msup><mi>A</mi><mi>H</mi></msup></mrow><annotation encoding="application/x-tex">AR_sA^H</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.991331em;vertical-align:-0.15em;"></span><span class="mord mathdefault">A</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span></span></span></span></span></span></span></span></span></span></span>进行特征值的分解，设<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mover accent="true"><mi>λ</mi><mo stretchy="true">~</mo></mover><mn>1</mn></msub><mo separator="true">,</mo><msub><mover accent="true"><mi>λ</mi><mo stretchy="true">~</mo></mover><mn>2</mn></msub><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><msub><mover accent="true"><mi>λ</mi><mo stretchy="true">~</mo></mover><mi>M</mi></msub></mrow><annotation encoding="application/x-tex">\widetilde{\lambda}_1,\widetilde{\lambda}_2,\cdots,\widetilde{\lambda}_M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.14888em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.95444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">λ</span></span></span><span class="svg-align" style="top:-3.69444em;"><span class="pstrut" style="height:3em;"></span><span style="height:0.26em;"><svg width='100%' height='0.26em' viewBox='0 0 600 260' preserveAspectRatio='none'><path d='M200 55.538c-77 0-168 73.953-177 73.953-3 0-7-2.175-9-5.437L2 97c-1-2-2-4-2-6 0-4 2-7 5-9l20-12C116 12 171 0 207 0c86 0 114 68 191 68 78 0 168-68 177-68 4 0 7 2 9 5l12 19c1 2.175 2 4.35 2 6.525 0 4.35-2 7.613-5 9.788l-19 13.05c-92 63.077-116.937 75.308-183 76.128-68.267.847-113-73.952-191-73.952z'/></svg></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.95444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">λ</span></span></span><span class="svg-align" style="top:-3.69444em;"><span class="pstrut" style="height:3em;"></span><span style="height:0.26em;"><svg width='100%' height='0.26em' viewBox='0 0 600 260' preserveAspectRatio='none'><path d='M200 55.538c-77 0-168 73.953-177 73.953-3 0-7-2.175-9-5.437L2 97c-1-2-2-4-2-6 0-4 2-7 5-9l20-12C116 12 171 0 207 0c86 0 114 68 191 68 78 0 168-68 177-68 4 0 7 2 9 5l12 19c1 2.175 2 4.35 2 6.525 0 4.35-2 7.613-5 9.788l-19 13.05c-92 63.077-116.937 75.308-183 76.128-68.267.847-113-73.952-191-73.952z'/></svg></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.95444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">λ</span></span></span><span class="svg-align" style="top:-3.69444em;"><span class="pstrut" style="height:3em;"></span><span style="height:0.26em;"><svg width='100%' height='0.26em' viewBox='0 0 600 260' preserveAspectRatio='none'><path d='M200 55.538c-77 0-168 73.953-177 73.953-3 0-7-2.175-9-5.437L2 97c-1-2-2-4-2-6 0-4 2-7 5-9l20-12C116 12 171 0 207 0c86 0 114 68 191 68 78 0 168-68 177-68 4 0 7 2 9 5l12 19c1 2.175 2 4.35 2 6.525 0 4.35-2 7.613-5 9.788l-19 13.05c-92 63.077-116.937 75.308-183 76.128-68.267.847-113-73.952-191-73.952z'/></svg></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>为特征值；<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>u</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>u</mi><mn>2</mn></msub><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><msub><mi>u</mi><mi>M</mi></msub></mrow><annotation encoding="application/x-tex">u_1,u_2,\cdots,u_M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>是对应正交归一化特征向量。</p><p>通常M&gt;K，假设矩阵<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><msub><mi>R</mi><mi>s</mi></msub><msup><mi>A</mi><mi>H</mi></msup></mrow><annotation encoding="application/x-tex">AR_sA^H</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.991331em;vertical-align:-0.15em;"></span><span class="mord mathdefault">A</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span></span></span></span></span></span></span></span></span></span></span>的所有非零特征值设为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mover accent="true"><mi>λ</mi><mo stretchy="true">~</mo></mover><mn>1</mn></msub><mo separator="true">,</mo><msub><mover accent="true"><mi>λ</mi><mo stretchy="true">~</mo></mover><mn>2</mn></msub><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><msub><mover accent="true"><mi>λ</mi><mo stretchy="true">~</mo></mover><mi>K</mi></msub><mi mathvariant="normal">≠</mi><mn>0</mn></mrow><annotation encoding="application/x-tex">\widetilde{\lambda}_1,\widetilde{\lambda}_2,\cdots,\widetilde{\lambda}_K\neq0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.14888em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.95444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">λ</span></span></span><span class="svg-align" style="top:-3.69444em;"><span class="pstrut" style="height:3em;"></span><span style="height:0.26em;"><svg width='100%' height='0.26em' viewBox='0 0 600 260' preserveAspectRatio='none'><path d='M200 55.538c-77 0-168 73.953-177 73.953-3 0-7-2.175-9-5.437L2 97c-1-2-2-4-2-6 0-4 2-7 5-9l20-12C116 12 171 0 207 0c86 0 114 68 191 68 78 0 168-68 177-68 4 0 7 2 9 5l12 19c1 2.175 2 4.35 2 6.525 0 4.35-2 7.613-5 9.788l-19 13.05c-92 63.077-116.937 75.308-183 76.128-68.267.847-113-73.952-191-73.952z'/></svg></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.95444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">λ</span></span></span><span class="svg-align" style="top:-3.69444em;"><span class="pstrut" style="height:3em;"></span><span style="height:0.26em;"><svg width='100%' height='0.26em' viewBox='0 0 600 260' preserveAspectRatio='none'><path d='M200 55.538c-77 0-168 73.953-177 73.953-3 0-7-2.175-9-5.437L2 97c-1-2-2-4-2-6 0-4 2-7 5-9l20-12C116 12 171 0 207 0c86 0 114 68 191 68 78 0 168-68 177-68 4 0 7 2 9 5l12 19c1 2.175 2 4.35 2 6.525 0 4.35-2 7.613-5 9.788l-19 13.05c-92 63.077-116.937 75.308-183 76.128-68.267.847-113-73.952-191-73.952z'/></svg></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.95444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">λ</span></span></span><span class="svg-align" style="top:-3.69444em;"><span class="pstrut" style="height:3em;"></span><span style="height:0.26em;"><svg width='100%' height='0.26em' viewBox='0 0 600 260' preserveAspectRatio='none'><path d='M200 55.538c-77 0-168 73.953-177 73.953-3 0-7-2.175-9-5.437L2 97c-1-2-2-4-2-6 0-4 2-7 5-9l20-12C116 12 171 0 207 0c86 0 114 68 191 68 78 0 168-68 177-68 4 0 7 2 9 5l12 19c1 2.175 2 4.35 2 6.525 0 4.35-2 7.613-5 9.788l-19 13.05c-92 63.077-116.937 75.308-183 76.128-68.267.847-113-73.952-191-73.952z'/></svg></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">K</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><span class="mrel"><span class="mord"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="rlap"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mrel"></span></span><span class="fix"></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>；剩余的所有特征值设为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mover accent="true"><mi>λ</mi><mo stretchy="true">~</mo></mover><mrow><mi>K</mi><mo>+</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mover accent="true"><mi>λ</mi><mo stretchy="true">~</mo></mover><mrow><mi>K</mi><mo>+</mo><mn>2</mn></mrow></msub><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><msub><mover accent="true"><mi>λ</mi><mo stretchy="true">~</mo></mover><mi>M</mi></msub><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">\widetilde{\lambda}_{K+1},\widetilde{\lambda}_{K+2},\cdots,\widetilde{\lambda}_M=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.162771em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.95444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">λ</span></span></span><span class="svg-align" style="top:-3.69444em;"><span class="pstrut" style="height:3em;"></span><span style="height:0.26em;"><svg width='100%' height='0.26em' viewBox='0 0 600 260' preserveAspectRatio='none'><path d='M200 55.538c-77 0-168 73.953-177 73.953-3 0-7-2.175-9-5.437L2 97c-1-2-2-4-2-6 0-4 2-7 5-9l20-12C116 12 171 0 207 0c86 0 114 68 191 68 78 0 168-68 177-68 4 0 7 2 9 5l12 19c1 2.175 2 4.35 2 6.525 0 4.35-2 7.613-5 9.788l-19 13.05c-92 63.077-116.937 75.308-183 76.128-68.267.847-113-73.952-191-73.952z'/></svg></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328331em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">K</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.95444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">λ</span></span></span><span class="svg-align" style="top:-3.69444em;"><span class="pstrut" style="height:3em;"></span><span style="height:0.26em;"><svg width='100%' height='0.26em' viewBox='0 0 600 260' preserveAspectRatio='none'><path d='M200 55.538c-77 0-168 73.953-177 73.953-3 0-7-2.175-9-5.437L2 97c-1-2-2-4-2-6 0-4 2-7 5-9l20-12C116 12 171 0 207 0c86 0 114 68 191 68 78 0 168-68 177-68 4 0 7 2 9 5l12 19c1 2.175 2 4.35 2 6.525 0 4.35-2 7.613-5 9.788l-19 13.05c-92 63.077-116.937 75.308-183 76.128-68.267.847-113-73.952-191-73.952z'/></svg></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328331em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">K</span><span class="mbin mtight">+</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.95444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">λ</span></span></span><span class="svg-align" style="top:-3.69444em;"><span class="pstrut" style="height:3em;"></span><span style="height:0.26em;"><svg width='100%' height='0.26em' viewBox='0 0 600 260' preserveAspectRatio='none'><path d='M200 55.538c-77 0-168 73.953-177 73.953-3 0-7-2.175-9-5.437L2 97c-1-2-2-4-2-6 0-4 2-7 5-9l20-12C116 12 171 0 207 0c86 0 114 68 191 68 78 0 168-68 177-68 4 0 7 2 9 5l12 19c1 2.175 2 4.35 2 6.525 0 4.35-2 7.613-5 9.788l-19 13.05c-92 63.077-116.937 75.308-183 76.128-68.267.847-113-73.952-191-73.952z'/></svg></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>。</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo stretchy="false">(</mo><mi>A</mi><msub><mi>R</mi><mi>s</mi></msub><msup><mi>A</mi><mi>H</mi></msup><mo stretchy="false">)</mo><msub><mi>u</mi><mi>i</mi></msub><mo>=</mo><msub><mover accent="true"><mi>λ</mi><mo stretchy="true">~</mo></mover><mi>i</mi></msub><msub><mi>u</mi><mi>i</mi></msub><mo separator="true">,</mo><mi>i</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><mi>K</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo stretchy="false">(</mo><mi>A</mi><msub><mi>R</mi><mi>s</mi></msub><msup><mi>A</mi><mi>H</mi></msup><mo stretchy="false">)</mo><msub><mi>u</mi><mi>i</mi></msub><mo>=</mo><msub><mover accent="true"><mi>λ</mi><mo stretchy="true">~</mo></mover><mi>i</mi></msub><msub><mi>u</mi><mi>i</mi></msub><mo separator="true">,</mo><mi>i</mi><mo>=</mo><mrow><mi>K</mi><mo>+</mo><mn>1</mn></mrow><mo separator="true">,</mo><mi>K</mi><mo>+</mo><mn>2</mn><mo separator="true">,</mo><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><mi>M</mi></mrow></mstyle></mtd></mtr></mtable></mrow><annotation encoding="application/x-tex">\begin{cases} (AR_sA^H)u_i=\widetilde{\lambda}_iu_i,i=1,2,,\cdots,K\\ (AR_sA^H)u_i=\widetilde{\lambda}_iu_i,i={K+1},K+2,,\cdots,M \end{cases}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.0000299999999998em;vertical-align:-1.25003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mopen">(</span><span class="mord mathdefault">A</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.95444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">λ</span></span></span><span class="svg-align" style="top:-3.69444em;"><span class="pstrut" style="height:3em;"></span><span style="height:0.26em;"><svg width='100%' height='0.26em' viewBox='0 0 600 260' preserveAspectRatio='none'><path d='M200 55.538c-77 0-168 73.953-177 73.953-3 0-7-2.175-9-5.437L2 97c-1-2-2-4-2-6 0-4 2-7 5-9l20-12C116 12 171 0 207 0c86 0 114 68 191 68 78 0 168-68 177-68 4 0 7 2 9 5l12 19c1 2.175 2 4.35 2 6.525 0 4.35-2 7.613-5 9.788l-19 13.05c-92 63.077-116.937 75.308-183 76.128-68.267.847-113-73.952-191-73.952z'/></svg></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mopen">(</span><span class="mord mathdefault">A</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.95444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">λ</span></span></span><span class="svg-align" style="top:-3.69444em;"><span class="pstrut" style="height:3em;"></span><span style="height:0.26em;"><svg width='100%' height='0.26em' viewBox='0 0 600 260' preserveAspectRatio='none'><path d='M200 55.538c-77 0-168 73.953-177 73.953-3 0-7-2.175-9-5.437L2 97c-1-2-2-4-2-6 0-4 2-7 5-9l20-12C116 12 171 0 207 0c86 0 114 68 191 68 78 0 168-68 177-68 4 0 7 2 9 5l12 19c1 2.175 2 4.35 2 6.525 0 4.35-2 7.613-5 9.788l-19 13.05c-92 63.077-116.937 75.308-183 76.128-68.267.847-113-73.952-191-73.952z'/></svg></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p><p>对上式同时右乘<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>u</mi><mi>H</mi></msup></mrow><annotation encoding="application/x-tex">u^H</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span></span></span></span></span></span></span></span></span></span></span>，有</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>A</mi><msub><mi>R</mi><mi>s</mi></msub><msup><mi>A</mi><mi>H</mi></msup><mo stretchy="false">)</mo><msub><mi>u</mi><mi>i</mi></msub><msup><msub><mi>u</mi><mi>i</mi></msub><mi>H</mi></msup><mo>=</mo><msub><mover accent="true"><mi>λ</mi><mo stretchy="true">~</mo></mover><mi>i</mi></msub><msub><mi>u</mi><mi>i</mi></msub><msup><msub><mi>u</mi><mi>i</mi></msub><mi>H</mi></msup><mo separator="true">,</mo><mi>i</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><mi>M</mi></mrow><annotation encoding="application/x-tex">(AR_sA^H)u_i{u_i}^H=\widetilde{\lambda}_iu_i{u_i}^H,i=1,2,,\cdots,M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0913309999999998em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">A</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.14888em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.95444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">λ</span></span></span><span class="svg-align" style="top:-3.69444em;"><span class="pstrut" style="height:3em;"></span><span style="height:0.26em;"><svg width='100%' height='0.26em' viewBox='0 0 600 260' preserveAspectRatio='none'><path d='M200 55.538c-77 0-168 73.953-177 73.953-3 0-7-2.175-9-5.437L2 97c-1-2-2-4-2-6 0-4 2-7 5-9l20-12C116 12 171 0 207 0c86 0 114 68 191 68 78 0 168-68 177-68 4 0 7 2 9 5l12 19c1 2.175 2 4.35 2 6.525 0 4.35-2 7.613-5 9.788l-19 13.05c-92 63.077-116.937 75.308-183 76.128-68.267.847-113-73.952-191-73.952z'/></svg></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span></span></span></span></p><p>对于i取所有可能的值并且相加，可得</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>A</mi><msub><mi>R</mi><mi>s</mi></msub><msup><mi>A</mi><mi>H</mi></msup><mo stretchy="false">)</mo><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>M</mi></msubsup><msub><mi>u</mi><mi>i</mi></msub><msup><msub><mi>u</mi><mi>i</mi></msub><mi>H</mi></msup><mo>=</mo><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>M</mi></msubsup><msub><mover accent="true"><mi>λ</mi><mo stretchy="true">~</mo></mover><mi>i</mi></msub><msub><mi>u</mi><mi>i</mi></msub><msup><msub><mi>u</mi><mi>i</mi></msub><mi>H</mi></msup><mo separator="true">,</mo><mi>i</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><mi>M</mi></mrow><annotation encoding="application/x-tex">(AR_sA^H)\sum_{i=1}^Mu_i{u_i}^H=\sum_{i=1}^M\widetilde{\lambda}_iu_i{u_i}^H,i=1,2,,\cdots,M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2809409999999999em;vertical-align:-0.29971000000000003em;"></span><span class="mopen">(</span><span class="mord mathdefault">A</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.981231em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.2809409999999999em;vertical-align:-0.29971000000000003em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.981231em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.95444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">λ</span></span></span><span class="svg-align" style="top:-3.69444em;"><span class="pstrut" style="height:3em;"></span><span style="height:0.26em;"><svg width='100%' height='0.26em' viewBox='0 0 600 260' preserveAspectRatio='none'><path d='M200 55.538c-77 0-168 73.953-177 73.953-3 0-7-2.175-9-5.437L2 97c-1-2-2-4-2-6 0-4 2-7 5-9l20-12C116 12 171 0 207 0c86 0 114 68 191 68 78 0 168-68 177-68 4 0 7 2 9 5l12 19c1 2.175 2 4.35 2 6.525 0 4.35-2 7.613-5 9.788l-19 13.05c-92 63.077-116.937 75.308-183 76.128-68.267.847-113-73.952-191-73.952z'/></svg></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span></span></span></span></p><p>由于<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>u</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>u</mi><mn>2</mn></msub><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><msub><mi>u</mi><mi>M</mi></msub></mrow><annotation encoding="application/x-tex">u_1,u_2,\cdots,u_M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>是对应正交归一化矩阵，即有</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>M</mi></msubsup><msub><mi>u</mi><mi>i</mi></msub><msup><msub><mi>u</mi><mi>i</mi></msub><mi>H</mi></msup><mo>=</mo><mi>I</mi></mrow><annotation encoding="application/x-tex">\sum_{i=1}^Mu_i{u_i}^H=I</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2809409999999999em;vertical-align:-0.29971000000000003em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.981231em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span></span></span></span></p><p>即有</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><msub><mi>R</mi><mi>s</mi></msub><msup><mi>A</mi><mi>H</mi></msup><mo>=</mo><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>M</mi></msubsup><msub><mover accent="true"><mi>λ</mi><mo stretchy="true">~</mo></mover><mi>i</mi></msub><msub><mi>u</mi><mi>i</mi></msub><msup><msub><mi>u</mi><mi>i</mi></msub><mi>H</mi></msup><mo>=</mo><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>K</mi></msubsup><msub><mover accent="true"><mi>λ</mi><mo stretchy="true">~</mo></mover><mi>i</mi></msub><msub><mi>u</mi><mi>i</mi></msub><msup><msub><mi>u</mi><mi>i</mi></msub><mi>H</mi></msup></mrow><annotation encoding="application/x-tex">AR_sA^H=\sum_{i=1}^M\widetilde{\lambda}_iu_i{u_i}^H=\sum_{i=1}^K\widetilde{\lambda}_iu_i{u_i}^H</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.991331em;vertical-align:-0.15em;"></span><span class="mord mathdefault">A</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.2809409999999999em;vertical-align:-0.29971000000000003em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.981231em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.95444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">λ</span></span></span><span class="svg-align" style="top:-3.69444em;"><span class="pstrut" style="height:3em;"></span><span style="height:0.26em;"><svg width='100%' height='0.26em' viewBox='0 0 600 260' preserveAspectRatio='none'><path d='M200 55.538c-77 0-168 73.953-177 73.953-3 0-7-2.175-9-5.437L2 97c-1-2-2-4-2-6 0-4 2-7 5-9l20-12C116 12 171 0 207 0c86 0 114 68 191 68 78 0 168-68 177-68 4 0 7 2 9 5l12 19c1 2.175 2 4.35 2 6.525 0 4.35-2 7.613-5 9.788l-19 13.05c-92 63.077-116.937 75.308-183 76.128-68.267.847-113-73.952-191-73.952z'/></svg></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.2809409999999999em;vertical-align:-0.29971000000000003em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.981231em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">K</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.95444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">λ</span></span></span><span class="svg-align" style="top:-3.69444em;"><span class="pstrut" style="height:3em;"></span><span style="height:0.26em;"><svg width='100%' height='0.26em' viewBox='0 0 600 260' preserveAspectRatio='none'><path d='M200 55.538c-77 0-168 73.953-177 73.953-3 0-7-2.175-9-5.437L2 97c-1-2-2-4-2-6 0-4 2-7 5-9l20-12C116 12 171 0 207 0c86 0 114 68 191 68 78 0 168-68 177-68 4 0 7 2 9 5l12 19c1 2.175 2 4.35 2 6.525 0 4.35-2 7.613-5 9.788l-19 13.05c-92 63.077-116.937 75.308-183 76.128-68.267.847-113-73.952-191-73.952z'/></svg></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span></span></span></span></span></span></span></span></span></span></span></p><p>所以，协方差矩阵（自相关矩阵）R可表示为</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>R</mi><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>K</mi></munderover><msub><mover accent="true"><mi>λ</mi><mo stretchy="true">~</mo></mover><mi>i</mi></msub><msub><mi>u</mi><mi>i</mi></msub><msup><msub><mi>u</mi><mi>i</mi></msub><mi>H</mi></msup><mo>+</mo><msubsup><mi>σ</mi><mi>v</mi><mn>2</mn></msubsup><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>M</mi></munderover><msub><mi>u</mi><mi>i</mi></msub><msup><msub><mi>u</mi><mi>i</mi></msub><mi>H</mi></msup><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>K</mi></munderover><mo stretchy="false">(</mo><msub><mover accent="true"><mi>λ</mi><mo stretchy="true">~</mo></mover><mi>i</mi></msub><mo>+</mo><msubsup><mi>σ</mi><mi>v</mi><mn>2</mn></msubsup><mo stretchy="false">)</mo><msub><mi>u</mi><mi>i</mi></msub><msup><msub><mi>u</mi><mi>i</mi></msub><mi>H</mi></msup><mo>+</mo><msubsup><mi>σ</mi><mi>v</mi><mn>2</mn></msubsup><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mi>K</mi><mo>+</mo><mn>1</mn></mrow><mi>M</mi></munderover><msub><mi>u</mi><mi>i</mi></msub><msup><msub><mi>u</mi><mi>i</mi></msub><mi>H</mi></msup><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>M</mi></munderover><msub><mi>λ</mi><mi>i</mi></msub><msub><mi>u</mi><mi>i</mi></msub><msup><msub><mi>u</mi><mi>i</mi></msub><mi>H</mi></msup></mrow><annotation encoding="application/x-tex">R=\sum_{i=1}^K\widetilde{\lambda}_iu_i{u_i}^H+\sigma_v^2\sum_{i=1}^Mu_i{u_i}^H=\sum_{i=1}^K(\widetilde{\lambda}_i+\sigma_v^2)u_i{u_i}^H+\sigma_v^2\sum_{i=K+1}^Mu_i{u_i}^H=\sum_{i=1}^M{\lambda}_iu_i{u_i}^H</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.106005em;vertical-align:-1.277669em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">K</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.95444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">λ</span></span></span><span class="svg-align" style="top:-3.69444em;"><span class="pstrut" style="height:3em;"></span><span style="height:0.26em;"><svg width='100%' height='0.26em' viewBox='0 0 600 260' preserveAspectRatio='none'><path d='M200 55.538c-77 0-168 73.953-177 73.953-3 0-7-2.175-9-5.437L2 97c-1-2-2-4-2-6 0-4 2-7 5-9l20-12C116 12 171 0 207 0c86 0 114 68 191 68 78 0 168-68 177-68 4 0 7 2 9 5l12 19c1 2.175 2 4.35 2 6.525 0 4.35-2 7.613-5 9.788l-19 13.05c-92 63.077-116.937 75.308-183 76.128-68.267.847-113-73.952-191-73.952z'/></svg></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:3.106005em;vertical-align:-1.277669em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.106005em;vertical-align:-1.277669em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">K</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.95444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">λ</span></span></span><span class="svg-align" style="top:-3.69444em;"><span class="pstrut" style="height:3em;"></span><span style="height:0.26em;"><svg width='100%' height='0.26em' viewBox='0 0 600 260' preserveAspectRatio='none'><path d='M200 55.538c-77 0-168 73.953-177 73.953-3 0-7-2.175-9-5.437L2 97c-1-2-2-4-2-6 0-4 2-7 5-9l20-12C116 12 171 0 207 0c86 0 114 68 191 68 78 0 168-68 177-68 4 0 7 2 9 5l12 19c1 2.175 2 4.35 2 6.525 0 4.35-2 7.613-5 9.788l-19 13.05c-92 63.077-116.937 75.308-183 76.128-68.267.847-113-73.952-191-73.952z'/></svg></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1413309999999999em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:3.1810030000000005em;vertical-align:-1.352667em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.8556639999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mathdefault mtight" style="margin-right:0.07153em;">K</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.352667em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.106005em;vertical-align:-1.277669em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">λ</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span></span></span></span></span></span></span></span></span></span></span></span></p><blockquote><p>式中<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>λ</mi><mi>i</mi></msub><mo>=</mo><msub><mover accent="true"><mi>λ</mi><mo stretchy="true">~</mo></mover><mi>i</mi></msub><mo>+</mo><msubsup><mi>σ</mi><mi>v</mi><mn>2</mn></msubsup><mo separator="true">,</mo><mi>i</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><mi>K</mi></mrow><annotation encoding="application/x-tex">{\lambda}_i=\widetilde{\lambda}_i+\sigma_v^2,i=1,2,\cdots,K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">λ</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1044399999999999em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.95444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">λ</span></span></span><span class="svg-align" style="top:-3.69444em;"><span class="pstrut" style="height:3em;"></span><span style="height:0.26em;"><svg width='100%' height='0.26em' viewBox='0 0 600 260' preserveAspectRatio='none'><path d='M200 55.538c-77 0-168 73.953-177 73.953-3 0-7-2.175-9-5.437L2 97c-1-2-2-4-2-6 0-4 2-7 5-9l20-12C116 12 171 0 207 0c86 0 114 68 191 68 78 0 168-68 177-68 4 0 7 2 9 5l12 19c1 2.175 2 4.35 2 6.525 0 4.35-2 7.613-5 9.788l-19 13.05c-92 63.077-116.937 75.308-183 76.128-68.267.847-113-73.952-191-73.952z'/></svg></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.061108em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>λ</mi><mi>i</mi></msub><mo>=</mo><msubsup><mi>σ</mi><mi>v</mi><mn>2</mn></msubsup><mo separator="true">,</mo><mi>i</mi><mo>=</mo><mi>K</mi><mo>+</mo><mn>1</mn><mi mathvariant="normal">，</mi><mi>K</mi><mo>+</mo><mi mathvariant="normal">，</mi><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><mi>M</mi></mrow><annotation encoding="application/x-tex">{\lambda}_i=\sigma_v^2,i=K+1，K+，\cdots,M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">λ</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.061108em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mord cjk_fallback">，</span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord cjk_fallback">，</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span></span></span></span></p></blockquote><blockquote><p>经标准化的样本数据的协方差矩阵就是原始样本数据的样本矩阵</p><p>标准化是指正态化，即将原始数据处理成均值为0，方差为1的标准数据。</p></blockquote><blockquote><p>R的M个特征值中与信号有关的仅有K个，分别是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>λ</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>λ</mi><mn>2</mn></msub><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><msub><mi>λ</mi><mi>K</mi></msub></mrow><annotation encoding="application/x-tex">{\lambda}_1,{\lambda}_2,\cdots,{\lambda}_K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">λ</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">λ</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">λ</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">K</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>,其余的M-K个特征值<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>λ</mi><mrow><mi>K</mi><mo>+</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>λ</mi><mrow><mi>K</mi><mo>+</mo><mn>2</mn></mrow></msub><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><msub><mi>λ</mi><mi>M</mi></msub></mrow><annotation encoding="application/x-tex">{\lambda}_{K+1},{\lambda}_{K+2},\cdots,{\lambda}_M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.902771em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">λ</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328331em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">K</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">λ</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328331em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">K</span><span class="mbin mtight">+</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">λ</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>只与噪声有关。</p></blockquote><p>信号子空间用符号<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>E</mi><mi>s</mi></msub></mrow><annotation encoding="application/x-tex">E_s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>所表示，由<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>λ</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>λ</mi><mn>2</mn></msub><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><msub><mi>λ</mi><mi>K</mi></msub></mrow><annotation encoding="application/x-tex">{\lambda}_1,{\lambda}_2,\cdots,{\lambda}_K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">λ</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">λ</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">λ</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">K</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>对应的特征向量<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>u</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>u</mi><mn>2</mn></msub><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><msub><mi>u</mi><mi>K</mi></msub></mrow><annotation encoding="application/x-tex">u_1,u_2,\cdots,u_K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">K</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>生成的子空间，即</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>E</mi><mi>s</mi></msub><mo>=</mo><mi>s</mi><mi>p</mi><mi>a</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">E_s=span</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault">p</span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span></span></span></span>{<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>u</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>u</mi><mn>2</mn></msub><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><msub><mi>u</mi><mi>K</mi></msub></mrow><annotation encoding="application/x-tex">u_1,u_2,\cdots,u_K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">K</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>}</p><blockquote><p>信号子空间的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>λ</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>λ</mi><mn>2</mn></msub><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><msub><mi>λ</mi><mi>K</mi></msub></mrow><annotation encoding="application/x-tex">{\lambda}_1,{\lambda}_2,\cdots,{\lambda}_K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">λ</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">λ</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">λ</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">K</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>表示的是大特征值，噪声子空间的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>λ</mi><mrow><mi>K</mi><mo>+</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>λ</mi><mrow><mi>K</mi><mo>+</mo><mn>2</mn></mrow></msub><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><msub><mi>λ</mi><mi>M</mi></msub></mrow><annotation encoding="application/x-tex">{\lambda}_{K+1},{\lambda}_{K+2},\cdots,{\lambda}_M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.902771em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">λ</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328331em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">K</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">λ</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328331em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">K</span><span class="mbin mtight">+</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">λ</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>表示的是小特征值。</p></blockquote><p>噪声子空间用符号<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>E</mi><mi>N</mi></msub></mrow><annotation encoding="application/x-tex">E_N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>所表示，由<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>λ</mi><mrow><mi>K</mi><mo>+</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>λ</mi><mrow><mi>K</mi><mo>+</mo><mn>2</mn></mrow></msub><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><msub><mi>λ</mi><mi>M</mi></msub></mrow><annotation encoding="application/x-tex">{\lambda}_{K+1},{\lambda}_{K+2},\cdots,{\lambda}_M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.902771em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">λ</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328331em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">K</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">λ</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328331em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">K</span><span class="mbin mtight">+</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">λ</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>对应的特征向量<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>u</mi><mrow><mi>K</mi><mo>+</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><msub><mi>u</mi><mi>M</mi></msub></mrow><annotation encoding="application/x-tex">u_{K+1},\cdots,u_M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.638891em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328331em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">K</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>生成的子空间，即</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>E</mi><mi>N</mi></msub><mo>=</mo><mi>s</mi><mi>p</mi><mi>a</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">E_N=span</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault">p</span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span></span></span></span>{<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>u</mi><mrow><mi>K</mi><mo>+</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>u</mi><mrow><mi>K</mi><mo>+</mo><mn>2</mn></mrow></msub><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><msub><mi>u</mi><mi>M</mi></msub></mrow><annotation encoding="application/x-tex">u_{K+1},u_{K+2},\cdots,u_M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.638891em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328331em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">K</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328331em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">K</span><span class="mbin mtight">+</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>}</p><p><font color='red'><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>E</mi><mi>s</mi></msub></mrow><annotation encoding="application/x-tex">E_s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>既与信号有关，也与噪声有关；<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>E</mi><mi>N</mi></msub></mrow><annotation encoding="application/x-tex">E_N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>仅与噪声有关。</font></p><p>定义矩阵</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>G</mi><mo>=</mo><mo stretchy="false">[</mo><msub><mi>u</mi><mrow><mi>k</mi><mo>+</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>u</mi><mrow><mi>k</mi><mo>+</mo><mn>2</mn></mrow></msub><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><msub><mi>u</mi><mi>M</mi></msub><mo stretchy="false">]</mo><mo>∈</mo><msup><mi>C</mi><mrow><mi>M</mi><mo>×</mo><mi>M</mi><mo>−</mo><mi>k</mi></mrow></msup></mrow><annotation encoding="application/x-tex">G=[u_{k+1},u_{k+2},\cdots,u_M]\in C^{M \times M-k}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">G</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mbin mtight">+</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8491079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span><span class="mbin mtight">×</span><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span></span></span></span></span></p><blockquote><p>G矩阵相当于噪声子空间构成的矩阵。</p><p>为什么要用噪声子空间作为G？</p><p>导向矢量和噪声子空间正交</p></blockquote><p>由于A是列满秩矩阵，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>R</mi><mi>s</mi></msub></mrow><annotation encoding="application/x-tex">R_s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>是满秩矩阵，所以有</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>A</mi><mi>H</mi></msup><mi>G</mi><mo>=</mo><mn>0</mn><mspace linebreak="newline"></mspace><mo>⇓</mo><mspace linebreak="newline"></mspace><msup><mi>G</mi><mi>H</mi></msup><mi>A</mi><mo>=</mo><msup><mi>G</mi><mi>H</mi></msup><mo stretchy="false">[</mo><mi>a</mi><mo stretchy="false">(</mo><msub><mi>θ</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mspace width="1em"/><mi>a</mi><mo stretchy="false">(</mo><msub><mi>θ</mi><mn>2</mn></msub><mo stretchy="false">)</mo><mspace width="1em"/><mo>⋯</mo><mspace width="1em"/><mi>a</mi><mo stretchy="false">(</mo><msub><mi>θ</mi><mi>k</mi></msub><mo stretchy="false">)</mo><mo stretchy="false">]</mo><mo>=</mo><mn>0</mn><mspace linebreak="newline"></mspace><mo>⇓</mo><mspace linebreak="newline"></mspace><msup><mi>G</mi><mi>H</mi></msup><mi>a</mi><mo stretchy="false">(</mo><msub><mi>θ</mi><mi>k</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mn>0</mn><mo separator="true">,</mo><mspace width="1em"/><mi>k</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><mi>K</mi><mi mathvariant="normal">.</mi></mrow><annotation encoding="application/x-tex">A^HG=0     \\      \Downarrow \\    G^HA=G^H[a(\theta_1)\quad a(\theta_2) \quad \cdots \quad a(\theta_k)]=0\\    \Downarrow \\    G^Ha(\theta_k)=0, \quad k=1,2,\cdots,K.</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8913309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span></span></span></span></span></span></span></span><span class="mord mathdefault">G</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mrel">⇓</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8913309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span></span></span></span></span></span></span></span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1413309999999999em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span></span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathdefault">a</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathdefault">a</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:1em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathdefault">a</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mrel">⇓</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.1413309999999999em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span></span></span></span></span></span></span></span><span class="mord mathdefault">a</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="mord">.</span></span></span></span></span></p><blockquote><p>其中<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mo stretchy="false">(</mo><msub><mi>θ</mi><mi>k</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">a(\theta_k)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">a</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>是阵列导向向量。</p></blockquote><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi>R</mi><mo>^</mo></mover><mo>=</mo><mfrac><mn>1</mn><mi>N</mi></mfrac><munderover><mo>∑</mo><mrow><mi>n</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><mi>x</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><msup><mi>x</mi><mi>H</mi></msup><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\hat{R}=\frac{1}{N}\sum_{n=1}^N x(n)x^H(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9467699999999999em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9467699999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span></span></span><span style="top:-3.25233em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;">^</span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.0954490000000003em;vertical-align:-1.267113em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.882887em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.267113em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">x</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span></span></p><p>可得到MUSIC谱估计为</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>P</mi><mrow><mi>M</mi><mi>U</mi><mi>S</mi><mi>I</mi><mi>C</mi></mrow></msub><mo stretchy="false">(</mo><mi>θ</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><msup><mi>a</mi><mi>H</mi></msup><mo stretchy="false">(</mo><mi>θ</mi><mo stretchy="false">)</mo><mover accent="true"><mi>G</mi><mo>^</mo></mover><msup><mover accent="true"><mi>G</mi><mo>^</mo></mover><mi>H</mi></msup><mi>a</mi><mo stretchy="false">(</mo><mi>θ</mi><mo stretchy="false">)</mo></mrow></mfrac><mo separator="true">,</mo><mspace width="1em"/><mi>θ</mi><mo>∈</mo><mo stretchy="false">(</mo><mo>−</mo><mfrac><mi>π</mi><mn>2</mn></mfrac><mo separator="true">,</mo><mfrac><mi>π</mi><mn>2</mn></mfrac><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P_{MUSIC}(\theta)=\frac{1}{a^H(\theta) \hat{G} \hat{G}^H a(\theta)} ,\quad \theta \in (-\frac{\pi}{2},\frac{\pi}{2})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span><span class="mord mathdefault mtight" style="margin-right:0.10903em;">U</span><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span><span class="mord mathdefault mtight" style="margin-right:0.07847em;">I</span><span class="mord mathdefault mtight" style="margin-right:0.07153em;">C</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.40821em;vertical-align:-1.08677em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.16323em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.767331em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9467699999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">G</span></span></span><span style="top:-3.25233em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;">^</span></span></span></span></span></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9467699999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">G</span></span></span><span style="top:-3.25233em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;">^</span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.767331em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span></span></span></span></span></span></span></span><span class="mord mathdefault">a</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.08677em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.7935600000000003em;vertical-align:-0.686em;"></span><span class="mopen">(</span><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.10756em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">π</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.10756em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">π</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span></span></span></span></span></p><blockquote><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi>G</mi><mo>^</mo></mover></mrow><annotation encoding="application/x-tex">\hat{G}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9467699999999999em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9467699999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">G</span></span></span><span style="top:-3.25233em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;">^</span></span></span></span></span></span></span></span></span>是由自相关矩阵<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi>R</mi><mo>^</mo></mover></mrow><annotation encoding="application/x-tex">\hat{R}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9467699999999999em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9467699999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span></span></span><span style="top:-3.25233em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;">^</span></span></span></span></span></span></span></span></span>的特征值分解而得到。</p></blockquote><blockquote><p><font color='red'>在空间谱域求取谱函数最大值，其谱峰对应的角度即是来波方向角的估计值。</font></p></blockquote><div class='tip warning'>    <p>线阵的信号参数搜索范围为[-90°，90°]<p>    <p>面阵的信号参数搜索范围为[-180°，180°]<p></div><p>由于实际中要估计信号源的个数，因此估计的越准确误差越小，所以估计信号源的算法也很重要。</p><div class='tip warning'><p>信号源估计算法还未理解透彻，待续....<p></div><p><font color='blue'>AIC准则估计信号源个数的算法为</font></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><mi>I</mi><mi>C</mi><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo><mo>=</mo><mo>−</mo><mn>2</mn><mi>l</mi><mi>n</mi><mo stretchy="false">[</mo><mo stretchy="false">(</mo><munderover><mo>∏</mo><mrow><mi>i</mi><mo>=</mo><mi>k</mi><mo>+</mo><mn>1</mn></mrow><mi>M</mi></munderover><msubsup><mi>λ</mi><mi>i</mi><mfrac><mn>1</mn><mrow><mi>M</mi><mo>−</mo><mi>k</mi></mrow></mfrac></msubsup><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mo stretchy="false">(</mo><mfrac><mn>1</mn><mrow><mi>M</mi><mo>−</mo><mi>k</mi></mrow></mfrac><mo stretchy="false">)</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mi>k</mi><mo>+</mo><mn>1</mn></mrow><mi>M</mi></munderover><msub><mi>λ</mi><mi>i</mi></msub><msup><mo stretchy="false">]</mo><mrow><mo stretchy="false">(</mo><mi>M</mi><mo>−</mo><mi>k</mi><mo stretchy="false">)</mo><mi>N</mi></mrow></msup><mo>+</mo><mn>2</mn><mi>k</mi><mo stretchy="false">(</mo><mn>2</mn><mi>M</mi><mo>−</mo><mi>K</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">AIC(k)=-2ln[(\prod_{i=k+1}^{M} \lambda_{i}^{\frac{1}{M-k}})/(\frac{1}{M-k})\sum_{i=k+1}^{M} \lambda_i]^{(M-k)N}+2k(2M-K)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.1887800000000004em;vertical-align:-1.360444em;"></span><span class="mord">−</span><span class="mord">2</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">n</span><span class="mopen">[</span><span class="mopen">(</span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.8478869999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∏</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.360444em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.218285em;"><span style="top:-2.7231360000000002em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span style="top:-3.6272650000000004em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8443142857142858em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span style="top:-3.2255em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.384em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.40352142857142853em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.27686399999999994em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord">/</span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693300000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.8478869999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.360444em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mclose mtight">)</span><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mopen">(</span><span class="mord">2</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="mclose">)</span></span></span></span></span></p><p>信号源个数是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mspace width="1em"/><mspace width="1em"/><mspace width="1em"/><mover accent="true"><mi>K</mi><mo>^</mo></mover><mo>=</mo><mi>m</mi><mi>i</mi><mi>n</mi><mo stretchy="false">{</mo><mi>A</mi><mi>I</mi><mi>C</mi><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>k</mi><mo>=</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo separator="true">,</mo><mo>⋯</mo><mi>M</mi><mo>−</mo><mn>1</mn><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\quad \quad \quad \hat{K}=min\{AIC(k),k=0,1,\cdots M-1\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9467699999999999em;vertical-align:0em;"></span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:1em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9467699999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">K</span></span></span><span style="top:-3.25233em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">m</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mopen">{</span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">}</span></span></span></span></p><p><font color='blue'>MDL准则估计算法可表示为</font></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>M</mi><mi>D</mi><mi>L</mi><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo><mo>=</mo><mo>−</mo><mi>l</mi><mi>n</mi><mo stretchy="false">[</mo><mo stretchy="false">(</mo><munderover><mo>∏</mo><mrow><mi>i</mi><mo>=</mo><mi>k</mi><mo>+</mo><mn>1</mn></mrow><mi>M</mi></munderover><msubsup><mi>λ</mi><mi>i</mi><mfrac><mn>1</mn><mrow><mi>M</mi><mo>−</mo><mi>k</mi></mrow></mfrac></msubsup><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mo stretchy="false">(</mo><mfrac><mn>1</mn><mrow><mi>M</mi><mo>−</mo><mi>k</mi></mrow></mfrac><mo stretchy="false">)</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mi>k</mi><mo>+</mo><mn>1</mn></mrow><mi>M</mi></munderover><msub><mi>λ</mi><mi>i</mi></msub><msup><mo stretchy="false">]</mo><mrow><mo stretchy="false">(</mo><mi>M</mi><mo>−</mo><mi>k</mi><mo stretchy="false">)</mo><mi>N</mi></mrow></msup><mo>+</mo><mfrac><mi>k</mi><mn>2</mn></mfrac><mo stretchy="false">(</mo><mn>2</mn><mi>M</mi><mo>−</mo><mi>k</mi><mo stretchy="false">)</mo><mi>l</mi><mi>n</mi><mi>N</mi></mrow><annotation encoding="application/x-tex">MDL(k)=-ln[(\prod_{i=k+1}^M \lambda_{i}^{\frac{1}{M-k}})/(\frac{1}{M-k})\sum_{i=k+1}^M \lambda_i]^{(M-k)N} +\frac{k}{2}(2M-k)lnN</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord mathdefault">L</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.1887800000000004em;vertical-align:-1.360444em;"></span><span class="mord">−</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">n</span><span class="mopen">[</span><span class="mopen">(</span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.8478869999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∏</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.360444em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.218285em;"><span style="top:-2.7231360000000002em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span style="top:-3.6272650000000004em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8443142857142858em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span style="top:-3.2255em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.384em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.40352142857142853em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.27686399999999994em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord">/</span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693300000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.8478869999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.360444em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mclose mtight">)</span><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.05744em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mord">2</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mclose">)</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">n</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span></span></span></p><p>信号源个数是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mspace width="1em"/><mspace width="1em"/><mspace width="1em"/><mover accent="true"><mi>K</mi><mo>^</mo></mover><mo>=</mo><mi>m</mi><mi>i</mi><mi>n</mi><mo stretchy="false">{</mo><mi>M</mi><mi>D</mi><mi>L</mi><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>k</mi><mo>=</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><mi>M</mi><mo>−</mo><mn>1</mn><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\quad \quad \quad \hat{K}=min \{MDL(k),k=0,1,\cdots,M-1\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9467699999999999em;vertical-align:0em;"></span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:1em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9467699999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">K</span></span></span><span style="top:-3.25233em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">m</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mopen">{</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord mathdefault">L</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">}</span></span></span></span></p><h2 id="root-music算法"><a class="markdownIt-Anchor" href="#root-music算法"></a> root-music算法</h2><h2 id="空间平滑算法"><a class="markdownIt-Anchor" href="#空间平滑算法"></a> 空间平滑算法</h2><blockquote><p>从各子阵的数据协方差角度进行分析</p></blockquote><p>原理：对于一窄带情况下的均匀线阵，第l个真元接收的数据为</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20211208094229.png" alt="" /></p><p>其中，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>a</mi><mi>l</mi></msub><mo stretchy="false">(</mo><msub><mi>θ</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo>=</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>j</mi><msub><mi>ω</mi><mn>0</mn></msub><msub><mi>τ</mi><mrow><mi>l</mi><mi>i</mi></mrow></msub></mrow></msup></mrow><annotation encoding="application/x-tex">a_l(\theta_i)=e^{-j\omega_0\tau_{li}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.824664em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.1132em;">τ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:-0.1132em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15122857142857138em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>,<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>τ</mi><mrow><mi>l</mi><mi>i</mi></mrow></msub><mo>=</mo><mo stretchy="false">(</mo><mi>l</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mi>d</mi><mi>s</mi><mi>i</mi><mi>n</mi><mo stretchy="false">(</mo><msub><mi>θ</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mi>c</mi></mrow><annotation encoding="application/x-tex">\tau_{li}=(l-1)dsin(\theta_i)/c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.1132em;">τ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.1132em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mord mathdefault">d</span><span class="mord mathdefault">s</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord">/</span><span class="mord mathdefault">c</span></span></span></span>，M为阵元数，N为信号源数。</p><p>空间前向平滑技术的原理如下所示，将均匀线阵（M个阵元）分成相互交错的p个子阵，每个子阵的阵元数为m，即有M = p+m-1。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20211208094849.png" alt="image-20211208094848464" /></p><p>取第一个子阵（一般为最左边子阵）为参考子阵，则对于第k个子阵有数据模型</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20211208095710.png" alt="" /></p><p>其中</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20211208095741.png" alt="" /></p><p>则该子阵数据协方差矩阵为</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20211208095929.png" alt="" /></p><p>前向空间平滑MUSIC方法对满秩协方差矩阵的恢复是通过求各子阵协方差矩阵的均值来实现的，即取前向平滑修正的协方差矩阵为</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20211208100128.png" alt="" /></p><p>其中，</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20211208100211.png" alt="" /></p><p>若子阵阵元数目<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mo>≥</mo><mi>N</mi></mrow><annotation encoding="application/x-tex">m \geq N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span></span>,则当<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mo>≥</mo><mi>N</mi></mrow><annotation encoding="application/x-tex">p \geq N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8304100000000001em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span></span>时前向空间平滑数据协方差矩阵<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>R</mi><mi>f</mi></msup></mrow><annotation encoding="application/x-tex">R^f</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8491079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span></span></span></span></span></span></span></span></span></span></span>是满秩的。</p><p>采用后向平滑的方法划分子阵，则第i个子阵的数据矢量</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20211208150531.png" alt="" /></p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20211208150637.png" alt="" /></p><p>比较两式可得到如下关系，即前向第k个子阵与后向第p-k+1个子阵存在如下关系：</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20211208162932.png" alt="" /></p><p>其中，J是m维的交换矩阵。</p><p>后向平滑第p-k+1个子阵的数据协方差矩阵为</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20211208163110.png" alt="" /></p><p>又因为</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20211208163333.png" alt="" /></p><p>结合变成如下形式</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20211208163433.png" alt="" /></p><p>则后向空间平滑修正的数据矩阵为</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20211208163521.png" alt="" /></p><p>其中，</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20211208163603.png" alt="" /></p><p>若子阵阵元数目<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mo>≥</mo><mi>N</mi></mrow><annotation encoding="application/x-tex">m \geq N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span></span>，则当<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mo>≥</mo><mi>N</mi></mrow><annotation encoding="application/x-tex">p \geq N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8304100000000001em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span></span>时后向空间平滑数据协方差矩阵<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>R</mi><mi>b</mi></msup></mrow><annotation encoding="application/x-tex">R^b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.849108em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">b</span></span></span></span></span></span></span></span></span></span></span>是满秩的。</p><blockquote><p>从另一个角度来进行分析</p></blockquote><p>定义两个<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mo>×</mo><mi>M</mi></mrow><annotation encoding="application/x-tex">m\times M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span></span></span></span>数据矩阵：</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20211208164218.png" alt="" /></p><p>其中，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>J</mi><mrow><mi>m</mi><mo>×</mo><mi>m</mi></mrow></msub></mrow><annotation encoding="application/x-tex">J_{m \times m}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.891661em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.09618em;">J</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.25833100000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.09618em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mbin mtight">×</span><span class="mord mathdefault mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span></span>是反对角线为1的置换矩阵。</p><p>所以可以发现式（4.3.2）和（4.3.6）所示的子阵数据模型可以分别变为以下两式：</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20211208164503.png" alt="" /></p><p>可得数据协方差矩阵</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20211208164531.png" alt="" /></p><p>则前后向平滑修正的数据协方差矩阵可以用下面两式表示：</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20211208164857.png" alt="" /></p><p>考虑前后向空间平滑算法中的第k个子阵的数据协方差矩阵式（4.3.16）以及式（4.3.17）在原始数据协方差矩阵中的位置，可以看出，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>R</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">R_k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>相当于矩阵R中第k行（列）到第k+m-1行（列）的一个子阵，而<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>R</mi><mi>k</mi><mi>b</mi></msubsup></mrow><annotation encoding="application/x-tex">R^b_k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.132216em;vertical-align:-0.2831079999999999em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-2.4168920000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2831079999999999em;"><span></span></span></span></span></span></span></span></span></span>与<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>R</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">R_k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>满足下列关系：</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20211208171806.png" alt="" /></p><p>将整个数据协方差矩阵R分为如下图所示的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mo>×</mo><mi>p</mi></mrow><annotation encoding="application/x-tex">p \times p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span></span></span></span>个相互叠加的子阵，子阵的维数都是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mo>×</mo><mi>m</mi></mrow><annotation encoding="application/x-tex">m \times m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span></span></span></span>，图中的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>R</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub></mrow><annotation encoding="application/x-tex">R_{ij}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>相当于矩阵R中第i行到第m+i-1行及第j行到第m+j-1列的一个子阵，即<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>R</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><mo>=</mo><mi>R</mi><mo stretchy="false">(</mo><mi>i</mi><mo>:</mo><mi>m</mi><mo>+</mo><mi>i</mi><mo>−</mo><mn>1</mn><mo separator="true">,</mo><mi>j</mi><mo>:</mo><mi>m</mi><mo>+</mo><mi>j</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">R_{ij}=R(i:m+i-1,j:m+j-1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mopen">(</span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.74285em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span>。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20211208175119.png" alt="" /></p><p>前向平滑的第k个子阵的协方差矩阵<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>R</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">R_k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>就相当于上图中整个数据协方差矩阵R的第k行（i=k）第k列（j=k）分块阵<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>R</mi><mi>k</mi></msub><mi>k</mi></mrow><annotation encoding="application/x-tex">R_kk</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span>，而</p><h1 id="空间谱知识"><a class="markdownIt-Anchor" href="#空间谱知识"></a> 空间谱知识</h1><h2 id="相干信号数学模型"><a class="markdownIt-Anchor" href="#相干信号数学模型"></a> 相干信号数学模型</h2><p>在实际环境中相干信号源是普遍存在的，如信号传输过程中的多径效应，或者敌方有意设置的电磁干扰等。</p><p>对于两个平稳信号<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>s</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">s_i(t)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mclose">)</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>s</mi><mi>k</mi></msub><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">s_k(t)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mclose">)</span></span></span></span>，定义它们的相关系数为：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>ρ</mi><mrow><mi>i</mi><mi>k</mi></mrow></msub><mo>=</mo><mfrac><mrow><mi>E</mi><mo stretchy="false">[</mo><msub><mi>s</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><msubsup><mi>s</mi><mi>k</mi><mo>∗</mo></msubsup><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo stretchy="false">]</mo></mrow><msqrt><mrow><mi>E</mi><mo stretchy="false">[</mo><msup><mrow><mo fence="true">∣</mo><msub><mi>s</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo fence="true">∣</mo></mrow><mn>2</mn></msup><mo stretchy="false">]</mo><mi>E</mi><mo stretchy="false">[</mo><msup><mrow><mo fence="true">∣</mo><msub><mi>s</mi><mi>k</mi></msub><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo fence="true">∣</mo></mrow><mn>2</mn></msup><mo stretchy="false">]</mo></mrow></msqrt></mfrac></mrow><annotation encoding="application/x-tex">\rho_{ik} = \frac{E[s_i(t)s_k^{*}(t)]}{\sqrt{E[\left| s_i(t) \right|^2]E[\left| s_k(t)\right|^2]}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">ρ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.157em;vertical-align:-1.73em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.1100000000000003em;"><span class="pstrut" style="height:3.3370040000000003em;"></span><span class="mord"><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.337004em;"><span class="svg-align" style="top:-3.8em;"><span class="pstrut" style="height:3.8em;"></span><span class="mord" style="padding-left:1em;"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mopen">[</span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;">∣</span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mclose delimcenter" style="top:0em;">∣</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.954008em;"><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">]</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mopen">[</span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;">∣</span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mclose delimcenter" style="top:0em;">∣</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.954008em;"><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">]</span></span></span><span style="top:-3.297004em;"><span class="pstrut" style="height:3.8em;"></span><span class="hide-tail" style="min-width:1.02em;height:1.8800000000000001em;"><svg width='400em' height='1.8800000000000001em' viewBox='0 0 400000 1944' preserveAspectRatio='xMinYMin slice'><path d='M1001,80H400000v40H1013.1s-83.4,268,-264.1,840c-180.7,572,-277,876.3,-289,913c-4.7,4.7,-12.7,7,-24,7s-12,0,-12,0c-1.3,-3.3,-3.7,-11.7,-7,-25c-35.3,-125.3,-106.7,-373.3,-214,-744c-10,12,-21,25,-33,39s-32,39,-32,39c-6,-5.3,-15,-14,-27,-26s25,-30,25,-30c26.7,-32.7,52,-63,76,-91s52,-60,52,-60s208,722,208,722c56,-175.3,126.3,-397.3,211,-666c84.7,-268.7,153.8,-488.2,207.5,-658.5c53.7,-170.3,84.5,-266.8,92.5,-289.5c4,-6.7,10,-10,18,-10zM1001 80H400000v40H1013z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.502996em;"><span></span></span></span></span></span></span></span><span style="top:-3.5670040000000003em;"><span class="pstrut" style="height:3.3370040000000003em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-4.014004em;"><span class="pstrut" style="height:3.3370040000000003em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mopen">[</span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-2.4168920000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2831079999999999em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mclose">]</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.73em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mrow><mo fence="true">∣</mo><msub><mi>ρ</mi><mrow><mi>i</mi><mi>k</mi></mrow></msub><mo fence="true">∣</mo></mrow><mo>≤</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">\left| \rho_{ik} \right| \leq 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">∣</span><span class="mord"><span class="mord mathdefault">ρ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">∣</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>，因此信号之间的相关性定义如下：</p>\begin{cases} \rho_{ik} = 0  \quad \quad \quad \quad  \quad s_i(t),s_k(t)独立\\0<\left| \rho_{ik} \right|<1 \quad \quad\quad s_i(t),s_k(t)相关\\\\left| \rho_{ik} \right| = 1 \quad \quad\quad\quad s_i(t),s_k(t)相干\end{cases}<p><font color = 'red'>当信号源相干时其数学表现为相干源只差一个复常数</font></p><h1 id="matlab仿真"><a class="markdownIt-Anchor" href="#matlab仿真"></a> MATLAB仿真</h1><ol><li>采用阵元间隔为半个波长的5阵元均匀线阵，1个远场窄带信号从21°的方向入射到阵列，信号是归一化频率为0.1的纯载波，中频信号的信噪比为12dB（本小节的信噪比均指中频信号的信噪比），天线阵的采样快拍数是100。</li></ol><div class='tip warning'><p>下面这个程序，有些地方多余，需要进一步的改进<p></div><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="comment">%仿真黄永兢的仿真数据结果图2-4</span></span><br><span class="line"><span class="comment">%music算法部分，候补上MVDR算法</span></span><br><span class="line">clear all;clc;</span><br><span class="line">derad = <span class="built_in">pi</span>/<span class="number">180</span>;<span class="comment">%角度转换弧度</span></span><br><span class="line">N = <span class="number">5</span>;<span class="comment">%阵元个数</span></span><br><span class="line">M = <span class="number">1</span>;<span class="comment">%信源数目</span></span><br><span class="line">theta = [<span class="number">21</span>];<span class="comment">%待估计的角度</span></span><br><span class="line">snr = <span class="number">12</span>;<span class="comment">%信噪比</span></span><br><span class="line">K = <span class="number">100</span>;<span class="comment">%快拍数</span></span><br><span class="line"></span><br><span class="line"><span class="comment">%%%阵元间隔为半个波长的5阵元均匀线阵</span></span><br><span class="line"><span class="comment">%syms q;%设波长为q</span></span><br><span class="line">q = <span class="number">0.5</span>;</span><br><span class="line">d = <span class="number">0</span>:q:(N<span class="number">-1</span>)*q;<span class="comment">%设置步长</span></span><br><span class="line">A=<span class="built_in">exp</span>(<span class="number">-1</span><span class="built_in">i</span>*<span class="number">2</span>*<span class="built_in">pi</span>*d.&#x27;*<span class="built_in">sin</span>(theta*derad));<span class="comment">%方向矢量</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">%%%构建信号模型</span></span><br><span class="line"><span class="comment">%实际上还是基础的公式</span></span><br><span class="line"><span class="comment">%X = A*S+noise;</span></span><br><span class="line">S = <span class="built_in">randn</span>(M,K);<span class="comment">%信源信号   100快拍数划分信号</span></span><br><span class="line">X = A*S;</span><br><span class="line">X1 = awgn(X,snr,<span class="string">&#x27;measured&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">%计算协方差矩阵</span></span><br><span class="line">Rxx = X1*X1&#x27;/K;</span><br><span class="line"><span class="comment">%&quot;.&#x27;&quot;是转置，&quot;&#x27;&quot;是共轭转置</span></span><br><span class="line"><span class="comment">%特征值分解</span></span><br><span class="line">[EV,D] = eig(Rxx);<span class="comment">%特征值分解</span></span><br><span class="line"></span><br><span class="line"><span class="comment">%eig函数的用法</span></span><br><span class="line"><span class="comment">%求出的特征值会自动升序。</span></span><br><span class="line"><span class="comment">%[V,D] = eig(A)</span></span><br><span class="line"><span class="comment">%其中的V是A的特征向量，D是特征值(对角阵)</span></span><br><span class="line"></span><br><span class="line">EVA = <span class="built_in">diag</span>(D)&#x27;;<span class="comment">%取对角线的数据并共轭转置</span></span><br><span class="line">[EVA,I] = <span class="built_in">sort</span>(EVA);</span><br><span class="line"><span class="comment">%sort函数可以按从小到大排列数，默认是列排序</span></span><br><span class="line"><span class="comment">%EVA表示输出的值（按从小到大）</span></span><br><span class="line"><span class="comment">%I表示输出排序后值原来的位置，记忆特征值原来的位置，为下一步做准备</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">%这一步的作用是把特征向量按照从大到小进行排列，I的作用就是是变换后的特征向量的顺序和上一步特征值的顺序保持一致，一一对应。</span></span><br><span class="line"><span class="comment">%由于fliplr括号里面特征向量是按照从小到大的顺序，所以再通过fliplr函数进行翻转，使之变成特征值大的元素对应的特征向量按照从小到大的原则排序。</span></span><br><span class="line"><span class="comment">%处理完之后EV里的特征向量其实就变成了前面是信号子空间，后面是噪声子空间里的向量。</span></span><br><span class="line">EV = <span class="built_in">fliplr</span>(EV(:,I));<span class="comment">%对应特征矢量排序，特征向量根据特征值排列</span></span><br><span class="line"><span class="comment">%fliplr函数作用是翻转矩阵</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">%遍历每个角落，计算空间谱</span></span><br><span class="line"><span class="keyword">for</span> iang = <span class="number">1</span>:<span class="number">361</span><span class="comment">%360°全覆盖测角</span></span><br><span class="line">    <span class="built_in">angle</span>(iang)=(iang<span class="number">-181</span>)/<span class="number">2</span>;</span><br><span class="line">    phim=derad*<span class="built_in">angle</span>(iang);</span><br><span class="line">    a=<span class="built_in">exp</span>(<span class="number">-1</span><span class="built_in">i</span>*<span class="number">2</span>*<span class="built_in">pi</span>*d*<span class="built_in">sin</span>(phim)).&#x27;;</span><br><span class="line">    En=EV(:,M+<span class="number">1</span>:N);     <span class="comment">%取矩阵的第M+1到N列组成噪声子空间</span></span><br><span class="line">    Pmusic(iang)=<span class="number">1</span>/(a&#x27;*En*En&#x27;*a);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">Pmusic=<span class="built_in">abs</span>(Pmusic);<span class="comment">%提取模值</span></span><br><span class="line">Pmmax=<span class="built_in">max</span>(Pmusic);<span class="comment">%求出最大值</span></span><br><span class="line">Pmusic=<span class="number">10</span>*<span class="built_in">log10</span>(Pmusic/Pmmax);      <span class="comment">%归一化的处理</span></span><br><span class="line">h=<span class="built_in">plot</span>(<span class="built_in">angle</span>,Pmusic);</span><br><span class="line"><span class="built_in">legend</span>(<span class="string">&#x27;MUSIC&#x27;</span>)</span><br><span class="line">set(h,<span class="string">&#x27;Linewidth&#x27;</span>,<span class="number">2</span>);</span><br><span class="line">xlabel(<span class="string">&#x27;入射角/(degree)&#x27;</span>);</span><br><span class="line">ylabel(<span class="string">&#x27;空间谱/(dB)&#x27;</span>);</span><br><span class="line">set(gca,<span class="string">&#x27;XTick&#x27;</span>,[<span class="number">-100</span>:<span class="number">20</span>:<span class="number">100</span>]);</span><br><span class="line">grid on;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210320104613.png" alt="" /></p><div class='tip success'><p>改进的程序<p></div><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="comment">%music算法的改进</span></span><br><span class="line">clear all;clc;</span><br><span class="line">derad=<span class="built_in">pi</span>/<span class="number">180</span>;</span><br><span class="line">N = <span class="number">5</span>;</span><br><span class="line">M = <span class="number">1</span>;</span><br><span class="line">theta = [<span class="number">21</span>];<span class="comment">%待测角度</span></span><br><span class="line">snr = <span class="number">12</span>;</span><br><span class="line">K = <span class="number">100</span>;<span class="comment">%快拍数</span></span><br><span class="line">dd = <span class="number">0.5</span>;</span><br><span class="line">d = <span class="number">0</span>:dd:(N<span class="number">-1</span>)*dd;<span class="comment">%步长</span></span><br><span class="line">A=<span class="built_in">exp</span>(-<span class="built_in">j</span>*<span class="number">2</span>*<span class="built_in">pi</span>*d.&#x27;*<span class="built_in">sin</span>(theta*derad));<span class="comment">%方向矢量</span></span><br><span class="line"></span><br><span class="line">S = <span class="built_in">randn</span>(M,K);</span><br><span class="line">X = A * S;</span><br><span class="line">Xn = awgn(X,snr,<span class="string">&#x27;measured&#x27;</span>);<span class="comment">%构成的信号</span></span><br><span class="line"></span><br><span class="line">Rxx = Xn*Xn&#x27;/K;</span><br><span class="line">[EV,D] = eig(Rxx);<span class="comment">%特征值分解，并且按照从小到大排序</span></span><br><span class="line"></span><br><span class="line">EV = <span class="built_in">fliplr</span>(EV);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> iange = <span class="number">1</span>:<span class="number">361</span>;</span><br><span class="line">    <span class="built_in">angle</span>(iange) = (iange<span class="number">-181</span>)/<span class="number">2</span>;</span><br><span class="line">    phim = derad*<span class="built_in">angle</span>(iange);</span><br><span class="line">    a = <span class="built_in">exp</span>(-<span class="built_in">j</span>*<span class="number">2</span>*<span class="built_in">pi</span>*d*<span class="built_in">sin</span>(phim)).&#x27;;<span class="comment">%保证是列向量</span></span><br><span class="line">    G = EV(:,M+<span class="number">1</span>:N);</span><br><span class="line">    P_music(iange) = <span class="number">1</span>/(a&#x27;*G*G&#x27;*a);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">P_music = <span class="built_in">abs</span>(P_music);<span class="comment">%提取模值</span></span><br><span class="line">Pm_max = <span class="built_in">max</span>(P_music);</span><br><span class="line">P_music = <span class="number">10</span>*<span class="built_in">log10</span>(P_music/Pm_max);</span><br><span class="line">h = <span class="built_in">plot</span>(<span class="built_in">angle</span>,P_music);</span><br><span class="line"><span class="built_in">legend</span>(<span class="string">&#x27;MUSIC&#x27;</span>);</span><br><span class="line">set(h,<span class="string">&#x27;Linewidth&#x27;</span>,<span class="number">1</span>);</span><br><span class="line">xlabel(<span class="string">&#x27;入射角/(degree)&#x27;</span>);</span><br><span class="line">ylabel(<span class="string">&#x27;空间谱/(dB)&#x27;</span>);</span><br><span class="line">set(gca,<span class="string">&#x27;XTick&#x27;</span>,[<span class="number">-100</span>:<span class="number">20</span>:<span class="number">100</span>]);</span><br><span class="line">grid on;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210322110314.png" alt="" /></p><p>不同阵元数对MUSIC算法的影响</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="comment">%阵元数不同的情况下</span></span><br><span class="line"></span><br><span class="line">clear all;clc</span><br><span class="line">derad = <span class="built_in">pi</span> / <span class="number">180</span>;<span class="comment">%弧度转换</span></span><br><span class="line">N = [<span class="number">5</span> <span class="number">10</span> <span class="number">20</span>];<span class="comment">%阵元个数</span></span><br><span class="line">M = <span class="number">3</span>;<span class="comment">%信源数目</span></span><br><span class="line">doa = [<span class="number">-30</span> <span class="number">0</span> <span class="number">60</span>]*derad;<span class="comment">%待测角度</span></span><br><span class="line">snr = <span class="number">10</span>;<span class="comment">%信噪比</span></span><br><span class="line">K = <span class="number">100</span>;<span class="comment">%快拍数</span></span><br><span class="line">dd = <span class="number">0.5</span>;<span class="comment">%阵元间隔（假设值）</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">1</span>:<span class="built_in">length</span>(N)</span><br><span class="line">    d = <span class="number">0</span>:dd:(<span class="built_in">max</span>(N)<span class="number">-1</span>)*dd;</span><br><span class="line">    <span class="keyword">for</span> ii = <span class="number">1</span>:<span class="built_in">length</span>(doa)</span><br><span class="line">        A(:,ii)=<span class="built_in">exp</span>(-<span class="built_in">j</span>*<span class="number">2</span>*<span class="built_in">pi</span>*d.&#x27;*<span class="built_in">sin</span>(doa(ii)));</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    S = <span class="built_in">randn</span>(M,K);</span><br><span class="line">    X = A(<span class="number">1</span>:N(<span class="built_in">i</span>),:) * S;</span><br><span class="line">    Xn = awgn(X,snr,<span class="string">&#x27;measured&#x27;</span>);</span><br><span class="line">    </span><br><span class="line">    Rxx = Xn*Xn&#x27;/K;</span><br><span class="line">    [EV,D] = eig(Rxx);</span><br><span class="line">    </span><br><span class="line">    EV  = <span class="built_in">fliplr</span>(EV);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> iangle= <span class="number">1</span>:<span class="number">361</span></span><br><span class="line">        <span class="built_in">angle</span>(iangle) = (iangle<span class="number">-181</span>)/<span class="number">2</span>;</span><br><span class="line">        phim = derad*<span class="built_in">angle</span>(iangle);</span><br><span class="line">        a = <span class="built_in">exp</span>(-<span class="built_in">j</span>*<span class="number">2</span>*<span class="built_in">pi</span>*d(<span class="number">1</span>:N(<span class="built_in">i</span>))*<span class="built_in">sin</span>(phim)).&#x27;;</span><br><span class="line">        En = EV(:,M+<span class="number">1</span>:N(<span class="built_in">i</span>));</span><br><span class="line">        pmusic(<span class="built_in">i</span>,iangle)=<span class="number">1</span>/(a&#x27;*En*En&#x27;*a);</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    pmusic=<span class="built_in">abs</span>(pmusic);</span><br><span class="line">    pmmax = <span class="built_in">max</span>(pmusic,[],<span class="number">2</span>);</span><br><span class="line"><span class="keyword">for</span> i3 = <span class="number">1</span>:<span class="number">1</span>:<span class="built_in">size</span>(pmusic)</span><br><span class="line">   sp(i3,:) = pmusic(i3,:)./pmmax(i3); </span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">Pmusic = <span class="number">10</span>*<span class="built_in">log10</span>(sp);</span><br><span class="line"><span class="built_in">plot</span>(<span class="built_in">angle</span>,Pmusic,<span class="string">&#x27;LineWidth&#x27;</span>,<span class="number">2</span>);</span><br><span class="line"><span class="built_in">legend</span>(<span class="string">&#x27;阵元数N = 5&#x27;</span>,<span class="string">&#x27;阵元数N = 10&#x27;</span>,<span class="string">&#x27;阵元数N = 20&#x27;</span>)</span><br><span class="line">title(<span class="string">&#x27;仿真实验2：不同阵元数下MUSIC算法性能比较&#x27;</span>,<span class="string">&#x27;fontsize&#x27;</span>,<span class="number">12</span>);</span><br><span class="line">xlabel(<span class="string">&#x27;入射角度/degree&#x27;</span>,<span class="string">&#x27;fontsize&#x27;</span>,<span class="number">12</span>);</span><br><span class="line">ylabel(<span class="string">&#x27;归一化空间谱/dB&#x27;</span>,<span class="string">&#x27;fontsize&#x27;</span>,<span class="number">12</span>);</span><br><span class="line">grid on</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210531101205.png" alt="" /></p><p>不同信噪比下对MUSIC算法的影响</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="comment">%信噪比不同的比较</span></span><br><span class="line">clear all;clc</span><br><span class="line">N = <span class="number">10</span>;<span class="comment">%阵元数</span></span><br><span class="line">derad = <span class="built_in">pi</span>/<span class="number">180</span>;</span><br><span class="line">M = <span class="number">3</span>;<span class="comment">%信源数目</span></span><br><span class="line">doa = [<span class="number">-30</span> <span class="number">20</span> <span class="number">60</span>]/<span class="number">180</span>*<span class="built_in">pi</span>;</span><br><span class="line">snr = [<span class="number">5</span> <span class="number">10</span> <span class="number">20</span>];</span><br><span class="line">dd = <span class="number">0.5</span>;</span><br><span class="line">K = <span class="number">100</span>;<span class="comment">%快拍数</span></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">1</span>:<span class="built_in">length</span>(snr)</span><br><span class="line">    d = <span class="number">0</span>:dd:(N<span class="number">-1</span>)*dd;<span class="comment">%间距</span></span><br><span class="line">    <span class="keyword">for</span> ii = <span class="number">1</span>:<span class="built_in">length</span>(doa)</span><br><span class="line">        A(:,ii) = <span class="built_in">exp</span>(-<span class="built_in">j</span>*<span class="number">2</span>*<span class="built_in">pi</span>*d.&#x27;*<span class="built_in">sin</span>(doa(ii)));</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="comment">%</span></span><br><span class="line"><span class="comment">%     S = sqrt();</span></span><br><span class="line">    snr1 = snr(<span class="built_in">i</span>);</span><br><span class="line">    S = <span class="built_in">randn</span>(M,K);</span><br><span class="line">    X = A*S;</span><br><span class="line">    Xn = awgn(X,snr1,<span class="string">&#x27;measured&#x27;</span>);</span><br><span class="line">    </span><br><span class="line">    Rxx = Xn*Xn&#x27;/K;</span><br><span class="line">    [EV,D] = eig(Rxx);</span><br><span class="line">    </span><br><span class="line">    EV  = <span class="built_in">fliplr</span>(EV);</span><br><span class="line">    </span><br><span class="line"><span class="comment">%     theta = -90:0.1:90;</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> iangle= <span class="number">1</span>:<span class="number">361</span></span><br><span class="line">        <span class="built_in">angle</span>(iangle) = (iangle<span class="number">-181</span>)/<span class="number">2</span>;</span><br><span class="line">        phim = derad*<span class="built_in">angle</span>(iangle);</span><br><span class="line"><span class="comment">%         a=exp(-j*2*pi*d*sin(pi*theta(i3)/180)).&#x27;;</span></span><br><span class="line">        a = <span class="built_in">exp</span>(-<span class="built_in">j</span>*<span class="number">2</span>*<span class="built_in">pi</span>*d*<span class="built_in">sin</span>(phim)).&#x27;;</span><br><span class="line">        En = EV(:,M+<span class="number">1</span>:N);</span><br><span class="line">        pmusic(<span class="built_in">i</span>,iangle)=<span class="number">1</span>/(a&#x27;*En*En&#x27;*a);</span><br><span class="line"><span class="comment">%         Pmusic(iange) = 1/(a&#x27;*En*En&#x27;*a);</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">   </span><br><span class="line"><span class="comment">%     pmusic = 10*log(pmusic/max(pmusic));</span></span><br><span class="line"><span class="comment">%     Pmusic(ii,:) = pmusic;</span></span><br><span class="line"><span class="comment">%     pmusic = 10*log10(pmusic/pmmax);</span></span><br><span class="line">   </span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">    pmusic=<span class="built_in">abs</span>(pmusic);</span><br><span class="line">    pmmax = <span class="built_in">max</span>(pmusic,[],<span class="number">2</span>);</span><br><span class="line"><span class="keyword">for</span> i3 = <span class="number">1</span>:<span class="number">1</span>:<span class="built_in">size</span>(pmusic)</span><br><span class="line">   sp(i3,:) = pmusic(i3,:)./pmmax(i3); </span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">Pmusic = <span class="number">10</span>*<span class="built_in">log10</span>(sp);</span><br><span class="line"><span class="built_in">plot</span>(<span class="built_in">angle</span>,Pmusic,<span class="string">&#x27;LineWidth&#x27;</span>,<span class="number">2</span>);</span><br><span class="line"><span class="comment">% plot(theta,Pmusic(1,:),theta,Pmusic(2,:),theta,Pmusic(3,:),&#x27;LineWidth&#x27;,2); </span></span><br><span class="line"><span class="comment">% axis([-100 100 -110 10]);</span></span><br><span class="line"><span class="built_in">legend</span>(<span class="string">&#x27;SNR = 5&#x27;</span>,<span class="string">&#x27;SNR = 10&#x27;</span>,<span class="string">&#x27;SNR = 20&#x27;</span>,<span class="string">&#x27;Location&#x27;</span>,<span class="string">&#x27;NorthWest&#x27;</span>)</span><br><span class="line">title(<span class="string">&#x27;仿真实验1：不同信噪比下MUSIC算法性能比较&#x27;</span>,<span class="string">&#x27;fontsize&#x27;</span>,<span class="number">12</span>);</span><br><span class="line">xlabel(<span class="string">&#x27;入射角度/degree&#x27;</span>,<span class="string">&#x27;fontsize&#x27;</span>,<span class="number">12</span>);</span><br><span class="line">ylabel(<span class="string">&#x27;归一化空间谱/dB&#x27;</span>,<span class="string">&#x27;fontsize&#x27;</span>,<span class="number">12</span>);</span><br><span class="line">grid on</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210531101302.png" alt="" /></p><h2 id="谱估计"><a class="markdownIt-Anchor" href="#谱估计"></a> 谱估计</h2><p>用MUSIC算法进行谱估计</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210315114937.jpg" alt="" /></p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210316095024.jpg" alt="" /></p>]]></content>
    
    
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; class=&quot;aplayer-secondary-script-marker&quot;&gt;&lt;/script&gt;&lt;h1 id=&quot;music算法&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#music算法&quot;&gt;&lt;/a&gt; MUSIC算法&lt;/h1&gt;
&lt;div class=&quot;note warning flat&quot;&gt;&lt;p&gt;以下部分是基于线阵阵列！！！还有许多不完善的地方，待续···&lt;/p&gt;
&lt;/div&gt;
&lt;h2 id=&quot;经典算法&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#经典算法&quot;&gt;&lt;/a&gt; 经典算法&lt;/h2&gt;
&lt;p&gt;假设入射到天线阵列的近似为远场窄带信号，它们分别来自&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msub&gt;&lt;mi&gt;θ&lt;/mi&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;/msub&gt;&lt;mo separator=&quot;true&quot;&gt;,&lt;/mo&gt;&lt;msub&gt;&lt;mi&gt;θ&lt;/mi&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/msub&gt;&lt;mo separator=&quot;true&quot;&gt;,&lt;/mo&gt;&lt;mo separator=&quot;true&quot;&gt;⋅&lt;/mo&gt;&lt;mo separator=&quot;true&quot;&gt;⋅&lt;/mo&gt;&lt;mo separator=&quot;true&quot;&gt;⋅&lt;/mo&gt;&lt;mo separator=&quot;true&quot;&gt;,&lt;/mo&gt;&lt;msub&gt;&lt;mi&gt;θ&lt;/mi&gt;&lt;mi&gt;K&lt;/mi&gt;&lt;/msub&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;\theta_1,\theta_2,···,\theta_K&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.8888799999999999em;vertical-align:-0.19444em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.02778em;&quot;&gt;θ&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.30110799999999993em;&quot;&gt;&lt;span style=&quot;top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.15em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mpunct&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.16666666666666666em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.02778em;&quot;&gt;θ&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.30110799999999993em;&quot;&gt;&lt;span style=&quot;top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.15em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mpunct&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.16666666666666666em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mpunct&quot;&gt;⋅&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.16666666666666666em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mpunct&quot;&gt;⋅&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.16666666666666666em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mpunct&quot;&gt;⋅&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.16666666666666666em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mpunct&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.16666666666666666em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.02778em;&quot;&gt;θ&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.32833099999999993em;&quot;&gt;&lt;span style=&quot;top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mathdefault mtight&quot; style=&quot;margin-right:0.07153em;&quot;&gt;K&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.15em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;共K个方向，则有&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;x&lt;/mi&gt;&lt;mo stretchy=&quot;false&quot;&gt;(&lt;/mo&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mo stretchy=&quot;false&quot;&gt;)&lt;/mo&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mi&gt;A&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mo stretchy=&quot;false&quot;&gt;(&lt;/mo&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mo stretchy=&quot;false&quot;&gt;)&lt;/mo&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;mi&gt;v&lt;/mi&gt;&lt;mo stretchy=&quot;false&quot;&gt;(&lt;/mo&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mo stretchy=&quot;false&quot;&gt;)&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;x(n)=As(n)+v(n)&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:1em;vertical-align:-0.25em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;mopen&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;mclose&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mrel&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:1em;vertical-align:-0.25em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;mopen&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;mclose&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222222222222222em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mbin&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222222222222222em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:1em;vertical-align:-0.25em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.03588em;&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;mopen&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;mclose&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;x(n)是天线阵各阵元的接收数据向量，M*1&lt;/p&gt;
&lt;p&gt;A是阵列的方向矩阵，M*K&lt;/p&gt;
&lt;p&gt;s(n)为空间信号向量,K*1&lt;/p&gt;
&lt;p&gt;v(n)是白噪声向量，M*1&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;接收信号向量的空间相关矩阵可表示为&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;R&lt;/mi&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mi&gt;E&lt;/mi&gt;&lt;mo stretchy=&quot;false&quot;&gt;[&lt;/mo&gt;&lt;mi&gt;X&lt;/mi&gt;&lt;mo stretchy=&quot;false&quot;&gt;(&lt;/mo&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mo stretchy=&quot;false&quot;&gt;)&lt;/mo&gt;&lt;mi&gt;X&lt;/mi&gt;&lt;mo stretchy=&quot;false&quot;&gt;(&lt;/mo&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;msup&gt;&lt;mo stretchy=&quot;false&quot;&gt;)&lt;/mo&gt;&lt;mi&gt;H&lt;/mi&gt;&lt;/msup&gt;&lt;mo stretchy=&quot;false&quot;&gt;]&lt;/mo&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mi&gt;A&lt;/mi&gt;&lt;msub&gt;&lt;mi&gt;R&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;/msub&gt;&lt;msup&gt;&lt;mi&gt;A&lt;/mi&gt;&lt;mi&gt;H&lt;/mi&gt;&lt;/msup&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;msup&gt;&lt;mi&gt;σ&lt;/mi&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/msup&gt;&lt;mi&gt;I&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;R=E[X(n)X(n)^H]=AR_sA^H+\sigma^2I&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.68333em;vertical-align:0em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.00773em;&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mrel&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:1.0913309999999998em;vertical-align:-0.25em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.05764em;&quot;&gt;E&lt;/span&gt;&lt;span class=&quot;mopen&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.07847em;&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;mopen&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;mclose&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.07847em;&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;mopen&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;mclose&quot;&gt;&lt;span class=&quot;mclose&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.8413309999999999em;&quot;&gt;&lt;span style=&quot;top:-3.063em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mathdefault mtight&quot; style=&quot;margin-right:0.08125em;&quot;&gt;H&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mclose&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mrel&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.991331em;vertical-align:-0.15em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.00773em;&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.151392em;&quot;&gt;&lt;span style=&quot;top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mathdefault mtight&quot;&gt;s&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.15em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.8413309999999999em;&quot;&gt;&lt;span style=&quot;top:-3.063em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mathdefault mtight&quot; style=&quot;margin-right:0.08125em;&quot;&gt;H&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222222222222222em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mbin&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222222222222222em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.8141079999999999em;vertical-align:0em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.03588em;&quot;&gt;σ&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.8141079999999999em;&quot;&gt;&lt;span style=&quot;top:-3.063em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.07847em;&quot;&gt;I&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I是单位矩阵&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="算法" scheme="http://stardust14.com/categories/%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="算法" scheme="http://stardust14.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>DSP</title>
    <link href="http://stardust14.com/2021/03/08/DSP/"/>
    <id>http://stardust14.com/2021/03/08/DSP/</id>
    <published>2021-03-08T03:18:45.000Z</published>
    <updated>2021-04-15T09:01:39.161Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="dsp入门"><a class="markdownIt-Anchor" href="#dsp入门"></a> DSP入门</h1><blockquote><p>本次DSP是数字信号处理器</p></blockquote><p>DSP——数据分析处理</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210308114041.png" alt="" /></p><p>数字信号处理器的特点</p><ul><li>丰富的外部接口+DMA</li><li>哈佛+多总线结构</li><li>实时中断系统</li><li>硬件乘法器</li><li>丰富的并行机制</li><li>灵活的寻址方式</li></ul><p>信号处理的核心算法：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>y</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>N</mi><mo>−</mo><mn>1</mn></mrow></munderover><mi>x</mi><mo stretchy="false">(</mo><mi>n</mi><mo>−</mo><mi>i</mi><mo stretchy="false">)</mo><mi>h</mi><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">y(n)=\sum_{i=0}^{N-1}x(n-i)h(i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.1060050000000006em;vertical-align:-1.277669em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000004em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">x</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">i</span><span class="mclose">)</span><span class="mord mathdefault">h</span><span class="mopen">(</span><span class="mord mathdefault">i</span><span class="mclose">)</span></span></span></span></span></p><blockquote><p>DSP C6748</p></blockquote>]]></content>
    
    
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; class=&quot;aplayer-secondary-script-marker&quot;&gt;&lt;/script&gt;&lt;h1 id=&quot;dsp入门&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#dsp入门&quot;&gt;&lt;/a&gt; DSP入门&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;本次DSP是数字信号处理器&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;DSP——数据分析处理&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210308114041.png&quot; alt&gt;&lt;/p&gt;
&lt;p&gt;数字信号处理器的特点&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;丰富的外部接口+DMA&lt;/li&gt;
&lt;li&gt;哈佛+多总线结构&lt;/li&gt;
&lt;li&gt;实时中断系统&lt;/li&gt;
&lt;li&gt;硬件乘法器&lt;/li&gt;
&lt;li&gt;丰富的并行机制&lt;/li&gt;
&lt;li&gt;灵活的寻址方式&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;信号处理的核心算法：&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;katex-display&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;y&lt;/mi&gt;&lt;mo stretchy=&quot;false&quot;&gt;(&lt;/mo&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mo stretchy=&quot;false&quot;&gt;)&lt;/mo&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;munderover&gt;&lt;mo&gt;∑&lt;/mo&gt;&lt;mrow&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mn&gt;0&lt;/mn&gt;&lt;/mrow&gt;&lt;mrow&gt;&lt;mi&gt;N&lt;/mi&gt;&lt;mo&gt;−&lt;/mo&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;/mrow&gt;&lt;/munderover&gt;&lt;mi&gt;x&lt;/mi&gt;&lt;mo stretchy=&quot;false&quot;&gt;(&lt;/mo&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mo&gt;−&lt;/mo&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mo stretchy=&quot;false&quot;&gt;)&lt;/mo&gt;&lt;mi&gt;h&lt;/mi&gt;&lt;mo stretchy=&quot;false&quot;&gt;(&lt;/mo&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mo stretchy=&quot;false&quot;&gt;)&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;y(n)=\sum_{i=0}^{N-1}x(n-i)h(i)
&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:1em;vertical-align:-0.25em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.03588em;&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;mopen&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;mclose&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mrel&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:3.1060050000000006em;vertical-align:-1.277669em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mop op-limits&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:1.8283360000000004em;&quot;&gt;&lt;span style=&quot;top:-1.872331em;margin-left:0em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3.05em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mathdefault mtight&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;mrel mtight&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mord mtight&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;top:-3.050005em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3.05em;&quot;&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;mop op-symbol large-op&quot;&gt;∑&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;top:-4.300005em;margin-left:0em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3.05em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mathdefault mtight&quot; style=&quot;margin-right:0.10903em;&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;mbin mtight&quot;&gt;−&lt;/span&gt;&lt;span class=&quot;mord mtight&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:1.277669em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.16666666666666666em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;mopen&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222222222222222em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mbin&quot;&gt;−&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222222222222222em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:1em;vertical-align:-0.25em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;mclose&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;mopen&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;mclose&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;DSP C6748&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="dsp" scheme="http://stardust14.com/categories/dsp/"/>
    
    
    <category term="dsp" scheme="http://stardust14.com/tags/dsp/"/>
    
  </entry>
  
  <entry>
    <title>4D毫米波雷达</title>
    <link href="http://stardust14.com/2021/02/26/4D%E6%AF%AB%E7%B1%B3%E6%B3%A2%E9%9B%B7%E8%BE%BE/"/>
    <id>http://stardust14.com/2021/02/26/4D%E6%AF%AB%E7%B1%B3%E6%B3%A2%E9%9B%B7%E8%BE%BE/</id>
    <published>2021-02-26T12:53:33.000Z</published>
    <updated>2021-02-26T14:59:39.885Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>随着知识的积累再填充，更新待续~~</p></blockquote><h1 id="毫米波和4d毫米波"><a class="markdownIt-Anchor" href="#毫米波和4d毫米波"></a> 毫米波和4D毫米波</h1><p>毫米波：</p><ol><li>工作在毫米波波段（millimeter wave ）探测的雷达。工作频段一般为30GHz ~ 300 GHz， 波长 1~10mm，介于微波和厘米波之间，兼具有微波雷达和光电雷达的一些优点；</li><li>毫米波雷达相比厘米波雷达具有体积小、易集成和空间分辨率高的特点。</li><li>车载毫米波雷达的工作频率为一般为 24GHz 和77GHz ；</li></ol><p>4D毫米波雷达通过物理或虚拟软件增加毫米波雷达发射&amp;接收通道的个数，可在很大程度上提高毫米波雷达的感知角度、感知距离、进而弥补毫米波雷达无法有效感知纵向距离的问题，从而提供与激光雷达相当的点云密度信号。</p><p>4D毫米波雷达可在恶劣的天气条件下提供更大的范围，视野，感知力和承受能力。但是目前还未能量产；主要是用于弥补传统的毫米波雷达测量误差范围大、无法识别静止物体的缺点。</p><p><strong>传统毫米波雷达（Current Radars）：<strong>探测角度小，且呈现出锥状的波束，使得其测量误差相对较大，且</strong>难以探测静止的物体</strong>。</p><p>**4D毫米波雷达（4D Imaging Radar）：**探测角度相对较大，且测量误差相对较小。由于增加了“探测物体高度”第四个指标，<strong>能够实现测量静止物体的功能</strong>。</p>]]></content>
    
    
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; class=&quot;aplayer-secondary-script-marker&quot;&gt;&lt;/script&gt;&lt;blockquote&gt;
&lt;p&gt;随着知识的积累再填充，更新待续~~&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;毫米波和4d毫米波&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#毫米波和4d毫米波&quot;&gt;&lt;/a&gt; 毫米波和4D毫米波&lt;/h1&gt;
&lt;p&gt;毫米波：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;工作在毫米波波段（millimeter wave ）探测的雷达。工作频段一般为30GHz ~ 300 GHz， 波长 1~10mm，介于微波和厘米波之间，兼具有微波雷达和光电雷达的一些优点；&lt;/li&gt;
&lt;li&gt;毫米波雷达相比厘米波雷达具有体积小、易集成和空间分辨率高的特点。&lt;/li&gt;
&lt;li&gt;车载毫米波雷达的工作频率为一般为 24GHz 和77GHz ；&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;4D毫米波雷达通过物理或虚拟软件增加毫米波雷达发射&amp;amp;接收通道的个数，可在很大程度上提高毫米波雷达的感知角度、感知距离、进而弥补毫米波雷达无法有效感知纵向距离的问题，从而提供与激光雷达相当的点云密度信号。&lt;/p&gt;
&lt;p&gt;4D毫米波雷达可在恶劣的天气条件下提供更大的范围，视野，感知力和承受能力。但是目前还未能量产；主要是用于弥补传统的毫米波雷达测量误差范围大、无法识别静止物体的缺点。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;传统毫米波雷达（Current Radars）：&lt;strong&gt;探测角度小，且呈现出锥状的波束，使得其测量误差相对较大，且&lt;/strong&gt;难以探测静止的物体&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;**4D毫米波雷达（4D Imaging Radar）：**探测角度相对较大，且测量误差相对较小。由于增加了“探测物体高度”第四个指标，&lt;strong&gt;能够实现测量静止物体的功能&lt;/strong&gt;。&lt;/p&gt;
</summary>
    
    
    
    <category term="科普" scheme="http://stardust14.com/categories/%E7%A7%91%E6%99%AE/"/>
    
    
    <category term="毫米波雷达" scheme="http://stardust14.com/tags/%E6%AF%AB%E7%B1%B3%E6%B3%A2%E9%9B%B7%E8%BE%BE/"/>
    
  </entry>
  
  <entry>
    <title>阵列信号</title>
    <link href="http://stardust14.com/2021/02/16/%E9%98%B5%E5%88%97%E4%BF%A1%E5%8F%B7/"/>
    <id>http://stardust14.com/2021/02/16/%E9%98%B5%E5%88%97%E4%BF%A1%E5%8F%B7/</id>
    <published>2021-02-16T03:54:30.000Z</published>
    <updated>2021-03-05T03:50:00.263Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>协方差：一般用来刻画两个随机变量的相似程度。</p>]]></content>
    
    
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; class=&quot;aplayer-secondary-script-marker&quot;&gt;&lt;/script&gt;&lt;p&gt;协方差：一般用来刻画两个随机变量的相似程度。&lt;/p&gt;
</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>DSP杂烩</title>
    <link href="http://stardust14.com/2020/12/04/DSP%E6%9D%82%E7%83%A9/"/>
    <id>http://stardust14.com/2020/12/04/DSP%E6%9D%82%E7%83%A9/</id>
    <published>2020-12-04T01:49:07.000Z</published>
    <updated>2020-12-06T07:33:34.808Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="随手记"><a class="markdownIt-Anchor" href="#随手记"></a> 随手记</h1><p>一些知识和疑问</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201204095119.png" alt="" /></p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201204100437.png" alt="" /></p><blockquote><p>有一个疑问：之间的衔接关系！</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201205171135.png" alt="image-20201205171133171" /></p><h1 id="傅里叶变换的理解"><a class="markdownIt-Anchor" href="#傅里叶变换的理解"></a> 傅里叶变换的理解</h1><p>把一个信号的全部信息全部提取出来，在频率上说：w（频率）就表示的位置，振幅表示的强度，而相位则是表示的是信息的反转与否（波的位置）。</p><p>用<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><mo separator="true">⋅</mo><mi>c</mi><mi>o</mi><mi>s</mi><mo stretchy="false">(</mo><mi>w</mi><mo separator="true">⋅</mo><mi>t</mi><mo>+</mo><mi>ϕ</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">A·cos(w·t+\phi)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">A</span><span class="mpunct">⋅</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">c</span><span class="mord mathdefault">o</span><span class="mord mathdefault">s</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mpunct">⋅</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">ϕ</span><span class="mclose">)</span></span></span></span>在时域上，w与时间建立起了联系，相位的改变就是在时间轴上的平移。所以，在频域上的相位就是</p><p>换个角度（域）看问题！！！！</p><p>若一个信号可以分解成正弦函数或着指数形式的组合，那么叠加的函数的相位可能会不同，在同一频率w下的幅度和相位一一对应。那么可以用这三个基本的信息，获取到全部的信息。（有待加深…）</p>]]></content>
    
    
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; class=&quot;aplayer-secondary-script-marker&quot;&gt;&lt;/script&gt;&lt;h1 id=&quot;随手记&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#随手记&quot;&gt;&lt;/a&gt; 随手记&lt;/h1&gt;
&lt;p&gt;一些知识和疑问&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201204095119.png&quot; alt&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201204100437.png&quot; alt&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;有一个疑问：之间的衔接关系！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201205171135.png&quot; alt=&quot;image-20201205171133171&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;傅里叶变换的理解&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#傅里叶变换的理解&quot;&gt;&lt;/a&gt; 傅里叶变换的理解&lt;/h1&gt;
&lt;p&gt;把一个信号的全部信息全部提取出来，在频率上说：w（频率）就表示的位置，振幅表示的强度，而相位则是表示的是信息的反转与否（波的位置）。&lt;/p&gt;
&lt;p&gt;用&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;A&lt;/mi&gt;&lt;mo separator=&quot;true&quot;&gt;⋅&lt;/mo&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mo stretchy=&quot;false&quot;&gt;(&lt;/mo&gt;&lt;mi&gt;w&lt;/mi&gt;&lt;mo separator=&quot;true&quot;&gt;⋅&lt;/mo&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;mi&gt;ϕ&lt;/mi&gt;&lt;mo stretchy=&quot;false&quot;&gt;)&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;A·cos(w·t+\phi)&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:1em;vertical-align:-0.25em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;mpunct&quot;&gt;⋅&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.16666666666666666em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;mopen&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.02691em;&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;mpunct&quot;&gt;⋅&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.16666666666666666em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222222222222222em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mbin&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222222222222222em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:1em;vertical-align:-0.25em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;ϕ&lt;/span&gt;&lt;span class=&quot;mclose&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;在时域上，w与时间建立起了联系，相位的改变就是在时间轴上的平移。所以，在频域上的相位就是&lt;/p&gt;</summary>
    
    
    
    <category term="记录&amp;烂笔头" scheme="http://stardust14.com/categories/%E8%AE%B0%E5%BD%95-%E7%83%82%E7%AC%94%E5%A4%B4/"/>
    
    
    <category term="dsp" scheme="http://stardust14.com/tags/dsp/"/>
    
  </entry>
  
  <entry>
    <title>Quartus记录</title>
    <link href="http://stardust14.com/2020/11/30/Quartus%E8%AE%B0%E5%BD%95/"/>
    <id>http://stardust14.com/2020/11/30/Quartus%E8%AE%B0%E5%BD%95/</id>
    <published>2020-11-30T11:42:57.000Z</published>
    <updated>2020-12-21T11:08:55.246Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="基础知识"><a class="markdownIt-Anchor" href="#基础知识"></a> 基础知识</h1><ol><li>模块语句及其表达方式</li></ol><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201130195313.png" alt="" /></p><p>任一可综合的最基本的模块都必须以关键词module开头。</p><ul><li>模块名最好根据相应电路的功能来确定。如4位二进制计数器用counter4b。</li><li>模块端口列表中须列出此模块的所有输入、输出或双向端口名，端口名间用逗号分开，括号外加分号。</li><li>endmodule是模块结束语句关键词，旁边不加任何标点符号。对模块端口及其功能的描述语句都 必须放在模块语句module_endmodule之间。</li></ul><ol start="2"><li>端口语句、端口信号名和端口模式</li></ol><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201130195425.png" alt="" /></p><ul><li><p>输入端口：input</p></li><li><p>输出端口：output</p></li><li><p>双向端口：inout</p></li></ul><ol start="3"><li>逻辑操作符</li></ol><p>Verilog的逻辑操作符大部分与C语言一致，比如：</p><p>逻辑按位与： &amp;</p><p>逻辑按位或： |</p><p>逻辑按位异或：^</p><p>逻辑按位取非：~</p><p>但Verilog也有自己的扩展，比如</p><p>逻辑按位 与非 ~&amp;</p><p>逻辑按位 或非 ~|</p><p>逻辑按位 同或 ~^</p><p>这里“按位”的意思，是可以对多位逻辑信号按位进行逻辑运算</p><ol start="4"><li>连续赋值语句</li></ol><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201130195603.png" alt="" /></p><ul><li><p>assign引导的赋值负责描述模块内部的逻辑功能和电路结构。</p></li><li><p>assign引导的赋值语句属于并行赋值语句，无论有多少行语句，都是同时执行的，与语句的前后次序无关。</p></li><li><p>当等式右端的驱动表达式（赋值源）中任一信号发生变化时，此表达式即被重新计算一遍。</p></li></ul><p>（1）当等号右侧的驱动表达式中的任一信号发生变化时，此表达式即被计算一边，并将获得的数据立即赋给等号左侧的变量名标示的目标变量。<br />（2）当一个模块中有多个assign语句时，这些语句为并行，同一目标变量名下是不允许有多个不同赋值表达式。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201130210254.png" alt="" /></p><div class="note info flat"><p>注意：</p><ul><li><p>加入[延时]，表示经过指定延时后再赋值，</p></li><li><p>但这个延时值在综合器中是被忽略的，不参与综合。</p></li><li><p>只对仿真器有效</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201130200506.png" alt="" /></p></li><li><p>第二句当右侧表达式中的A或B中任一变量发生变化后，即刻算出变化后的值，但需要等待6个时间单 元之后才将运算结果赋值给左侧的目标变量R1。这个延时称为惯性延时。</p></li><li><p>时间单元的大小则由上一语句的关键词“`timescale”在编译时指定。此句表示，仿真的基本时间单元 是10ns，仿真时间的精度是100ps。</p></li><li><p>在这个时间划分单元下，语句“assign #6 R1 = A &amp; B”在执行后，一旦计算出A &amp; B的值，还要再等待6 个时间单元，也就是60ns后才将此值赋给R1。</p></li><li><p>需要注意的是，在timescale前的符号是反单引号（`），而不是单引号（‘）。在标准键盘区最左上方</p></li></ul><p><font color='red'>程序名和该程序的模块名必须一致！！！</font></p></div><ol start="5"><li>reg型变量定义</li></ol><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201130203641.png" alt="" /></p><p>（1）reg: 寄存器型变量；</p><p>（2）在过程语句always@引导的顺序语句中, 被赋值信号规定必须是reg型变量；<br />（3）输入或双向口信号不能定义为reg型。</p><ol start="6"><li>过程语句</li></ol><p>Verilog中有两类能引导顺序语句的过程语句，always在可综合语句 中最为常用，另一类过程语句是initial语句。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201130203738.png" alt="" /></p><p>当敏感信息列表里发生变化时，就会向下执行</p><ol start="7"><li>块语句begin _end</li></ol><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201130204059.png" alt="" /></p><ul><li><p>块语句begin end仅限于在always引导的过程语句结构中使用，只相当于一个括号。</p></li><li><p>以上方括号中的“：块名”可以省略</p></li></ul><ol start="8"><li>case条件语句</li></ol><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201130204059.png" alt="" /></p><blockquote><p>实际就是case判断</p></blockquote><ol start="9"><li>Verilog的四种逻辑状态</li></ol><p>Verilog有四种基本数值：</p><p>（1）0：含义有四个，即二进制数0、低电平、逻辑0，事件为伪的判断结果。</p><p>（2）1：含义也有四个，即二进制数1、高电平、逻辑1、事件为真的判断结果。</p><p>（3）z或Z。高阻态，或高阻值。</p><p>（4）x或X。不确定，或未知的逻辑状态。x与z大小写都不分。<br />高阻值还可以用问号“？”来表示，但问号“？”还有别的含义和用处，即代 表“不关心”的意思。因此可以用问号“？”替代一些位值，以表示在逻辑关系中对这些位不在乎是什么值。</p><ol start="10"><li>并位操作运算符</li></ol><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201130204711.png" alt="" /></p><ol start="11"><li>Verilog的数字表达形式</li></ol><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201130204754.png" alt="" /></p><p>（1）B：二进制， O：八进制，H：十六进制，D：十进制</p><p>（2）不分大小写，如：2’b10, 4’hA等</p><p>（3）sb定义有符号二进制数：8’sb10111011，最高位1是符号。</p><ol start="12"><li>按位逻辑操作符</li></ol><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201130205909.png" alt="" /></p><p>如果两个操作数位矢具有不同长度，综合器将自动根据最长位的操作数的位数， 把较短的数据按<strong>左端</strong>补0对齐的规则进行运算操作。</p><ol start="13"><li>等式操作符</li></ol><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201130205744.png" alt="" /></p><ul><li>Verilog中任何变量有4个状态：0；1；z (高阻态)；x (不确定或未知状态)</li><li>==：如果其中有x或z, 就判定为假；<code>===：</code>将x或z都当成确定的值进行比较。</li></ul><ol start="14"><li>wire定义网线型变量</li></ol><p>（1）如果assign语句中需要有端口以外的信号或连接线性质的变量（由于 端口都已默认为网线型变量），则必须用网线型变量定义语句事先给出显式<br />定义。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201201090859.png" alt="" /></p><p>（2）用wire定义的网线型变量可在任何类型的表达式或赋值语句（包括连续赋值和过程赋值语句）中用作输入信号，也可以在连续赋值语句或实体元件例化中用作输出信号。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201201090843.png" alt="" /></p><ol start="15"><li>if条件语句</li></ol><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201130211339.png" alt="" /></p><ol start="16"><li>过程赋值语句</li></ol><ul><li>阻塞式赋值：如y=b; 一旦执行完当前的赋值语句，赋值目标变量 y即刻获得来自等号右侧表达式的计算值。如果在一个块语句中 含有多条阻塞赋值语句，而当执行到其中某条赋值语句时，其他语句被禁止执行，这时其他语句如同被阻塞了一样。</li><li>非阻塞式赋值：如y&lt;=b;在执行当前语句时，对于块中的其他语句的执行情况一律不加限制。</li></ul><ol start="17"><li>数据类型表示方式</li></ol><ul><li>SEL[1:0]:二进制矢量位</li><li><ul><li>（SEL==2），数据类型不匹配，但Verilog综合器会自动使其匹配，将其中的 整数2变换成与SEL[1:0]同类型的二进制数2’b10。。</li></ul></li><li><ul><li>当所赋的值大于变量已定义的矢量位可能的值，综合器会首先将赋 值符号右侧的数据折算成二进制数，然后根据被赋值变量所定义的 位数，<strong>向左</strong>截去多余的数位（相当于截去高位）</li></ul></li><li><ul><li>比如Y[1:0], 当赋值Y&lt;=9时，（9=4’b1001）,编译后，Y得到赋值为2’b01。</li></ul></li></ul><ol start="18"><li>元件例化</li></ol><p>元件例化：引入一种连接关系，将预先设计好的设计模块定义为一 个元件，然后利用特定的语句将此元件与当前的设计实体中指定端口相连接，从而为当前设计实体引进一个新的、低一级的设计层次。</p><p>用法：</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201201090746.png" alt="" /></p><ul><li>&lt;模块元件名&gt;，它具有唯一性。如果是用 Verilog描述的模块，则是模块名，也即元件名；</li><li>&lt;例化元件名&gt;：在具体电路上模块被调用后放 在不同的位置或担任不同的任务又必须有对应的名称。</li></ul><p>端口名关联法：括号中的信号名是外部端口名，括号外 带点的信号名是待连接的元件自己的端口名。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201201092134.png" alt="" /></p><p>位置关联法：关联表述的信号位置十分重要，注意端口 顺序，不能放错。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201201092208.png" alt="" /></p><ol start="19"><li>算术运算操作符</li></ol><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201201093147.png" alt="" /></p><p>所有算数运算都是按无符号操作数进行的，如果是减法运算，输出 的结果是补码。对于乘法，若为无符号数，可直接用乘法算符 （*）；若为有符号数乘，则需将操作数和输出结果用signed定义为有符号数，乘法结果为补码。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201201095056.png" alt="" /></p><ol start="20"><li>参数定义关键词parameter和localparam</li></ol><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201201100507.png" alt="" /></p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201201100528.png" alt="" /></p><p>localparam的功能和用法与parameter类似，它是一个局部参数 定义关键词，但无法通过外部程序的数据传递来改变localparam定义的常量。</p><ol start="21"><li>整数型寄存器类型定义</li></ol><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201201100912.png" alt="" /></p><p>reg类型必须明确定义其位数。但integer类型的定义不必特指 位数，因为它们都默认为32位宽的二进制寄存器类型。</p><ol start="22"><li>for语句</li></ol><p>（1）本次循环开始前根据“循环初始值设置表达式”计算获得循 环次数初始值。<br />（2）在本次循环开始前根据“循环控制条件表达式”计算所得的 数据判断是否满足继续循环的条件，如果“循环控制条件表达式” 为真，则继续执行“循环体语句结构”中的语句，否则即刻跳出循环。<br />（3）在本次循环结束时，根据“循环控制变量增值表达式”计算<br />出循环控制变量的数值，然后跳到以上步骤（2）。</p><ol start="23"><li>移位操作符</li></ol><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201206155605.png" alt="" /></p><p>右移或左移，移出腾空的位用0填补。</p><p>有符号数左右移，右移一律将符号位，即最高位填补移出的位。左移操 作同普通左移&lt;&lt;。</p><ol start="24"><li>repeat语句用法</li></ol><ul><li>“循环次数表达式”可以是数值确定的整数、变量或定义了 常数的参数标识符等。</li><li>repeat语句的循环次数是在进入此语句执行以前就已决定的，无需循环次数控制增量表达式及其计算。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201206160554.png" alt="" /></p><ol start="25"><li>while语句</li></ol><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201206162407.png" alt="" /></p><p>（1）首先根据“循环控制条件表达式”的计算所得判断是否 满足继续循环的条件，如果为真，执行一遍“循环体语句结 构”中的所有语句；若为伪，即不满足循环表达式的条件， 结束循环。<br />（2）对于此种循环语句，必须在“循环体语句结构”中包含类似for语句的“循环控制变量增值表达式”。</p><ol start="26"><li>parameter的参数传递功能</li></ol><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201206162806.png" alt="" /></p><p>从顶层传递到底层</p><ol start="27"><li>异步清零和同步清零的区别</li></ol><p><font color='red'>异步：</font>在任意时刻，只要rst有效，D触发器输出立刻清零，与时钟clk状态无关。<br /><font color='red'>同步：</font>指的是与时钟同步，某个控制信号（比如清零信号）只有当时钟信号有效时才起作用。而当时钟信号没有到来时，该控制信号不起作用。</p><p>异步时序电路的Verilog表述特点</p><p>没有单一主控时钟的时序电路，或系统中所有的时序部件不随某个主控时钟同步接受时钟信号达到状态同步变化的电路都属于异步时序电路。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201207142137.png" alt="" /></p><figure class="highlight verilog"><table><tr><td class="code"><pre><span class="line"><span class="keyword">module</span> AMOD(CLK,D,Q,A);</span><br><span class="line"><span class="keyword">output</span> Q;</span><br><span class="line"><span class="keyword">input</span> A,D,CLK;</span><br><span class="line"><span class="keyword">reg</span> Q,Q1;</span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> CLK)</span><br><span class="line">Q1=~(A|Q);</span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> Q1)</span><br><span class="line">Q=D;</span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><ul><li>时钟过程表述的特点和规律</li></ul><p>（1）如果将某信号A定义为边沿敏感时钟信 号，则必须在敏感信号列表中给出对应的表述， 如posedge A或negedge A; 但在always过程结构中不能再出现信号A了。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201207142831.png" alt="" /></p><p>（2）若将某信号B定义为对应于时钟的电平敏感的异步控制信号（或仅仅是 异步输入信号），则除了在敏感信号表中给出对应的表述外，如posedge B或 negedge B，在always过程结构中必须明示信号B的逻辑行为，如上面例中的 RST。特别注意这种表述的不一致性，即表述上必须是边沿敏感信号，如negedge RST, 但电路性能上是电平敏感的。</p><p>(3）若将某信号定义为对应于时钟的同步控制信号 （或仅仅是同步输入信号），则绝不可以以任何形式出<br />现在敏感信号表中，如下面例子中的RST。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201207142909.png" alt="" /></p><p>（4）敏感信号列表中不允许出现混合信号。敏感 信号表一旦含有posedge或negedge的边沿敏感信号<br />后, 所有其他普通变量都不能放在敏感信号表中了</p><p>以下形式是错误的：</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201207143100.png" alt="" /></p><blockquote><p>CLK是边沿敏感型的，RST是电平敏感型的</p></blockquote><p>（5）若定义某变量为异步低电平敏感信号，则在 if条件语句中应该对敏感信号表中的信号有匹配的<br />表述，以下三种表述方式都是正确的：</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201207143217.png" alt="" /></p><p>（6）不允许在敏感信号表中定义除了异步时序控 制信号以外的信号。在下面的例子中，如果试图使<br />用以下的表述是错误的。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201207143241.png" alt="" /></p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201207143302.png" alt="" /></p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201207143315.png" alt="" /></p><h1 id="结合案例总结"><a class="markdownIt-Anchor" href="#结合案例总结"></a> 结合案例总结</h1><ul><li>4选1多路选择器</li></ul><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201130203038.png" alt="" /></p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201130205502.png" alt="" /></p><ul><li>设计16选1选择器</li></ul><figure class="highlight verilog"><table><tr><td class="code"><pre><span class="line"><span class="keyword">module</span> mux16_1( </span><br><span class="line">    <span class="keyword">input</span> [<span class="number">3</span>:<span class="number">0</span>] sel, </span><br><span class="line">    <span class="keyword">input</span> [<span class="number">15</span>:<span class="number">0</span>] D, </span><br><span class="line">    <span class="keyword">output</span> Y</span><br><span class="line">);</span><br><span class="line"><span class="keyword">assign</span> Y = D[sel];</span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><ul><li>8位加法器设计</li></ul><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201201092635.png" alt="" /></p><ul><li>BCD码加法器设计</li></ul><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201201095156.png" alt="" /></p><ul><li>设计n位乘加器</li></ul><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201206164647.png" alt="" /></p><ul><li><p>设计24位无符号数乘法器<img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201206164620.png" alt="" /></p></li><li><p>基本D触发器</p></li></ul><figure class="highlight verilog"><table><tr><td class="code"><pre><span class="line"><span class="keyword">module</span> DFF1(CLK,D,Q);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Input Port(s)</span></span><br><span class="line"><span class="keyword">input</span> D,CLK;</span><br><span class="line"><span class="comment">// Output Port(s)</span></span><br><span class="line"><span class="keyword">output</span> Q;</span><br><span class="line"><span class="keyword">reg</span> Q;</span><br><span class="line">    <span class="keyword">always</span> @(<span class="keyword">posedge</span> CLK)<span class="comment">//posedge:CLK时钟上升沿敏感。</span></span><br><span class="line">Q&lt;=D;</span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><p>关键词posedge：posedge CLK时钟上升沿敏感。</p><p>相对应的，还有negedge CLK时钟下降沿敏感。</p><ul><li>含异步复位和时钟使能的D触发器</li></ul><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201206172635.png" alt="" /></p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201206210343.png" alt="" /></p><figure class="highlight verilog"><table><tr><td class="code"><pre><span class="line"><span class="keyword">module</span> DFF2(CLK,D,Q,RST,EN);</span><br><span class="line"></span><br><span class="line"><span class="keyword">input</span> CLK,D,RST,EN;</span><br><span class="line"><span class="keyword">output</span> Q;</span><br><span class="line"><span class="keyword">reg</span> Q;</span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> CLK <span class="keyword">or</span> <span class="keyword">negedge</span> RST)</span><br><span class="line"><span class="keyword">begin</span> </span><br><span class="line"><span class="keyword">if</span> (!RST)<span class="comment">//若RST等于零时，Q清零</span></span><br><span class="line">Q&lt;=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(EN)<span class="comment">//EN=1时，Q=D</span></span><br><span class="line">Q&lt;=D;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><ul><li>含同步复位控制的D触发器</li></ul><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201206211132.png" alt="" /></p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201206211149.png" alt="" /></p><figure class="highlight verilog"><table><tr><td class="code"><pre><span class="line"><span class="keyword">module</span> DFF3(CLK,D,Q,RST);</span><br><span class="line"></span><br><span class="line"><span class="keyword">input</span> CLK,D,RST;</span><br><span class="line"><span class="keyword">output</span> Q;</span><br><span class="line"><span class="keyword">reg</span> Q;</span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> CLK)</span><br><span class="line"><span class="keyword">begin</span> </span><br><span class="line">        <span class="keyword">if</span> (RST==<span class="number">1</span>)<span class="comment">//同步的</span></span><br><span class="line">Q=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(RST==<span class="number">0</span>)</span><br><span class="line">Q=D;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><figure class="highlight verilog"><table><tr><td class="code"><pre><span class="line"><span class="keyword">module</span> DFF1(CLK,D,Q,RST);</span><br><span class="line"></span><br><span class="line"><span class="keyword">input</span> CLK,D,RST;</span><br><span class="line"><span class="keyword">output</span> Q;</span><br><span class="line"><span class="keyword">reg</span> Q,Q1;<span class="comment">//注意定义了Q1信号</span></span><br><span class="line"><span class="keyword">always</span> @(RST)<span class="comment">//纯组合过程</span></span><br><span class="line"><span class="keyword">if</span> (RST==<span class="number">1</span>)</span><br><span class="line">Q1=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">Q1=D;</span><br><span class="line">        <span class="keyword">always</span> @(<span class="keyword">posedge</span> CLK)</span><br><span class="line">            Q&lt;=Q1;</span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><figure class="highlight verilog"><table><tr><td class="code"><pre><span class="line"><span class="keyword">module</span> DFF2(<span class="keyword">input</span> CLK,<span class="keyword">input</span> D,<span class="keyword">output</span> <span class="keyword">reg</span> Q,<span class="keyword">input</span> RST);</span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> CLK)</span><br><span class="line">Q&lt;=RST?<span class="number">1&#x27;b0</span>:D;<span class="comment">//当RST=1的时候，Q=0,否则Q=D</span></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><ul><li>根据RTL图写程序，同步清零</li></ul><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201206213925.png" alt="" /></p><figure class="highlight verilog"><table><tr><td class="code"><pre><span class="line"><span class="keyword">module</span> DFF1(D,EN,CLK,RST,Q1,Q2);</span><br><span class="line"><span class="keyword">input</span> D,EN,CLK,RST;</span><br><span class="line"><span class="keyword">output</span> Q1,Q2;</span><br><span class="line"><span class="keyword">reg</span> Q2;</span><br><span class="line"><span class="keyword">wire</span> Q10;</span><br><span class="line"><span class="keyword">assign</span> Q10=D&amp;EN;</span><br><span class="line"><span class="keyword">assign</span> Q1=(~Q10)|RST;</span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> CLK <span class="keyword">or</span> <span class="keyword">negedge</span> RST)</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"><span class="keyword">if</span>(!RST)</span><br><span class="line">Q2&lt;=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(EN)<span class="comment">//EN是同步的</span></span><br><span class="line">Q2&lt;=D;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201206214029.png" alt="" /></p><figure class="highlight verilog"><table><tr><td class="code"><pre><span class="line"><span class="keyword">module</span> DFF2(b,rst_n,a,clk,cout,q);</span><br><span class="line"><span class="keyword">input</span> b,rst_n,a,clk;</span><br><span class="line"><span class="keyword">output</span> cout,q;</span><br><span class="line"><span class="keyword">reg</span> q;</span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> clk)</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">            <span class="keyword">if</span>(!rst_n)<span class="comment">//若rst_n=0时，q=0</span></span><br><span class="line">q&lt;=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">q&lt;=a;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">assign</span> cout=a^b;</span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><ul><li>基本锁存器</li></ul><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201206215617.png" alt="" /></p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201206215630.png" alt="" /></p><figure class="highlight verilog"><table><tr><td class="code"><pre><span class="line"><span class="keyword">module</span> LATCH1(CLK,D,Q);</span><br><span class="line"><span class="keyword">output</span> Q;</span><br><span class="line"><span class="keyword">input</span> CLK,D;</span><br><span class="line"><span class="keyword">reg</span> Q;</span><br><span class="line"><span class="keyword">always</span> @(D <span class="keyword">or</span> CLK)</span><br><span class="line"><span class="keyword">if</span>(CLK)</span><br><span class="line">Q&lt;=D;</span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201206220000.png" alt="" /></p><blockquote><p>当CLK为高电平时，输出Q才随D输入的数据而改变;<br />而当CLK为低电平时将保存其在高电平时锁入的数据。这就意味着需要引入存储元件于设计模块中。</p></blockquote><ul><li>含清0控制的锁存器</li></ul><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201206220148.png" alt="" /></p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201206221617.png" alt="" /></p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201206221629.png" alt="" /></p><figure class="highlight verilog"><table><tr><td class="code"><pre><span class="line"><span class="keyword">module</span> LATCH2(CLK,D,Q,RST);</span><br><span class="line"><span class="keyword">output</span> Q;</span><br><span class="line"><span class="keyword">input</span> CLK,D,RST;</span><br><span class="line"><span class="keyword">assign</span> Q=(!RST)?<span class="number">0</span>:(CLK?D:Q);<span class="comment">//当RST=0的时候，Q=0;否则再判断CLK，当CLK=1的时候，Q=D，否则Q=Q，即保持不变</span></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><figure class="highlight verilog"><table><tr><td class="code"><pre><span class="line"><span class="keyword">module</span> LATCH2(CLK,D,Q,RST);</span><br><span class="line"><span class="keyword">output</span> Q;</span><br><span class="line"><span class="keyword">input</span> CLK,D,RST;</span><br><span class="line"><span class="keyword">reg</span> Q;</span><br><span class="line"><span class="keyword">always</span> @(D <span class="keyword">or</span> CLK <span class="keyword">or</span> RST)</span><br><span class="line">    <span class="keyword">if</span>(!RST)<span class="comment">//RST=0时，Q=0</span></span><br><span class="line">        Q&lt;=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(CLK)</span><br><span class="line">    Q&lt;=D;</span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><ul><li>简单加法计数器</li></ul><figure class="highlight verilog"><table><tr><td class="code"><pre><span class="line"><span class="keyword">module</span> CNT4(clk,q);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Input Port(s)</span></span><br><span class="line"><span class="keyword">input</span> clk;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Output Port(s)</span></span><br><span class="line"><span class="keyword">output</span> [<span class="number">3</span>:<span class="number">0</span>] q;</span><br><span class="line"><span class="comment">// Additional Module Item(s)</span></span><br><span class="line"><span class="keyword">reg</span>[<span class="number">3</span>:<span class="number">0</span>] q1;</span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span>)</span><br><span class="line">q1&lt;=q1+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">assign</span> q=q1;</span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><figure class="highlight verilog"><table><tr><td class="code"><pre><span class="line"><span class="keyword">module</span> CNT4(clk,q);</span><br><span class="line"><span class="comment">// Input Port(s)</span></span><br><span class="line"><span class="keyword">input</span> clk;</span><br><span class="line"><span class="comment">// Output Port(s)</span></span><br><span class="line"><span class="keyword">output</span> [<span class="number">3</span>:<span class="number">0</span>] q;</span><br><span class="line"><span class="comment">// Additional Module Item(s)</span></span><br><span class="line"><span class="keyword">reg</span>[<span class="number">3</span>:<span class="number">0</span>] q;</span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span>)</span><br><span class="line">q&lt;=q1+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201208093504.png" alt="" /></p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201208093514.png" alt="" /></p><ul><li>实用加法计数器设计</li></ul><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201208093524.png" alt="" /></p><figure class="highlight verilog"><table><tr><td class="code"><pre><span class="line"><span class="keyword">module</span> shift(load,rst,clk,en,data,cout,dout);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Input Port(s)</span></span><br><span class="line"><span class="keyword">input</span> load,rst,clk,en;<span class="comment">//数据加载控制信号，复位，时钟，时钟使能</span></span><br><span class="line"><span class="keyword">input</span> [<span class="number">3</span>:<span class="number">0</span>] data;<span class="comment">//4位并行加载数据</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Output Port(s)</span></span><br><span class="line"><span class="keyword">output</span> cout;<span class="comment">//计数进位输出</span></span><br><span class="line"><span class="keyword">output</span> [<span class="number">3</span>:<span class="number">0</span>]dout;<span class="comment">//4位计数输出</span></span><br><span class="line"><span class="keyword">reg</span> cout;</span><br><span class="line"><span class="keyword">reg</span> q1;</span><br><span class="line"><span class="keyword">assign</span> dout=q1;<span class="comment">//将内部寄存器的计数结果输出至dout</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Additional Module Item(s)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> clk <span class="keyword">or</span> <span class="keyword">negedge</span> rst)</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"><span class="keyword">if</span>(!rst)<span class="comment">//rst=0时，对内部寄存器单元异步清零</span></span><br><span class="line">q1&lt;=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(en)<span class="comment">//同步时能en=1，则允许加载或计数</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"><span class="keyword">if</span>(!load)<span class="comment">//当load=0，向内部寄存器加载数据</span></span><br><span class="line">q1&lt;=data;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(q1&lt;<span class="number">9</span>)<span class="comment">//当q1小于9时，允许累加</span></span><br><span class="line">q1&lt;=q1+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">q1&lt;=<span class="number">4&#x27;b0000</span>;<span class="comment">//否则将一个时钟后清零返回初值</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span> @(q1)<span class="comment">//组合过程</span></span><br><span class="line"><span class="keyword">if</span>(q1==<span class="number">4&#x27;h9</span>)</span><br><span class="line">cout=<span class="number">1&#x27;b1</span>;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">cout=<span class="number">1&#x27;b0</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201208093754.png" alt="" /></p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201208093837.png" alt="" /></p><ul><li>计数器的清零和置数端的设计</li></ul><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201208094104.png" alt="" /></p><ul><li>二选一多路器</li></ul><figure class="highlight verilog"><table><tr><td class="code"><pre><span class="line"><span class="keyword">module</span> led_test(a,b,key_in,led_out);</span><br><span class="line"></span><br><span class="line"><span class="keyword">input</span> a,b;<span class="comment">//输入端口a和输出端口b</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">input</span> key_in;<span class="comment">//按键输入，实现输入输出通道的选择</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">output</span> led_out;<span class="comment">//led控制端口</span></span><br><span class="line"><span class="comment">//当key_in==0:led_out=a</span></span><br><span class="line"><span class="keyword">assign</span> led_out = (key_in == <span class="number">0</span>)? a:b;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight verilog"><table><tr><td class="code"><pre><span class="line"><span class="meta">`<span class="meta-keyword">timescale</span> 1ns/1ps</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">module</span> led_test_tb;</span><br><span class="line"></span><br><span class="line"><span class="comment">//激励信号定义，对应连接到待测模块的输入端口</span></span><br><span class="line"><span class="keyword">reg</span> signal_a;</span><br><span class="line"><span class="keyword">reg</span> signal_b;</span><br><span class="line"><span class="keyword">reg</span> signal_c;</span><br><span class="line"></span><br><span class="line"><span class="comment">//待检测信号定义，对应连接到待测模块的输出端口</span></span><br><span class="line"><span class="keyword">wire</span> led;</span><br><span class="line"></span><br><span class="line"><span class="comment">//例化待测试模块</span></span><br><span class="line">led_test led_test0(</span><br><span class="line"><span class="variable">.a</span>(signal_a),</span><br><span class="line"><span class="variable">.b</span>(signal_b),</span><br><span class="line"><span class="variable">.key_in</span>(signal_c),</span><br><span class="line"><span class="variable">.led_out</span>(led)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//产生激励</span></span><br><span class="line"><span class="keyword">initial</span> <span class="keyword">begin</span></span><br><span class="line">signal_a= <span class="number">0</span>;signal_b=<span class="number">0</span>;signal_c=<span class="number">0</span>;</span><br><span class="line">#<span class="number">100</span>;</span><br><span class="line">signal_a= <span class="number">0</span>;signal_b=<span class="number">0</span>;signal_c=<span class="number">1</span>;</span><br><span class="line">#<span class="number">100</span>;</span><br><span class="line">signal_a= <span class="number">0</span>;signal_b=<span class="number">1</span>;signal_c=<span class="number">0</span>;</span><br><span class="line">#<span class="number">100</span>;</span><br><span class="line">signal_a= <span class="number">0</span>;signal_b=<span class="number">1</span>;signal_c=<span class="number">1</span>;</span><br><span class="line">#<span class="number">100</span>;</span><br><span class="line">signal_a= <span class="number">1</span>;signal_b=<span class="number">0</span>;signal_c=<span class="number">0</span>;</span><br><span class="line">#<span class="number">100</span>;</span><br><span class="line">signal_a= <span class="number">1</span>;signal_b=<span class="number">0</span>;signal_c=<span class="number">1</span>;</span><br><span class="line">#<span class="number">100</span>;</span><br><span class="line">signal_a= <span class="number">1</span>;signal_b=<span class="number">1</span>;signal_c=<span class="number">0</span>;</span><br><span class="line">#<span class="number">100</span>;</span><br><span class="line">signal_a= <span class="number">1</span>;signal_b=<span class="number">1</span>;signal_c=<span class="number">1</span>;</span><br><span class="line">#<span class="number">200</span>;</span><br><span class="line"><span class="built_in">$stop</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><p>模拟仿真结果：</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201211161311.png" alt="" /></p><ul><li>3-8译码器</li></ul><blockquote><p><font color='red'>凡是在always块中赋值的信号，在定义的时候，必须将其定义成reg类型！！！</font></p></blockquote><figure class="highlight verilog"><table><tr><td class="code"><pre><span class="line"><span class="keyword">module</span> my_8(a,b,c,out);</span><br><span class="line"></span><br><span class="line"><span class="keyword">input</span> a,b,c;<span class="comment">//输入端口</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">output</span> <span class="keyword">reg</span> [<span class="number">7</span>:<span class="number">0</span>]out;<span class="comment">//定义一个多位位宽的信号，高位在前，8位宽</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span>@(a,b,c)<span class="keyword">begin</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span>(&#123;a,b,c&#125;)<span class="comment">//拼接成三位</span></span><br><span class="line"><span class="number">3&#x27;b000</span>:out = <span class="number">8&#x27;b0000_0001</span>;<span class="comment">//“_”这是占位符，不做什么作用，便于区分</span></span><br><span class="line"><span class="number">3&#x27;b001</span>:out = <span class="number">8&#x27;b0000_0010</span>;</span><br><span class="line"><span class="number">3&#x27;b010</span>:out = <span class="number">8&#x27;b0000_0100</span>;</span><br><span class="line"><span class="number">3&#x27;b011</span>:out = <span class="number">8&#x27;b0000_1000</span>;</span><br><span class="line"><span class="number">3&#x27;b100</span>:out = <span class="number">8&#x27;b0001_0000</span>;</span><br><span class="line"><span class="number">3&#x27;b101</span>:out = <span class="number">8&#x27;b0010_0000</span>;</span><br><span class="line"><span class="number">3&#x27;b110</span>:out = <span class="number">8&#x27;b0100_0000</span>;</span><br><span class="line"><span class="number">3&#x27;b111</span>:out = <span class="number">8&#x27;b1000_0000</span>;</span><br><span class="line"><span class="comment">//default:out = 8&#x27;b1000_0000;//与上一句语句的作用一样，除以上情况以外的情况</span></span><br><span class="line"><span class="keyword">endcase</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><figure class="highlight verilog"><table><tr><td class="code"><pre><span class="line"><span class="meta">`<span class="meta-keyword">timescale</span> 1ns/1ps</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">module</span> my_8_tb();</span><br><span class="line"></span><br><span class="line"><span class="keyword">reg</span> a;</span><br><span class="line"><span class="keyword">reg</span> b;</span><br><span class="line"><span class="keyword">reg</span> c;</span><br><span class="line"></span><br><span class="line"><span class="keyword">wire</span> [<span class="number">7</span>:<span class="number">0</span>] out;</span><br><span class="line"></span><br><span class="line">my_8 U1(</span><br><span class="line"><span class="variable">.a</span>(a),</span><br><span class="line"><span class="variable">.b</span>(b),</span><br><span class="line"><span class="variable">.c</span>(c),</span><br><span class="line"><span class="variable">.out</span>(out)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">initial</span> <span class="keyword">begin</span></span><br><span class="line"></span><br><span class="line">a=<span class="number">0</span>;b=<span class="number">0</span>;c=<span class="number">0</span>;</span><br><span class="line">#<span class="number">200</span>; </span><br><span class="line">a=<span class="number">0</span>;b=<span class="number">0</span>;c=<span class="number">1</span>;</span><br><span class="line">#<span class="number">200</span>; </span><br><span class="line">a=<span class="number">0</span>;b=<span class="number">1</span>;c=<span class="number">0</span>;</span><br><span class="line">#<span class="number">200</span>; </span><br><span class="line">a=<span class="number">0</span>;b=<span class="number">1</span>;c=<span class="number">1</span>;</span><br><span class="line">#<span class="number">200</span>; </span><br><span class="line">a=<span class="number">1</span>;b=<span class="number">0</span>;c=<span class="number">0</span>;</span><br><span class="line">#<span class="number">200</span>; </span><br><span class="line">a=<span class="number">1</span>;b=<span class="number">0</span>;c=<span class="number">1</span>;</span><br><span class="line">#<span class="number">200</span>; </span><br><span class="line">a=<span class="number">1</span>;b=<span class="number">1</span>;c=<span class="number">0</span>;</span><br><span class="line">#<span class="number">200</span>; </span><br><span class="line">a=<span class="number">1</span>;b=<span class="number">1</span>;c=<span class="number">1</span>;</span><br><span class="line">#<span class="number">200</span>; </span><br><span class="line"><span class="built_in">$stop</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201213114140.png" alt="" /></p><ul><li>状态机</li></ul><p>序列检测器</p><figure class="highlight verilog"><table><tr><td class="code"><pre><span class="line"><span class="keyword">module</span> List(clk,rst,data,out);</span><br><span class="line"></span><br><span class="line"><span class="keyword">input</span> clk,rst;<span class="comment">//默认50M，低电平复位</span></span><br><span class="line"><span class="keyword">input</span> [<span class="number">7</span>:<span class="number">0</span>]data;</span><br><span class="line"></span><br><span class="line"><span class="keyword">output</span> <span class="keyword">reg</span> out;</span><br><span class="line"></span><br><span class="line"><span class="keyword">localparam</span></span><br><span class="line">CHECK_H = <span class="number">5&#x27;b0_0001</span>,</span><br><span class="line">CHECK_e = <span class="number">5&#x27;b0_0010</span>,</span><br><span class="line">CHECK_la = <span class="number">5&#x27;b0_0100</span>,</span><br><span class="line">CHECK_lb = <span class="number">5&#x27;b0_1000</span>,</span><br><span class="line">CHECK_o = <span class="number">5&#x27;b1_0000</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">reg</span>[<span class="number">4</span>:<span class="number">0</span>]state;</span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span>@(<span class="keyword">posedge</span> clk <span class="keyword">or</span> <span class="keyword">negedge</span> rst)</span><br><span class="line"><span class="keyword">if</span>(!rst)<span class="keyword">begin</span></span><br><span class="line">out &lt;= <span class="number">1&#x27;b1</span>;</span><br><span class="line">state &lt;= CHECK_H;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">begin</span></span><br><span class="line"><span class="keyword">case</span>(state)</span><br><span class="line">CHECK_H:</span><br><span class="line"><span class="keyword">if</span>(data == <span class="string">&quot;H&quot;</span>)</span><br><span class="line">state &lt;= CHECK_e;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">state &lt;= CHECK_H;</span><br><span class="line">CHECK_e:</span><br><span class="line"><span class="keyword">if</span>(data == <span class="string">&quot;e&quot;</span>)</span><br><span class="line">state &lt;= CHECK_la;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">state &lt;= CHECK_H;</span><br><span class="line">CHECK_la:</span><br><span class="line"><span class="keyword">if</span>(data == <span class="string">&quot;l&quot;</span>)</span><br><span class="line">state &lt;= CHECK_lb;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">state &lt;= CHECK_H;</span><br><span class="line">CHECK_lb:</span><br><span class="line"><span class="keyword">if</span>(data == <span class="string">&quot;l&quot;</span>)</span><br><span class="line">state &lt;= CHECK_o;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">state &lt;= CHECK_H;</span><br><span class="line">CHECK_o:</span><br><span class="line"><span class="keyword">if</span>(data == <span class="string">&quot;o&quot;</span>)<span class="keyword">begin</span></span><br><span class="line">out &lt;= ~ out;</span><br><span class="line">state &lt;= CHECK_H;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">state &lt;= CHECK_H;</span><br><span class="line"></span><br><span class="line"><span class="comment">//begin</span></span><br><span class="line"><span class="comment">//state &lt;= CHECK_H;</span></span><br><span class="line"><span class="comment">//if(data == &quot;o&quot;)</span></span><br><span class="line"><span class="comment">//out &lt;= ~ out;</span></span><br><span class="line"><span class="comment">//else</span></span><br><span class="line"><span class="comment">//out &lt;= out;</span></span><br><span class="line"><span class="keyword">default</span>: state &lt;= CHECK_H;</span><br><span class="line"><span class="keyword">endcase</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">endmodule</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight verilog"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><p><img src="D:%5Cblog%5Cpicture%5CPicGo%5Ccopypicture%5Cimage-20201213150623372.png" alt="image-20201213150623372" /></p><h1 id="自己编写改编"><a class="markdownIt-Anchor" href="#自己编写改编"></a> 自己编写（改编）</h1><ul><li>四位移位寄存器</li></ul><p>不带有异步清零，属于串行输入并行输出</p><figure class="highlight verilog"><table><tr><td class="code"><pre><span class="line"><span class="keyword">module</span> DFF1(din,clk,q);</span><br><span class="line"></span><br><span class="line"> <span class="keyword">input</span> din;</span><br><span class="line"> <span class="keyword">input</span> clk;</span><br><span class="line"> <span class="keyword">output</span> <span class="keyword">reg</span> [<span class="number">3</span>:<span class="number">0</span>] q=<span class="number">4&#x27;b0000</span>;</span><br><span class="line"> <span class="keyword">reg</span> q3=<span class="number">1&#x27;b0</span>,q2=<span class="number">1&#x27;b0</span>,q1=<span class="number">1&#x27;b0</span>,q0=<span class="number">1&#x27;b0</span>;</span><br><span class="line"> <span class="keyword">always</span> @(<span class="keyword">posedge</span> clk)</span><br><span class="line"> <span class="keyword">begin</span> </span><br><span class="line">  q3&lt;=q2;</span><br><span class="line">  q2&lt;=q1;</span><br><span class="line">  q1&lt;=q0;</span><br><span class="line">  q0&lt;=din;</span><br><span class="line">  q=&#123;q3,q2,q1,q0&#125;;</span><br><span class="line"> <span class="keyword">end</span></span><br><span class="line"><span class="keyword">endmodule</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">module</span> t1();</span><br><span class="line"></span><br><span class="line"><span class="keyword">reg</span> din;</span><br><span class="line"><span class="keyword">reg</span> clk;</span><br><span class="line"></span><br><span class="line"><span class="keyword">wire</span> [<span class="number">3</span>:<span class="number">0</span>] q;</span><br><span class="line"></span><br><span class="line">DFF1 U1(<span class="variable">.clk</span>(clk),<span class="variable">.din</span>(din),<span class="variable">.q</span>(q));</span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span> <span class="keyword">begin</span></span><br><span class="line"> #<span class="number">10</span> clk=~clk;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">initial</span> <span class="keyword">begin</span></span><br><span class="line"> clk = <span class="number">1&#x27;b0</span>;</span><br><span class="line"> din = <span class="number">1&#x27;b1</span>;<span class="comment">//第一个移进的数</span></span><br><span class="line">   #<span class="number">15</span> din = <span class="number">1&#x27;b0</span>;<span class="comment">//第二个移进的数</span></span><br><span class="line">   #<span class="number">20</span> din = <span class="number">1&#x27;b1</span>;<span class="comment">//第三个</span></span><br><span class="line">   #<span class="number">20</span> din = <span class="number">1&#x27;b0</span>;<span class="comment">//第四个</span></span><br><span class="line">   #<span class="number">20</span> din = <span class="number">1&#x27;b1</span>;<span class="comment">//第五个</span></span><br><span class="line">   #<span class="number">20</span> din = <span class="number">1&#x27;b0</span>;   <span class="comment">//第六个  </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span> </span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201209214417.png" alt="image-20201209214407163" /></p><ul><li>dds</li></ul><figure class="highlight verilog"><table><tr><td class="code"><pre><span class="line"> <span class="keyword">module</span> control (</span><br><span class="line">                 clk, <span class="comment">//外部输入时钟</span></span><br><span class="line"></span><br><span class="line">                 rst_n,<span class="comment">//系统复位</span></span><br><span class="line"></span><br><span class="line">                 addr<span class="comment">//有效地址</span></span><br><span class="line"></span><br><span class="line">              );</span><br><span class="line"></span><br><span class="line">      <span class="comment">//模块输入</span></span><br><span class="line">      <span class="keyword">input</span> clk;<span class="comment">//外部输入时钟</span></span><br><span class="line">      <span class="keyword">input</span> rst_n;<span class="comment">//系统复位</span></span><br><span class="line">      <span class="comment">//模块输出</span></span><br><span class="line">      <span class="keyword">output</span> <span class="keyword">reg</span> [<span class="number">7</span>:<span class="number">0</span>] addr;<span class="comment">//有效地址</span></span><br><span class="line"></span><br><span class="line">     <span class="keyword">always</span> @ (<span class="keyword">posedge</span> clk <span class="keyword">or</span> <span class="keyword">negedge</span> rst_n)</span><br><span class="line">          <span class="keyword">begin</span></span><br><span class="line"></span><br><span class="line">              <span class="keyword">if</span> (!rst_n) <span class="comment">//复位的时候，addr清零</span></span><br><span class="line">                  addr &lt;= <span class="number">0</span>;</span><br><span class="line">             <span class="keyword">else</span></span><br><span class="line">                 <span class="keyword">if</span> (addr &lt; <span class="number">255</span>)</span><br><span class="line"></span><br><span class="line">                     addr &lt;= addr + <span class="number">1</span>;<span class="comment">//地址在0~255之间循环</span></span><br><span class="line"></span><br><span class="line">                 <span class="keyword">else</span></span><br><span class="line">                    addr &lt;= <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">         <span class="keyword">end</span>    </span><br><span class="line"><span class="keyword">endmodule</span> </span><br></pre></td></tr></table></figure><figure class="highlight verilog"><table><tr><td class="code"><pre><span class="line"><span class="keyword">module</span> dds (</span><br><span class="line">              clk, <span class="comment">//外部输入时钟</span></span><br><span class="line">             rst_n,<span class="comment">//系统复位</span></span><br><span class="line">             num <span class="comment">//波形数据输出</span></span><br><span class="line">         );</span><br><span class="line">      <span class="comment">//系统输入</span></span><br><span class="line">      <span class="keyword">input</span> clk;<span class="comment">//外部输入时钟</span></span><br><span class="line">      <span class="keyword">input</span> rst_n;<span class="comment">//系统复位</span></span><br><span class="line">      <span class="comment">//系统输出</span></span><br><span class="line">      <span class="keyword">output</span> [<span class="number">7</span>:<span class="number">0</span>] num;<span class="comment">//波形数据输出</span></span><br><span class="line">      <span class="comment">//定义中间连线</span></span><br><span class="line">      <span class="keyword">wire</span> [<span class="number">7</span>:<span class="number">0</span>] addr;<span class="comment">//有效地址</span></span><br><span class="line">      <span class="comment">//实例化control</span></span><br><span class="line">      control control (</span><br><span class="line">                  <span class="variable">.clk</span>(clk), <span class="comment">//外部输入时钟</span></span><br><span class="line">                 <span class="variable">.rst_n</span>(rst_n), <span class="comment">//系统复位</span></span><br><span class="line">                  <span class="variable">.addr</span>(addr)<span class="comment">//有效地址</span></span><br><span class="line">              );</span><br><span class="line">      <span class="comment">//调用ip核</span></span><br><span class="line"></span><br><span class="line">      rom rom_inst (</span><br><span class="line">                  <span class="variable">.address</span> ( addr ),</span><br><span class="line">                  <span class="variable">.clock</span> ( clk ),</span><br><span class="line">                  <span class="variable">.q</span> ( num )</span><br><span class="line">              );</span><br><span class="line">  <span class="keyword">endmodule</span> </span><br></pre></td></tr></table></figure><figure class="highlight verilog"><table><tr><td class="code"><pre><span class="line"><span class="meta">`<span class="meta-keyword">timescale</span> 1ns/1ps //定义时间单位和精度</span></span><br><span class="line"></span><br><span class="line"> <span class="keyword">module</span> dds_tb;</span><br><span class="line"> <span class="comment">//系统输入</span></span><br><span class="line"> <span class="keyword">reg</span> clk;<span class="comment">//外部输入时钟</span></span><br><span class="line"> <span class="keyword">reg</span> rst_n;<span class="comment">//系统复位</span></span><br><span class="line"> <span class="comment">//系统输出</span></span><br><span class="line"> <span class="keyword">wire</span> [<span class="number">7</span>:<span class="number">0</span>] num;<span class="comment">//波形数据输出</span></span><br><span class="line"></span><br><span class="line"> <span class="keyword">initial</span> <span class="keyword">begin</span></span><br><span class="line"> clk = <span class="number">1</span>;</span><br><span class="line"> rst_n = <span class="number">0</span>;</span><br><span class="line"> # <span class="number">200</span><span class="variable">.1</span></span><br><span class="line"> rst_n = <span class="number">1</span>;</span><br><span class="line"> <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"> <span class="keyword">always</span> # <span class="number">10</span> clk = ~clk;<span class="comment">//50M的时钟</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> dds dds (</span><br><span class="line"></span><br><span class="line"> <span class="variable">.clk</span>(clk), <span class="comment">//外部输入时钟</span></span><br><span class="line"></span><br><span class="line"> <span class="variable">.rst_n</span>(rst_n), <span class="comment">//系统复位</span></span><br><span class="line"></span><br><span class="line"> <span class="variable">.num</span>(num)<span class="comment">//波形数据输出</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"> <span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><p>图像改成无符号数仿真，194.5kHz</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201221180549.png" alt="" /></p>]]></content>
    
    
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; class=&quot;aplayer-secondary-script-marker&quot;&gt;&lt;/script&gt;&lt;h1 id=&quot;基础知识&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#基础知识&quot;&gt;&lt;/a&gt; 基础知识&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;模块语句及其表达方式&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201130195313.png&quot; alt&gt;&lt;/p&gt;
&lt;p&gt;任一可综合的最基本的模块都必须以关键词module开头。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;模块名最好根据相应电路的功能来确定。如4位二进制计数器用counter4b。&lt;/li&gt;
&lt;li&gt;模块端口列表中须列出此模块的所有输入、输出或双向端口名，端口名间用逗号分开，括号外加分号。&lt;/li&gt;
&lt;li&gt;endmodule是模块结束语句关键词，旁边不加任何标点符号。对模块端口及其功能的描述语句都 必须放在模块语句module_endmodule之间。&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&quot;2&quot;&gt;
&lt;li&gt;端口语句、端口信号名和端口模式&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201130195425.png&quot; alt&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;输入端口：input&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;输出端口：output&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;双向端口：inout&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&quot;3&quot;&gt;
&lt;li&gt;逻辑操作符&lt;/li&gt;
&lt;/ol&gt;</summary>
    
    
    
    <category term="记录&amp;烂笔头" scheme="http://stardust14.com/categories/%E8%AE%B0%E5%BD%95-%E7%83%82%E7%AC%94%E5%A4%B4/"/>
    
    
    <category term="quartus" scheme="http://stardust14.com/tags/quartus/"/>
    
  </entry>
  
  <entry>
    <title>CentOs6.5下升级Firefox</title>
    <link href="http://stardust14.com/2020/11/28/CentOs6-5%E4%B8%8B%E5%8D%87%E7%BA%A7Firefox/"/>
    <id>http://stardust14.com/2020/11/28/CentOs6-5%E4%B8%8B%E5%8D%87%E7%BA%A7Firefox/</id>
    <published>2020-11-28T11:08:12.000Z</published>
    <updated>2020-11-30T11:45:36.770Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class='tip error'><p>无效<p></div><p><s>1.下载最新安装文件</s></p><p><s>在firefox的官网里下载最新的linux版安装文件Firefox-latest-x86_64.tar.bz2(我下载的是64bit版)，然后解压。</s></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[star@localhost 下载]# tar -xjvf Firefox-latest-x86_64.tar.bz2 </span><br></pre></td></tr></table></figure><blockquote><p><s>解压要在主用户，不要在最高管理员（root）权限下进行</s></p></blockquote><p><s>2.卸载旧版</s></p><p><s>系统默认安装的旧版 firefox ，通常位于 /usr/lib 目录下，我们把旧版卸载。</s></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[star@localhost 下载]# whereis firefox</span><br><span class="line">firefox: /usr/bin/firefox /usr/lib/firefox /usr/lib64/firefox /usr/share/man/man1/firefox.1.gz</span><br></pre></td></tr></table></figure><p><s>删除程序目录</s></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@localhost 下载]# sudo rm -rf /usr/lib/firefox</span><br></pre></td></tr></table></figure><p><s>删除启动脚本</s></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@localhost 下载]# sudo rm -f /usr/bin/firefox</span><br></pre></td></tr></table></figure><blockquote><p><s>有无sudo都可</s></p></blockquote><p><s>3.安装新版</s></p><p><s>将解压的firefox 目录移动到 /usr/lib 目录下</s></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@localhost 下载]# mv firefox /usr/lib</span><br></pre></td></tr></table></figure><p><s>进入 /usr/bin 目录，删除其下的 firefox 脚本</s></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@localhost bin]# rm firefox</span><br></pre></td></tr></table></figure><p><s>创建一个软链接，指向/usr/lib/firefox/firefox</s></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# ln -s /usr/lib/firefox/firefox /usr/bin/firefox</span><br></pre></td></tr></table></figure><p><s>修改左上角的firefox 浏览器图标属性里的程序启动路径，在 “命令”字段的文本框中，输入</s></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">/usr/lib/firefox/firefox %u</span><br></pre></td></tr></table></figure><p><s><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201128192425.png" alt="image-20201128192359442" /></s></p><p><s>参考网上的解决方案：</s></p><p><a href="https://blog.yayuanzi.com/8754.html">https://blog.yayuanzi.com/8754.html</a></p><p><a href="https://blog.csdn.net/weixin_34289744/article/details/92890618">https://blog.csdn.net/weixin_34289744/article/details/92890618</a></p><div class='tip error'><p>无效<p></div><h1 id="解决"><a class="markdownIt-Anchor" href="#解决"></a> 解决</h1><div class="note success flat"><p>成功</p></div><p>卸载旧版后，在终端输入<code>yum -y install firefox</code>再把之前的设置修改回来即可。</p>]]></content>
    
    
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; class=&quot;aplayer-secondary-script-marker&quot;&gt;&lt;/script&gt;&lt;div class=&quot;tip error&quot;&gt;&lt;p&gt;无效&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/div&gt;
&lt;p&gt;&lt;s&gt;1.下载最新安装文件&lt;/s&gt;&lt;/p&gt;
&lt;p&gt;&lt;s&gt;在firefox的官网里下载最新的linux版安装文件Firefox-latest-x86_64.tar.bz2(我下载的是64bit版)，然后解压。&lt;/s&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[star@localhost 下载]# tar -xjvf Firefox-latest-x86_64.tar.bz2 &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;s&gt;解压要在主用户，不要在最高管理员（root）权限下进行&lt;/s&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;s&gt;2.卸载旧版&lt;/s&gt;&lt;/p&gt;
&lt;p&gt;&lt;s&gt;系统默认安装的旧版 firefox ，通常位于 /usr/lib 目录下，我们把旧版卸载。&lt;/s&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[star@localhost 下载]# whereis firefox&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;firefox: /usr/bin/firefox /usr/lib/firefox /usr/lib64/firefox /usr/share/man/man1/firefox.1.gz&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;s&gt;删除程序目录&lt;/s&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="记录&amp;烂笔头" scheme="http://stardust14.com/categories/%E8%AE%B0%E5%BD%95-%E7%83%82%E7%AC%94%E5%A4%B4/"/>
    
    
    <category term="CentOS6.5" scheme="http://stardust14.com/tags/CentOS6-5/"/>
    
  </entry>
  
  <entry>
    <title>Linux简单知识</title>
    <link href="http://stardust14.com/2020/10/31/Linux%E7%AE%80%E5%8D%95%E7%9F%A5%E8%AF%86/"/>
    <id>http://stardust14.com/2020/10/31/Linux%E7%AE%80%E5%8D%95%E7%9F%A5%E8%AF%86/</id>
    <published>2020-10-31T08:26:03.000Z</published>
    <updated>2020-11-22T03:43:20.316Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="简单命令"><a class="markdownIt-Anchor" href="#简单命令"></a> 简单命令</h1><h2 id="常用系统工作命令"><a class="markdownIt-Anchor" href="#常用系统工作命令"></a> 常用系统工作命令</h2><ol><li>echo命令</li></ol><p>用于在终端输出字符串或变量提取后的值，格式为&quot;echo[字符串|$变量]&quot;</p><blockquote><p>相当于打印字符串/提取变量的值</p></blockquote><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[hello@hello Desktop]$ echo $SHELL</span><br><span class="line">/bin/bash</span><br></pre></td></tr></table></figure><ol start="2"><li>date命令</li></ol><p>用于显示及设置系统的时间或日期，格式为&quot;<code>date[选项][+指定的格式]</code>&quot;</p><p>只需在强大的date命令中输入以“+”号开头的参数，即可按照指定格式来输出系统的时间或日期，这样在日常工作时便可以把备份数据的命令与指定格式输出的时间信息结合到一起。</p><p>​date命令中的参数及作用</p><table><thead><tr><th>参数</th><th>作用</th></tr></thead><tbody><tr><td>%S</td><td>秒（00～59）</td></tr><tr><td>%M</td><td>分钟（00～59）</td></tr><tr><td>%H</td><td>小时（00～23）</td></tr><tr><td>%I</td><td>小时（00～12）</td></tr><tr><td>%m</td><td>月份（1~12）</td></tr><tr><td>%p</td><td>显示出AM或PM</td></tr><tr><td>%a</td><td>缩写的工作日名称（例如：Sun）</td></tr><tr><td>%A</td><td>完整的工作日名称（例如：Sunday）</td></tr><tr><td>%b</td><td>缩写的月份名称（例如：Jan）</td></tr><tr><td>%B</td><td>完整的月份名称（例如：January）</td></tr><tr><td>%q</td><td>季度（1~4）</td></tr><tr><td>%y</td><td>简写年份（例如：20）</td></tr><tr><td>%Y</td><td>完整年份（例如：2020）</td></tr><tr><td>%d</td><td>本月中的第几天</td></tr><tr><td>%j</td><td>今年中的第几天</td></tr><tr><td>%n</td><td>换行符（相当于按下回车键）</td></tr><tr><td>%t</td><td>跳格（相当于按下Tab键）</td></tr></tbody></table><ol start="3"><li>reboot命令</li></ol><p>reboot命令用于重启系统，其格式为reboot。需要root管理员权限</p><ol start="4"><li>poweroff命令</li></ol><p>用于关闭系统，其格式为poweroff，默认root管理员权限。</p><ol start="5"><li>wget命令</li></ol><p>用于在终端下载网络文件，格式为&quot;wget[参数]下载地址&quot;。</p><p>​wget命令的参数以及命令</p><table><thead><tr><th>参数</th><th>作用</th></tr></thead><tbody><tr><td>-b</td><td>后台下载模式</td></tr><tr><td>-P</td><td>下载到指定目录</td></tr><tr><td>-t</td><td>最大尝试次数</td></tr><tr><td>-c</td><td>断点续传</td></tr><tr><td>-p</td><td>下载页面内所有资源，包括图片、视频等</td></tr><tr><td>-r</td><td>递归下载</td></tr></tbody></table><div class='tip error'><p>error：出现错误<p></div><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201112210230.png" alt="image-20201112210227444" /></p><p>解决:</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">wget --no-check-certificate  https://www.linuxprobe.com/docs/LinuxProbe.pdf</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201112210519.png" alt="image-20201112210518064" /></p><ol start="6"><li>ps命令</li></ol><p>ps命令用于查看系统中的进程状态，格式为“ps [参数]”。</p><p>ps命令的参数以及作用</p><table><thead><tr><th>参数</th><th>作用</th></tr></thead><tbody><tr><td>-a</td><td>显示所有进程（包括其他用户的进程）</td></tr><tr><td>-u</td><td>用户以及其他详细信息</td></tr><tr><td>-x</td><td>显示没有控制终端的进程</td></tr></tbody></table><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">R（运行）：进程正在运行或在运行队列中等待。</span><br><span class="line">S（中断）：进程处于休眠中，当某个条件形成后或者接收到信号时，则脱离该状态。</span><br><span class="line">D（不可中断）：进程不响应系统异步信号，即便用kill命令也不能将其中断。</span><br><span class="line">Z（僵死）：进程已经终止，但进程描述符依然存在, 直到父进程调用wait4()系统函数后将进程释放。</span><br><span class="line">T（停止）：进程收到停止信号后停止运行。</span><br></pre></td></tr></table></figure><ol start="7"><li>top命令</li></ol><p>top命令用于动态地监视进程活动与系统负载等信息，其格式为top。</p><p>top命令相当强大，能够动态地查看系统运维状态，完全将它看作Linux中的“强化版的Windows任务管理器”。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201112212251.png" alt="image-20201112212250825" /></p><ol start="8"><li>pidof命令</li></ol><p>pidof命令用于查询某个指定服务进程的PID值，格式为“pidof [参数] [服务名称]”。</p><p>每个进程的进程号码值（PID）是唯一的，因此可以通过PID来区分不同的进程。例如，可以使用如下命令来查询本机上sshd服务程序的PID：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[hello@hello Desktop]$ pidof sshd</span><br><span class="line">2037</span><br></pre></td></tr></table></figure><ol start="9"><li>kill命令</li></ol><p>kill命令用于终止某个指定PID的服务进程，格式为“kill [参数] [进程PID]”。</p><p>接下来，我们使用kill命令把上面用pidof命令查询到的PID所代表的进程终止掉，其命令如下所示。这种操作的效果等同于强制停止sshd服务。</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[hello@hello Desktop]$ kill 2037</span><br></pre></td></tr></table></figure><ol start="10"><li>killall命令</li></ol><p>killall命令用于终止某个指定名称的服务所对应的全部进程，格式为：“killall [参数] [服务名称]”。</p><h2 id="系统状态检测命令"><a class="markdownIt-Anchor" href="#系统状态检测命令"></a> 系统状态检测命令</h2><ol><li>ifconfig命令</li></ol><p>ifconfig命令用于获取网卡配置与网络状态等信息，格式为“ifconfig [网络设备] [参数]”。</p><h1 id="基本命令"><a class="markdownIt-Anchor" href="#基本命令"></a> 基本命令</h1><p>通用语法格式：# <font color='red'>指令名称 [选项] [操作的目标]</font></p><h2 id="简单命令-2"><a class="markdownIt-Anchor" href="#简单命令-2"></a> 简单命令</h2><h3 id="ls指令"><a class="markdownIt-Anchor" href="#ls指令"></a> ls指令</h3><p>语法1：<strong>#ls [路径]</strong></p><p>表示列出指定路径下的文件夹和文件的名字，如果路径没有指定则列出当前路径下的（list）</p><p>例如：在root用户的家目录中输入ls命令，则会看到以下的效果：</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201122112536.jpg" alt="img" /></p><p>要求列出/home的文档的名称。</p><p>#ls /home</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201122112648.png" alt="image-20201122112647863" /></p><p>语法2：<strong>#ls -l [路径]</strong></p><p>表示<strong>以列表的形式</strong>列出指定路径下的文件夹和文件的名字</p><p>例如：使用ls –l的命令列出当前用户家目录中的文件夹和文件信息</p><p>语法3：**#ls -la [**<strong>路径]</strong></p><p>表示<strong>以列表的形式</strong>列出指定路径下的文件夹和文件名（<strong>包含隐藏文件</strong>**,all**）</p><p>例如：在当前用户的家目录中输入ls –la命令可以查看全部的文件夹和文件名，并且包含了隐藏文件（<font color='red'>特点是以“<strong>.</strong>”开头的名字</font>）</p><h3 id="clear指令"><a class="markdownIt-Anchor" href="#clear指令"></a> clear指令</h3><p>表示的含义：清空当前屏幕中全部的命令（<strong>其实质是没有清空，只不过是顶到上面去了</strong>）</p><p><strong>语法：#clear</strong></p><p><strong>等效于快捷键：ctrl + L</strong></p><h3 id="su指令"><a class="markdownIt-Anchor" href="#su指令"></a> su指令</h3><p>作用：切换用户（switch user）。</p><p>语法：<strong>#su</strong> <strong>需要切换到的用户名（用户名可以不写，则表示切换到root用户）</strong></p><p>例如：</p><p>1、从root用户切换到admin用户。</p><p>2、从admin用户切换到root用户。</p><p>#su root</p><p>等价于：</p><p>#su</p><blockquote><p>密码输错有两种方式：1，根据提示重新输入；2，按住backspace（删除键）三秒</p></blockquote><p>通过上述两个命令的操作发现一个结论：</p><p><strong>当切换到的用户权限如果比当前用户的权限低，可以直接切换，不需要密码；反之，如果从低往高切换则要求输入被切换到的账户对应的密码。</strong></p><h3 id="cd指令"><a class="markdownIt-Anchor" href="#cd指令"></a> cd指令</h3><p>作用：切换目录（change directory）。</p><p><strong>语法：#cd</strong> <strong>需要切换到的路径（路径可以是相对路径，也可以是绝对路径）</strong></p><p><strong>路径可以写也可以不写，不写则表示切换到当前用户的家目录。</strong></p><p>例如：</p><p>1、从root用户家目录中切换到admin用户的家目录中</p><blockquote><p><strong>提示：在切换路径或者后期打开一个文件的时候可以多建议使用tab键（可以自动补全命令路径）。</strong></p></blockquote><p>2、切换用户切换到admin用户，然后从admin用户的家目录使用cd切换到root的家目录</p><p>#su admin</p><p>#cd /root</p><p>结论： <strong>低级用户没有权限访问高级用户相关的资源</strong>。</p><p><strong>关于路径：</strong></p><p>路径分为相对路径和绝对路径。</p><p>相对路径是相对当前路径的一种表现形式。</p><p>特点：只要不是以“/”开头的就是相对路径。</p><p>绝对路径是直接从“根”开始的一种路径形式。</p><p>特点：以“/”开头的路径称之为绝对路径。</p><p>案例：从root用户家目录中切换到admin用户的家目录中，要求以相对路径形式书写。</p><p>#cd …/home/admin</p><p>分析：</p><p>​     当前路径：**/**root</p><p>​     目标路径：**/**home/admin</p>]]></content>
    
    
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; class=&quot;aplayer-secondary-script-marker&quot;&gt;&lt;/script&gt;&lt;h1 id=&quot;简单命令&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#简单命令&quot;&gt;&lt;/a&gt; 简单命令&lt;/h1&gt;
&lt;h2 id=&quot;常用系统工作命令&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#常用系统工作命令&quot;&gt;&lt;/a&gt; 常用系统工作命令&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;echo命令&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;用于在终端输出字符串或变量提取后的值，格式为&amp;quot;echo[字符串|$变量]&amp;quot;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;相当于打印字符串/提取变量的值&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[hello@hello Desktop]$ echo $SHELL&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/bin/bash&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol start=&quot;2&quot;&gt;
&lt;li&gt;date命令&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;用于显示及设置系统的时间或日期，格式为&amp;quot;&lt;code&gt;date[选项][+指定的格式]&lt;/code&gt;&amp;quot;&lt;/p&gt;
&lt;p&gt;只需在强大的date命令中输入以“+”号开头的参数，即可按照指定格式来输出系统的时间或日期，这样在日常工作时便可以把备份数据的命令与指定格式输出的时间信息结合到一起。&lt;/p&gt;</summary>
    
    
    
    <category term="linux" scheme="http://stardust14.com/categories/linux/"/>
    
    
    <category term="linux" scheme="http://stardust14.com/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>python爬虫</title>
    <link href="http://stardust14.com/2020/10/20/python%E7%88%AC%E8%99%AB/"/>
    <id>http://stardust14.com/2020/10/20/python%E7%88%AC%E8%99%AB/</id>
    <published>2020-10-20T08:29:35.000Z</published>
    <updated>2020-10-27T08:04:47.961Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="预备知识"><a class="markdownIt-Anchor" href="#预备知识"></a> 预备知识</h1><h2 id="正则法则"><a class="markdownIt-Anchor" href="#正则法则"></a> 正则法则</h2><table><thead><tr><th style="text-align:center">字符</th><th style="text-align:center">描述</th></tr></thead><tbody><tr><td style="text-align:center"><code>\d</code></td><td style="text-align:center">代表任意数字，就是阿拉伯数字 0-9 这些玩意。</td></tr><tr><td style="text-align:center"><code>\D</code></td><td style="text-align:center">大写的就是和小写的唱反调，\d 你代表的是任意数字是吧？那么我 \D 就代表不是数字的。</td></tr><tr><td style="text-align:center"><code>\w</code></td><td style="text-align:center">代表字母，数字，下划线。也就是 a-z、A-Z、0-9、_。</td></tr><tr><td style="text-align:center"><code>\W</code></td><td style="text-align:center">跟 \w 唱反调，代表不是字母，不是数字，不是下划线的。</td></tr><tr><td style="text-align:center"><code>\n</code></td><td style="text-align:center">代表一个换行。</td></tr><tr><td style="text-align:center"><code>\r</code></td><td style="text-align:center">代表一个回车。</td></tr><tr><td style="text-align:center"><code>\f</code></td><td style="text-align:center">代表换页。</td></tr><tr><td style="text-align:center"><code>\t</code></td><td style="text-align:center">代表一个 Tab 。</td></tr><tr><td style="text-align:center"><code>\s</code></td><td style="text-align:center">代表所有的空白字符，也就是上面这个：\n、\r、\t、\f。</td></tr><tr><td style="text-align:center"><code>\S</code></td><td style="text-align:center">跟 \s 唱反调，代表所有不是空白的字符。</td></tr><tr><td style="text-align:center"><code>\A</code></td><td style="text-align:center">代表字符串的开始。</td></tr><tr><td style="text-align:center"><code>\Z</code></td><td style="text-align:center">代表字符串的结束。</td></tr><tr><td style="text-align:center"><code>^</code></td><td style="text-align:center">匹配字符串开始的位置。</td></tr><tr><td style="text-align:center"><code>$</code></td><td style="text-align:center">匹配字符创结束的位置。</td></tr><tr><td style="text-align:center"><code>.</code></td><td style="text-align:center">代表所有的单个字符，除了 \n \r</td></tr><tr><td style="text-align:center"><code>[...]</code></td><td style="text-align:center">代表在 [] 范围内的字符，比如 [a-z] 就代表 a到z的字母</td></tr><tr><td style="text-align:center"><code>[^...]</code></td><td style="text-align:center">跟 […] 唱反调，代表不在 [] 范围内的字符</td></tr><tr><td style="text-align:center"><code>&#123;n&#125;</code></td><td style="text-align:center">匹配在 {n} 前面的东西，比如: o{2} 不能匹配 Bob 中的 o ，但是能匹配 food 中的两个o。</td></tr><tr><td style="text-align:center"><code>&#123;n,m&#125;</code></td><td style="text-align:center">匹配在 {n,m} 前面的东西，比如：o{1,3} 将匹配“fooooood”中的前三个o。</td></tr><tr><td style="text-align:center"><code>&#123;n，&#125;</code></td><td style="text-align:center">匹配在 {n,} 前面的东西，比如：o{2,} 不能匹配“Bob”中的“o”，但能匹配“foooood”中的所有o。</td></tr><tr><td style="text-align:center"><code>*</code></td><td style="text-align:center">和 {0,} 一个样，匹配 * 前面的 0 次或多次。 比如 zo* 能匹配“z”、“zo”以及“zoo”。</td></tr><tr><td style="text-align:center"><code>+</code></td><td style="text-align:center">和{1，} 一个样，匹配 + 前面 1 次或多次。 比如 zo+”能匹配“zo”以及“zoo”，但不能匹配“z”。</td></tr><tr><td style="text-align:center"><code>？</code></td><td style="text-align:center">和{0,1} 一个样，匹配 ？前面 0 次或 1 次。</td></tr><tr><td style="text-align:center"><code>a|b</code></td><td style="text-align:center">匹配 a 或者 b。</td></tr><tr><td style="text-align:center"><code>（）</code></td><td style="text-align:center">匹配括号里面的内容。</td></tr></tbody></table><p>例子：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#贪婪匹配</span></span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">content=<span class="string">&#x27;hello,world.xiaoshuaib has 100 bananas&#x27;</span></span><br><span class="line">res=re.match(<span class="string">&#x27;^he.*(\d+)\s.*s$&#x27;</span>,content)</span><br><span class="line">print(res.group(<span class="number">1</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">#结果是0</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#非贪婪匹配，多了个？</span></span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">content=<span class="string">&#x27;hello,world.xiaoshuaib has 100 bananas&#x27;</span></span><br><span class="line">res=re.match(<span class="string">&#x27;^he.*?(\d+)\s.*s$&#x27;</span>,content)</span><br><span class="line">print(res.group(<span class="number">1</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">#结果是100</span></span><br></pre></td></tr></table></figure><blockquote><p>所谓贪婪匹配就是第一段代码一个数一个数都要去匹配</p><p>而非贪婪是直接把 100 给匹配出来了</p></blockquote><blockquote><p><code>.\*？</code>:表示的就是匹配任意字符</p><p>.*？的 . 代表所有的单个字符，除了 \n \r</p></blockquote><p>字符串有换行:</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">content=<span class="string">&#x27;&#x27;&#x27;hello,world.xiaoshuaib </span></span><br><span class="line"><span class="string">has 100 bananas&#x27;&#x27;&#x27;</span></span><br><span class="line">res=re.match(<span class="string">&#x27;^he.*?(\d+)\s.*s$&#x27;</span>,content,re.S)</span><br><span class="line">print(res.group(<span class="number">1</span>))</span><br><span class="line"><span class="comment">#直接用 re.S </span></span><br></pre></td></tr></table></figure><p><strong>re.search</strong>:直接去扫描字符串,然后把匹配成功的<strong>第一个</strong>结果的返回</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">content=<span class="string">&#x27;&#x27;&#x27;hello,world.xiaoshuaib </span></span><br><span class="line"><span class="string">has 100 bananas&#x27;&#x27;&#x27;</span></span><br><span class="line">res=re.search(<span class="string">&#x27;he.*?(\d+)\s.*s&#x27;</span>,content,re.S)</span><br><span class="line">print(res.group(<span class="number">1</span>))</span><br></pre></td></tr></table></figure><p><strong>re.findall</strong>:轻松的获取所有匹配的内容</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#又在结尾多了个？</span></span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">content=<span class="string">&#x27;&#x27;&#x27;hello,world.xiaoshuaib has 100 bananas;</span></span><br><span class="line"><span class="string">hello,world.xiaoshuaib has 100 bananas;</span></span><br><span class="line"><span class="string">hello,world.xiaoshuaib has 100 bananas;</span></span><br><span class="line"><span class="string">hello,world.xiaoshuaib has 100 bananas;&#x27;&#x27;&#x27;</span></span><br><span class="line">res=re.findall(<span class="string">&#x27;he.*?(\d+)\s.*?s&#x27;</span>,content,re.S)</span><br><span class="line">print(res)</span><br></pre></td></tr></table></figure><p><strong>re.sub</strong>：替换字符/数字</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">content=<span class="string">&#x27;&#x27;&#x27;hello,world.xiaoshuaib has 100 bananas;</span></span><br><span class="line"><span class="string">hello,world.xiaoshuaib has 100 bananas;</span></span><br><span class="line"><span class="string">hello,world.xiaoshuaib has 100 bananas;</span></span><br><span class="line"><span class="string">hello,world.xiaoshuaib has 100 bananas;&#x27;&#x27;&#x27;</span></span><br><span class="line">content=re.sub(<span class="string">&#x27;\d+&#x27;</span>,<span class="string">&#x27;250&#x27;</span>,content)</span><br><span class="line">print(content)</span><br></pre></td></tr></table></figure><p><strong>re.compile</strong>：主要就是把我们的匹配符封装一下</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">content=<span class="string">&#x27;&#x27;&#x27;hello,world.xiaoshuaib has 100 bananas;</span></span><br><span class="line"><span class="string">hello,world.xiaoshuaib has 100 bananas;</span></span><br><span class="line"><span class="string">hello,world.xiaoshuaib has 100 bananas;</span></span><br><span class="line"><span class="string">hello,world.xiaoshuaib has 100 bananas;&#x27;&#x27;&#x27;</span></span><br><span class="line">pattern=re.compile(<span class="string">&#x27;he.*?(\d+)\s.*?s&#x27;</span>,re.S)</span><br><span class="line">res=re.findall(pattern,content)</span><br><span class="line">print(res)</span><br></pre></td></tr></table></figure><p>当当网爬虫：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">request_dandan</span>(<span class="params">url</span>):</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        response=requests.get(url)</span><br><span class="line">        <span class="keyword">if</span> response.status_code==<span class="number">200</span>:</span><br><span class="line">            <span class="keyword">return</span> response.text</span><br><span class="line">    <span class="keyword">except</span> requests.RequestException:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">parse_result</span>(<span class="params">html</span>):</span></span><br><span class="line">    pattern=re.compile(<span class="string">&#x27;&lt;li&gt;.*?list_num.*?(\d+).&lt;/div&gt;.*?&lt;img src&quot;(.*?)&quot;.*?class=&quot;name&quot;.*?title=&quot;(.*?)&quot;&gt;.*?class=&quot;star&quot;&gt;.*?class=&quot;tuijian&quot;&gt;(.*?)&lt;/span&gt;.?class=&quot;publisher_info&quot;&gt;.*?target=&quot;_blank&quot;&gt;(.*?)&lt;/a&gt;.*?class=&quot;biaosheng&quot;&gt;.*?&lt;span&gt;(.*?)&lt;/span&gt;&lt;/div&gt;.?&lt;p&gt;&lt;span\sclass=&quot;price_n&quot;&gt;￥(.*?)&lt;/span&gt;.*?&lt;/li&gt;&#x27;</span>,re.S)</span><br><span class="line">    items=re.finditer(pattern,html)</span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> items:</span><br><span class="line">        <span class="keyword">yield</span> &#123;</span><br><span class="line">            <span class="string">&#x27;range&#x27;</span>:item[<span class="number">0</span>],</span><br><span class="line">            <span class="string">&#x27;iamge&#x27;</span>:item[<span class="number">1</span>],</span><br><span class="line">            <span class="string">&#x27;title&#x27;</span>:item[<span class="number">2</span>],</span><br><span class="line">            <span class="string">&#x27;recommend&#x27;</span>:item[<span class="number">3</span>],</span><br><span class="line">            <span class="string">&#x27;author&#x27;</span>:item[<span class="number">4</span>],</span><br><span class="line">            <span class="string">&#x27;times&#x27;</span>:item[<span class="number">5</span>],</span><br><span class="line">            <span class="string">&#x27;price&#x27;</span>:item[<span class="number">6</span>]</span><br><span class="line">        &#125;</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">write_item_to_file</span>(<span class="params">item</span>):</span></span><br><span class="line">    print(<span class="string">&#x27;开始写入数据====&gt;&#x27;</span>+str(item))</span><br><span class="line">    <span class="keyword">with</span> open(<span class="string">&#x27;book.txt&#x27;</span>,<span class="string">&#x27;a&#x27;</span>,encoding=<span class="string">&#x27;UTF-8&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        f.write(json.dumps(item,ensure_ascii=<span class="literal">False</span>)+<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">        f.close()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>(<span class="params">page</span>):</span></span><br><span class="line">    url=<span class="string">&#x27;http://bang.dangdang.com/books/fivestars/01.00.00.00.00.00-recent30-0-0-1-1&#x27;</span>+str(page)</span><br><span class="line">    html=request_dandan(url)</span><br><span class="line">    items=parse_result(html)</span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> items:</span><br><span class="line">        write_item_to_file(item)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">26</span>):</span><br><span class="line">        main(i)</span><br></pre></td></tr></table></figure><h2 id="beautifulsoup"><a class="markdownIt-Anchor" href="#beautifulsoup"></a> BeautifulSoup</h2><p>BeautifulSoup4将复杂HTML文档转换成一个复杂的树形结构，每个节点都是Python对象，所有对象可以归纳为四种:</p><ul><li>Tag</li><li>NavigableString</li><li>BeautifulSoup</li><li>comment</li></ul><ol><li>Tag</li></ol><p>标签及其内容，拿到她所找到的第一个内容</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib.request</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line">url=<span class="string">&quot;https://www.douban.com&quot;</span></span><br><span class="line">headers=&#123;</span><br><span class="line">    <span class="string">&quot;User-Agent&quot;</span>: <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.135 Safari/537.36&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># data=bytes(urllib.parse.urlencode(&#123;&#x27;name&#x27;:&#x27;eric&#x27;&#125;),encoding=&quot;utf-8&quot;)</span></span><br><span class="line">req=urllib.request.Request(url=url,headers=headers)</span><br><span class="line">reponse=urllib.request.urlopen(req)</span><br><span class="line">bs=BeautifulSoup(reponse,<span class="string">&quot;html.parser&quot;</span>)</span><br><span class="line"></span><br><span class="line">print(bs.a)<span class="comment">#拿到找到第一个标签的全部信息</span></span><br></pre></td></tr></table></figure><ol start="2"><li>NavigableString</li></ol><p>标签里面的内容（字符串）</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">print(bs.title.string)<span class="comment">#拿到标签里的内容</span></span><br><span class="line">print(bs.a.attrs)  <span class="comment">#快速拿到一个标签里所有的属性，并返回一个字典</span></span><br></pre></td></tr></table></figure><ol start="3"><li>BeautifulSoup</li></ol><p>表示整个文档</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">print(bs)</span><br></pre></td></tr></table></figure><ol start="4"><li>comment</li></ol><p>是一个特殊的NavigableString，输出的内容不包含注释符号</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">print(type(bs.title.string))</span><br></pre></td></tr></table></figure><h2 id="selenium"><a class="markdownIt-Anchor" href="#selenium"></a> selenium</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"></span><br><span class="line">driver=webdriver.Chrome()<span class="comment">#创建了一个 Chrome 驱动</span></span><br><span class="line">driver.get(<span class="string">&quot;http://www.baidu.com&quot;</span>)<span class="comment">#使用 get 方法打开百度</span></span><br><span class="line"></span><br><span class="line">input=driver.find_element_by_css_selector(<span class="string">&#x27;#kw&#x27;</span>)<span class="comment">#id 定位也就是百度的搜索框所在的标签位置</span></span><br><span class="line">input.send_keys(<span class="string">&quot;hexo博客&quot;</span>)<span class="comment">#写入我们要搜索的内容</span></span><br><span class="line"></span><br><span class="line">button=driver.find_element_by_css_selector(<span class="string">&#x27;#su&#x27;</span>)<span class="comment">#相当于点击百度的百度一下按钮</span></span><br><span class="line">button.click()<span class="comment">#模拟点击一次鼠标</span></span><br></pre></td></tr></table></figure><p>当我们要在页面中获取一个元素的时候</p><p>可以使用这些方法</p><ul><li>find_element_by_id</li><li>find_element_by_name</li><li>find_element_by_xpath</li><li>find_element_by_link_text</li><li>find_element_by_partial_link_text</li><li>find_element_by_tag_name</li><li>find_element_by_class_name</li><li>find_element_by_css_selector</li></ul><p>想要在页面获取多个元素呢</p><p>就可以这样</p><ul><li>find_elements_by_name</li><li>find_elements_by_xpath</li><li>find_elements_by_link_text</li><li>find_elements_by_partial_link_text</li><li>find_elements_by_tag_name</li><li>find_elements_by_class_name</li><li>find_elements_by_css_selector</li></ul><h2 id="一些函数"><a class="markdownIt-Anchor" href="#一些函数"></a> 一些函数</h2><h3 id="class"><a class="markdownIt-Anchor" href="#class"></a> class</h3><p>调用被封装的内容时，有两种情况：</p><ul><li>通过对象直接调用</li><li>通过self间接调用</li></ul><p>直接调用</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">obj1 = Foo(<span class="string">&#x27;chengd&#x27;</span>, <span class="number">18</span>)</span><br><span class="line"><span class="comment"># obj1.detail()  # Python默认会将obj1传给self参数，即：obj1.detail(obj1)，所以，此时方法内部的 self ＝ obj1，即：self.name 是 chengd ；self.age 是 18</span></span><br><span class="line">print(obj1.name)</span><br><span class="line">print(obj1.age)</span><br></pre></td></tr></table></figure><p>间接调用</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Foo</span>:</span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, name, age</span>):</span></span><br><span class="line">    self.name = name</span><br><span class="line">    self.age = age</span><br><span class="line">  </span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">detail</span>(<span class="params">self</span>):</span></span><br><span class="line">    print(self.name)</span><br><span class="line">    print(self.age)</span><br><span class="line">  </span><br><span class="line">obj1 = Foo(<span class="string">&#x27;chengd&#x27;</span>, <span class="number">18</span>)</span><br><span class="line">obj1.detail()  <span class="comment"># Python默认会将obj1传给self参数，即：obj1.detail(obj1)，所以，此时方法内部的 self ＝ obj1，即：self.name 是 chengd ；self.age 是 18</span></span><br><span class="line">  </span><br><span class="line">obj2 = Foo(<span class="string">&#x27;python&#x27;</span>, <span class="number">99</span>)</span><br><span class="line">obj2.detail()  <span class="comment"># Python默认会将obj2传给self参数，即：obj1.detail(obj2)，所以，此时方法内部的 self ＝ obj2，即：self.name 是 python ； self.age 是 99x</span></span><br></pre></td></tr></table></figure><h3 id="open"><a class="markdownIt-Anchor" href="#open"></a> open</h3><p>open(path, ‘-模式-‘,encoding=’UTF-8’)<br />即open(路径+文件名, 读写模式, 编码)</p><p>读写模式：<br />r ：只读<br />r+ : 读写<br />w ： 新建（会对原有文件进行覆盖）<br />a ： 追加<br />b ： 二进制文件</p><p>常用的模式有：<br />“a” 以“追加”模式打开， (从 EOF 开始, 必要时创建新文件)<br />“a+” 以”读写”模式打开<br />“ab” 以”二进制 追加”模式打开<br />“ab+” 以”二进制 读写”模式打开</p><p>“w” 以”写”的方式打开<br />“w+” 以“读写”模式打开<br />“wb” 以“二进制 写”模式打开<br />“wb+” 以“二进制 读写”模式打开</p><p>“r+” 以”读写”模式打开<br />“rb” 以”二进制 读”模式打开<br />“rb+” 以”二进制 读写”模式打开</p><p>f.write(“hello\n”) #如果要写入字符串以外的数据,先将他转换为字符串.</p><h3 id="with函数"><a class="markdownIt-Anchor" href="#with函数"></a> with函数</h3><p>工作原理</p><p><strong>紧跟with后面的语句会被求值，返回对象的__enter__()方法被调用，这个方法的返回值将被赋值给as关键字后面的变量，当with后面的代码块全部被执行完之后，将调用前面返回对象的__exit__()方法。</strong></p><blockquote><p><strong><em>enter</em>_()方法在语句体（with语句包裹起来的代码块）执行之前进入运行，<strong>exit</strong>()方法在语句体执行完毕退出后运行。</strong></p></blockquote><h3 id="write函数"><a class="markdownIt-Anchor" href="#write函数"></a> write函数</h3><p>用于向文件中写入指定字符串。</p><h3 id="sysstdoutwrite"><a class="markdownIt-Anchor" href="#sysstdoutwrite"></a> sys.stdout.write</h3><p>sys.stdout.write(&quot; “）的本质是print(” “, end=”&quot;)</p><h1 id="实例"><a class="markdownIt-Anchor" href="#实例"></a> 实例</h1><h2 id="豆瓣爬虫"><a class="markdownIt-Anchor" href="#豆瓣爬虫"></a> 豆瓣爬虫</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> xlwt</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> urllib.request,urllib.error</span><br><span class="line"><span class="keyword">import</span> _sqlite3</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">    baseurl=<span class="string">&quot;https://movie.douban.com/top250?start=&quot;</span></span><br><span class="line">    <span class="comment">#1.爬取网页</span></span><br><span class="line">    datalist=getDate(baseurl)</span><br><span class="line">    savepath=<span class="string">&quot;.\\豆瓣电影Top250.xls&quot;</span></span><br><span class="line">    <span class="comment"># 3.保存数据</span></span><br><span class="line">    saveDate(datalist,savepath)</span><br><span class="line">    <span class="comment"># askURL(baseurl)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#影片详情的规则</span></span><br><span class="line">findLink=re.compile(<span class="string">r&#x27;&lt;a href=&quot;(.*?)&quot;&gt;&#x27;</span>)       <span class="comment">#创建正则表达式对象，表示规则（字符串的模式）</span></span><br><span class="line"><span class="comment">#影片片名</span></span><br><span class="line">findTitle=re.compile(<span class="string">r&#x27;&lt;span class=&quot;title&quot;&gt;(.*)&lt;/span&gt;&#x27;</span>)</span><br><span class="line"><span class="comment">#影片的图片</span></span><br><span class="line">findImg=re.compile(<span class="string">r&#x27;&lt;img.*src=&quot;(.*?)&quot;&#x27;</span>,re.S)</span><br><span class="line"><span class="comment">#影片评分</span></span><br><span class="line">findRating=re.compile(<span class="string">r&#x27;&lt;span.*property.*&gt;(.*)&lt;/span&gt;&#x27;</span>)</span><br><span class="line"><span class="comment">#影片评价人数</span></span><br><span class="line">findPeople=re.compile(<span class="string">r&#x27;&lt;span&gt;(.*)&lt;/span&gt;&#x27;</span>)</span><br><span class="line"><span class="comment">#找到概况</span></span><br><span class="line">findInq=re.compile(<span class="string">r&#x27;&lt;span class=&quot;inq&quot;&gt;(.*)&lt;/span&gt;&#x27;</span>)</span><br><span class="line"><span class="comment">#找到影片的相关内容</span></span><br><span class="line">findBd=re.compile(<span class="string">r&#x27;&lt;p class=&quot;&quot;&gt;(.*?)&lt;/p&gt;&#x27;</span>,re.S)</span><br><span class="line"></span><br><span class="line"><span class="comment">#爬取网页</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getDate</span>(<span class="params">baseurl</span>):</span></span><br><span class="line">    datalist=[]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">10</span>):       <span class="comment">#调用获取页面信息的函数，10次</span></span><br><span class="line">        url=baseurl+str(i*<span class="number">25</span>)</span><br><span class="line">        html=askURL(url)        <span class="comment">#保存获取到的网页源码</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 2.逐一解析网页</span></span><br><span class="line">        soup=BeautifulSoup(html,<span class="string">&quot;html.parser&quot;</span>)</span><br><span class="line">        <span class="keyword">for</span> item <span class="keyword">in</span> soup.find_all(<span class="string">&#x27;div&#x27;</span>,class_=<span class="string">&quot;item&quot;</span>):</span><br><span class="line">            <span class="comment"># print(item)#测试查看电影item全部信息</span></span><br><span class="line">            data=[]<span class="comment">#保存一部电影的全部信息</span></span><br><span class="line">            item=str(item)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="comment">#获取到影片详情的链接</span></span><br><span class="line">            link=re.findall(findLink,item)[<span class="number">0</span>]   <span class="comment">#用re用来通过正则表达式查找指定的字符串</span></span><br><span class="line">            data.append(link)</span><br><span class="line">            <span class="comment"># print(link)</span></span><br><span class="line">            title=re.findall(findTitle,item)     <span class="comment">#影片名字</span></span><br><span class="line">            <span class="keyword">if</span>(len(title)==<span class="number">2</span>):</span><br><span class="line">                ctitle=title[<span class="number">0</span>]     <span class="comment">#添加中国名</span></span><br><span class="line">                data.append(ctitle)</span><br><span class="line">                otitle=title[<span class="number">1</span>].replace(<span class="string">&quot;/&quot;</span>,<span class="string">&quot;&quot;</span>)<span class="comment">#去掉无关的符号</span></span><br><span class="line">                data.append(otitle) <span class="comment">#添加外国名</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                data.append(title[<span class="number">0</span>])</span><br><span class="line">                data.append(<span class="string">&#x27; &#x27;</span>)        <span class="comment">#外国名留空</span></span><br><span class="line">            <span class="comment"># print(title)</span></span><br><span class="line">            img=re.findall(findImg,item)[<span class="number">0</span>]     <span class="comment">#影片图片</span></span><br><span class="line">            data.append(img)</span><br><span class="line">            <span class="comment"># print(img)</span></span><br><span class="line">            rate=re.findall(findRating,item)[<span class="number">0</span>]     <span class="comment">#评价分数</span></span><br><span class="line">            data.append(rate)</span><br><span class="line">            <span class="comment"># print(rate)</span></span><br><span class="line">            people=re.findall(findPeople,item)[<span class="number">0</span>]      <span class="comment">#评价人数</span></span><br><span class="line">            data.append(people)</span><br><span class="line">            <span class="comment"># print(people)</span></span><br><span class="line">            inp=re.findall(findInq,item)     <span class="comment">#评价概述</span></span><br><span class="line">            <span class="keyword">if</span> len(inp)!=<span class="number">0</span>:</span><br><span class="line">                inp=inp[<span class="number">0</span>].replace(<span class="string">&quot;。&quot;</span>,<span class="string">&quot;&quot;</span>)  <span class="comment">#去掉句号</span></span><br><span class="line">                data.append(inp)            <span class="comment">#添加注释</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                data.append(<span class="string">&quot; &quot;</span>)            <span class="comment">#留空</span></span><br><span class="line">            <span class="comment"># print(inp)</span></span><br><span class="line">            bd=re.findall(findBd,item)[<span class="number">0</span>]       <span class="comment">#影片相关内容</span></span><br><span class="line">            bd=re.sub(<span class="string">&#x27;&lt;br(\s+)?/&gt;(\s+)?&#x27;</span>,<span class="string">&quot; &quot;</span>,bd)   <span class="comment">#去掉br</span></span><br><span class="line">            bd=re.sub(<span class="string">&#x27;/&#x27;</span>,<span class="string">&quot; &quot;</span>,bd)       <span class="comment">#替换</span></span><br><span class="line">            data.append(bd.strip())     <span class="comment">#去掉前后的空格</span></span><br><span class="line">            <span class="comment"># print(bd)</span></span><br><span class="line">            datalist.append(data)      <span class="comment">#把处理好的一部电影信息放入datalist</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># print(datalist)</span></span><br><span class="line">    <span class="keyword">return</span> datalist</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 得到指定一个URL的网页内容</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">askURL</span>(<span class="params">url</span>):</span></span><br><span class="line">    head=&#123;<span class="comment">#模拟浏览器头部信息，向豆瓣服务器发送消息</span></span><br><span class="line">        <span class="comment"># 用户代理，告诉豆瓣服务器，我们是什么类型的机器，浏览器（本质上是告诉浏览器，我么可以接收什么水平的文件内容）</span></span><br><span class="line">        <span class="string">&quot;User-Agent&quot;</span>: <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.135 Safari/537.36&quot;</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    request = urllib.request.Request(url,headers=head)</span><br><span class="line">    html=<span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        response=urllib.request.urlopen(request)</span><br><span class="line">        html=response.read().decode(<span class="string">&quot;utf-8&quot;</span>)</span><br><span class="line">        <span class="comment"># print(html)</span></span><br><span class="line">    <span class="keyword">except</span> urllib.error.URLError <span class="keyword">as</span> e:</span><br><span class="line">        <span class="keyword">if</span> hasattr(e,<span class="string">&quot;code&quot;</span>):</span><br><span class="line">            print(e.code)</span><br><span class="line">        <span class="keyword">if</span> hasattr(e,<span class="string">&quot;reason&quot;</span>):</span><br><span class="line">            print(e.reason)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> html</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#保存数据</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">saveDate</span>(<span class="params">datalist,savepath</span>):</span></span><br><span class="line">    book=xlwt.Workbook(encoding=<span class="string">&quot;utf-8&quot;</span>,style_compression=<span class="number">0</span>)<span class="comment">#创建workbook对象</span></span><br><span class="line">    sheet=book.add_sheet(<span class="string">&quot;豆瓣电影TOP250&quot;</span>,cell_overwrite_ok=<span class="literal">True</span>)<span class="comment">#创建工作表格</span></span><br><span class="line">    col=(<span class="string">&quot;电影详情链接&quot;</span>,<span class="string">&quot;电影中文名字&quot;</span>,<span class="string">&quot;电影外国名&quot;</span>,<span class="string">&quot;电影图片链接&quot;</span>,<span class="string">&quot;电影评分&quot;</span>,<span class="string">&quot;电影评分人数&quot;</span>,<span class="string">&quot;电影概述&quot;</span>,<span class="string">&quot;电影相关内容&quot;</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">8</span>):</span><br><span class="line">        sheet.write(<span class="number">0</span>,i,col[i])<span class="comment">#列名</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">250</span>):</span><br><span class="line">        print(<span class="string">&quot;第%d条&quot;</span>%(i+<span class="number">1</span>))</span><br><span class="line">        data=datalist[i]</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">8</span>):</span><br><span class="line">            sheet.write(i+<span class="number">1</span>,j,data[j])</span><br><span class="line">    book.save(savepath)     <span class="comment">#保存</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br><span class="line">    print(<span class="string">&quot;爬取完毕！&quot;</span>)</span><br></pre></td></tr></table></figure><h2 id="当当网"><a class="markdownIt-Anchor" href="#当当网"></a> 当当网</h2><p>获取什么信息：</p><ul><li>书名</li><li>作者</li><li>封面链接</li><li>价格</li><li>出版日期</li><li>评价人数</li><li>五星好评的次数</li></ul><div class='tip error'><p>error:部分出现乱码，还未解决，应该是生僻字<p></div><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> xlwt</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> urllib.request,urllib.error</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">    baseurl=<span class="string">&quot;http://bang.dangdang.com/books/fivestars/01.00.00.00.00.00-recent30-0-0-1-&quot;</span></span><br><span class="line">    datalist = getDate(baseurl)</span><br><span class="line">    savepath=<span class="string">&quot;.\\当当网.xls&quot;</span></span><br><span class="line">    saveDate(datalist,savepath)</span><br><span class="line"><span class="comment">#书名</span></span><br><span class="line">findBook=re.compile(<span class="string">r&#x27;class=&quot;name&quot;.*?title=&quot;(.*?)&quot;&gt;&#x27;</span>,re.S)</span><br><span class="line"><span class="comment">#作者</span></span><br><span class="line">findAuthor=re.compile(<span class="string">r&#x27;&lt;a href.*?key=(.*?)&quot;&#x27;</span>,re.S)</span><br><span class="line"><span class="comment"># #封面链接</span></span><br><span class="line">findLink=re.compile(<span class="string">r&#x27;.*?&quot; src=&quot;(.*?)&quot;&#x27;</span>)</span><br><span class="line"><span class="comment"># #非会员价格</span></span><br><span class="line">findPrice1=re.compile(<span class="string">r&#x27;&lt;span class=&quot;price_r&quot;&gt;(.*?)&lt;/span&gt;&#x27;</span>)</span><br><span class="line"><span class="comment">#会员价格</span></span><br><span class="line">findPrice2=re.compile(<span class="string">r&#x27;&lt;span class=&quot;price_n&quot;&gt;(.*?)&lt;/span&gt;&#x27;</span>,re.S)</span><br><span class="line"><span class="comment">#电子书价格</span></span><br><span class="line">findPrice3=re.compile(<span class="string">r&#x27;&lt;p class=&quot;price_e&quot;&gt;.*&quot;price_n&quot;&gt;(.*?)&lt;/span&gt;&#x27;</span>,re.S)</span><br><span class="line"><span class="comment"># #出版日期</span></span><br><span class="line">findDate=re.compile(<span class="string">r&#x27;.*?_info&quot;&gt;&lt;span&gt;(.*?)&lt;/span&gt;&#x27;</span>)</span><br><span class="line"><span class="comment"># # 评价人数</span></span><br><span class="line">findPeople=re.compile(<span class="string">r&#x27;&quot;star&quot;&gt;.*?&quot;_blank&quot;&gt;(.*?)&lt;/a&gt;&#x27;</span>)</span><br><span class="line"><span class="comment"># #五星好评次数</span></span><br><span class="line">findStar=re.compile(<span class="string">r&#x27;&quot;biaosheng&quot;&gt;.*?&lt;span&gt;(.*?)&lt;/span&gt;&#x27;</span>)</span><br><span class="line"><span class="comment"># 出版社</span></span><br><span class="line">findPrint=re.compile(<span class="string">r&#x27;&quot;publisher_info&quot;&gt;.*?&quot;_blank&quot;&gt;(.*?)&lt;/a&gt;&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getDate</span>(<span class="params">baseurl</span>):</span></span><br><span class="line">    datalist=[]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">26</span>):</span><br><span class="line">        url=baseurl+str(i)</span><br><span class="line">        html = askURL(url)  <span class="comment"># 保存获取到的网页源码</span></span><br><span class="line">        <span class="comment"># print(html)</span></span><br><span class="line"></span><br><span class="line">        soup=BeautifulSoup(html,<span class="string">&quot;html.parser&quot;</span>)</span><br><span class="line">        <span class="comment"># print(soup)</span></span><br><span class="line">        <span class="keyword">for</span> item <span class="keyword">in</span> soup.find_all(<span class="string">&#x27;ul&#x27;</span>,class_=<span class="string">&quot;bang_list&quot;</span>):</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> item.find_all(<span class="string">&#x27;li&#x27;</span>):</span><br><span class="line"></span><br><span class="line">                data=[]</span><br><span class="line">                item=str(i)</span><br><span class="line">                <span class="comment"># print(item)</span></span><br><span class="line"></span><br><span class="line">                book=re.findall(findBook,item)[<span class="number">0</span>]   <span class="comment">#书名</span></span><br><span class="line">                <span class="comment"># print(book)</span></span><br><span class="line">                data.append(book)</span><br><span class="line">                author=re.findall(findAuthor,item)[<span class="number">0</span>]   <span class="comment">#作者</span></span><br><span class="line">                <span class="comment"># print(author)</span></span><br><span class="line">                data.append(author)</span><br><span class="line">                img=re.findall(findLink,item)[<span class="number">0</span>]        <span class="comment">#图片链接</span></span><br><span class="line">                <span class="comment"># print(img)</span></span><br><span class="line">                data.append(img)</span><br><span class="line">                price=re.findall(findPrice1,item)[<span class="number">0</span>]        <span class="comment">#非会员书籍价格</span></span><br><span class="line">                data.append(price)</span><br><span class="line">                vipPrice=re.findall(findPrice2,item)[<span class="number">0</span>]     <span class="comment">#会员书籍价格</span></span><br><span class="line">                <span class="comment"># print(vipPrice)</span></span><br><span class="line">                data.append(vipPrice)</span><br><span class="line">                EbookPrice = re.findall(findPrice3, item)</span><br><span class="line">                <span class="comment"># print(price)</span></span><br><span class="line">                <span class="keyword">if</span> (len(EbookPrice) == <span class="number">1</span>):</span><br><span class="line">                    Eprice = EbookPrice[<span class="number">0</span>]</span><br><span class="line">                    data.append(Eprice)</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="comment"># data.append(price)</span></span><br><span class="line">                    data.append(<span class="string">&#x27; &#x27;</span>)</span><br><span class="line">                <span class="comment"># print(data)</span></span><br><span class="line">                date=re.findall(findDate,item)[<span class="number">0</span>]       <span class="comment">#出版日期</span></span><br><span class="line">                data.append(date)</span><br><span class="line">                <span class="comment"># print(date)</span></span><br><span class="line">                people=re.findall(findPeople,item)[<span class="number">0</span>]      <span class="comment">#评价人数</span></span><br><span class="line">                <span class="comment"># print(people)</span></span><br><span class="line">                data.append(people)</span><br><span class="line">                star=re.findall(findStar,item)[<span class="number">0</span>]   <span class="comment">#五星好评数</span></span><br><span class="line">                <span class="comment"># print(star)</span></span><br><span class="line">                data.append(star)</span><br><span class="line">                Print=re.findall(findPrint,item)[<span class="number">0</span>]     <span class="comment">#出版社</span></span><br><span class="line">                <span class="comment"># print(Print)</span></span><br><span class="line">                data.append(Print)</span><br><span class="line">                datalist.append(data)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># print(data)</span></span><br><span class="line">    <span class="keyword">return</span> datalist</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">askURL</span>(<span class="params">url</span>):</span></span><br><span class="line">    head=&#123;<span class="comment">#模拟浏览器头部信息，向豆瓣服务器发送消息</span></span><br><span class="line">        <span class="comment"># 用户代理，告诉豆瓣服务器，我们是什么类型的机器，浏览器（本质上是告诉浏览器，我么可以接收什么水平的文件内容）</span></span><br><span class="line">        <span class="string">&quot;User-Agent&quot;</span>: <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.135 Safari/537.36&quot;</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    request = urllib.request.Request(url,headers=head)</span><br><span class="line">    html=<span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        response=urllib.request.urlopen(request)</span><br><span class="line">        html=response.read()<span class="comment">#.decode(&quot;gb2312&quot;)</span></span><br><span class="line">        <span class="comment"># print(html)</span></span><br><span class="line">    <span class="keyword">except</span> urllib.error.URLError <span class="keyword">as</span> e:</span><br><span class="line">        <span class="keyword">if</span> hasattr(e,<span class="string">&quot;code&quot;</span>):</span><br><span class="line">            print(e.code)</span><br><span class="line">        <span class="keyword">if</span> hasattr(e,<span class="string">&quot;reason&quot;</span>):</span><br><span class="line">            print(e.reason)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> html</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">saveDate</span>(<span class="params">datalist,savepath</span>):</span></span><br><span class="line">    book=xlwt.Workbook(encoding=<span class="string">&quot;utf-8&quot;</span>,style_compression=<span class="number">0</span>)</span><br><span class="line">    sheet=book.add_sheet(<span class="string">&quot;当当网书籍&quot;</span>,cell_overwrite_ok=<span class="literal">True</span>)</span><br><span class="line">    col=(<span class="string">&quot;书名&quot;</span>,<span class="string">&quot;作者&quot;</span>,<span class="string">&quot;封面链接&quot;</span>,<span class="string">&quot;非会员价格&quot;</span>,<span class="string">&quot;VIP价格&quot;</span>,<span class="string">&quot;电子书价格&quot;</span>,<span class="string">&quot;出版日期&quot;</span>,<span class="string">&quot;评价人数&quot;</span>,<span class="string">&quot;五星好评数&quot;</span>,<span class="string">&quot;出版社&quot;</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">10</span>):</span><br><span class="line">        sheet.write(<span class="number">0</span>,i,col[i])</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">500</span>):</span><br><span class="line">        print(<span class="string">&quot;第%d条&quot;</span>%(i+<span class="number">1</span>))</span><br><span class="line">        data=datalist[i]</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">10</span>):</span><br><span class="line">            sheet.write(i+<span class="number">1</span>,j,data[j])</span><br><span class="line">    book.save(savepath)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br><span class="line">    print(<span class="string">&quot;爬取结束！&quot;</span>)</span><br></pre></td></tr></table></figure><h2 id="小说爬取成txt格式"><a class="markdownIt-Anchor" href="#小说爬取成txt格式"></a> 小说爬取成txt格式</h2><h3 id="一念永恒txt"><a class="markdownIt-Anchor" href="#一念永恒txt"></a> 一念永恒.txt</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="comment">#在类中定义的函数只有一点不同，就是第一个参数永远是实例变量self</span></span><br><span class="line"><span class="comment"># 类外面的叫函数(function)不叫方法(method)。</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">download</span>(<span class="params">object</span>):</span>         <span class="comment">#用来描述具有相同的属性和方法的对象的集合</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span>     <span class="comment">#__init__方法的第一个参数永远是self，表示创建的实例本身</span></span><br><span class="line">        self.sever = <span class="string">&#x27;https://www.biqukan.com/&#x27;</span></span><br><span class="line">        self.baseurl = <span class="string">&#x27;https://www.biqukan.com/1_1094/&#x27;</span></span><br><span class="line">        self.titleNames=[]      <span class="comment">#章节的名字</span></span><br><span class="line">        self.titleUrls = []     <span class="comment">#章节的链接</span></span><br><span class="line">        self.titleNums=<span class="number">0</span>        <span class="comment">#章节数</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># def main():</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment">#     baseurl = &#x27;https://www.biqukan.com/1_1094/&#x27;</span></span><br><span class="line">    <span class="comment">#     # req = requests.get(url=baseurl)</span></span><br><span class="line">    <span class="comment">#     # html = req.text</span></span><br><span class="line">    <span class="comment">#     getData(self.baseurl)</span></span><br><span class="line">    <span class="comment">#     # askURL(baseurl)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">getData</span>(<span class="params">self</span>):</span>      <span class="comment">#可以访问初始化self的定义值</span></span><br><span class="line">        head = &#123;  <span class="comment"># 模拟浏览器头部信息，向豆瓣服务器发送消息</span></span><br><span class="line">            <span class="comment"># 用户代理，告诉豆瓣服务器，我们是什么类型的机器，浏览器（本质上是告诉浏览器，我么可以接收什么水平的文件内容）</span></span><br><span class="line">            <span class="string">&quot;User-Agent&quot;</span>: <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.135 Safari/537.36&quot;</span></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"># datalist=[]</span></span><br><span class="line">        <span class="comment"># titleNums=0</span></span><br><span class="line">        <span class="comment"># url = self.baseurl</span></span><br><span class="line">        <span class="comment"># html=askURL(url)</span></span><br><span class="line">        response = requests.get(url=self.baseurl, headers=head)</span><br><span class="line">        response.encoding = <span class="string">&quot;gb2312&quot;</span></span><br><span class="line">        html = response.text</span><br><span class="line">        bf = BeautifulSoup(html, <span class="string">&quot;html.parser&quot;</span>)</span><br><span class="line">        div=bf.find_all(<span class="string">&#x27;div&#x27;</span>,class_=<span class="string">&#x27;listmain&#x27;</span>)</span><br><span class="line">        a_bf=BeautifulSoup(str(div[<span class="number">0</span>]),<span class="string">&quot;lxml&quot;</span>)</span><br><span class="line">        a=a_bf.find_all(<span class="string">&#x27;a&#x27;</span>)</span><br><span class="line">        self.titleNums=len(a[<span class="number">13</span>:])</span><br><span class="line">        <span class="keyword">for</span> each <span class="keyword">in</span> a[<span class="number">13</span>:]:</span><br><span class="line">            self.titleNames.append(each.string)</span><br><span class="line">            self.titleUrls.append(self.sever+each.get(<span class="string">&#x27;href&#x27;</span>))</span><br><span class="line">            <span class="comment"># print(each.string,sever+each.get(&#x27;href&#x27;))</span></span><br><span class="line">        <span class="comment"># print(bf)</span></span><br><span class="line">        <span class="comment"># for item in bf.find_all()</span></span><br><span class="line">        <span class="comment"># print(self.titleNames)</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">saveBook</span>(<span class="params">self,name,path,text</span>):</span>  <span class="comment">#第一个参数永远是self，实际调用写入self后面的参数即可</span></span><br><span class="line">        write_flag=<span class="literal">True</span></span><br><span class="line">        <span class="keyword">with</span> open(path,<span class="string">&#x27;a&#x27;</span>,encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> f:  <span class="comment">#open(路径+文件名, 读写模式, 编码)</span></span><br><span class="line">            f.write(name+<span class="string">&#x27;\n&#x27;</span>)      <span class="comment">#写入path中多行，用于向文件中写入指定字符串。</span></span><br><span class="line">            f.writelines(text)      <span class="comment">#既可以传入字符串又可以传入一个字符序列,并将该字符序列写入文件</span></span><br><span class="line">            f.write(<span class="string">&#x27;\n\n&#x27;</span>)         <span class="comment">#写入回车换行</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">getContent</span>(<span class="params">self,baseurl</span>):</span></span><br><span class="line">        head = &#123;  <span class="comment"># 模拟浏览器头部信息，向豆瓣服务器发送消息</span></span><br><span class="line">            <span class="comment"># 用户代理，告诉豆瓣服务器，我们是什么类型的机器，浏览器（本质上是告诉浏览器，我么可以接收什么水平的文件内容）</span></span><br><span class="line">            <span class="string">&quot;User-Agent&quot;</span>: <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.135 Safari/537.36&quot;</span></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment"># url = baseurl</span></span><br><span class="line">        response = requests.get(url=baseurl, headers=head)</span><br><span class="line">        response.encoding = <span class="string">&quot;gb2312&quot;</span></span><br><span class="line">        html = response.text</span><br><span class="line"></span><br><span class="line">        <span class="comment"># html = askURL(url)</span></span><br><span class="line">        bf = BeautifulSoup(html, <span class="string">&quot;html.parser&quot;</span>)</span><br><span class="line">        texts=bf.find_all(<span class="string">&#x27;div&#x27;</span>,class_=<span class="string">&#x27;showtxt&#x27;</span>)</span><br><span class="line">        texts=texts[<span class="number">0</span>].text.replace(<span class="string">&#x27;\xa0&#x27;</span>*<span class="number">8</span>,<span class="string">&#x27;\n\n&#x27;</span>)    <span class="comment">#去除空格八次，用回车换行替换</span></span><br><span class="line">        <span class="keyword">return</span> texts    <span class="comment">#返回每一章的内容</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment"># def askURL(url):</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment">#     # request = requests.get(url, headers=head)</span></span><br><span class="line">    <span class="comment">#     response = requests.get(url=url,headers=head)</span></span><br><span class="line">    <span class="comment">#     html = &quot;&quot;</span></span><br><span class="line">    <span class="comment">#     try:</span></span><br><span class="line">    <span class="comment">#         if response.status_code == 200:</span></span><br><span class="line">    <span class="comment">#             response.encoding = &quot;gb2312&quot;</span></span><br><span class="line">    <span class="comment">#             html = response.text</span></span><br><span class="line">    <span class="comment">#     except requests.RequestException:</span></span><br><span class="line">    <span class="comment">#         return None</span></span><br><span class="line">    <span class="comment">#     return html</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    d1=download()<span class="comment">#这里对类进行实例化</span></span><br><span class="line">    d1.getData()<span class="comment">#调用类中定义的方法</span></span><br><span class="line">    print(<span class="string">&#x27;小说开始下载：&#x27;</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(d1.titleNums):   <span class="comment">#i循环总章节次</span></span><br><span class="line">        d1.saveBook(d1.titleNames[i],<span class="string">&#x27;白小纯.txt&#x27;</span>,d1.getContent(d1.titleUrls[i]))<span class="comment">#调用方法，没有txt就创建，设置i是调用不同的章节链接</span></span><br><span class="line">        sys.stdout.write(<span class="string">&quot;已下载:%.3f%%&quot;</span>%  float(i/d1.titleNums) + <span class="string">&#x27;\r&#x27;</span>)<span class="comment">#%格式化输出</span></span><br><span class="line">        <span class="comment">#.3f保留三位小数</span></span><br><span class="line">        sys.stdout.flush()<span class="comment">#强制其“刷新”缓冲区，刷新输出</span></span><br><span class="line">        <span class="comment"># main()</span></span><br><span class="line">    print(<span class="string">&#x27;小说下载完成&#x27;</span>)</span><br></pre></td></tr></table></figure><h2 id="妹子图"><a class="markdownIt-Anchor" href="#妹子图"></a> 妹子图</h2><p>不完美，ip被禁！</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> concurrent.futures <span class="keyword">import</span> ThreadPoolExecutor</span><br><span class="line"><span class="keyword">import</span> concurrent</span><br><span class="line"></span><br><span class="line"><span class="comment">#获取每一页的章节链接</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getPageUrls</span>():</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">2</span>):</span><br><span class="line">        baseurl=<span class="string">&#x27;https://www.mzitu.com/page/&#123;&#125;&#x27;</span>.format(i)</span><br><span class="line">        head = &#123;</span><br><span class="line">            <span class="string">&quot;DNT&quot;</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">            <span class="string">&quot;Referer&quot;</span>: <span class="string">&quot;https://www.mzitu.com/&quot;</span>,</span><br><span class="line">            <span class="comment"># 用户代理，告诉豆瓣服务器，我们是什么类型的机器，浏览器（本质上是告诉浏览器，我么可以接收什么水平的文件内容）</span></span><br><span class="line">            <span class="string">&quot;User-Agent&quot;</span>: <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.135 Safari/537.36&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">        response=requests.get(url=baseurl,headers=head,)</span><br><span class="line">        response.encoding=<span class="string">&quot;utf-8&quot;</span></span><br><span class="line">        html=response.text</span><br><span class="line">        soup=BeautifulSoup(html,<span class="string">&#x27;lxml&#x27;</span>)</span><br><span class="line">        list=soup.find(class_=<span class="string">&#x27;postlist&#x27;</span>).find_all(<span class="string">&#x27;li&#x27;</span>)</span><br><span class="line">        urls=[]</span><br><span class="line">        <span class="keyword">for</span> item <span class="keyword">in</span> list:</span><br><span class="line">            url=item.find(<span class="string">&#x27;span&#x27;</span>).find(<span class="string">&#x27;a&#x27;</span>).get(<span class="string">&#x27;href&#x27;</span>)</span><br><span class="line">            <span class="comment"># print(&#x27;页面链接：%s&#x27;%url)</span></span><br><span class="line">            urls.append(url)</span><br><span class="line">    <span class="keyword">return</span> urls</span><br><span class="line"></span><br><span class="line"><span class="comment">#获取每一页的链接地址，并下载</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getPages</span>(<span class="params">url</span>):</span></span><br><span class="line">    head = &#123;</span><br><span class="line">        <span class="string">&quot;DNT&quot;</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">        <span class="string">&quot;Referer&quot;</span>: <span class="string">&quot;https://www.mzitu.com/&quot;</span>,</span><br><span class="line">        <span class="comment"># 用户代理，告诉豆瓣服务器，我们是什么类型的机器，浏览器（本质上是告诉浏览器，我么可以接收什么水平的文件内容）</span></span><br><span class="line">        <span class="string">&quot;User-Agent&quot;</span>: <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.135 Safari/537.36&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">    response = requests.get(url=url, headers=head)</span><br><span class="line">    response.encoding = <span class="string">&quot;utf-8&quot;</span></span><br><span class="line">    html = response.text</span><br><span class="line">    soup = BeautifulSoup(html, <span class="string">&#x27;lxml&#x27;</span>)</span><br><span class="line">    total = soup.find(class_=<span class="string">&#x27;pagenavi&#x27;</span>).find_all(<span class="string">&#x27;a&#x27;</span>)[<span class="number">-2</span>].find(<span class="string">&#x27;span&#x27;</span>).string</span><br><span class="line">    title = soup.find(<span class="string">&#x27;h2&#x27;</span>).string</span><br><span class="line">    imageList=[]</span><br><span class="line">    <span class="comment"># print(total)</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(int(total)):</span><br><span class="line">        <span class="comment"># html = request_page(url + &#x27;/%s&#x27; % (i + 1))</span></span><br><span class="line">        head = &#123;</span><br><span class="line">            <span class="string">&quot;DNT&quot;</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">            <span class="string">&quot;Referer&quot;</span>: <span class="string">&quot;https://www.mzitu.com/&quot;</span>,</span><br><span class="line">            <span class="comment"># 用户代理，告诉豆瓣服务器，我们是什么类型的机器，浏览器（本质上是告诉浏览器，我么可以接收什么水平的文件内容）</span></span><br><span class="line">            <span class="string">&quot;User-Agent&quot;</span>: <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.135 Safari/537.36&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">        response = requests.get(url=url + <span class="string">&#x27;/%s&#x27;</span> % (i + <span class="number">1</span>), headers=head)</span><br><span class="line">        response.encoding = <span class="string">&quot;utf-8&quot;</span></span><br><span class="line">        html = response.text</span><br><span class="line">        soup = BeautifulSoup(html, <span class="string">&#x27;lxml&#x27;</span>)</span><br><span class="line">        imgUrl = soup.find(<span class="string">&#x27;img&#x27;</span>).get(<span class="string">&#x27;src&#x27;</span>)</span><br><span class="line">        imageList.append(imgUrl)</span><br><span class="line">    <span class="comment"># print(imageList)</span></span><br><span class="line">    downloadAllImage(title,imageList)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#下载每一页的图片，并写入文件</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">downloadAllImage</span>(<span class="params">title,imagelist</span>):</span></span><br><span class="line">    os.mkdir(title)</span><br><span class="line">    j = <span class="number">1</span></span><br><span class="line">    head = &#123;</span><br><span class="line">        <span class="string">&quot;DNT&quot;</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">        <span class="string">&quot;Referer&quot;</span>: <span class="string">&quot;https://www.mzitu.com/&quot;</span>,</span><br><span class="line">        <span class="comment"># 用户代理，告诉豆瓣服务器，我们是什么类型的机器，浏览器（本质上是告诉浏览器，我么可以接收什么水平的文件内容）</span></span><br><span class="line">        <span class="string">&quot;User-Agent&quot;</span>: <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.135 Safari/537.36&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"># 下载图片</span></span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> imagelist:</span><br><span class="line">        filename = <span class="string">&#x27;%s/%s.jpg&#x27;</span> % (title, str(j))</span><br><span class="line">        print(<span class="string">&#x27;downloading....%s : NO.%s&#x27;</span> % (title, str(j)))</span><br><span class="line">        <span class="keyword">with</span> open(filename, <span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            img = requests.get(item, allow_redirects=<span class="literal">False</span>,headers=head)</span><br><span class="line">            f.write(img.content)</span><br><span class="line">        j += <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">download_all_images</span>(<span class="params">list_page_urls</span>):</span><span class="comment">#多线程下载</span></span><br><span class="line">    <span class="comment"># 获取每一个详情妹纸</span></span><br><span class="line">    <span class="comment"># works = len(list_page_urls)</span></span><br><span class="line">    <span class="keyword">with</span> concurrent.futures.ProcessPoolExecutor(max_workers=<span class="number">5</span>) <span class="keyword">as</span> exector:</span><br><span class="line">        <span class="keyword">for</span> url <span class="keyword">in</span> list_page_urls:</span><br><span class="line">            exector.submit(getPages, url)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="comment"># urls=getPageUrls()</span></span><br><span class="line">    <span class="comment"># getPages(&#x27;https://www.mzitu.com/218092&#x27;)</span></span><br><span class="line">    listPageUrls=getPageUrls()</span><br><span class="line">    <span class="comment"># print(listPageUrls)</span></span><br><span class="line">    download_all_images(listPageUrls)</span><br><span class="line">    print(<span class="string">&#x27;爬虫结束！&#x27;</span>)</span><br></pre></td></tr></table></figure><p>改进：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> concurrent.futures <span class="keyword">import</span> ThreadPoolExecutor</span><br><span class="line"><span class="keyword">import</span> concurrent</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getPageUrls</span>():</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">2</span>):</span><br><span class="line">        baseurl=<span class="string">&#x27;https://www.mzitu.com/page/&#123;&#125;&#x27;</span>.format(i)</span><br><span class="line">        proxy=&#123;</span><br><span class="line">            <span class="string">&#x27;http&#x27;</span>: <span class="string">&#x27;61.135.185.78:80&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;http&#x27;</span>: <span class="string">&#x27;61.135.185.172:80&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;http&#x27;</span>: <span class="string">&#x27;111.13.100.91:80&#x27;</span></span><br><span class="line">               &#125;</span><br><span class="line">        head = &#123;</span><br><span class="line">            <span class="string">&quot;DNT&quot;</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">            <span class="string">&quot;Referer&quot;</span>: <span class="string">&quot;https://www.mzitu.com/&quot;</span>,</span><br><span class="line">            <span class="comment"># 用户代理，告诉豆瓣服务器，我们是什么类型的机器，浏览器（本质上是告诉浏览器，我么可以接收什么水平的文件内容）</span></span><br><span class="line">            <span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows; U; Windows NT 5.1; it; rv:1.8.1.11) Gecko/20071127 Firefox/2.0.0.11&#x27;</span></span><br><span class="line">            <span class="comment"># &quot;User-Agent&quot;: &quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.135 Safari/537.36&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">        time.sleep(<span class="number">0.5</span>)<span class="comment">#设置访问间隔</span></span><br><span class="line">        response=requests.get(url=baseurl,headers=head,proxies=proxy)</span><br><span class="line">        response.encoding=<span class="string">&quot;utf-8&quot;</span></span><br><span class="line">        html=response.text</span><br><span class="line">        soup=BeautifulSoup(html,<span class="string">&#x27;lxml&#x27;</span>)</span><br><span class="line">        list=soup.find(class_=<span class="string">&#x27;postlist&#x27;</span>).find_all(<span class="string">&#x27;li&#x27;</span>)</span><br><span class="line">        urls=[]</span><br><span class="line">        <span class="keyword">for</span> item <span class="keyword">in</span> list:</span><br><span class="line">            url=item.find(<span class="string">&#x27;span&#x27;</span>).find(<span class="string">&#x27;a&#x27;</span>).get(<span class="string">&#x27;href&#x27;</span>)</span><br><span class="line">            <span class="comment"># print(&#x27;页面链接：%s&#x27;%url)</span></span><br><span class="line">            urls.append(url)</span><br><span class="line">    <span class="keyword">return</span> urls</span><br><span class="line"></span><br><span class="line"><span class="comment">#获取每一页的链接地址，并下载</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getPages</span>(<span class="params">url</span>):</span></span><br><span class="line">    proxy = &#123;<span class="string">&#x27;http&#x27;</span>: <span class="string">&#x27;61.135.185.78:80&#x27;</span>&#125;</span><br><span class="line">    head = &#123;</span><br><span class="line">        <span class="string">&quot;DNT&quot;</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">        <span class="string">&quot;Referer&quot;</span>: <span class="string">&quot;https://www.mzitu.com/&quot;</span>,</span><br><span class="line">        <span class="comment"># 用户代理，告诉豆瓣服务器，我们是什么类型的机器，浏览器（本质上是告诉浏览器，我么可以接收什么水平的文件内容）</span></span><br><span class="line">        <span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows; U; Windows NT 5.1; it; rv:1.8.1.11) Gecko/20071127 Firefox/2.0.0.11&#x27;</span></span><br><span class="line">        <span class="comment"># &quot;User-Agent&quot;: &quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.135 Safari/537.36&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">    time.sleep(<span class="number">0.5</span>)</span><br><span class="line">    response = requests.get(url=url, headers=head,proxies=proxy)</span><br><span class="line">    response.encoding = <span class="string">&quot;utf-8&quot;</span></span><br><span class="line">    html = response.text</span><br><span class="line">    soup = BeautifulSoup(html, <span class="string">&#x27;lxml&#x27;</span>)</span><br><span class="line">    total = soup.find(class_=<span class="string">&#x27;pagenavi&#x27;</span>).find_all(<span class="string">&#x27;a&#x27;</span>)[<span class="number">-2</span>].find(<span class="string">&#x27;span&#x27;</span>).string<span class="comment">#获取页数转换成字符串形式</span></span><br><span class="line">    title = soup.find(<span class="string">&#x27;h2&#x27;</span>).string<span class="comment">#找出标题</span></span><br><span class="line">    imageList=[]<span class="comment">#存储每一页的照片链接</span></span><br><span class="line">    <span class="comment"># print(total)</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(int(total)):</span><br><span class="line">        <span class="comment"># html = request_page(url + &#x27;/%s&#x27; % (i + 1))</span></span><br><span class="line">        proxy = &#123;<span class="string">&#x27;http&#x27;</span>: <span class="string">&#x27;61.135.185.78:80&#x27;</span>&#125;</span><br><span class="line">        head = &#123;</span><br><span class="line">            <span class="string">&quot;DNT&quot;</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">            <span class="string">&quot;Referer&quot;</span>: <span class="string">&quot;https://www.mzitu.com/&quot;</span>,</span><br><span class="line">            <span class="comment"># 用户代理，告诉豆瓣服务器，我们是什么类型的机器，浏览器（本质上是告诉浏览器，我么可以接收什么水平的文件内容）</span></span><br><span class="line">            <span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows; U; Windows NT 5.1; it; rv:1.8.1.11) Gecko/20071127 Firefox/2.0.0.11&#x27;</span></span><br><span class="line">            <span class="comment">#&quot;User-Agent&quot;: &quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.135 Safari/537.36&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">        time.sleep(<span class="number">0.5</span>)</span><br><span class="line">        response = requests.get(url=url + <span class="string">&#x27;/%s&#x27;</span> % (i + <span class="number">1</span>), headers=head,proxies=proxy)<span class="comment">#</span></span><br><span class="line">        response.encoding = <span class="string">&quot;utf-8&quot;</span></span><br><span class="line">        html = response.text</span><br><span class="line">        soup = BeautifulSoup(html, <span class="string">&#x27;lxml&#x27;</span>)</span><br><span class="line">        imgUrl = soup.find(<span class="string">&#x27;img&#x27;</span>).get(<span class="string">&#x27;src&#x27;</span>)<span class="comment">#找出每张照片的链接</span></span><br><span class="line">        imageList.append(imgUrl)</span><br><span class="line">    <span class="comment"># print(imageList)</span></span><br><span class="line">    downloadAllImage(title,imageList)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#下载每一页的图片，并写入文件</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">downloadAllImage</span>(<span class="params">title,imagelist</span>):</span></span><br><span class="line">    os.mkdir(title)</span><br><span class="line">    j = <span class="number">1</span></span><br><span class="line">    proxy = &#123;<span class="string">&#x27;http&#x27;</span>: <span class="string">&#x27;61.135.185.78:80&#x27;</span>&#125;</span><br><span class="line">    head = &#123;</span><br><span class="line">        <span class="string">&quot;DNT&quot;</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">        <span class="string">&quot;Referer&quot;</span>: <span class="string">&quot;https://www.mzitu.com/&quot;</span>,</span><br><span class="line">        <span class="comment"># 用户代理，告诉豆瓣服务器，我们是什么类型的机器，浏览器（本质上是告诉浏览器，我么可以接收什么水平的文件内容）</span></span><br><span class="line">        <span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows; U; Windows NT 5.1; it; rv:1.8.1.11) Gecko/20071127 Firefox/2.0.0.11&#x27;</span></span><br><span class="line">        <span class="comment">#&quot;User-Agent&quot;: &quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.135 Safari/537.36&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 下载图片</span></span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> imagelist:</span><br><span class="line">        filename = <span class="string">&#x27;%s/%s.jpg&#x27;</span> % (title, str(j))</span><br><span class="line">        print(<span class="string">&#x27;downloading....%s : NO.%s&#x27;</span> % (title, str(j)))</span><br><span class="line">        <span class="keyword">with</span> open(filename, <span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> f:<span class="comment">#打开新建的文件，并写入图片</span></span><br><span class="line">            time.sleep(<span class="number">0.5</span>)</span><br><span class="line">            img = requests.get(item, allow_redirects=<span class="literal">False</span>,headers=head,proxies=proxy)<span class="comment">#allow_redirects=False为拒绝默认的301/302重定向</span></span><br><span class="line">            <span class="comment"># 获取二进制数据; 注意: 这里不要解码, 因为图片,视频等文件都是二进制的不是文本,不需要解码</span></span><br><span class="line">            f.write(img.content)<span class="comment">#写入图片（下载图片）</span></span><br><span class="line">        j += <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#设置多线程</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">download_all_images</span>(<span class="params">list_page_urls</span>):</span></span><br><span class="line">    <span class="comment"># 获取每一个详情妹纸</span></span><br><span class="line">    <span class="comment"># works = len(list_page_urls)</span></span><br><span class="line">    <span class="keyword">with</span> concurrent.futures.ProcessPoolExecutor(max_workers=<span class="number">5</span>) <span class="keyword">as</span> exector:</span><br><span class="line">        <span class="keyword">for</span> url <span class="keyword">in</span> list_page_urls:</span><br><span class="line">            exector.submit(getPages, url)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="comment"># urls=getPageUrls()</span></span><br><span class="line">    <span class="comment"># print(urls)</span></span><br><span class="line">    <span class="comment"># getPages(&#x27;https://www.mzitu.com/218092&#x27;)</span></span><br><span class="line">    listPageUrls=getPageUrls()</span><br><span class="line">    <span class="comment"># print(listPageUrls)</span></span><br><span class="line">    download_all_images(listPageUrls)</span><br><span class="line">    print(<span class="string">&#x27;爬虫结束！&#x27;</span>)</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; class=&quot;aplayer-secondary-script-marker&quot;&gt;&lt;/script&gt;&lt;h1 id=&quot;预备知识&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#预备知识&quot;&gt;&lt;/a&gt; 预备知识&lt;/h1&gt;
&lt;h2 id=&quot;正则法则&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#正则法则&quot;&gt;&lt;/a&gt; 正则法则&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:center&quot;&gt;字符&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;\d&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;代表任意数字，就是阿拉伯数字 0-9 这些玩意。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;\D&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;大写的就是和小写的唱反调，\d 你代表的是任意数字是吧？那么我 \D 就代表不是数字的。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;\w&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;代表字母，数字，下划线。也就是 a-z、A-Z、0-9、_。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;\W&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;跟 \w 唱反调，代表不是字母，不是数字，不是下划线的。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;\n&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;代表一个换行。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;\r&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;代表一个回车。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;\f&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;代表换页。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;\t&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;代表一个 Tab 。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;\s&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;代表所有的空白字符，也就是上面这个：\n、\r、\t、\f。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;\S&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;跟 \s 唱反调，代表所有不是空白的字符。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;\A&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;代表字符串的开始。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;\Z&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;代表字符串的结束。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;^&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;匹配字符串开始的位置。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;$&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;匹配字符创结束的位置。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;.&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;代表所有的单个字符，除了 \n \r&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;[...]&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;代表在 [] 范围内的字符，比如 [a-z] 就代表 a到z的字母&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;[^...]&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;跟 […] 唱反调，代表不在 [] 范围内的字符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;&amp;#123;n&amp;#125;&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;匹配在 {n} 前面的东西，比如: o{2} 不能匹配 Bob 中的 o ，但是能匹配 food 中的两个o。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;&amp;#123;n,m&amp;#125;&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;匹配在 {n,m} 前面的东西，比如：o{1,3} 将匹配“fooooood”中的前三个o。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;&amp;#123;n，&amp;#125;&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;匹配在 {n,} 前面的东西，比如：o{2,} 不能匹配“Bob”中的“o”，但能匹配“foooood”中的所有o。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;*&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;和 {0,} 一个样，匹配 * 前面的 0 次或多次。 比如 zo* 能匹配“z”、“zo”以及“zoo”。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;+&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;和{1，} 一个样，匹配 + 前面 1 次或多次。 比如 zo+”能匹配“zo”以及“zoo”，但不能匹配“z”。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;？&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;和{0,1} 一个样，匹配 ？前面 0 次或 1 次。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;a|b&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;匹配 a 或者 b。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;（）&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;匹配括号里面的内容。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;例子：&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#贪婪匹配&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; re&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;content=&lt;span class=&quot;string&quot;&gt;&amp;#x27;hello,world.xiaoshuaib has 100 bananas&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;res=re.match(&lt;span class=&quot;string&quot;&gt;&amp;#x27;^he.*(\d+)\s.*s$&amp;#x27;&lt;/span&gt;,content)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(res.group(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#结果是0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#非贪婪匹配，多了个？&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; re&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;content=&lt;span class=&quot;string&quot;&gt;&amp;#x27;hello,world.xiaoshuaib has 100 bananas&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;res=re.match(&lt;span class=&quot;string&quot;&gt;&amp;#x27;^he.*?(\d+)\s.*s$&amp;#x27;&lt;/span&gt;,content)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(res.group(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#结果是100&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;所谓贪婪匹配就是第一段代码一个数一个数都要去匹配&lt;/p&gt;
&lt;p&gt;而非贪婪是直接把 100 给匹配出来了&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;.\*？&lt;/code&gt;:表示的就是匹配任意字符&lt;/p&gt;
&lt;p&gt;.*？的 . 代表所有的单个字符，除了 \n \r&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;字符串有换行:&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; re&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;content=&lt;span class=&quot;string&quot;&gt;&amp;#x27;&amp;#x27;&amp;#x27;hello,world.xiaoshuaib &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;has 100 bananas&amp;#x27;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;res=re.match(&lt;span class=&quot;string&quot;&gt;&amp;#x27;^he.*?(\d+)\s.*s$&amp;#x27;&lt;/span&gt;,content,re.S)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(res.group(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#直接用 re.S &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="爬虫" scheme="http://stardust14.com/categories/%E7%88%AC%E8%99%AB/"/>
    
    
    <category term="爬虫" scheme="http://stardust14.com/tags/%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
  <entry>
    <title>js学习</title>
    <link href="http://stardust14.com/2020/10/17/js%E5%AD%A6%E4%B9%A0/"/>
    <id>http://stardust14.com/2020/10/17/js%E5%AD%A6%E4%B9%A0/</id>
    <published>2020-10-17T03:40:44.000Z</published>
    <updated>2020-11-22T03:11:14.964Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="快速入门"><a class="markdownIt-Anchor" href="#快速入门"></a> 快速入门</h1>]]></content>
    
    
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; class=&quot;aplayer-secondary-script-marker&quot;&gt;&lt;/script&gt;&lt;h1 id=&quot;快速入门&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#快速入门&quot;&gt;&lt;/a&gt; 快速入门&lt;/h1&gt;
</summary>
    
    
    
    <category term="js" scheme="http://stardust14.com/categories/js/"/>
    
    
    <category term="js" scheme="http://stardust14.com/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>python 爬虫随笔记录</title>
    <link href="http://stardust14.com/2020/10/14/python%E7%88%AC%E8%99%AB%E9%9A%8F%E7%AC%94%E8%AE%B0%E5%BD%95/"/>
    <id>http://stardust14.com/2020/10/14/python%E7%88%AC%E8%99%AB%E9%9A%8F%E7%AC%94%E8%AE%B0%E5%BD%95/</id>
    <published>2020-10-14T11:06:42.000Z</published>
    <updated>2020-10-18T14:06:10.777Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1><p>记录一下遇到的错误，或者是疑问，解决的问题，随笔记录！！！</p><h1 id="python-爬虫问题"><a class="markdownIt-Anchor" href="#python-爬虫问题"></a> python 爬虫问题</h1><h2 id="语句解释"><a class="markdownIt-Anchor" href="#语句解释"></a> 语句解释</h2><p>爬虫中<code>if __name__ == '__main__'</code>语句解释：</p><p>相当于是 Python <strong>模拟的程序入口</strong>。</p><p>由于模块之间相互引用，不同模块可能都有这样的定义，而入口程序只能有一个。到底哪个入口程序被选中，这取决于 <code>__name__</code> 的值。</p><p><code>__name__</code>是Python的内置变量，用于指代当前模块。</p><p>两个例子说明：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">print(<span class="string">&#x27;hello,I\&#x27;m A&#x27;</span>)</span><br><span class="line">print(<span class="string">&#x27;A的__name__值:&#123;&#125;&#x27;</span>.format(__name__))</span><br><span class="line">print(<span class="string">&#x27;---------------&#x27;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> day01 <span class="keyword">import</span> demo01</span><br><span class="line">print(<span class="string">&#x27;hello,I\&#x27;m B&#x27;</span>)</span><br><span class="line">print(<span class="string">&#x27;B中__name__的值：&#123;&#125;&#x27;</span>.format(__name__))</span><br></pre></td></tr></table></figure><p>上述两个例子分别结果：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">hello,I<span class="string">&#x27;m A</span></span><br><span class="line"><span class="string">A的__name__值:__main__</span></span><br><span class="line"><span class="string">---------------</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">hello,I<span class="string">&#x27;m A</span></span><br><span class="line"><span class="string">A的__name__值:day01.demo01</span></span><br><span class="line"><span class="string">---------------</span></span><br><span class="line"><span class="string">hello,I&#x27;</span>m B</span><br><span class="line">B中__name__的值：__main__</span><br></pre></td></tr></table></figure><p>发现神奇之处了吗？当哪个模块被直接执行时，该模块“<code>__name__</code>”的值就是“<code>__main__</code>”，当被导入另一模块时，“<code>__name__</code>”的值就是模块的真实名称。用一个类比来解释一下：记得小时候要轮流打算教室，轮到自己的时候（模块被直接执行的时候），我们会说今天是“我”（<code>__main__</code>）值日，称呼其他人时，我们就会直接喊他们的名字。所以，“<code>__main__</code>”就相当于当事人，或者说第一人称的“我”。</p><p>所以，当运行“<code>if __name__=='__main__':</code>”语句时，如果当前模块时被直接执行，<code>__name__</code>的值就是<code>__main__</code>，条件判断的结果为True，“<code>if __name__=='__main__':</code>”下面的代码块就会被执行。</p><h2 id="遇到的错误"><a class="markdownIt-Anchor" href="#遇到的错误"></a> 遇到的错误</h2><p>在进行当当网爬虫练习时，出现<code>UnicodeDecodeError: 'utf-8' codec can't decode byte 0xd0 in position 284: invalid continuation byte</code></p><p>修改字符集参数，一般这种情况出现得较多是在国标码(GBK)和utf-8之间选择出现了问题。<br />出现异常报错是由于设置了decode()方法的第二个参数errors为严格（strict）形式造成的，因为默认就是这个参数，将其更改为ignore等即可。例如:</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">html=response.read().decode(<span class="string">&quot;utf-8&quot;</span>,<span class="string">&quot;ignore&quot;</span>)</span><br></pre></td></tr></table></figure><h1 id="pycharm中的问题"><a class="markdownIt-Anchor" href="#pycharm中的问题"></a> PyCharm中的问题</h1><h2 id="第三方库安装失败"><a class="markdownIt-Anchor" href="#第三方库安装失败"></a> 第三方库安装失败</h2><p>pycharm安装路径：<code>D:\Python\Code\venv\Scripts&gt;</code>在该径路下打开命令窗口，输入提示的信息。<code>python.exe -m pip install --upgrade pip</code></p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201018204828.png" alt="" /></p>]]></content>
    
    
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; class=&quot;aplayer-secondary-script-marker&quot;&gt;&lt;/script&gt;&lt;h1 id=&quot;前言&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#前言&quot;&gt;&lt;/a&gt; 前言&lt;/h1&gt;
&lt;p&gt;记录一下遇到的错误，或者是疑问，解决的问题，随笔记录！！！&lt;/p&gt;
&lt;h1 id=&quot;python-爬虫问题&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#python-爬虫问题&quot;&gt;&lt;/a&gt; python 爬虫问题&lt;/h1&gt;
&lt;h2 id=&quot;语句解释&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#语句解释&quot;&gt;&lt;/a&gt; 语句解释&lt;/h2&gt;
&lt;p&gt;爬虫中&lt;code&gt;if __name__ == &#39;__main__&#39;&lt;/code&gt;语句解释：&lt;/p&gt;
&lt;p&gt;相当于是 Python &lt;strong&gt;模拟的程序入口&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;由于模块之间相互引用，不同模块可能都有这样的定义，而入口程序只能有一个。到底哪个入口程序被选中，这取决于 &lt;code&gt;__name__&lt;/code&gt; 的值。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;__name__&lt;/code&gt;是Python的内置变量，用于指代当前模块。&lt;/p&gt;
&lt;p&gt;两个例子说明：&lt;/p&gt;</summary>
    
    
    
    <category term="随笔" scheme="http://stardust14.com/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
    <category term="python" scheme="http://stardust14.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Typora使用</title>
    <link href="http://stardust14.com/2020/10/09/Typora%E4%BD%BF%E7%94%A8/"/>
    <id>http://stardust14.com/2020/10/09/Typora%E4%BD%BF%E7%94%A8/</id>
    <published>2020-10-09T03:28:19.000Z</published>
    <updated>2021-04-09T09:51:53.910Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="公式的使用"><a class="markdownIt-Anchor" href="#公式的使用"></a> 公式的使用</h1><p><strong>上/下标</strong></p><table><thead><tr><th>算式</th><th>Markdown</th></tr></thead><tbody><tr><td>$x^2 $</td><td>x^2</td></tr><tr><td>$y_1 $</td><td>y_1</td></tr></tbody></table><p><strong>分式</strong></p><table><thead><tr><th>算式</th><th>Markdown</th></tr></thead><tbody><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn><mi mathvariant="normal">/</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">1/2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord">/</span><span class="mord">2</span></span></span></span></td><td>1/2</td></tr><tr><td>$ \frac{1}{2}$</td><td>\frac{1}{2}</td></tr></tbody></table><p><strong>省略号</strong></p><table><thead><tr><th>省略号</th><th>Markdown</th></tr></thead><tbody><tr><td>$ \cdots$</td><td>\cdots</td></tr></tbody></table><p><strong>开根号</strong></p><table><thead><tr><th>算式</th><th>Markdown</th></tr></thead><tbody><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msqrt><mn>2</mn></msqrt></mrow><annotation encoding="application/x-tex">\sqrt{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.04em;vertical-align:-0.13278em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.90722em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord">2</span></span></span><span style="top:-2.86722em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.13278em;"><span></span></span></span></span></span></span></span></span></td><td>\sqrt{2}</td></tr></tbody></table><p><strong>矢量</strong></p><table><thead><tr><th>算式</th><th>Markdown</th></tr></thead><tbody><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi>a</mi><mo>⃗</mo></mover></mrow><annotation encoding="application/x-tex">\vec{a}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.714em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.714em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">a</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2355em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 53.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 1110.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359c-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span></span></span></span></td><td>\vec{a}</td></tr></tbody></table><p><strong>积分</strong></p><table><thead><tr><th>算式</th><th>Markdown</th></tr></thead><tbody><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∫</mo><mi>x</mi><mi>d</mi><mi>x</mi></mrow><annotation encoding="application/x-tex">\int{x}dx</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.11112em;vertical-align:-0.30612em;"></span><span class="mop op-symbol small-op" style="margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;">∫</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">x</span></span><span class="mord mathdefault">d</span><span class="mord mathdefault">x</span></span></span></span></td><td>\int{x}dx</td></tr><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mo>∫</mo><mn>1</mn><mn>2</mn></msubsup><mi>x</mi><mi>d</mi><mi>x</mi></mrow><annotation encoding="application/x-tex">\int_{1}^{2}{x}dx</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.3648280000000002em;vertical-align:-0.35582em;"></span><span class="mop"><span class="mop op-symbol small-op" style="margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0090080000000001em;"><span style="top:-2.34418em;margin-left:-0.19445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span><span style="top:-3.2579000000000002em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35582em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">x</span></span><span class="mord mathdefault">d</span><span class="mord mathdefault">x</span></span></span></span></td><td>\int_{1}^{2}{x}dx</td></tr></tbody></table><p><strong>极限</strong></p><table><thead><tr><th>算式</th><th>Markdown</th></tr></thead><tbody><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>lim</mi><mo>⁡</mo><mrow><mi>a</mi><mo>+</mo><mi>b</mi></mrow></mrow><annotation encoding="application/x-tex">\lim{a+b}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mop">lim</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">b</span></span></span></span></span></td><td>\lim{a+b}</td></tr><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mo><mi>lim</mi><mo>⁡</mo></mo><mrow><mi>n</mi><mo>→</mo><mo>+</mo><mi mathvariant="normal">∞</mi></mrow></msub></mrow><annotation encoding="application/x-tex">\lim_{n\rightarrow+\infty}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.902771em;vertical-align:-0.208331em;"></span><span class="mop"><span class="mop">lim</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.25833100000000003em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mrel mtight">→</span><span class="mord mtight">+</span><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span></span></td><td>\lim_{n\rightarrow+\infty}</td></tr></tbody></table><p><strong>累加</strong></p><table><thead><tr><th>算式</th><th>Markdown</th></tr></thead><tbody><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∑</mo><mi>a</mi></mrow><annotation encoding="application/x-tex">\sum{a}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.00001em;vertical-align:-0.25001em;"></span><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">a</span></span></span></span></span></td><td>\sum{a}</td></tr><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mo>∑</mo><mrow><mi>n</mi><mo>=</mo><mn>1</mn></mrow><mn>100</mn></msubsup><msub><mi>a</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">\sum_{n=1}^{100}{a_n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.253718em;vertical-align:-0.29971000000000003em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.954008em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">0</span><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></td><td>\sum_{n=1}^{100}{a_n}</td></tr></tbody></table><p><strong>累乘</strong></p><table><thead><tr><th>算式</th><th>Markdown</th></tr></thead><tbody><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∏</mo><mi>x</mi></mrow><annotation encoding="application/x-tex">\prod{x}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.00001em;vertical-align:-0.25001em;"></span><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∏</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">x</span></span></span></span></span></td><td>\prod{x}</td></tr><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mo>∏</mo><mrow><mi>n</mi><mo>=</mo><mn>1</mn></mrow><mn>99</mn></msubsup><msub><mi>x</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">\prod_{n=1}^{99}{x_n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.253718em;vertical-align:-0.29971000000000003em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∏</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.954008em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">9</span><span class="mord mtight">9</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></td><td>\prod_{n=1}^{99}{x_n}</td></tr></tbody></table><p><strong>三角函数</strong></p><table><thead><tr><th>三角函数</th><th>Markdown</th></tr></thead><tbody><tr><td>$ ⁡ \sin$</td><td>\sin</td></tr></tbody></table><p><strong>对数函数</strong></p><table><thead><tr><th>算式</th><th>Markdown</th></tr></thead><tbody><tr><td>$ \ln2$</td><td>\ln2</td></tr><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mo><mi>log</mi><mo>⁡</mo></mo><mn>2</mn></msub><mn>8</mn></mrow><annotation encoding="application/x-tex">\log_28</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.93858em;vertical-align:-0.24414em;"></span><span class="mop"><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.20696799999999996em;"><span style="top:-2.4558600000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24414em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">8</span></span></span></span></td><td>\log_28</td></tr><tr><td>$ \lg10$</td><td>\lg10</td></tr></tbody></table><p><strong>关系运算符</strong></p><table><thead><tr><th>运算符</th><th>Markdown</th></tr></thead><tbody><tr><td>$± $</td><td>\pm</td></tr><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>×</mo></mrow><annotation encoding="application/x-tex">\times</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord">×</span></span></span></span></td><td>\times</td></tr><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⋅</mo></mrow><annotation encoding="application/x-tex">\cdot</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.44445em;vertical-align:0em;"></span><span class="mord">⋅</span></span></span></span></td><td>\cdot</td></tr><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>÷</mo></mrow><annotation encoding="application/x-tex">\div</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord">÷</span></span></span></span></td><td>\div</td></tr><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">≠</mi></mrow><annotation encoding="application/x-tex">\neq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mrel"><span class="mrel"><span class="mord"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="rlap"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mrel"></span></span><span class="fix"></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span><span class="mrel">=</span></span></span></span></span></td><td>\neq</td></tr><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>≡</mo></mrow><annotation encoding="application/x-tex">\equiv</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.46375em;vertical-align:0em;"></span><span class="mrel">≡</span></span></span></span></td><td>\equiv</td></tr><tr><td>$ \leq$</td><td>\leq</td></tr><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>≥</mo></mrow><annotation encoding="application/x-tex">\geq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mrel">≥</span></span></span></span></td><td>\geq</td></tr></tbody></table><p><strong>其它特殊字符</strong></p><table><thead><tr><th>符号</th><th>Markdown</th></tr></thead><tbody><tr><td>$ \forall$</td><td>\forall</td></tr><tr><td>$ \infty$</td><td>\infty</td></tr><tr><td>$ \emptyset$</td><td>\emptyset</td></tr><tr><td>$ \exists$</td><td>\exists</td></tr><tr><td>$ \nabla$</td><td>\nabla</td></tr><tr><td>$ \bot$</td><td>\bot</td></tr><tr><td>$ \angle$</td><td>\angle</td></tr><tr><td>$ \because$</td><td>\because</td></tr><tr><td>$ \therefore$</td><td>\therefore</td></tr></tbody></table><p>花括号<br />$c(u)=\begin{cases} \sqrt\frac{1}{N}，u=0\ \sqrt\frac{2}{N}， u\neq0\end{cases}  $</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">c(u)=\begin&#123;cases&#125; \sqrt\frac&#123;1&#125;&#123;N&#125;，u=0\\ \sqrt\frac&#123;2&#125;&#123;N&#125;， u\neq0\end&#123;cases&#125;  </span><br></pre></td></tr></table></figure><p>空格<br /><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mspace width="1em"/><mi>b</mi></mrow><annotation encoding="application/x-tex">a \quad b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathdefault">b</span></span></span></span></p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">a \quad b</span><br></pre></td></tr></table></figure><p>矩阵</p>a = \left[\matrix{  \alpha_1 & test1\\  \alpha_2 & test2\\  \alpha_3 & test3 }\right]<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">$$</span><br><span class="line">a = \left[</span><br><span class="line">\matrix&#123;</span><br><span class="line">  \alpha<span class="emphasis">_1 &amp; test1\\</span></span><br><span class="line"><span class="emphasis">  \alpha_</span>2 &amp; test2\\</span><br><span class="line">  \alpha<span class="emphasis">_3 &amp; test3 </span></span><br><span class="line"><span class="emphasis">&#125;</span></span><br><span class="line"><span class="emphasis">\right]</span></span><br><span class="line"><span class="emphasis">$$</span></span><br></pre></td></tr></table></figure><h1 id="希腊字母写法"><a class="markdownIt-Anchor" href="#希腊字母写法"></a> 希腊字母写法</h1><table><thead><tr><th>字母</th><th>代码</th></tr></thead><tbody><tr><td>α</td><td><code>$\alpha$</code></td></tr><tr><td>β</td><td><code>$\beta$</code></td></tr><tr><td>γ</td><td><code>$\gamma$</code></td></tr><tr><td>Γ</td><td><code>$\Gamma$</code></td></tr><tr><td>δ</td><td><code>$\delta$</code></td></tr><tr><td>Δ</td><td><code>$\Delta$</code></td></tr><tr><td>ϵ</td><td><code>$\epsilon$</code></td></tr><tr><td>ε</td><td><code>$\varepsilon$</code></td></tr><tr><td>ζ</td><td><code>$\zeta$</code></td></tr><tr><td>η</td><td><code>$\eta$</code></td></tr><tr><td>θ</td><td><code>$\theta$</code></td></tr><tr><td>Θ</td><td><code>$\Theta$</code></td></tr><tr><td>ϑ</td><td><code>$\vartheta$</code></td></tr><tr><td>ι</td><td><code>$\iota$</code></td></tr><tr><td>κ</td><td><code>$\kappa$</code></td></tr><tr><td>λ</td><td><code>$\lambda$</code></td></tr><tr><td>Λ</td><td><code>$\Lambda$</code></td></tr><tr><td>μ</td><td><code>$\mu$</code></td></tr><tr><td>ν</td><td><code>$\nu$</code></td></tr><tr><td>ξ</td><td><code>$\xi$</code></td></tr><tr><td>Ξ</td><td><code>$\Xi$</code></td></tr><tr><td>π</td><td><code>$\pi$</code></td></tr><tr><td>Π</td><td><code>$\Pi$</code></td></tr><tr><td>ϖ</td><td><code>$\varpi$</code></td></tr><tr><td>ρ</td><td><code>$\rho$</code></td></tr><tr><td>ϱ</td><td><code>$\varrho$</code></td></tr><tr><td>σ</td><td><code>$\sigma$</code></td></tr><tr><td>Σ</td><td><code>$\Sigma$</code></td></tr><tr><td>ς</td><td><code>$\varsigma$</code></td></tr><tr><td>τ</td><td><code>$\tau$</code></td></tr><tr><td>υ</td><td><code>$\upsilon$</code></td></tr><tr><td>Υ</td><td><code>$\Upsilon$</code></td></tr><tr><td>ϕ</td><td><code>$\phi$</code></td></tr><tr><td>Φ</td><td><code>$\Phi$</code></td></tr><tr><td>φ</td><td><code>$\varphi$</code></td></tr><tr><td>χ</td><td><code>$\chi$</code></td></tr><tr><td>ψ</td><td><code>$\psi$</code></td></tr><tr><td>Ψ</td><td><code>$\Psi$</code></td></tr><tr><td>Ω</td><td><code>$\Omega$</code></td></tr><tr><td>ω</td><td><code>$\omega$</code></td></tr></tbody></table><h1 id="字母上面加横线"><a class="markdownIt-Anchor" href="#字母上面加横线"></a> 字母上面加横线</h1><p>输入 \overline{G} 显示 ( G ‾ ) $$(\overline{G})$$<br />输入 \widehat{G} 显示( G ^ ) $$(\widehat{G} )$$(<em>G</em>)<br />输入 \hat{G} 显示 ( G ^ ) $$( \hat{G})$$(<em>G</em>^)<br />输入 \widetilde 显示 ( G ~ ) $$(\widetilde{G})$$(<em>G</em>)<br />输入 \dot{G} 显示 ( G ˙ )$$ (\dot{G})$$(<em>G</em>˙)<br />输入 \ddot{G} 显示( G ¨ ) $$(\ddot{G})$$(<em>G</em>¨)</p>]]></content>
    
    
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; class=&quot;aplayer-secondary-script-marker&quot;&gt;&lt;/script&gt;&lt;h1 id=&quot;公式的使用&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#公式的使用&quot;&gt;&lt;/a&gt; 公式的使用&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;上/下标&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;算式&lt;/th&gt;
&lt;th&gt;Markdown&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;$x^2 $&lt;/td&gt;
&lt;td&gt;x^2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;$y_1 $&lt;/td&gt;
&lt;td&gt;y_1&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;分式&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;算式&lt;/th&gt;
&lt;th&gt;Markdown&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;mi mathvariant=&quot;normal&quot;&gt;/&lt;/mi&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;1/2&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:1em;vertical-align:-0.25em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;1/2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;$ \frac{1}{2}$&lt;/td&gt;
&lt;td&gt;\frac{1}{2}&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;省略号&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;省略号&lt;/th&gt;
&lt;th&gt;Markdown&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;$ \cdots$&lt;/td&gt;
&lt;td&gt;\cdots&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;开根号&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;算式&lt;/th&gt;
&lt;th&gt;Markdown&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msqrt&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/msqrt&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;\sqrt{2}&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:1.04em;vertical-align:-0.13278em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord sqrt&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.90722em;&quot;&gt;&lt;span class=&quot;svg-align&quot; style=&quot;top:-3em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot; style=&quot;padding-left:0.833em;&quot;&gt;&lt;span class=&quot;mord&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;top:-2.86722em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;hide-tail&quot; style=&quot;min-width:0.853em;height:1.08em;&quot;&gt;&lt;svg width=&quot;400em&quot; height=&quot;1.08em&quot; viewBox=&quot;0 0 400000 1080&quot; preserveAspectRatio=&quot;xMinYMin slice&quot;&gt;&lt;path d=&quot;M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,
-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,
-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,
35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,
-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467
s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422
s-65,47,-65,47z M834 80H400000v40H845z&quot;/&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.13278em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;\sqrt{2}&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;</summary>
    
    
    
    <category term="typora" scheme="http://stardust14.com/categories/typora/"/>
    
    
    <category term="typora" scheme="http://stardust14.com/tags/typora/"/>
    
  </entry>
  
  <entry>
    <title>C语言例题</title>
    <link href="http://stardust14.com/2020/09/24/C%E8%AF%AD%E8%A8%80%E4%BE%8B%E9%A2%98/"/>
    <id>http://stardust14.com/2020/09/24/C%E8%AF%AD%E8%A8%80%E4%BE%8B%E9%A2%98/</id>
    <published>2020-09-24T13:42:09.000Z</published>
    <updated>2020-09-29T13:41:17.859Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1><p>做的例题整理，修改和改进</p><blockquote><p>VS2019中scanf语句要使用scanf_s</p></blockquote><h1 id="练习实例"><a class="markdownIt-Anchor" href="#练习实例"></a> 练习实例</h1><p>ex1:</p><p>ex2:</p><p>ex3:</p><p>ex4:**题目：**输入某年某月某日，判断这一天是这一年的第几天？</p><p>**程序分析：**以3月5日为例，应该先把前两个月的加起来，然后再加上5天即本年的第几天，特殊情况，闰年且输入月份大于3时需考虑多加一天。</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> day, month, year, sum, leap;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n请输入年、月、日，格式为：年,月,日（2020,9,24[英文标点]）\n&quot;</span>);</span><br><span class="line">    scanf_s(<span class="string">&quot;%d,%d,%d&quot;</span>, &amp;year, &amp;month, &amp;day);  <span class="comment">// 格式为：2020,9,24</span></span><br><span class="line">    <span class="keyword">switch</span> (month) <span class="comment">// 先计算某月以前月份的总天数</span></span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">1</span>:sum = <span class="number">0</span>; <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">2</span>:sum = <span class="number">31</span>; <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">3</span>:sum = <span class="number">59</span>; <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">4</span>:sum = <span class="number">90</span>; <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">5</span>:sum = <span class="number">120</span>; <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">6</span>:sum = <span class="number">151</span>; <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">7</span>:sum = <span class="number">181</span>; <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">8</span>:sum = <span class="number">212</span>; <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">9</span>:sum = <span class="number">243</span>; <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">10</span>:sum = <span class="number">273</span>; <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">11</span>:sum = <span class="number">304</span>; <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">12</span>:sum = <span class="number">334</span>; <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:<span class="built_in">printf</span>(<span class="string">&quot;data error&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    sum = sum + day;<span class="comment">//再加上某天的天数</span></span><br><span class="line">    <span class="keyword">if</span> (year % <span class="number">400</span> == <span class="number">0</span> || (year % <span class="number">4</span> == <span class="number">0</span> &amp;&amp; year % <span class="number">100</span> != <span class="number">0</span>)) &#123;<span class="comment">//判断是否是闰年</span></span><br><span class="line">        leap = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        leap = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (leap == <span class="number">1</span> &amp;&amp; month &gt; <span class="number">2</span>) &#123;<span class="comment">//如果是闰年且月份大于2，总数应该加一天</span></span><br><span class="line">        sum++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;这是这一年的第%d天\n&quot;</span>, sum);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>☑️调试时要用英文标点</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">请输入年、月、日，格式为：年,月,日（<span class="number">2020</span>,<span class="number">9</span>,<span class="number">24</span>）</span><br><span class="line"><span class="number">2020</span>,<span class="number">9</span>,<span class="number">10</span></span><br><span class="line">这是这一年的第<span class="number">254</span>天</span><br></pre></td></tr></table></figure><p>ex5:输入三个整数x,y,z，请把这三个数由小到大输出。</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//输入三个整数x,y,z，请把这三个数由小到大输出。</span></span><br><span class="line"><span class="comment">//要用三个if语句并行</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> x, y, z, t;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n输入三个数字：\n&quot;</span>);</span><br><span class="line">scanf_s(<span class="string">&quot;%d%d%d&quot;</span>, &amp;x, &amp;y, &amp;z);</span><br><span class="line"><span class="keyword">if</span> (x &gt; y) &#123;</span><br><span class="line">t = x;</span><br><span class="line">x = y;</span><br><span class="line">y = t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (x &gt; z) &#123;<span class="comment">//交换x，z的值</span></span><br><span class="line">t = z;</span><br><span class="line">z = x;</span><br><span class="line">x = t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(y&gt;z) &#123;</span><br><span class="line">t = y;</span><br><span class="line">y = z;</span><br><span class="line">z = t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;从大到小为：%d&gt;%d&gt;%d\n&quot;</span>, z, y, x);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;从小到大的排列：%d%d%d\n&quot;</span>, x, y, z);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">输入三个数字：</span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line">从大到小为：<span class="number">3</span>&gt;<span class="number">2</span>&gt;<span class="number">1</span></span><br><span class="line">从小到大的排列：<span class="number">123</span></span><br></pre></td></tr></table></figure><p>ex6:输出9*9口诀</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//输出9*9口诀。</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i, j, m;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">1</span>; j &lt;=i; j++) &#123;</span><br><span class="line">            m = i * j;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d*%d=%-3d&quot;</span>, i, j, m);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>*<span class="number">1</span>=<span class="number">1</span></span><br><span class="line"><span class="number">2</span>*<span class="number">1</span>=<span class="number">2</span>  <span class="number">2</span>*<span class="number">2</span>=<span class="number">4</span></span><br><span class="line"><span class="number">3</span>*<span class="number">1</span>=<span class="number">3</span>  <span class="number">3</span>*<span class="number">2</span>=<span class="number">6</span>  <span class="number">3</span>*<span class="number">3</span>=<span class="number">9</span></span><br><span class="line"><span class="number">4</span>*<span class="number">1</span>=<span class="number">4</span>  <span class="number">4</span>*<span class="number">2</span>=<span class="number">8</span>  <span class="number">4</span>*<span class="number">3</span>=<span class="number">12</span> <span class="number">4</span>*<span class="number">4</span>=<span class="number">16</span></span><br><span class="line"><span class="number">5</span>*<span class="number">1</span>=<span class="number">5</span>  <span class="number">5</span>*<span class="number">2</span>=<span class="number">10</span> <span class="number">5</span>*<span class="number">3</span>=<span class="number">15</span> <span class="number">5</span>*<span class="number">4</span>=<span class="number">20</span> <span class="number">5</span>*<span class="number">5</span>=<span class="number">25</span></span><br><span class="line"><span class="number">6</span>*<span class="number">1</span>=<span class="number">6</span>  <span class="number">6</span>*<span class="number">2</span>=<span class="number">12</span> <span class="number">6</span>*<span class="number">3</span>=<span class="number">18</span> <span class="number">6</span>*<span class="number">4</span>=<span class="number">24</span> <span class="number">6</span>*<span class="number">5</span>=<span class="number">30</span> <span class="number">6</span>*<span class="number">6</span>=<span class="number">36</span></span><br><span class="line"><span class="number">7</span>*<span class="number">1</span>=<span class="number">7</span>  <span class="number">7</span>*<span class="number">2</span>=<span class="number">14</span> <span class="number">7</span>*<span class="number">3</span>=<span class="number">21</span> <span class="number">7</span>*<span class="number">4</span>=<span class="number">28</span> <span class="number">7</span>*<span class="number">5</span>=<span class="number">35</span> <span class="number">7</span>*<span class="number">6</span>=<span class="number">42</span> <span class="number">7</span>*<span class="number">7</span>=<span class="number">49</span></span><br><span class="line"><span class="number">8</span>*<span class="number">1</span>=<span class="number">8</span>  <span class="number">8</span>*<span class="number">2</span>=<span class="number">16</span> <span class="number">8</span>*<span class="number">3</span>=<span class="number">24</span> <span class="number">8</span>*<span class="number">4</span>=<span class="number">32</span> <span class="number">8</span>*<span class="number">5</span>=<span class="number">40</span> <span class="number">8</span>*<span class="number">6</span>=<span class="number">48</span> <span class="number">8</span>*<span class="number">7</span>=<span class="number">56</span> <span class="number">8</span>*<span class="number">8</span>=<span class="number">64</span></span><br><span class="line"><span class="number">9</span>*<span class="number">1</span>=<span class="number">9</span>  <span class="number">9</span>*<span class="number">2</span>=<span class="number">18</span> <span class="number">9</span>*<span class="number">3</span>=<span class="number">27</span> <span class="number">9</span>*<span class="number">4</span>=<span class="number">36</span> <span class="number">9</span>*<span class="number">5</span>=<span class="number">45</span> <span class="number">9</span>*<span class="number">6</span>=<span class="number">54</span> <span class="number">9</span>*<span class="number">7</span>=<span class="number">63</span> <span class="number">9</span>*<span class="number">8</span>=<span class="number">72</span> <span class="number">9</span>*<span class="number">9</span>=<span class="number">81</span></span><br></pre></td></tr></table></figure><p>ex7:有一对兔子，从出生后第3个月起每个月都生一对兔子，小兔子长到第三个月后每个月又生一对兔子，假如兔子都不死，问每个月的兔子总数为多少？（输出前40个月即可）。</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> f1=<span class="number">1</span>, f2=<span class="number">1</span>,i;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= <span class="number">20</span>; i++) &#123;<span class="comment">//一次输出两位f1,f2,所以取i&lt;=20</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%12d%12d&quot;</span>,f1,f2);</span><br><span class="line">        <span class="keyword">if</span> (i % <span class="number">2</span> == <span class="number">0</span>)<span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">        f1 = f1 + f2;</span><br><span class="line">        f2 = f1 + f2;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">       <span class="number">1</span>           <span class="number">1</span>           <span class="number">2</span>           <span class="number">3</span></span><br><span class="line">       <span class="number">5</span>           <span class="number">8</span>          <span class="number">13</span>          <span class="number">21</span></span><br><span class="line">      <span class="number">34</span>          <span class="number">55</span>          <span class="number">89</span>         <span class="number">144</span></span><br><span class="line">     <span class="number">233</span>         <span class="number">377</span>         <span class="number">610</span>         <span class="number">987</span></span><br><span class="line">    <span class="number">1597</span>        <span class="number">2584</span>        <span class="number">4181</span>        <span class="number">6765</span></span><br><span class="line">   <span class="number">10946</span>       <span class="number">17711</span>       <span class="number">28657</span>       <span class="number">46368</span></span><br><span class="line">   <span class="number">75025</span>      <span class="number">121393</span>      <span class="number">196418</span>      <span class="number">317811</span></span><br><span class="line">  <span class="number">514229</span>      <span class="number">832040</span>     <span class="number">1346269</span>     <span class="number">2178309</span></span><br><span class="line"> <span class="number">3524578</span>     <span class="number">5702887</span>     <span class="number">9227465</span>    <span class="number">14930352</span></span><br><span class="line"><span class="number">24157817</span>    <span class="number">39088169</span>    <span class="number">63245986</span>   <span class="number">102334155</span></span><br></pre></td></tr></table></figure><p>ex8:判断101到200之间的素数。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; class=&quot;aplayer-secondary-script-marker&quot;&gt;&lt;/script&gt;&lt;h1 id=&quot;前言&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#前言&quot;&gt;&lt;/a&gt; 前言&lt;/h1&gt;
&lt;p&gt;做的例题整理，修改和改进&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;VS2019中scanf语句要使用scanf_s&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;练习实例&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#练习实例&quot;&gt;&lt;/a&gt; 练习实例&lt;/h1&gt;
&lt;p&gt;ex1:&lt;/p&gt;
&lt;p&gt;ex2:&lt;/p&gt;
&lt;p&gt;ex3:&lt;/p&gt;
&lt;p&gt;ex4:**题目：**输入某年某月某日，判断这一天是这一年的第几天？&lt;/p&gt;
&lt;p&gt;**程序分析：**以3月5日为例，应该先把前两个月的加起来，然后再加上5天即本年的第几天，特殊情况，闰年且输入月份大于3时需考虑多加一天。&lt;/p&gt;</summary>
    
    
    
    <category term="C" scheme="http://stardust14.com/categories/C/"/>
    
    
    <category term="C" scheme="http://stardust14.com/tags/C/"/>
    
  </entry>
  
</feed>

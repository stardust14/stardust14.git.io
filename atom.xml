<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>STAR</title>
  <icon>https://www.gravatar.com/avatar/3bc5e602b2d4c7fffe79258e2ac6952e</icon>
  <subtitle>blog</subtitle>
  <link href="http://stardust14.com/atom.xml" rel="self"/>
  
  <link href="http://stardust14.com/"/>
  <updated>2021-04-07T08:39:32.000Z</updated>
  <id>http://stardust14.com/</id>
  
  <author>
    <name>stardust</name>
    <email>邮箱</email>
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>分享&amp;记录</title>
    <link href="http://stardust14.com/2021/04/07/%E5%88%86%E4%BA%AB-%E8%AE%B0%E5%BD%95/"/>
    <id>http://stardust14.com/2021/04/07/%E5%88%86%E4%BA%AB-%E8%AE%B0%E5%BD%95/</id>
    <published>2021-04-07T08:39:32.000Z</published>
    <updated>2021-04-07T08:39:32.000Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="7066236b71bd093e2c9f53bf82622c0e9bd218274369bab2b32498af42cebc66">31242a41c922984c3c7e6ed39d2c978a39cd93922d549058b144463d7a1519272fa19dce3629f278aaed84c96a5c85cfb21d90190581ad32f40bbabf9b62b7250d325eea2bf076e2cdbf55e3c24285bf6e8b911be2da55e80e31eb116cedd161373c576f9c7eaa34b0c22d52333648cbf1b2b32bce14fc44950b046203047fc8965e48c16a0577d7647ad1aa56ad7a4484d547b335e841275628ebe6cebe760b9fd61250d56736073b6ecd28ad45846bba3f5259cc41984812e7d4a99811c18466a3d31dc1150a203670051b3b07265a6a81fde20fe261ddd6b07f9001256de791c796602283c7045ce9c585d9165b9bb33c144c782ecc9a705562505efbb8f1e77a8555cd0468f569fb23a2579cf7476dd2194d4d78b619b79d8c07b1f9c2175635095ac4bc51805ba7e820143398c9263cdef1a2746ecac1bc72bc7520025e</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-xray">      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">Hey, password is required here.</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">&lt;div class=&quot;hbe hbe-container&quot; id=&quot;hexo-blog-encrypt&quot; data-wpm=&quot;Oh, this is an invalid password. Check and try again, please.&quot; data-whm=&quot;OOPS, these decrypted content may changed, but you can still have a look.&quot;&gt;
  &lt;script id=&quot;hbeData&quot; type=&quot;hbeData&quot; data-hmacdigest=&quot;7066236b71bd093e2c9f53bf82622c0e9bd218274369bab2b32498af42cebc66&quot;&gt;31242a41c922984c3c7e6ed39d2c978a39cd93922d549058b144463d7a1519272fa19dce3629f278aaed84c96a5c85cfb21d90190581ad32f40bbabf9b62b7250d325eea2bf076e2cdbf55e3c24285bf6e8b911be2da55e80e31eb116cedd161373c576f9c7eaa34b0c22d52333648cbf1b2b32bce14fc44950b046203047fc8965e48c16a0577d7647ad1aa56ad7a4484d547b335e841275628ebe6cebe760b9fd61250d56736073b6ecd28ad45846bba3f5259cc41984812e7d4a99811c18466a3d31dc1150a203670051b3b07265a6a81fde20fe261ddd6b07f9001256de791c796602283c7045ce9c585d9165b9bb33c144c782ecc9a705562505efbb8f1e77a8555cd0468f569fb23a2579cf7476dd2194d4d78b619b79d8c07b1f9c2175635095ac4bc51805ba7e820143398c9263cdef1a2746ecac1bc72bc7520025e&lt;/script&gt;
  &lt;div class=&quot;hbe hbe-content&quot;&gt;
    &lt;div class=&quot;hbe hbe-input hbe-input-xray&quot;&gt;
      &lt;input class=&quot;hbe hbe-input-field hbe-input-field-xray&quot; type=&quot;password&quot; id=&quot;hbePass&quot;&gt;
      &lt;label class=&quot;hbe hbe-input-label hbe-input-label-xray&quot; for=&quot;hbePass&quot;&gt;
        &lt;span class=&quot;hbe hbe-input-label-content hbe-input-label-content-xray&quot;&gt;Hey, password is required here.&lt;/span&gt;
      &lt;/label&gt;
      &lt;svg class=&quot;hbe hbe-graphic hbe-graphic-xray&quot; width=&quot;300%&quot; height=&quot;100%&quot; viewBox=&quot;0 0 1200 60&quot; preserveAspectRatio=&quot;none&quot;&gt;
        &lt;path d=&quot;M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0&quot;/&gt;
        &lt;path d=&quot;M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0&quot;/&gt;
      &lt;/svg&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;script data-pjax src=&quot;/lib/hbe.js&quot;&gt;&lt;/script&gt;&lt;link href=&quot;/css/hbe.style.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot;&gt;</summary>
    
    
    
    <category term="记录&amp;烂笔头" scheme="http://stardust14.com/categories/%E8%AE%B0%E5%BD%95-%E7%83%82%E7%AC%94%E5%A4%B4/"/>
    
    
    <category term="随笔" scheme="http://stardust14.com/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>批注记录</title>
    <link href="http://stardust14.com/2021/04/07/%E6%89%B9%E6%B3%A8%E8%AE%B0%E5%BD%95/"/>
    <id>http://stardust14.com/2021/04/07/%E6%89%B9%E6%B3%A8%E8%AE%B0%E5%BD%95/</id>
    <published>2021-04-07T08:23:11.000Z</published>
    <updated>2021-04-07T08:23:11.000Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="291b0b36ee585448d9329fbee742f88f8dfdad37b60bddea13aff1ed3d6749e7">22064b17c03cb0c0e58c99349b6889d0c7e9d327de57f2d214b057f3875d6b37b9b20ab3b449f9d3b0ba6ffe12bb71d82eff8171349bc71e3a2c9718b358eacc07c1e2d0dcdcc94bb927d4bdef70eb39fd8e7de731fdf8f27d06339a84133e4a974b5fae5fee1809df024fdfbb238fba030fdd8003e2826f0a33da9ce588a76e8e6bc91b4049cb9065bb5b9840402572bd86834c2d0c361fdb4259dd56633b9d286b14b14b74d50d4ca10de4c2e54f118835e2ea5a28de2ac78c4f57666f83faa6cf49198dbd3f86312e8ae6475e1ad55bc0f991fa504124763e450733221c2a781fb4c5fbae0d7123703d7ac9a38542095b3da435e03cc3247b4eff26b05bc0b9e2a2c706e61562c7bb934180842f9b6dc301690938c4f21c78468483f3e95d8b5dcc7048e9b21da20cd49dde4a8cd683cfc91feffd222c011316f66497312604f8b20b5ffc02ed9b9ca7b27ed4db1cd53fe96c268e720fa222687b475d0ce58791b3f7da2d900cdaf58269d88b6c20cbada81f02e840030715d6e565756915b4d0cb8fe965065fd8ff8b1614f000b4865630456e5b30794759410cb19e9299b8df259ff9e0dd282057528064f1feba1e2354f208f8add32a5d96f9879264e81396f1b3d4e71a6b5c5665756626ef9a24713668c2fd67155f59eca72ab01c5b04482b0202087e653954eea98a3d0f732cbaa7c8f96cabf15dc21dfb548afee9c5fbc7efc481eb658229f8238c81ae3abc3dc2c3ffcf079d4195b78ab5be094c77fcaac0b6623655af2b8ea3e3599c76c3ab124f1de662a495429cfcd2d78a480df24cd295ad167d403bbed08dd7d4ac252747baa4309e59bca946629e56107d</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-xray">      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">Hey, password is required here.</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">&lt;div class=&quot;hbe hbe-container&quot; id=&quot;hexo-blog-encrypt&quot; data-wpm=&quot;Oh, this is an invalid password. Check and try again, please.&quot; data-whm=&quot;OOPS, these decrypted content may changed, but you can still have a look.&quot;&gt;
  &lt;script id=&quot;hbeData&quot; type=&quot;hbeData&quot; data-hmacdigest=&quot;291b0b36ee585448d9329fbee742f88f8dfdad37b60bddea13aff1ed3d6749e7&quot;&gt;22064b17c03cb0c0e58c99349b6889d0c7e9d327de57f2d214b057f3875d6b37b9b20ab3b449f9d3b0ba6ffe12bb71d82eff8171349bc71e3a2c9718b358eacc07c1e2d0dcdcc94bb927d4bdef70eb39fd8e7de731fdf8f27d06339a84133e4a974b5fae5fee1809df024fdfbb238fba030fdd8003e2826f0a33da9ce588a76e8e6bc91b4049cb9065bb5b9840402572bd86834c2d0c361fdb4259dd56633b9d286b14b14b74d50d4ca10de4c2e54f118835e2ea5a28de2ac78c4f57666f83faa6cf49198dbd3f86312e8ae6475e1ad55bc0f991fa504124763e450733221c2a781fb4c5fbae0d7123703d7ac9a38542095b3da435e03cc3247b4eff26b05bc0b9e2a2c706e61562c7bb934180842f9b6dc301690938c4f21c78468483f3e95d8b5dcc7048e9b21da20cd49dde4a8cd683cfc91feffd222c011316f66497312604f8b20b5ffc02ed9b9ca7b27ed4db1cd53fe96c268e720fa222687b475d0ce58791b3f7da2d900cdaf58269d88b6c20cbada81f02e840030715d6e565756915b4d0cb8fe965065fd8ff8b1614f000b4865630456e5b30794759410cb19e9299b8df259ff9e0dd282057528064f1feba1e2354f208f8add32a5d96f9879264e81396f1b3d4e71a6b5c5665756626ef9a24713668c2fd67155f59eca72ab01c5b04482b0202087e653954eea98a3d0f732cbaa7c8f96cabf15dc21dfb548afee9c5fbc7efc481eb658229f8238c81ae3abc3dc2c3ffcf079d4195b78ab5be094c77fcaac0b6623655af2b8ea3e3599c76c3ab124f1de662a495429cfcd2d78a480df24cd295ad167d403bbed08dd7d4ac252747baa4309e59bca946629e56107d&lt;/script&gt;
  &lt;div class=&quot;hbe hbe-content&quot;&gt;
    &lt;div class=&quot;hbe hbe-input hbe-input-xray&quot;&gt;
      &lt;input class=&quot;hbe hbe-input-field hbe-input-field-xray&quot; type=&quot;password&quot; id=&quot;hbePass&quot;&gt;
      &lt;label class=&quot;hbe hbe-input-label hbe-input-label-xray&quot; for=&quot;hbePass&quot;&gt;
        &lt;span class=&quot;hbe hbe-input-label-content hbe-input-label-content-xray&quot;&gt;Hey, password is required here.&lt;/span&gt;
      &lt;/label&gt;
      &lt;svg class=&quot;hbe hbe-graphic hbe-graphic-xray&quot; width=&quot;300%&quot; height=&quot;100%&quot; viewBox=&quot;0 0 1200 60&quot; preserveAspectRatio=&quot;none&quot;&gt;
        &lt;path d=&quot;M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0&quot;/&gt;
        &lt;path d=&quot;M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0&quot;/&gt;
      &lt;/svg&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;script data-pjax src=&quot;/lib/hbe.js&quot;&gt;&lt;/script&gt;&lt;link href=&quot;/css/hbe.style.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot;&gt;</summary>
    
    
    
    <category term="随笔" scheme="http://stardust14.com/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
    <category term="随笔" scheme="http://stardust14.com/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>MUSIC算法</title>
    <link href="http://stardust14.com/2021/03/15/MUSIC%E7%AE%97%E6%B3%95/"/>
    <id>http://stardust14.com/2021/03/15/MUSIC%E7%AE%97%E6%B3%95/</id>
    <published>2021-03-15T03:22:31.000Z</published>
    <updated>2021-03-15T03:22:31.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1>MUSIC算法</h1><div class="note warning flat"><p>以下部分是基于线阵阵列！！！还有许多不完善的地方，待续···</p></div><p>假设入射到天线阵列的近似为远场窄带信号，它们分别来自<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>θ</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>θ</mi><mn>2</mn></msub><mo separator="true">,</mo><mo separator="true">⋅</mo><mo separator="true">⋅</mo><mo separator="true">⋅</mo><mo separator="true">,</mo><msub><mi>θ</mi><mi>K</mi></msub></mrow><annotation encoding="application/x-tex">\theta_1,\theta_2,···,\theta_K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">⋅</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">⋅</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">⋅</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">K</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>共K个方向，则有</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mi>A</mi><mi>s</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>+</mo><mi>v</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">x(n)=As(n)+v(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">x</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">A</span><span class="mord mathdefault">s</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span></p><blockquote><p>x(n)是天线阵各阵元的接收数据向量，M*1</p><p>A是阵列的方向矩阵，M*K</p><p>s(n)为空间信号向量,K*1</p><p>v(n)是白噪声向量，M*1</p></blockquote><p>接收信号向量的空间相关矩阵可表示为</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>R</mi><mo>=</mo><mi>E</mi><mo stretchy="false">[</mo><mi>X</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mi>X</mi><mo stretchy="false">(</mo><mi>n</mi><msup><mo stretchy="false">)</mo><mi>H</mi></msup><mo stretchy="false">]</mo><mo>=</mo><mi>A</mi><msub><mi>R</mi><mi>s</mi></msub><msup><mi>A</mi><mi>H</mi></msup><mo>+</mo><msup><mi>σ</mi><mn>2</mn></msup><mi>I</mi></mrow><annotation encoding="application/x-tex">R=E[X(n)X(n)^H]=AR_sA^H+\sigma^2I</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.0913309999999998em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span></span></span></span></span></span></span></span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.991331em;vertical-align:-0.15em;"></span><span class="mord mathdefault">A</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span></span></span></span></p><blockquote><p>I是单位矩阵</p></blockquote><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><mo>=</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>j</mi><msub><mi>w</mi><mn>0</mn></msub><mi>τ</mi></mrow></msup><mo>=</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>j</mi><mn>2</mn><mi>π</mi><mi>f</mi><mi>τ</mi></mrow></msup><mo>=</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>j</mi><mn>2</mn><mi>π</mi><mfrac><mi>c</mi><mi>λ</mi></mfrac><msub><mi>x</mi><mi>k</mi></msub><mi>s</mi><mi>i</mi><mi>n</mi><msub><mi>θ</mi><mi>i</mi></msub></mrow></msup></mrow><annotation encoding="application/x-tex">A=e^{-jw_0\tau}=e^{-j2 \pi f\tau}=e^{-j2\pi \frac{c}{\lambda}x_ksin{\theta_i}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.824664em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.02691em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mord mathdefault mtight" style="margin-right:0.1132em;">τ</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8491079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mtight">2</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span><span class="mord mathdefault mtight" style="margin-right:0.1132em;">τ</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.849108em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.363em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mtight">2</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6915428571428572em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">λ</span></span></span></span><span style="top:-3.2255000000000003em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.384em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.344em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15122857142857138em;"><span></span></span></span></span></span></span><span class="mord mathdefault mtight">s</span><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight">n</span><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:-0.02778em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>τ</mi></mrow><annotation encoding="application/x-tex">\tau</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.1132em;">τ</span></span></span></span>是波程差（距离差)<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>τ</mi><mo>=</mo><mfrac><mi>c</mi><mi>λ</mi></mfrac></mrow><annotation encoding="application/x-tex">\tau=\frac{c}{\lambda}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.1132em;">τ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.040392em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.695392em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">λ</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>，c是光速，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>λ</mi></mrow><annotation encoding="application/x-tex">\lambda</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">λ</span></span></span></span>为波长，x_k是位置信息（以原点为坐标），<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>λ</mi><mo>=</mo><mfrac><mi>c</mi><mi>f</mi></mfrac></mrow><annotation encoding="application/x-tex">\lambda=\frac{c}{f}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">λ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1764999999999999em;vertical-align:-0.481108em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.695392em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.481108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p><p>由于实际中采集的接收数据矩阵是有限长的，需要对有限的采样数据的协方差矩阵进行最大似然估计</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi>R</mi><mo stretchy="true">^</mo></mover><mo>=</mo><mfrac><mn>1</mn><mi>L</mi></mfrac><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>L</mi></msubsup><mi>X</mi><msup><mi>X</mi><mi>H</mi></msup></mrow><annotation encoding="application/x-tex">\widehat{R}=\frac{1}{L}\sum_{i=1}^{L}XX^H</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.92333em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.92333em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span></span></span><span class="svg-align" style="width:calc(100% - 0.16668em);margin-left:0.16668em;top:-3.6833299999999998em;"><span class="pstrut" style="height:3em;"></span><span style="height:0.24em;"><svg width='100%' height='0.24em' viewBox='0 0 1062 239' preserveAspectRatio='none'><path d='M529 0h5l519 115c5 1 9 5 9 10 0 1-1 2-1 3l-4 22c-1 5-5 9-11 9h-2L532 67 19 159h-2c-5 0-9-4-11-9l-5-22c-1-6 2-12 8-13z'/></svg></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.326231em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">L</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.981231em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">L</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span></span></span></span></span></span></span></span></span></span></span></p><blockquote><p>L代表矩阵长度</p></blockquote><p>对<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><msub><mi>R</mi><mi>s</mi></msub><msup><mi>A</mi><mi>H</mi></msup></mrow><annotation encoding="application/x-tex">AR_sA^H</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.991331em;vertical-align:-0.15em;"></span><span class="mord mathdefault">A</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span></span></span></span></span></span></span></span></span></span></span>进行特征值的分解，设<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mover accent="true"><mi>λ</mi><mo stretchy="true">~</mo></mover><mn>1</mn></msub><mo separator="true">,</mo><msub><mover accent="true"><mi>λ</mi><mo stretchy="true">~</mo></mover><mn>2</mn></msub><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><msub><mover accent="true"><mi>λ</mi><mo stretchy="true">~</mo></mover><mi>M</mi></msub></mrow><annotation encoding="application/x-tex">\widetilde{\lambda}_1,\widetilde{\lambda}_2,\cdots,\widetilde{\lambda}_M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.14888em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.95444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">λ</span></span></span><span class="svg-align" style="top:-3.69444em;"><span class="pstrut" style="height:3em;"></span><span style="height:0.26em;"><svg width='100%' height='0.26em' viewBox='0 0 600 260' preserveAspectRatio='none'><path d='M200 55.538c-77 0-168 73.953-177 73.953-3 0-7-2.175-9-5.437L2 97c-1-2-2-4-2-6 0-4 2-7 5-9l20-12C116 12 171 0 207 0c86 0 114 68 191 68 78 0 168-68 177-68 4 0 7 2 9 5l12 19c1 2.175 2 4.35 2 6.525 0 4.35-2 7.613-5 9.788l-19 13.05c-92 63.077-116.937 75.308-183 76.128-68.267.847-113-73.952-191-73.952z'/></svg></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.95444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">λ</span></span></span><span class="svg-align" style="top:-3.69444em;"><span class="pstrut" style="height:3em;"></span><span style="height:0.26em;"><svg width='100%' height='0.26em' viewBox='0 0 600 260' preserveAspectRatio='none'><path d='M200 55.538c-77 0-168 73.953-177 73.953-3 0-7-2.175-9-5.437L2 97c-1-2-2-4-2-6 0-4 2-7 5-9l20-12C116 12 171 0 207 0c86 0 114 68 191 68 78 0 168-68 177-68 4 0 7 2 9 5l12 19c1 2.175 2 4.35 2 6.525 0 4.35-2 7.613-5 9.788l-19 13.05c-92 63.077-116.937 75.308-183 76.128-68.267.847-113-73.952-191-73.952z'/></svg></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.95444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">λ</span></span></span><span class="svg-align" style="top:-3.69444em;"><span class="pstrut" style="height:3em;"></span><span style="height:0.26em;"><svg width='100%' height='0.26em' viewBox='0 0 600 260' preserveAspectRatio='none'><path d='M200 55.538c-77 0-168 73.953-177 73.953-3 0-7-2.175-9-5.437L2 97c-1-2-2-4-2-6 0-4 2-7 5-9l20-12C116 12 171 0 207 0c86 0 114 68 191 68 78 0 168-68 177-68 4 0 7 2 9 5l12 19c1 2.175 2 4.35 2 6.525 0 4.35-2 7.613-5 9.788l-19 13.05c-92 63.077-116.937 75.308-183 76.128-68.267.847-113-73.952-191-73.952z'/></svg></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>为特征值；<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>u</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>u</mi><mn>2</mn></msub><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><msub><mi>u</mi><mi>M</mi></msub></mrow><annotation encoding="application/x-tex">u_1,u_2,\cdots,u_M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>是对应正交归一化特征向量。</p><p>通常M&gt;K，假设矩阵<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><msub><mi>R</mi><mi>s</mi></msub><msup><mi>A</mi><mi>H</mi></msup></mrow><annotation encoding="application/x-tex">AR_sA^H</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.991331em;vertical-align:-0.15em;"></span><span class="mord mathdefault">A</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span></span></span></span></span></span></span></span></span></span></span>的所有非零特征值设为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mover accent="true"><mi>λ</mi><mo stretchy="true">~</mo></mover><mn>1</mn></msub><mo separator="true">,</mo><msub><mover accent="true"><mi>λ</mi><mo stretchy="true">~</mo></mover><mn>2</mn></msub><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><msub><mover accent="true"><mi>λ</mi><mo stretchy="true">~</mo></mover><mi>K</mi></msub><mi mathvariant="normal">≠</mi><mn>0</mn></mrow><annotation encoding="application/x-tex">\widetilde{\lambda}_1,\widetilde{\lambda}_2,\cdots,\widetilde{\lambda}_K\neq0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.14888em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.95444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">λ</span></span></span><span class="svg-align" style="top:-3.69444em;"><span class="pstrut" style="height:3em;"></span><span style="height:0.26em;"><svg width='100%' height='0.26em' viewBox='0 0 600 260' preserveAspectRatio='none'><path d='M200 55.538c-77 0-168 73.953-177 73.953-3 0-7-2.175-9-5.437L2 97c-1-2-2-4-2-6 0-4 2-7 5-9l20-12C116 12 171 0 207 0c86 0 114 68 191 68 78 0 168-68 177-68 4 0 7 2 9 5l12 19c1 2.175 2 4.35 2 6.525 0 4.35-2 7.613-5 9.788l-19 13.05c-92 63.077-116.937 75.308-183 76.128-68.267.847-113-73.952-191-73.952z'/></svg></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.95444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">λ</span></span></span><span class="svg-align" style="top:-3.69444em;"><span class="pstrut" style="height:3em;"></span><span style="height:0.26em;"><svg width='100%' height='0.26em' viewBox='0 0 600 260' preserveAspectRatio='none'><path d='M200 55.538c-77 0-168 73.953-177 73.953-3 0-7-2.175-9-5.437L2 97c-1-2-2-4-2-6 0-4 2-7 5-9l20-12C116 12 171 0 207 0c86 0 114 68 191 68 78 0 168-68 177-68 4 0 7 2 9 5l12 19c1 2.175 2 4.35 2 6.525 0 4.35-2 7.613-5 9.788l-19 13.05c-92 63.077-116.937 75.308-183 76.128-68.267.847-113-73.952-191-73.952z'/></svg></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.95444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">λ</span></span></span><span class="svg-align" style="top:-3.69444em;"><span class="pstrut" style="height:3em;"></span><span style="height:0.26em;"><svg width='100%' height='0.26em' viewBox='0 0 600 260' preserveAspectRatio='none'><path d='M200 55.538c-77 0-168 73.953-177 73.953-3 0-7-2.175-9-5.437L2 97c-1-2-2-4-2-6 0-4 2-7 5-9l20-12C116 12 171 0 207 0c86 0 114 68 191 68 78 0 168-68 177-68 4 0 7 2 9 5l12 19c1 2.175 2 4.35 2 6.525 0 4.35-2 7.613-5 9.788l-19 13.05c-92 63.077-116.937 75.308-183 76.128-68.267.847-113-73.952-191-73.952z'/></svg></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">K</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><span class="mrel"><span class="mord"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="rlap"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mrel"></span></span><span class="fix"></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>；剩余的所有特征值设为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mover accent="true"><mi>λ</mi><mo stretchy="true">~</mo></mover><mrow><mi>K</mi><mo>+</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mover accent="true"><mi>λ</mi><mo stretchy="true">~</mo></mover><mrow><mi>K</mi><mo>+</mo><mn>2</mn></mrow></msub><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><msub><mover accent="true"><mi>λ</mi><mo stretchy="true">~</mo></mover><mi>M</mi></msub><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">\widetilde{\lambda}_{K+1},\widetilde{\lambda}_{K+2},\cdots,\widetilde{\lambda}_M=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.162771em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.95444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">λ</span></span></span><span class="svg-align" style="top:-3.69444em;"><span class="pstrut" style="height:3em;"></span><span style="height:0.26em;"><svg width='100%' height='0.26em' viewBox='0 0 600 260' preserveAspectRatio='none'><path d='M200 55.538c-77 0-168 73.953-177 73.953-3 0-7-2.175-9-5.437L2 97c-1-2-2-4-2-6 0-4 2-7 5-9l20-12C116 12 171 0 207 0c86 0 114 68 191 68 78 0 168-68 177-68 4 0 7 2 9 5l12 19c1 2.175 2 4.35 2 6.525 0 4.35-2 7.613-5 9.788l-19 13.05c-92 63.077-116.937 75.308-183 76.128-68.267.847-113-73.952-191-73.952z'/></svg></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328331em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">K</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.95444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">λ</span></span></span><span class="svg-align" style="top:-3.69444em;"><span class="pstrut" style="height:3em;"></span><span style="height:0.26em;"><svg width='100%' height='0.26em' viewBox='0 0 600 260' preserveAspectRatio='none'><path d='M200 55.538c-77 0-168 73.953-177 73.953-3 0-7-2.175-9-5.437L2 97c-1-2-2-4-2-6 0-4 2-7 5-9l20-12C116 12 171 0 207 0c86 0 114 68 191 68 78 0 168-68 177-68 4 0 7 2 9 5l12 19c1 2.175 2 4.35 2 6.525 0 4.35-2 7.613-5 9.788l-19 13.05c-92 63.077-116.937 75.308-183 76.128-68.267.847-113-73.952-191-73.952z'/></svg></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328331em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">K</span><span class="mbin mtight">+</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.95444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">λ</span></span></span><span class="svg-align" style="top:-3.69444em;"><span class="pstrut" style="height:3em;"></span><span style="height:0.26em;"><svg width='100%' height='0.26em' viewBox='0 0 600 260' preserveAspectRatio='none'><path d='M200 55.538c-77 0-168 73.953-177 73.953-3 0-7-2.175-9-5.437L2 97c-1-2-2-4-2-6 0-4 2-7 5-9l20-12C116 12 171 0 207 0c86 0 114 68 191 68 78 0 168-68 177-68 4 0 7 2 9 5l12 19c1 2.175 2 4.35 2 6.525 0 4.35-2 7.613-5 9.788l-19 13.05c-92 63.077-116.937 75.308-183 76.128-68.267.847-113-73.952-191-73.952z'/></svg></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>。</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo stretchy="false">(</mo><mi>A</mi><msub><mi>R</mi><mi>s</mi></msub><msup><mi>A</mi><mi>H</mi></msup><mo stretchy="false">)</mo><msub><mi>u</mi><mi>i</mi></msub><mo>=</mo><msub><mover accent="true"><mi>λ</mi><mo stretchy="true">~</mo></mover><mi>i</mi></msub><msub><mi>u</mi><mi>i</mi></msub><mo separator="true">,</mo><mi>i</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><mi>K</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo stretchy="false">(</mo><mi>A</mi><msub><mi>R</mi><mi>s</mi></msub><msup><mi>A</mi><mi>H</mi></msup><mo stretchy="false">)</mo><msub><mi>u</mi><mi>i</mi></msub><mo>=</mo><msub><mover accent="true"><mi>λ</mi><mo stretchy="true">~</mo></mover><mi>i</mi></msub><msub><mi>u</mi><mi>i</mi></msub><mo separator="true">,</mo><mi>i</mi><mo>=</mo><mrow><mi>K</mi><mo>+</mo><mn>1</mn></mrow><mo separator="true">,</mo><mi>K</mi><mo>+</mo><mn>2</mn><mo separator="true">,</mo><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><mi>M</mi></mrow></mstyle></mtd></mtr></mtable></mrow><annotation encoding="application/x-tex">\begin{cases} (AR_sA^H)u_i=\widetilde{\lambda}_iu_i,i=1,2,,\cdots,K\\ (AR_sA^H)u_i=\widetilde{\lambda}_iu_i,i={K+1},K+2,,\cdots,M \end{cases}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.0000299999999998em;vertical-align:-1.25003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mopen">(</span><span class="mord mathdefault">A</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.95444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">λ</span></span></span><span class="svg-align" style="top:-3.69444em;"><span class="pstrut" style="height:3em;"></span><span style="height:0.26em;"><svg width='100%' height='0.26em' viewBox='0 0 600 260' preserveAspectRatio='none'><path d='M200 55.538c-77 0-168 73.953-177 73.953-3 0-7-2.175-9-5.437L2 97c-1-2-2-4-2-6 0-4 2-7 5-9l20-12C116 12 171 0 207 0c86 0 114 68 191 68 78 0 168-68 177-68 4 0 7 2 9 5l12 19c1 2.175 2 4.35 2 6.525 0 4.35-2 7.613-5 9.788l-19 13.05c-92 63.077-116.937 75.308-183 76.128-68.267.847-113-73.952-191-73.952z'/></svg></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mopen">(</span><span class="mord mathdefault">A</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.95444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">λ</span></span></span><span class="svg-align" style="top:-3.69444em;"><span class="pstrut" style="height:3em;"></span><span style="height:0.26em;"><svg width='100%' height='0.26em' viewBox='0 0 600 260' preserveAspectRatio='none'><path d='M200 55.538c-77 0-168 73.953-177 73.953-3 0-7-2.175-9-5.437L2 97c-1-2-2-4-2-6 0-4 2-7 5-9l20-12C116 12 171 0 207 0c86 0 114 68 191 68 78 0 168-68 177-68 4 0 7 2 9 5l12 19c1 2.175 2 4.35 2 6.525 0 4.35-2 7.613-5 9.788l-19 13.05c-92 63.077-116.937 75.308-183 76.128-68.267.847-113-73.952-191-73.952z'/></svg></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p><p>对上式同时右乘<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>u</mi><mi>H</mi></msup></mrow><annotation encoding="application/x-tex">u^H</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span></span></span></span></span></span></span></span></span></span></span>，有</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>A</mi><msub><mi>R</mi><mi>s</mi></msub><msup><mi>A</mi><mi>H</mi></msup><mo stretchy="false">)</mo><msub><mi>u</mi><mi>i</mi></msub><msup><msub><mi>u</mi><mi>i</mi></msub><mi>H</mi></msup><mo>=</mo><msub><mover accent="true"><mi>λ</mi><mo stretchy="true">~</mo></mover><mi>i</mi></msub><msub><mi>u</mi><mi>i</mi></msub><msup><msub><mi>u</mi><mi>i</mi></msub><mi>H</mi></msup><mo separator="true">,</mo><mi>i</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><mi>M</mi></mrow><annotation encoding="application/x-tex">(AR_sA^H)u_i{u_i}^H=\widetilde{\lambda}_iu_i{u_i}^H,i=1,2,,\cdots,M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0913309999999998em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">A</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.14888em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.95444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">λ</span></span></span><span class="svg-align" style="top:-3.69444em;"><span class="pstrut" style="height:3em;"></span><span style="height:0.26em;"><svg width='100%' height='0.26em' viewBox='0 0 600 260' preserveAspectRatio='none'><path d='M200 55.538c-77 0-168 73.953-177 73.953-3 0-7-2.175-9-5.437L2 97c-1-2-2-4-2-6 0-4 2-7 5-9l20-12C116 12 171 0 207 0c86 0 114 68 191 68 78 0 168-68 177-68 4 0 7 2 9 5l12 19c1 2.175 2 4.35 2 6.525 0 4.35-2 7.613-5 9.788l-19 13.05c-92 63.077-116.937 75.308-183 76.128-68.267.847-113-73.952-191-73.952z'/></svg></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span></span></span></span></p><p>对于i取所有可能的值并且相加，可得</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>A</mi><msub><mi>R</mi><mi>s</mi></msub><msup><mi>A</mi><mi>H</mi></msup><mo stretchy="false">)</mo><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>M</mi></msubsup><msub><mi>u</mi><mi>i</mi></msub><msup><msub><mi>u</mi><mi>i</mi></msub><mi>H</mi></msup><mo>=</mo><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>M</mi></msubsup><msub><mover accent="true"><mi>λ</mi><mo stretchy="true">~</mo></mover><mi>i</mi></msub><msub><mi>u</mi><mi>i</mi></msub><msup><msub><mi>u</mi><mi>i</mi></msub><mi>H</mi></msup><mo separator="true">,</mo><mi>i</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><mi>M</mi></mrow><annotation encoding="application/x-tex">(AR_sA^H)\sum_{i=1}^Mu_i{u_i}^H=\sum_{i=1}^M\widetilde{\lambda}_iu_i{u_i}^H,i=1,2,,\cdots,M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2809409999999999em;vertical-align:-0.29971000000000003em;"></span><span class="mopen">(</span><span class="mord mathdefault">A</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.981231em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.2809409999999999em;vertical-align:-0.29971000000000003em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.981231em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.95444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">λ</span></span></span><span class="svg-align" style="top:-3.69444em;"><span class="pstrut" style="height:3em;"></span><span style="height:0.26em;"><svg width='100%' height='0.26em' viewBox='0 0 600 260' preserveAspectRatio='none'><path d='M200 55.538c-77 0-168 73.953-177 73.953-3 0-7-2.175-9-5.437L2 97c-1-2-2-4-2-6 0-4 2-7 5-9l20-12C116 12 171 0 207 0c86 0 114 68 191 68 78 0 168-68 177-68 4 0 7 2 9 5l12 19c1 2.175 2 4.35 2 6.525 0 4.35-2 7.613-5 9.788l-19 13.05c-92 63.077-116.937 75.308-183 76.128-68.267.847-113-73.952-191-73.952z'/></svg></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span></span></span></span></p><p>由于<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>u</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>u</mi><mn>2</mn></msub><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><msub><mi>u</mi><mi>M</mi></msub></mrow><annotation encoding="application/x-tex">u_1,u_2,\cdots,u_M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>是对应正交归一化矩阵，即有</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>M</mi></msubsup><msub><mi>u</mi><mi>i</mi></msub><msup><msub><mi>u</mi><mi>i</mi></msub><mi>H</mi></msup><mo>=</mo><mi>I</mi></mrow><annotation encoding="application/x-tex">\sum_{i=1}^Mu_i{u_i}^H=I</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2809409999999999em;vertical-align:-0.29971000000000003em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.981231em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span></span></span></span></p><p>即有</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><msub><mi>R</mi><mi>s</mi></msub><msup><mi>A</mi><mi>H</mi></msup><mo>=</mo><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>M</mi></msubsup><msub><mover accent="true"><mi>λ</mi><mo stretchy="true">~</mo></mover><mi>i</mi></msub><msub><mi>u</mi><mi>i</mi></msub><msup><msub><mi>u</mi><mi>i</mi></msub><mi>H</mi></msup><mo>=</mo><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>K</mi></msubsup><msub><mover accent="true"><mi>λ</mi><mo stretchy="true">~</mo></mover><mi>i</mi></msub><msub><mi>u</mi><mi>i</mi></msub><msup><msub><mi>u</mi><mi>i</mi></msub><mi>H</mi></msup></mrow><annotation encoding="application/x-tex">AR_sA^H=\sum_{i=1}^M\widetilde{\lambda}_iu_i{u_i}^H=\sum_{i=1}^K\widetilde{\lambda}_iu_i{u_i}^H</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.991331em;vertical-align:-0.15em;"></span><span class="mord mathdefault">A</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.2809409999999999em;vertical-align:-0.29971000000000003em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.981231em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.95444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">λ</span></span></span><span class="svg-align" style="top:-3.69444em;"><span class="pstrut" style="height:3em;"></span><span style="height:0.26em;"><svg width='100%' height='0.26em' viewBox='0 0 600 260' preserveAspectRatio='none'><path d='M200 55.538c-77 0-168 73.953-177 73.953-3 0-7-2.175-9-5.437L2 97c-1-2-2-4-2-6 0-4 2-7 5-9l20-12C116 12 171 0 207 0c86 0 114 68 191 68 78 0 168-68 177-68 4 0 7 2 9 5l12 19c1 2.175 2 4.35 2 6.525 0 4.35-2 7.613-5 9.788l-19 13.05c-92 63.077-116.937 75.308-183 76.128-68.267.847-113-73.952-191-73.952z'/></svg></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.2809409999999999em;vertical-align:-0.29971000000000003em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.981231em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">K</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.95444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">λ</span></span></span><span class="svg-align" style="top:-3.69444em;"><span class="pstrut" style="height:3em;"></span><span style="height:0.26em;"><svg width='100%' height='0.26em' viewBox='0 0 600 260' preserveAspectRatio='none'><path d='M200 55.538c-77 0-168 73.953-177 73.953-3 0-7-2.175-9-5.437L2 97c-1-2-2-4-2-6 0-4 2-7 5-9l20-12C116 12 171 0 207 0c86 0 114 68 191 68 78 0 168-68 177-68 4 0 7 2 9 5l12 19c1 2.175 2 4.35 2 6.525 0 4.35-2 7.613-5 9.788l-19 13.05c-92 63.077-116.937 75.308-183 76.128-68.267.847-113-73.952-191-73.952z'/></svg></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span></span></span></span></span></span></span></span></span></span></span></p><p>所以，协方差矩阵（自相关矩阵）R可表示为</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>R</mi><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>K</mi></munderover><msub><mover accent="true"><mi>λ</mi><mo stretchy="true">~</mo></mover><mi>i</mi></msub><msub><mi>u</mi><mi>i</mi></msub><msup><msub><mi>u</mi><mi>i</mi></msub><mi>H</mi></msup><mo>+</mo><msubsup><mi>σ</mi><mi>v</mi><mn>2</mn></msubsup><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>M</mi></munderover><msub><mi>u</mi><mi>i</mi></msub><msup><msub><mi>u</mi><mi>i</mi></msub><mi>H</mi></msup><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>K</mi></munderover><mo stretchy="false">(</mo><msub><mover accent="true"><mi>λ</mi><mo stretchy="true">~</mo></mover><mi>i</mi></msub><mo>+</mo><msubsup><mi>σ</mi><mi>v</mi><mn>2</mn></msubsup><mo stretchy="false">)</mo><msub><mi>u</mi><mi>i</mi></msub><msup><msub><mi>u</mi><mi>i</mi></msub><mi>H</mi></msup><mo>+</mo><msubsup><mi>σ</mi><mi>v</mi><mn>2</mn></msubsup><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mi>K</mi><mo>+</mo><mn>1</mn></mrow><mi>M</mi></munderover><msub><mi>u</mi><mi>i</mi></msub><msup><msub><mi>u</mi><mi>i</mi></msub><mi>H</mi></msup><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>M</mi></munderover><msub><mi>λ</mi><mi>i</mi></msub><msub><mi>u</mi><mi>i</mi></msub><msup><msub><mi>u</mi><mi>i</mi></msub><mi>H</mi></msup></mrow><annotation encoding="application/x-tex">R=\sum_{i=1}^K\widetilde{\lambda}_iu_i{u_i}^H+\sigma_v^2\sum_{i=1}^Mu_i{u_i}^H=\sum_{i=1}^K(\widetilde{\lambda}_i+\sigma_v^2)u_i{u_i}^H+\sigma_v^2\sum_{i=K+1}^Mu_i{u_i}^H=\sum_{i=1}^M{\lambda}_iu_i{u_i}^H</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.106005em;vertical-align:-1.277669em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">K</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.95444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">λ</span></span></span><span class="svg-align" style="top:-3.69444em;"><span class="pstrut" style="height:3em;"></span><span style="height:0.26em;"><svg width='100%' height='0.26em' viewBox='0 0 600 260' preserveAspectRatio='none'><path d='M200 55.538c-77 0-168 73.953-177 73.953-3 0-7-2.175-9-5.437L2 97c-1-2-2-4-2-6 0-4 2-7 5-9l20-12C116 12 171 0 207 0c86 0 114 68 191 68 78 0 168-68 177-68 4 0 7 2 9 5l12 19c1 2.175 2 4.35 2 6.525 0 4.35-2 7.613-5 9.788l-19 13.05c-92 63.077-116.937 75.308-183 76.128-68.267.847-113-73.952-191-73.952z'/></svg></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:3.106005em;vertical-align:-1.277669em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.106005em;vertical-align:-1.277669em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">K</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.95444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">λ</span></span></span><span class="svg-align" style="top:-3.69444em;"><span class="pstrut" style="height:3em;"></span><span style="height:0.26em;"><svg width='100%' height='0.26em' viewBox='0 0 600 260' preserveAspectRatio='none'><path d='M200 55.538c-77 0-168 73.953-177 73.953-3 0-7-2.175-9-5.437L2 97c-1-2-2-4-2-6 0-4 2-7 5-9l20-12C116 12 171 0 207 0c86 0 114 68 191 68 78 0 168-68 177-68 4 0 7 2 9 5l12 19c1 2.175 2 4.35 2 6.525 0 4.35-2 7.613-5 9.788l-19 13.05c-92 63.077-116.937 75.308-183 76.128-68.267.847-113-73.952-191-73.952z'/></svg></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1413309999999999em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:3.1810030000000005em;vertical-align:-1.352667em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.8556639999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mathdefault mtight" style="margin-right:0.07153em;">K</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.352667em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.106005em;vertical-align:-1.277669em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">λ</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span></span></span></span></span></span></span></span></span></span></span></span></p><blockquote><p>式中<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>λ</mi><mi>i</mi></msub><mo>=</mo><msub><mover accent="true"><mi>λ</mi><mo stretchy="true">~</mo></mover><mi>i</mi></msub><mo>+</mo><msubsup><mi>σ</mi><mi>v</mi><mn>2</mn></msubsup><mo separator="true">,</mo><mi>i</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><mi>K</mi></mrow><annotation encoding="application/x-tex">{\lambda}_i=\widetilde{\lambda}_i+\sigma_v^2,i=1,2,\cdots,K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">λ</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1044399999999999em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.95444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">λ</span></span></span><span class="svg-align" style="top:-3.69444em;"><span class="pstrut" style="height:3em;"></span><span style="height:0.26em;"><svg width='100%' height='0.26em' viewBox='0 0 600 260' preserveAspectRatio='none'><path d='M200 55.538c-77 0-168 73.953-177 73.953-3 0-7-2.175-9-5.437L2 97c-1-2-2-4-2-6 0-4 2-7 5-9l20-12C116 12 171 0 207 0c86 0 114 68 191 68 78 0 168-68 177-68 4 0 7 2 9 5l12 19c1 2.175 2 4.35 2 6.525 0 4.35-2 7.613-5 9.788l-19 13.05c-92 63.077-116.937 75.308-183 76.128-68.267.847-113-73.952-191-73.952z'/></svg></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.061108em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>λ</mi><mi>i</mi></msub><mo>=</mo><msubsup><mi>σ</mi><mi>v</mi><mn>2</mn></msubsup><mo separator="true">,</mo><mi>i</mi><mo>=</mo><mi>K</mi><mo>+</mo><mn>1</mn><mi mathvariant="normal">，</mi><mi>K</mi><mo>+</mo><mi mathvariant="normal">，</mi><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><mi>M</mi></mrow><annotation encoding="application/x-tex">{\lambda}_i=\sigma_v^2,i=K+1，K+，\cdots,M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">λ</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.061108em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mord cjk_fallback">，</span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord cjk_fallback">，</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span></span></span></span></p></blockquote><blockquote><p>经标准化的样本数据的协方差矩阵就是原始样本数据的样本矩阵</p><p>标准化是指正态化，即将原始数据处理成均值为0，方差为1的标准数据。</p></blockquote><blockquote><p>R的M个特征值中与信号有关的仅有K个，分别是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>λ</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>λ</mi><mn>2</mn></msub><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><msub><mi>λ</mi><mi>K</mi></msub></mrow><annotation encoding="application/x-tex">{\lambda}_1,{\lambda}_2,\cdots,{\lambda}_K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">λ</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">λ</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">λ</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">K</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>,其余的M-K个特征值<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>λ</mi><mrow><mi>K</mi><mo>+</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>λ</mi><mrow><mi>K</mi><mo>+</mo><mn>2</mn></mrow></msub><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><msub><mi>λ</mi><mi>M</mi></msub></mrow><annotation encoding="application/x-tex">{\lambda}_{K+1},{\lambda}_{K+2},\cdots,{\lambda}_M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.902771em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">λ</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328331em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">K</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">λ</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328331em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">K</span><span class="mbin mtight">+</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">λ</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>只与噪声有关。</p></blockquote><p>信号子空间用符号<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>E</mi><mi>s</mi></msub></mrow><annotation encoding="application/x-tex">E_s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>所表示，由<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>λ</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>λ</mi><mn>2</mn></msub><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><msub><mi>λ</mi><mi>K</mi></msub></mrow><annotation encoding="application/x-tex">{\lambda}_1,{\lambda}_2,\cdots,{\lambda}_K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">λ</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">λ</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">λ</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">K</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>对应的特征向量<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>u</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>u</mi><mn>2</mn></msub><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><msub><mi>u</mi><mi>K</mi></msub></mrow><annotation encoding="application/x-tex">u_1,u_2,\cdots,u_K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">K</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>生成的子空间，即</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>E</mi><mi>s</mi></msub><mo>=</mo><mi>s</mi><mi>p</mi><mi>a</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">E_s=span</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault">p</span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span></span></span></span>{<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>u</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>u</mi><mn>2</mn></msub><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><msub><mi>u</mi><mi>K</mi></msub></mrow><annotation encoding="application/x-tex">u_1,u_2,\cdots,u_K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">K</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>}</p><blockquote><p>信号子空间的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>λ</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>λ</mi><mn>2</mn></msub><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><msub><mi>λ</mi><mi>K</mi></msub></mrow><annotation encoding="application/x-tex">{\lambda}_1,{\lambda}_2,\cdots,{\lambda}_K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">λ</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">λ</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">λ</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">K</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>表示的是大特征值，噪声子空间的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>λ</mi><mrow><mi>K</mi><mo>+</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>λ</mi><mrow><mi>K</mi><mo>+</mo><mn>2</mn></mrow></msub><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><msub><mi>λ</mi><mi>M</mi></msub></mrow><annotation encoding="application/x-tex">{\lambda}_{K+1},{\lambda}_{K+2},\cdots,{\lambda}_M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.902771em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">λ</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328331em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">K</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">λ</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328331em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">K</span><span class="mbin mtight">+</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">λ</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>表示的是小特征值。</p></blockquote><p>噪声子空间用符号<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>E</mi><mi>N</mi></msub></mrow><annotation encoding="application/x-tex">E_N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>所表示，由<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>λ</mi><mrow><mi>K</mi><mo>+</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>λ</mi><mrow><mi>K</mi><mo>+</mo><mn>2</mn></mrow></msub><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><msub><mi>λ</mi><mi>M</mi></msub></mrow><annotation encoding="application/x-tex">{\lambda}_{K+1},{\lambda}_{K+2},\cdots,{\lambda}_M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.902771em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">λ</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328331em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">K</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">λ</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328331em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">K</span><span class="mbin mtight">+</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">λ</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>对应的特征向量<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>u</mi><mrow><mi>K</mi><mo>+</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><msub><mi>u</mi><mi>M</mi></msub></mrow><annotation encoding="application/x-tex">u_{K+1},\cdots,u_M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.638891em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328331em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">K</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>生成的子空间，即</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>E</mi><mi>N</mi></msub><mo>=</mo><mi>s</mi><mi>p</mi><mi>a</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">E_N=span</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault">p</span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span></span></span></span>{<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>u</mi><mrow><mi>K</mi><mo>+</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>u</mi><mrow><mi>K</mi><mo>+</mo><mn>2</mn></mrow></msub><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><msub><mi>u</mi><mi>M</mi></msub></mrow><annotation encoding="application/x-tex">u_{K+1},u_{K+2},\cdots,u_M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.638891em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328331em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">K</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328331em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">K</span><span class="mbin mtight">+</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>}</p><p><font color='red'><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>E</mi><mi>s</mi></msub></mrow><annotation encoding="application/x-tex">E_s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>既与信号有关，也与噪声有关；<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>E</mi><mi>N</mi></msub></mrow><annotation encoding="application/x-tex">E_N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>仅与噪声有关。</font></p><p>定义矩阵</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>G</mi><mo>=</mo><mo stretchy="false">[</mo><msub><mi>u</mi><mrow><mi>k</mi><mo>+</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>u</mi><mrow><mi>k</mi><mo>+</mo><mn>2</mn></mrow></msub><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><msub><mi>u</mi><mi>M</mi></msub><mo stretchy="false">]</mo><mo>∈</mo><msup><mi>C</mi><mrow><mi>M</mi><mo>×</mo><mi>M</mi><mo>−</mo><mi>k</mi></mrow></msup></mrow><annotation encoding="application/x-tex">G=[u_{k+1},u_{k+2},\cdots,u_M]\in C^{M \times M-k}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">G</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mbin mtight">+</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8491079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span><span class="mbin mtight">×</span><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span></span></span></span></span></p><blockquote><p>G矩阵相当于噪声子空间构成的矩阵。</p></blockquote><p>由于A是列满秩矩阵，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>R</mi><mi>s</mi></msub></mrow><annotation encoding="application/x-tex">R_s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>是满秩矩阵，所以有</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>A</mi><mi>H</mi></msup><mi>G</mi><mo>=</mo><mn>0</mn><mspace linebreak="newline"></mspace><mo>⇓</mo><mspace linebreak="newline"></mspace><msup><mi>G</mi><mi>H</mi></msup><mi>A</mi><mo>=</mo><msup><mi>G</mi><mi>H</mi></msup><mo stretchy="false">[</mo><mi>a</mi><mo stretchy="false">(</mo><msub><mi>θ</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mspace width="1em"/><mi>a</mi><mo stretchy="false">(</mo><msub><mi>θ</mi><mn>2</mn></msub><mo stretchy="false">)</mo><mspace width="1em"/><mo>⋯</mo><mspace width="1em"/><mi>a</mi><mo stretchy="false">(</mo><msub><mi>θ</mi><mi>k</mi></msub><mo stretchy="false">)</mo><mo stretchy="false">]</mo><mo>=</mo><mn>0</mn><mspace linebreak="newline"></mspace><mo>⇓</mo><mspace linebreak="newline"></mspace><msup><mi>G</mi><mi>H</mi></msup><mi>a</mi><mo stretchy="false">(</mo><msub><mi>θ</mi><mi>k</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mn>0</mn><mo separator="true">,</mo><mspace width="1em"/><mi>k</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><mi>K</mi><mi mathvariant="normal">.</mi></mrow><annotation encoding="application/x-tex">A^HG=0     \\      \Downarrow \\    G^HA=G^H[a(\theta_1)\quad a(\theta_2) \quad \cdots \quad a(\theta_k)]=0\\    \Downarrow \\    G^Ha(\theta_k)=0, \quad k=1,2,\cdots,K.</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8913309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span></span></span></span></span></span></span></span><span class="mord mathdefault">G</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mrel">⇓</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8913309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span></span></span></span></span></span></span></span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1413309999999999em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span></span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathdefault">a</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathdefault">a</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:1em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathdefault">a</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mrel">⇓</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.1413309999999999em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span></span></span></span></span></span></span></span><span class="mord mathdefault">a</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="mord">.</span></span></span></span></span></p><blockquote><p>其中<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mo stretchy="false">(</mo><msub><mi>θ</mi><mi>k</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">a(\theta_k)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">a</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>是阵列导向向量。</p></blockquote><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi>R</mi><mo>^</mo></mover><mo>=</mo><mfrac><mn>1</mn><mi>N</mi></mfrac><munderover><mo>∑</mo><mrow><mi>n</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><mi>x</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><msup><mi>x</mi><mi>H</mi></msup><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\hat{R}=\frac{1}{N}\sum_{n=1}^N x(n)x^H(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9467699999999999em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9467699999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span></span></span><span style="top:-3.25233em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;">^</span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.0954490000000003em;vertical-align:-1.267113em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.882887em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.267113em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">x</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span></span></p><p>可得到MUSIC谱估计为</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>P</mi><mrow><mi>M</mi><mi>U</mi><mi>S</mi><mi>I</mi><mi>C</mi></mrow></msub><mo stretchy="false">(</mo><mi>θ</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><msup><mi>a</mi><mi>H</mi></msup><mo stretchy="false">(</mo><mi>θ</mi><mo stretchy="false">)</mo><mover accent="true"><mi>G</mi><mo>^</mo></mover><msup><mover accent="true"><mi>G</mi><mo>^</mo></mover><mi>H</mi></msup><mi>a</mi><mo stretchy="false">(</mo><mi>θ</mi><mo stretchy="false">)</mo></mrow></mfrac><mo separator="true">,</mo><mspace width="1em"/><mi>θ</mi><mo>∈</mo><mo stretchy="false">(</mo><mo>−</mo><mfrac><mi>π</mi><mn>2</mn></mfrac><mo separator="true">,</mo><mfrac><mi>π</mi><mn>2</mn></mfrac><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P_{MUSIC}(\theta)=\frac{1}{a^H(\theta) \hat{G} \hat{G}^H a(\theta)} ,\quad \theta \in (-\frac{\pi}{2},\frac{\pi}{2})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span><span class="mord mathdefault mtight" style="margin-right:0.10903em;">U</span><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span><span class="mord mathdefault mtight" style="margin-right:0.07847em;">I</span><span class="mord mathdefault mtight" style="margin-right:0.07153em;">C</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.40821em;vertical-align:-1.08677em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.16323em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.767331em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9467699999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">G</span></span></span><span style="top:-3.25233em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;">^</span></span></span></span></span></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9467699999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">G</span></span></span><span style="top:-3.25233em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;">^</span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.767331em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span></span></span></span></span></span></span></span><span class="mord mathdefault">a</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.08677em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.7935600000000003em;vertical-align:-0.686em;"></span><span class="mopen">(</span><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.10756em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">π</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.10756em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">π</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span></span></span></span></span></p><blockquote><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi>G</mi><mo>^</mo></mover></mrow><annotation encoding="application/x-tex">\hat{G}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9467699999999999em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9467699999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">G</span></span></span><span style="top:-3.25233em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;">^</span></span></span></span></span></span></span></span></span>是由自相关矩阵<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi>R</mi><mo>^</mo></mover></mrow><annotation encoding="application/x-tex">\hat{R}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9467699999999999em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9467699999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span></span></span><span style="top:-3.25233em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;">^</span></span></span></span></span></span></span></span></span>的特征值分解而得到。</p></blockquote><blockquote><p><font color='red'>在空间谱域求取谱函数最大值，其谱峰对应的角度即是来波方向角的估计值。</font></p></blockquote><div class='tip warning'>    <p>线阵的信号参数搜索范围为[-90°，90°]<p>    <p>面阵的信号参数搜索范围为[-180°，180°]<p></div><p>由于实际中要估计信号源的个数，因此估计的越准确误差越小，所以估计信号源的算法也很重要。</p><div class='tip warning'><p>信号源估计算法还未理解透彻，待续....<p></div><p><font color='blue'>AIC准则估计信号源个数的算法为</font></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><mi>I</mi><mi>C</mi><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo><mo>=</mo><mo>−</mo><mn>2</mn><mi>l</mi><mi>n</mi><mo stretchy="false">[</mo><mo stretchy="false">(</mo><munderover><mo>∏</mo><mrow><mi>i</mi><mo>=</mo><mi>k</mi><mo>+</mo><mn>1</mn></mrow><mi>M</mi></munderover><msubsup><mi>λ</mi><mi>i</mi><mfrac><mn>1</mn><mrow><mi>M</mi><mo>−</mo><mi>k</mi></mrow></mfrac></msubsup><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mo stretchy="false">(</mo><mfrac><mn>1</mn><mrow><mi>M</mi><mo>−</mo><mi>k</mi></mrow></mfrac><mo stretchy="false">)</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mi>k</mi><mo>+</mo><mn>1</mn></mrow><mi>M</mi></munderover><msub><mi>λ</mi><mi>i</mi></msub><msup><mo stretchy="false">]</mo><mrow><mo stretchy="false">(</mo><mi>M</mi><mo>−</mo><mi>k</mi><mo stretchy="false">)</mo><mi>N</mi></mrow></msup><mo>+</mo><mn>2</mn><mi>k</mi><mo stretchy="false">(</mo><mn>2</mn><mi>M</mi><mo>−</mo><mi>K</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">AIC(k)=-2ln[(\prod_{i=k+1}^{M} \lambda_{i}^{\frac{1}{M-k}})/(\frac{1}{M-k})\sum_{i=k+1}^{M} \lambda_i]^{(M-k)N}+2k(2M-K)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.1887800000000004em;vertical-align:-1.360444em;"></span><span class="mord">−</span><span class="mord">2</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">n</span><span class="mopen">[</span><span class="mopen">(</span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.8478869999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∏</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.360444em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.218285em;"><span style="top:-2.7231360000000002em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span style="top:-3.6272650000000004em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8443142857142858em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span style="top:-3.2255em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.384em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.40352142857142853em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.27686399999999994em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord">/</span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693300000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.8478869999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.360444em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mclose mtight">)</span><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mopen">(</span><span class="mord">2</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="mclose">)</span></span></span></span></span></p><p>信号源个数是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mspace width="1em"/><mspace width="1em"/><mspace width="1em"/><mover accent="true"><mi>K</mi><mo>^</mo></mover><mo>=</mo><mi>m</mi><mi>i</mi><mi>n</mi><mo stretchy="false">{</mo><mi>A</mi><mi>I</mi><mi>C</mi><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>k</mi><mo>=</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo separator="true">,</mo><mo>⋯</mo><mi>M</mi><mo>−</mo><mn>1</mn><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\quad \quad \quad \hat{K}=min\{AIC(k),k=0,1,\cdots M-1\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9467699999999999em;vertical-align:0em;"></span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:1em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9467699999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">K</span></span></span><span style="top:-3.25233em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">m</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mopen">{</span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">}</span></span></span></span></p><p><font color='blue'>MDL准则估计算法可表示为</font></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>M</mi><mi>D</mi><mi>L</mi><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo><mo>=</mo><mo>−</mo><mi>l</mi><mi>n</mi><mo stretchy="false">[</mo><mo stretchy="false">(</mo><munderover><mo>∏</mo><mrow><mi>i</mi><mo>=</mo><mi>k</mi><mo>+</mo><mn>1</mn></mrow><mi>M</mi></munderover><msubsup><mi>λ</mi><mi>i</mi><mfrac><mn>1</mn><mrow><mi>M</mi><mo>−</mo><mi>k</mi></mrow></mfrac></msubsup><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mo stretchy="false">(</mo><mfrac><mn>1</mn><mrow><mi>M</mi><mo>−</mo><mi>k</mi></mrow></mfrac><mo stretchy="false">)</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mi>k</mi><mo>+</mo><mn>1</mn></mrow><mi>M</mi></munderover><msub><mi>λ</mi><mi>i</mi></msub><msup><mo stretchy="false">]</mo><mrow><mo stretchy="false">(</mo><mi>M</mi><mo>−</mo><mi>k</mi><mo stretchy="false">)</mo><mi>N</mi></mrow></msup><mo>+</mo><mfrac><mi>k</mi><mn>2</mn></mfrac><mo stretchy="false">(</mo><mn>2</mn><mi>M</mi><mo>−</mo><mi>k</mi><mo stretchy="false">)</mo><mi>l</mi><mi>n</mi><mi>N</mi></mrow><annotation encoding="application/x-tex">MDL(k)=-ln[(\prod_{i=k+1}^M \lambda_{i}^{\frac{1}{M-k}})/(\frac{1}{M-k})\sum_{i=k+1}^M \lambda_i]^{(M-k)N} +\frac{k}{2}(2M-k)lnN</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord mathdefault">L</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.1887800000000004em;vertical-align:-1.360444em;"></span><span class="mord">−</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">n</span><span class="mopen">[</span><span class="mopen">(</span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.8478869999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∏</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.360444em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.218285em;"><span style="top:-2.7231360000000002em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span style="top:-3.6272650000000004em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8443142857142858em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span style="top:-3.2255em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.384em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.40352142857142853em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.27686399999999994em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord">/</span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693300000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.8478869999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.360444em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mclose mtight">)</span><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.05744em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mord">2</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mclose">)</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">n</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span></span></span></p><p>信号源个数是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mspace width="1em"/><mspace width="1em"/><mspace width="1em"/><mover accent="true"><mi>K</mi><mo>^</mo></mover><mo>=</mo><mi>m</mi><mi>i</mi><mi>n</mi><mo stretchy="false">{</mo><mi>M</mi><mi>D</mi><mi>L</mi><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>k</mi><mo>=</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><mi>M</mi><mo>−</mo><mn>1</mn><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\quad \quad \quad \hat{K}=min \{MDL(k),k=0,1,\cdots,M-1\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9467699999999999em;vertical-align:0em;"></span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:1em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9467699999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">K</span></span></span><span style="top:-3.25233em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">m</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mopen">{</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord mathdefault">L</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">}</span></span></span></span></p><h1>MATLAB仿真</h1><ol><li>采用阵元间隔为半个波长的5阵元均匀线阵，1个远场窄带信号从21°的方向入射到阵列，信号是归一化频率为0.1的纯载波，中频信号的信噪比为12dB（本小节的信噪比均指中频信号的信噪比），天线阵的采样快拍数是100。</li></ol><div class='tip warning'><p>下面这个程序，有些地方多余，需要进一步的改进<p></div><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="comment">%仿真黄永兢的仿真数据结果图2-4</span></span><br><span class="line"><span class="comment">%music算法部分，候补上MVDR算法</span></span><br><span class="line">clear all;clc;</span><br><span class="line">derad = <span class="built_in">pi</span>/<span class="number">180</span>;<span class="comment">%角度转换弧度</span></span><br><span class="line">N = <span class="number">5</span>;<span class="comment">%阵元个数</span></span><br><span class="line">M = <span class="number">1</span>;<span class="comment">%信源数目</span></span><br><span class="line">theta = [<span class="number">21</span>];<span class="comment">%待估计的角度</span></span><br><span class="line">snr = <span class="number">12</span>;<span class="comment">%信噪比</span></span><br><span class="line">K = <span class="number">100</span>;<span class="comment">%快拍数</span></span><br><span class="line"></span><br><span class="line"><span class="comment">%%%阵元间隔为半个波长的5阵元均匀线阵</span></span><br><span class="line"><span class="comment">%syms q;%设波长为q</span></span><br><span class="line">q = <span class="number">0.5</span>;</span><br><span class="line">d = <span class="number">0</span>:q:(N<span class="number">-1</span>)*q;<span class="comment">%设置步长</span></span><br><span class="line">A=<span class="built_in">exp</span>(<span class="number">-1</span><span class="built_in">i</span>*<span class="number">2</span>*<span class="built_in">pi</span>*d.&#x27;*<span class="built_in">sin</span>(theta*derad));<span class="comment">%方向矢量</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">%%%构建信号模型</span></span><br><span class="line"><span class="comment">%实际上还是基础的公式</span></span><br><span class="line"><span class="comment">%X = A*S+noise;</span></span><br><span class="line">S = <span class="built_in">randn</span>(M,K);<span class="comment">%信源信号   100快拍数划分信号</span></span><br><span class="line">X = A*S;</span><br><span class="line">X1 = awgn(X,snr,<span class="string">&#x27;measured&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">%计算协方差矩阵</span></span><br><span class="line">Rxx = X1*X1&#x27;/K;</span><br><span class="line"><span class="comment">%&quot;.&#x27;&quot;是转置，&quot;&#x27;&quot;是共轭转置</span></span><br><span class="line"><span class="comment">%特征值分解</span></span><br><span class="line">[EV,D] = eig(Rxx);<span class="comment">%特征值分解</span></span><br><span class="line"></span><br><span class="line"><span class="comment">%eig函数的用法</span></span><br><span class="line"><span class="comment">%求出的特征值会自动升序。</span></span><br><span class="line"><span class="comment">%[V,D] = eig(A)</span></span><br><span class="line"><span class="comment">%其中的V是A的特征向量，D是特征值(对角阵)</span></span><br><span class="line"></span><br><span class="line">EVA = <span class="built_in">diag</span>(D)&#x27;;<span class="comment">%取对角线的数据并共轭转置</span></span><br><span class="line">[EVA,I] = <span class="built_in">sort</span>(EVA);</span><br><span class="line"><span class="comment">%sort函数可以按从小到大排列数，默认是列排序</span></span><br><span class="line"><span class="comment">%EVA表示输出的值（按从小到大）</span></span><br><span class="line"><span class="comment">%I表示输出排序后值原来的位置，记忆特征值原来的位置，为下一步做准备</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">%这一步的作用是把特征向量按照从大到小进行排列，I的作用就是是变换后的特征向量的顺序和上一步特征值的顺序保持一致，一一对应。</span></span><br><span class="line"><span class="comment">%由于fliplr括号里面特征向量是按照从小到大的顺序，所以再通过fliplr函数进行翻转，使之变成特征值大的元素对应的特征向量按照从小到大的原则排序。</span></span><br><span class="line"><span class="comment">%处理完之后EV里的特征向量其实就变成了前面是信号子空间，后面是噪声子空间里的向量。</span></span><br><span class="line">EV = <span class="built_in">fliplr</span>(EV(:,I));<span class="comment">%对应特征矢量排序，特征向量根据特征值排列</span></span><br><span class="line"><span class="comment">%fliplr函数作用是翻转矩阵</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">%遍历每个角落，计算空间谱</span></span><br><span class="line"><span class="keyword">for</span> iang = <span class="number">1</span>:<span class="number">361</span><span class="comment">%360°全覆盖测角</span></span><br><span class="line">    <span class="built_in">angle</span>(iang)=(iang<span class="number">-181</span>)/<span class="number">2</span>;</span><br><span class="line">    phim=derad*<span class="built_in">angle</span>(iang);</span><br><span class="line">    a=<span class="built_in">exp</span>(<span class="number">-1</span><span class="built_in">i</span>*<span class="number">2</span>*<span class="built_in">pi</span>*d*<span class="built_in">sin</span>(phim)).&#x27;;</span><br><span class="line">    En=EV(:,M+<span class="number">1</span>:N);     <span class="comment">%取矩阵的第M+1到N列组成噪声子空间</span></span><br><span class="line">    Pmusic(iang)=<span class="number">1</span>/(a&#x27;*En*En&#x27;*a);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">Pmusic=<span class="built_in">abs</span>(Pmusic);<span class="comment">%提取模值</span></span><br><span class="line">Pmmax=<span class="built_in">max</span>(Pmusic);<span class="comment">%求出最大值</span></span><br><span class="line">Pmusic=<span class="number">10</span>*<span class="built_in">log10</span>(Pmusic/Pmmax);      <span class="comment">%归一化的处理</span></span><br><span class="line">h=<span class="built_in">plot</span>(<span class="built_in">angle</span>,Pmusic);</span><br><span class="line"><span class="built_in">legend</span>(<span class="string">&#x27;MUSIC&#x27;</span>)</span><br><span class="line">set(h,<span class="string">&#x27;Linewidth&#x27;</span>,<span class="number">2</span>);</span><br><span class="line">xlabel(<span class="string">&#x27;入射角/(degree)&#x27;</span>);</span><br><span class="line">ylabel(<span class="string">&#x27;空间谱/(dB)&#x27;</span>);</span><br><span class="line">set(gca,<span class="string">&#x27;XTick&#x27;</span>,[<span class="number">-100</span>:<span class="number">20</span>:<span class="number">100</span>]);</span><br><span class="line">grid on;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210320104613.png" alt=""></p><div class='tip success'><p>改进的程序<p></div><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="comment">%music算法的改进</span></span><br><span class="line">clear all;clc;</span><br><span class="line">derad=<span class="built_in">pi</span>/<span class="number">180</span>;</span><br><span class="line">N = <span class="number">5</span>;</span><br><span class="line">M = <span class="number">1</span>;</span><br><span class="line">theta = [<span class="number">21</span>];<span class="comment">%待测角度</span></span><br><span class="line">snr = <span class="number">12</span>;</span><br><span class="line">K = <span class="number">100</span>;<span class="comment">%快拍数</span></span><br><span class="line">dd = <span class="number">0.5</span>;</span><br><span class="line">d = <span class="number">0</span>:dd:(N<span class="number">-1</span>)*dd;<span class="comment">%步长</span></span><br><span class="line">A=<span class="built_in">exp</span>(-<span class="built_in">j</span>*<span class="number">2</span>*<span class="built_in">pi</span>*d.&#x27;*<span class="built_in">sin</span>(theta*derad));<span class="comment">%方向矢量</span></span><br><span class="line"></span><br><span class="line">S = <span class="built_in">randn</span>(M,K);</span><br><span class="line">X = A * S;</span><br><span class="line">Xn = awgn(X,snr,<span class="string">&#x27;measured&#x27;</span>);<span class="comment">%构成的信号</span></span><br><span class="line"></span><br><span class="line">Rxx = Xn*Xn&#x27;/K;</span><br><span class="line">[EV,D] = eig(Rxx);<span class="comment">%特征值分解，并且按照从小到大排序</span></span><br><span class="line"></span><br><span class="line">EV = <span class="built_in">fliplr</span>(EV);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> iange = <span class="number">1</span>:<span class="number">361</span>;</span><br><span class="line">    <span class="built_in">angle</span>(iange) = (iange<span class="number">-181</span>)/<span class="number">2</span>;</span><br><span class="line">    phim = derad*<span class="built_in">angle</span>(iange);</span><br><span class="line">    a = <span class="built_in">exp</span>(-<span class="built_in">j</span>*<span class="number">2</span>*<span class="built_in">pi</span>*d*<span class="built_in">sin</span>(phim)).&#x27;;<span class="comment">%保证是列向量</span></span><br><span class="line">    G = EV(:,M+<span class="number">1</span>:N);</span><br><span class="line">    P_music(iange) = <span class="number">1</span>/(a&#x27;*G*G&#x27;*a);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">P_music = <span class="built_in">abs</span>(P_music);<span class="comment">%提取模值</span></span><br><span class="line">Pm_max = <span class="built_in">max</span>(P_music);</span><br><span class="line">P_music = <span class="number">10</span>*<span class="built_in">log10</span>(P_music/Pm_max);</span><br><span class="line">h = <span class="built_in">plot</span>(<span class="built_in">angle</span>,P_music);</span><br><span class="line"><span class="built_in">legend</span>(<span class="string">&#x27;MUSIC&#x27;</span>);</span><br><span class="line">set(h,<span class="string">&#x27;Linewidth&#x27;</span>,<span class="number">1</span>);</span><br><span class="line">xlabel(<span class="string">&#x27;入射角/(degree)&#x27;</span>);</span><br><span class="line">ylabel(<span class="string">&#x27;空间谱/(dB)&#x27;</span>);</span><br><span class="line">set(gca,<span class="string">&#x27;XTick&#x27;</span>,[<span class="number">-100</span>:<span class="number">20</span>:<span class="number">100</span>]);</span><br><span class="line">grid on;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210322110314.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210315114937.jpg" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210316095024.jpg" alt=""></p>]]></content>
    
    
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; class=&quot;aplayer-secondary-script-marker&quot;&gt;&lt;/script&gt;&lt;h1&gt;MUSIC算法&lt;/h1&gt;
&lt;div class=&quot;note warning flat&quot;&gt;&lt;p&gt;以下部分是基于线阵阵列！！！还有许多不完善的地方，待续···&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;假设入射到天线阵列的近似为远场窄带信号，它们分别来自&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msub&gt;&lt;mi&gt;θ&lt;/mi&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;/msub&gt;&lt;mo separator=&quot;true&quot;&gt;,&lt;/mo&gt;&lt;msub&gt;&lt;mi&gt;θ&lt;/mi&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/msub&gt;&lt;mo separator=&quot;true&quot;&gt;,&lt;/mo&gt;&lt;mo separator=&quot;true&quot;&gt;⋅&lt;/mo&gt;&lt;mo separator=&quot;true&quot;&gt;⋅&lt;/mo&gt;&lt;mo separator=&quot;true&quot;&gt;⋅&lt;/mo&gt;&lt;mo separator=&quot;true&quot;&gt;,&lt;/mo&gt;&lt;msub&gt;&lt;mi&gt;θ&lt;/mi&gt;&lt;mi&gt;K&lt;/mi&gt;&lt;/msub&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;\theta_1,\theta_2,···,\theta_K&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.8888799999999999em;vertical-align:-0.19444em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.02778em;&quot;&gt;θ&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.30110799999999993em;&quot;&gt;&lt;span style=&quot;top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.15em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mpunct&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.16666666666666666em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.02778em;&quot;&gt;θ&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.30110799999999993em;&quot;&gt;&lt;span style=&quot;top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.15em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mpunct&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.16666666666666666em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mpunct&quot;&gt;⋅&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.16666666666666666em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mpunct&quot;&gt;⋅&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.16666666666666666em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mpunct&quot;&gt;⋅&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.16666666666666666em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mpunct&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.16666666666666666em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.02778em;&quot;&gt;θ&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.32833099999999993em;&quot;&gt;&lt;span style=&quot;top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mathdefault mtight&quot; style=&quot;margin-right:0.07153em;&quot;&gt;K&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.15em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;共K个方向，则有&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;x&lt;/mi&gt;&lt;mo stretchy=&quot;false&quot;&gt;(&lt;/mo&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mo stretchy=&quot;false&quot;&gt;)&lt;/mo&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mi&gt;A&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mo stretchy=&quot;false&quot;&gt;(&lt;/mo&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mo stretchy=&quot;false&quot;&gt;)&lt;/mo&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;mi&gt;v&lt;/mi&gt;&lt;mo stretchy=&quot;false&quot;&gt;(&lt;/mo&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mo stretchy=&quot;false&quot;&gt;)&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;x(n)=As(n)+v(n)&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:1em;vertical-align:-0.25em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;mopen&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;mclose&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mrel&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:1em;vertical-align:-0.25em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;mopen&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;mclose&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222222222222222em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mbin&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222222222222222em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:1em;vertical-align:-0.25em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.03588em;&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;mopen&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;mclose&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;x(n)是天线阵各阵元的接收数据向量，M*1&lt;/p&gt;
&lt;p&gt;A是阵列的方向矩阵，M*K&lt;/p&gt;
&lt;p&gt;s(n)为空间信号向量,K*1&lt;/p&gt;
&lt;p&gt;v(n)是白噪声向量，M*1&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;接收信号向量的空间相关矩阵可表示为&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;R&lt;/mi&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mi&gt;E&lt;/mi&gt;&lt;mo stretchy=&quot;false&quot;&gt;[&lt;/mo&gt;&lt;mi&gt;X&lt;/mi&gt;&lt;mo stretchy=&quot;false&quot;&gt;(&lt;/mo&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mo stretchy=&quot;false&quot;&gt;)&lt;/mo&gt;&lt;mi&gt;X&lt;/mi&gt;&lt;mo stretchy=&quot;false&quot;&gt;(&lt;/mo&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;msup&gt;&lt;mo stretchy=&quot;false&quot;&gt;)&lt;/mo&gt;&lt;mi&gt;H&lt;/mi&gt;&lt;/msup&gt;&lt;mo stretchy=&quot;false&quot;&gt;]&lt;/mo&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mi&gt;A&lt;/mi&gt;&lt;msub&gt;&lt;mi&gt;R&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;/msub&gt;&lt;msup&gt;&lt;mi&gt;A&lt;/mi&gt;&lt;mi&gt;H&lt;/mi&gt;&lt;/msup&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;msup&gt;&lt;mi&gt;σ&lt;/mi&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/msup&gt;&lt;mi&gt;I&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;R=E[X(n)X(n)^H]=AR_sA^H+\sigma^2I&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.68333em;vertical-align:0em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.00773em;&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mrel&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:1.0913309999999998em;vertical-align:-0.25em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.05764em;&quot;&gt;E&lt;/span&gt;&lt;span class=&quot;mopen&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.07847em;&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;mopen&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;mclose&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.07847em;&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;mopen&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;mclose&quot;&gt;&lt;span class=&quot;mclose&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.8413309999999999em;&quot;&gt;&lt;span style=&quot;top:-3.063em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mathdefault mtight&quot; style=&quot;margin-right:0.08125em;&quot;&gt;H&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mclose&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mrel&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.991331em;vertical-align:-0.15em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.00773em;&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.151392em;&quot;&gt;&lt;span style=&quot;top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mathdefault mtight&quot;&gt;s&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.15em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.8413309999999999em;&quot;&gt;&lt;span style=&quot;top:-3.063em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mathdefault mtight&quot; style=&quot;margin-right:0.08125em;&quot;&gt;H&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222222222222222em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mbin&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222222222222222em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.8141079999999999em;vertical-align:0em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.03588em;&quot;&gt;σ&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.8141079999999999em;&quot;&gt;&lt;span style=&quot;top:-3.063em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.07847em;&quot;&gt;I&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I是单位矩阵&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;A&lt;/mi&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;msup&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mrow&gt;&lt;mo&gt;−&lt;/mo&gt;&lt;mi&gt;j&lt;/mi&gt;&lt;msub&gt;&lt;mi&gt;w&lt;/mi&gt;&lt;mn&gt;0&lt;/mn&gt;&lt;/msub&gt;&lt;mi&gt;τ&lt;/mi&gt;&lt;/mrow&gt;&lt;/msup&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;msup&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mrow&gt;&lt;mo&gt;−&lt;/mo&gt;&lt;mi&gt;j&lt;/mi&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;mi&gt;π&lt;/mi&gt;&lt;mi&gt;f&lt;/mi&gt;&lt;mi&gt;τ&lt;/mi&gt;&lt;/mrow&gt;&lt;/msup&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;msup&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mrow&gt;&lt;mo&gt;−&lt;/mo&gt;&lt;mi&gt;j&lt;/mi&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;mi&gt;π&lt;/mi&gt;&lt;mfrac&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mi&gt;λ&lt;/mi&gt;&lt;/mfrac&gt;&lt;msub&gt;&lt;mi&gt;x&lt;/mi&gt;&lt;mi&gt;k&lt;/mi&gt;&lt;/msub&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;msub&gt;&lt;mi&gt;θ&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;/msub&gt;&lt;/mrow&gt;&lt;/msup&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;A=e^{-jw_0\tau}=e^{-j2 \pi f\tau}=e^{-j2\pi \frac{c}{\lambda}x_ksin{\theta_i}}&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.68333em;vertical-align:0em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mrel&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.824664em;vertical-align:0em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.824664em;&quot;&gt;&lt;span style=&quot;top:-3.063em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;−&lt;/span&gt;&lt;span class=&quot;mord mathdefault mtight&quot; style=&quot;margin-right:0.05724em;&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mathdefault mtight&quot; style=&quot;margin-right:0.02691em;&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.31731428571428577em;&quot;&gt;&lt;span style=&quot;top:-2.357em;margin-left:-0.02691em;margin-right:0.07142857142857144em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.5em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size3 size1 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.143em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mord mathdefault mtight&quot; style=&quot;margin-right:0.1132em;&quot;&gt;τ&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mrel&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.8491079999999999em;vertical-align:0em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.8491079999999999em;&quot;&gt;&lt;span style=&quot;top:-3.063em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;−&lt;/span&gt;&lt;span class=&quot;mord mathdefault mtight&quot; style=&quot;margin-right:0.05724em;&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;mord mtight&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;mord mathdefault mtight&quot; style=&quot;margin-right:0.03588em;&quot;&gt;π&lt;/span&gt;&lt;span class=&quot;mord mathdefault mtight&quot; style=&quot;margin-right:0.10764em;&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;mord mathdefault mtight&quot; style=&quot;margin-right:0.1132em;&quot;&gt;τ&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mrel&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.849108em;vertical-align:0em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.849108em;&quot;&gt;&lt;span style=&quot;top:-3.363em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;−&lt;/span&gt;&lt;span class=&quot;mord mathdefault mtight&quot; style=&quot;margin-right:0.05724em;&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;mord mtight&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;mord mathdefault mtight&quot; style=&quot;margin-right:0.03588em;&quot;&gt;π&lt;/span&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mopen nulldelimiter sizing reset-size3 size6&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mfrac&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.6915428571428572em;&quot;&gt;&lt;span style=&quot;top:-2.656em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size3 size1 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mathdefault mtight&quot;&gt;λ&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;top:-3.2255000000000003em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;frac-line mtight&quot; style=&quot;border-bottom-width:0.049em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;top:-3.384em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size3 size1 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mathdefault mtight&quot;&gt;c&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.344em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mclose nulldelimiter sizing reset-size3 size6&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mathdefault mtight&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.3448em;&quot;&gt;&lt;span style=&quot;top:-2.3487714285714287em;margin-left:0em;margin-right:0.07142857142857144em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.5em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size3 size1 mtight&quot;&gt;&lt;span class=&quot;mord mathdefault mtight&quot; style=&quot;margin-right:0.03148em;&quot;&gt;k&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.15122857142857138em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mord mathdefault mtight&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;mord mathdefault mtight&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;mord mathdefault mtight&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mathdefault mtight&quot; style=&quot;margin-right:0.02778em;&quot;&gt;θ&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.3280857142857143em;&quot;&gt;&lt;span style=&quot;top:-2.357em;margin-left:-0.02778em;margin-right:0.07142857142857144em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.5em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size3 size1 mtight&quot;&gt;&lt;span class=&quot;mord mathdefault mtight&quot;&gt;i&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.143em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="算法" scheme="http://stardust14.com/categories/%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="算法" scheme="http://stardust14.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>DSP</title>
    <link href="http://stardust14.com/2021/03/08/DSP/"/>
    <id>http://stardust14.com/2021/03/08/DSP/</id>
    <published>2021-03-08T03:18:45.000Z</published>
    <updated>2021-03-08T03:18:45.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1>DSP入门</h1><blockquote><p>本次DSP是数字信号处理器</p></blockquote><p>DSP——数据分析处理</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210308114041.png" alt=""></p>]]></content>
    
    
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; class=&quot;aplayer-secondary-script-marker&quot;&gt;&lt;/script&gt;&lt;h1&gt;DSP入门&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;本次DSP是数字信号处理器&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;DSP——数据分析处理&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210308114041.png&quot; alt&gt;&lt;/p&gt;
</summary>
    
    
    
    <category term="dsp" scheme="http://stardust14.com/categories/dsp/"/>
    
    
    <category term="dsp" scheme="http://stardust14.com/tags/dsp/"/>
    
  </entry>
  
  <entry>
    <title>4D毫米波雷达</title>
    <link href="http://stardust14.com/2021/02/26/4D%E6%AF%AB%E7%B1%B3%E6%B3%A2%E9%9B%B7%E8%BE%BE/"/>
    <id>http://stardust14.com/2021/02/26/4D%E6%AF%AB%E7%B1%B3%E6%B3%A2%E9%9B%B7%E8%BE%BE/</id>
    <published>2021-02-26T12:53:33.000Z</published>
    <updated>2021-02-26T12:53:33.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>随着知识的积累再填充，更新待续~~</p></blockquote><h1>毫米波和4D毫米波</h1><p>毫米波：</p><ol><li>工作在毫米波波段（millimeter wave ）探测的雷达。工作频段一般为30GHz ~ 300 GHz， 波长 1~10mm，介于微波和厘米波之间，兼具有微波雷达和光电雷达的一些优点；</li><li>毫米波雷达相比厘米波雷达具有体积小、易集成和空间分辨率高的特点。</li><li>车载毫米波雷达的工作频率为一般为 24GHz 和77GHz ；</li></ol><p>4D毫米波雷达通过物理或虚拟软件增加毫米波雷达发射&amp;接收通道的个数，可在很大程度上提高毫米波雷达的感知角度、感知距离、进而弥补毫米波雷达无法有效感知纵向距离的问题，从而提供与激光雷达相当的点云密度信号。</p><p>4D毫米波雷达可在恶劣的天气条件下提供更大的范围，视野，感知力和承受能力。但是目前还未能量产；主要是用于弥补传统的毫米波雷达测量误差范围大、无法识别静止物体的缺点。</p><p><strong>传统毫米波雷达（Current Radars）：<strong>探测角度小，且呈现出锥状的波束，使得其测量误差相对较大，且</strong>难以探测静止的物体</strong>。</p><p>**4D毫米波雷达（4D Imaging Radar）：**探测角度相对较大，且测量误差相对较小。由于增加了“探测物体高度”第四个指标，<strong>能够实现测量静止物体的功能</strong>。</p>]]></content>
    
    
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; class=&quot;aplayer-secondary-script-marker&quot;&gt;&lt;/script&gt;&lt;blockquote&gt;
&lt;p&gt;随着知识的积累再填充，更新待续~~&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1&gt;毫米波和4D毫米波&lt;/h1&gt;
&lt;p&gt;毫米波：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;工作在毫米波波段（millimeter wave ）探测的雷达。工作频段一般为30GHz ~ 300 GHz， 波长 1~10mm，介于微波和厘米波之间，兼具有微波雷达和光电雷达的一些优点；&lt;/li&gt;
&lt;li&gt;毫米波雷达相比厘米波雷达具有体积小、易集成和空间分辨率高的特点。&lt;/li&gt;
&lt;li&gt;车载毫米波雷达的工作频率为一般为 24GHz 和77GHz ；&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;4D毫米波雷达通过物理或虚拟软件增加毫米波雷达发射&amp;amp;接收通道的个数，可在很大程度上提高毫米波雷达的感知角度、感知距离、进而弥补毫米波雷达无法有效感知纵向距离的问题，从而提供与激光雷达相当的点云密度信号。&lt;/p&gt;
&lt;p&gt;4D毫米波雷达可在恶劣的天气条件下提供更大的范围，视野，感知力和承受能力。但是目前还未能量产；主要是用于弥补传统的毫米波雷达测量误差范围大、无法识别静止物体的缺点。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;传统毫米波雷达（Current Radars）：&lt;strong&gt;探测角度小，且呈现出锥状的波束，使得其测量误差相对较大，且&lt;/strong&gt;难以探测静止的物体&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;**4D毫米波雷达（4D Imaging Radar）：**探测角度相对较大，且测量误差相对较小。由于增加了“探测物体高度”第四个指标，&lt;strong&gt;能够实现测量静止物体的功能&lt;/strong&gt;。&lt;/p&gt;
</summary>
    
    
    
    <category term="科普" scheme="http://stardust14.com/categories/%E7%A7%91%E6%99%AE/"/>
    
    
    <category term="毫米波雷达" scheme="http://stardust14.com/tags/%E6%AF%AB%E7%B1%B3%E6%B3%A2%E9%9B%B7%E8%BE%BE/"/>
    
  </entry>
  
  <entry>
    <title>阵列信号</title>
    <link href="http://stardust14.com/2021/02/16/%E9%98%B5%E5%88%97%E4%BF%A1%E5%8F%B7/"/>
    <id>http://stardust14.com/2021/02/16/%E9%98%B5%E5%88%97%E4%BF%A1%E5%8F%B7/</id>
    <published>2021-02-16T03:54:30.000Z</published>
    <updated>2021-02-16T03:54:30.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>协方差：一般用来刻画两个随机变量的相似程度。</p>]]></content>
    
    
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; class=&quot;aplayer-secondary-script-marker&quot;&gt;&lt;/script&gt;&lt;p&gt;协方差：一般用来刻画两个随机变量的相似程度。&lt;/p&gt;
</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>DSP杂烩</title>
    <link href="http://stardust14.com/2020/12/04/DSP%E6%9D%82%E7%83%A9/"/>
    <id>http://stardust14.com/2020/12/04/DSP%E6%9D%82%E7%83%A9/</id>
    <published>2020-12-04T01:49:07.000Z</published>
    <updated>2020-12-04T01:49:07.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1>随手记</h1><p>一些知识和疑问</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201204095119.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201204100437.png" alt=""></p><blockquote><p>有一个疑问：之间的衔接关系！</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201205171135.png" alt="image-20201205171133171"></p><h1>傅里叶变换的理解</h1><p>把一个信号的全部信息全部提取出来，在频率上说：w（频率）就表示的位置，振幅表示的强度，而相位则是表示的是信息的反转与否（波的位置）。</p><p>用<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><mo separator="true">⋅</mo><mi>c</mi><mi>o</mi><mi>s</mi><mo stretchy="false">(</mo><mi>w</mi><mo separator="true">⋅</mo><mi>t</mi><mo>+</mo><mi>ϕ</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">A·cos(w·t+\phi)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">A</span><span class="mpunct">⋅</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">c</span><span class="mord mathdefault">o</span><span class="mord mathdefault">s</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mpunct">⋅</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">ϕ</span><span class="mclose">)</span></span></span></span>在时域上，w与时间建立起了联系，相位的改变就是在时间轴上的平移。所以，在频域上的相位就是</p><p>换个角度（域）看问题！！！！</p><p>若一个信号可以分解成正弦函数或着指数形式的组合，那么叠加的函数的相位可能会不同，在同一频率w下的幅度和相位一一对应。那么可以用这三个基本的信息，获取到全部的信息。（有待加深…）</p>]]></content>
    
    
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; class=&quot;aplayer-secondary-script-marker&quot;&gt;&lt;/script&gt;&lt;h1&gt;随手记&lt;/h1&gt;
&lt;p&gt;一些知识和疑问&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201204095119.png&quot; alt&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201204100437.png&quot; alt&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;有一个疑问：之间的衔接关系！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201205171135.png&quot; alt=&quot;image-20201205171133171&quot;&gt;&lt;/p&gt;
&lt;h1&gt;傅里叶变换的理解&lt;/h1&gt;
&lt;p&gt;把一个信号的全部信息全部提取出来，在频率上说：w（频率）就表示的位置，振幅表示的强度，而相位则是表示的是信息的反转与否（波的位置）。&lt;/p&gt;
&lt;p&gt;用&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;A&lt;/mi&gt;&lt;mo separator=&quot;true&quot;&gt;⋅&lt;/mo&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mo stretchy=&quot;false&quot;&gt;(&lt;/mo&gt;&lt;mi&gt;w&lt;/mi&gt;&lt;mo separator=&quot;true&quot;&gt;⋅&lt;/mo&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;mi&gt;ϕ&lt;/mi&gt;&lt;mo stretchy=&quot;false&quot;&gt;)&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;A·cos(w·t+\phi)&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:1em;vertical-align:-0.25em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;mpunct&quot;&gt;⋅&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.16666666666666666em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;mopen&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.02691em;&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;mpunct&quot;&gt;⋅&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.16666666666666666em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222222222222222em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mbin&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222222222222222em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:1em;vertical-align:-0.25em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;ϕ&lt;/span&gt;&lt;span class=&quot;mclose&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;在时域上，w与时间建立起了联系，相位的改变就是在时间轴上的平移。所以，在频域上的相位就是&lt;/p&gt;</summary>
    
    
    
    <category term="记录&amp;烂笔头" scheme="http://stardust14.com/categories/%E8%AE%B0%E5%BD%95-%E7%83%82%E7%AC%94%E5%A4%B4/"/>
    
    
    <category term="dsp" scheme="http://stardust14.com/tags/dsp/"/>
    
  </entry>
  
  <entry>
    <title>Quartus记录</title>
    <link href="http://stardust14.com/2020/11/30/Quartus%E8%AE%B0%E5%BD%95/"/>
    <id>http://stardust14.com/2020/11/30/Quartus%E8%AE%B0%E5%BD%95/</id>
    <published>2020-11-30T11:42:57.000Z</published>
    <updated>2020-11-30T11:42:57.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1>基础知识</h1><ol><li>模块语句及其表达方式</li></ol><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201130195313.png" alt=""></p><p>任一可综合的最基本的模块都必须以关键词module开头。</p><ul><li>模块名最好根据相应电路的功能来确定。如4位二进制计数器用counter4b。</li><li>模块端口列表中须列出此模块的所有输入、输出或双向端口名，端口名间用逗号分开，括号外加分号。</li><li>endmodule是模块结束语句关键词，旁边不加任何标点符号。对模块端口及其功能的描述语句都 必须放在模块语句module_endmodule之间。</li></ul><ol start="2"><li>端口语句、端口信号名和端口模式</li></ol><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201130195425.png" alt=""></p><ul><li><p>输入端口：input</p></li><li><p>输出端口：output</p></li><li><p>双向端口：inout</p></li></ul><ol start="3"><li>逻辑操作符</li></ol><p>Verilog的逻辑操作符大部分与C语言一致，比如：</p><p>逻辑按位与： &amp;</p><p>逻辑按位或： |</p><p>逻辑按位异或：^</p><p>逻辑按位取非：~</p><p>但Verilog也有自己的扩展，比如</p><p>逻辑按位 与非 ~&amp;</p><p>逻辑按位 或非 ~|</p><p>逻辑按位 同或 ~^</p><p>这里“按位”的意思，是可以对多位逻辑信号按位进行逻辑运算</p><ol start="4"><li>连续赋值语句</li></ol><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201130195603.png" alt=""></p><ul><li><p>assign引导的赋值负责描述模块内部的逻辑功能和电路结构。</p></li><li><p>assign引导的赋值语句属于并行赋值语句，无论有多少行语句，都是同时执行的，与语句的前后次序无关。</p></li><li><p>当等式右端的驱动表达式（赋值源）中任一信号发生变化时，此表达式即被重新计算一遍。</p></li></ul><p>（1）当等号右侧的驱动表达式中的任一信号发生变化时，此表达式即被计算一边，并将获得的数据立即赋给等号左侧的变量名标示的目标变量。<br>（2）当一个模块中有多个assign语句时，这些语句为并行，同一目标变量名下是不允许有多个不同赋值表达式。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201130210254.png" alt=""></p><div class="note info flat"><p>注意：</p><ul><li><p>加入[延时]，表示经过指定延时后再赋值，</p></li><li><p>但这个延时值在综合器中是被忽略的，不参与综合。</p></li><li><p>只对仿真器有效</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201130200506.png" alt=""></p></li><li><p>第二句当右侧表达式中的A或B中任一变量发生变化后，即刻算出变化后的值，但需要等待6个时间单 元之后才将运算结果赋值给左侧的目标变量R1。这个延时称为惯性延时。</p></li><li><p>时间单元的大小则由上一语句的关键词“`timescale”在编译时指定。此句表示，仿真的基本时间单元 是10ns，仿真时间的精度是100ps。</p></li><li><p>在这个时间划分单元下，语句“assign #6 R1 = A &amp; B”在执行后，一旦计算出A &amp; B的值，还要再等待6 个时间单元，也就是60ns后才将此值赋给R1。</p></li><li><p>需要注意的是，在timescale前的符号是反单引号（`），而不是单引号（‘）。在标准键盘区最左上方</p></li></ul><p><font color='red'>程序名和该程序的模块名必须一致！！！</font></p></div><ol start="5"><li>reg型变量定义</li></ol><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201130203641.png" alt=""></p><p>（1）reg: 寄存器型变量；</p><p>（2）在过程语句always@引导的顺序语句中, 被赋值信号规定必须是reg型变量；<br>（3）输入或双向口信号不能定义为reg型。</p><ol start="6"><li>过程语句</li></ol><p>Verilog中有两类能引导顺序语句的过程语句，always在可综合语句 中最为常用，另一类过程语句是initial语句。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201130203738.png" alt=""></p><p>当敏感信息列表里发生变化时，就会向下执行</p><ol start="7"><li>块语句begin _end</li></ol><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201130204059.png" alt=""></p><ul><li><p>块语句begin end仅限于在always引导的过程语句结构中使用，只相当于一个括号。</p></li><li><p>以上方括号中的“：块名”可以省略</p></li></ul><ol start="8"><li>case条件语句</li></ol><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201130204059.png" alt=""></p><blockquote><p>实际就是case判断</p></blockquote><ol start="9"><li>Verilog的四种逻辑状态</li></ol><p>Verilog有四种基本数值：</p><p>（1）0：含义有四个，即二进制数0、低电平、逻辑0，事件为伪的判断结果。</p><p>（2）1：含义也有四个，即二进制数1、高电平、逻辑1、事件为真的判断结果。</p><p>（3）z或Z。高阻态，或高阻值。</p><p>（4）x或X。不确定，或未知的逻辑状态。x与z大小写都不分。<br>高阻值还可以用问号“？”来表示，但问号“？”还有别的含义和用处，即代 表“不关心”的意思。因此可以用问号“？”替代一些位值，以表示在逻辑关系中对这些位不在乎是什么值。</p><ol start="10"><li>并位操作运算符</li></ol><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201130204711.png" alt=""></p><ol start="11"><li>Verilog的数字表达形式</li></ol><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201130204754.png" alt=""></p><p>（1）B：二进制， O：八进制，H：十六进制，D：十进制</p><p>（2）不分大小写，如：2’b10, 4’hA等</p><p>（3）sb定义有符号二进制数：8’sb10111011，最高位1是符号。</p><ol start="12"><li>按位逻辑操作符</li></ol><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201130205909.png" alt=""></p><p>如果两个操作数位矢具有不同长度，综合器将自动根据最长位的操作数的位数， 把较短的数据按<strong>左端</strong>补0对齐的规则进行运算操作。</p><ol start="13"><li>等式操作符</li></ol><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201130205744.png" alt=""></p><ul><li>Verilog中任何变量有4个状态：0；1；z (高阻态)；x (不确定或未知状态)</li><li>==：如果其中有x或z, 就判定为假；<code>===：</code>将x或z都当成确定的值进行比较。</li></ul><ol start="14"><li>wire定义网线型变量</li></ol><p>（1）如果assign语句中需要有端口以外的信号或连接线性质的变量（由于 端口都已默认为网线型变量），则必须用网线型变量定义语句事先给出显式<br>定义。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201201090859.png" alt=""></p><p>（2）用wire定义的网线型变量可在任何类型的表达式或赋值语句（包括连续赋值和过程赋值语句）中用作输入信号，也可以在连续赋值语句或实体元件例化中用作输出信号。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201201090843.png" alt=""></p><ol start="15"><li>if条件语句</li></ol><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201130211339.png" alt=""></p><ol start="16"><li>过程赋值语句</li></ol><ul><li>阻塞式赋值：如y=b; 一旦执行完当前的赋值语句，赋值目标变量 y即刻获得来自等号右侧表达式的计算值。如果在一个块语句中 含有多条阻塞赋值语句，而当执行到其中某条赋值语句时，其他语句被禁止执行，这时其他语句如同被阻塞了一样。</li><li>非阻塞式赋值：如y&lt;=b;在执行当前语句时，对于块中的其他语句的执行情况一律不加限制。</li></ul><ol start="17"><li>数据类型表示方式</li></ol><ul><li>SEL[1:0]:二进制矢量位</li><li><ul><li>（SEL==2），数据类型不匹配，但Verilog综合器会自动使其匹配，将其中的 整数2变换成与SEL[1:0]同类型的二进制数2’b10。。</li></ul></li><li><ul><li>当所赋的值大于变量已定义的矢量位可能的值，综合器会首先将赋 值符号右侧的数据折算成二进制数，然后根据被赋值变量所定义的 位数，<strong>向左</strong>截去多余的数位（相当于截去高位）</li></ul></li><li><ul><li>比如Y[1:0], 当赋值Y&lt;=9时，（9=4’b1001）,编译后，Y得到赋值为2’b01。</li></ul></li></ul><ol start="18"><li>元件例化</li></ol><p>元件例化：引入一种连接关系，将预先设计好的设计模块定义为一 个元件，然后利用特定的语句将此元件与当前的设计实体中指定端口相连接，从而为当前设计实体引进一个新的、低一级的设计层次。</p><p>用法：</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201201090746.png" alt=""></p><ul><li>&lt;模块元件名&gt;，它具有唯一性。如果是用 Verilog描述的模块，则是模块名，也即元件名；</li><li>&lt;例化元件名&gt;：在具体电路上模块被调用后放 在不同的位置或担任不同的任务又必须有对应的名称。</li></ul><p>端口名关联法：括号中的信号名是外部端口名，括号外 带点的信号名是待连接的元件自己的端口名。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201201092134.png" alt=""></p><p>位置关联法：关联表述的信号位置十分重要，注意端口 顺序，不能放错。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201201092208.png" alt=""></p><ol start="19"><li>算术运算操作符</li></ol><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201201093147.png" alt=""></p><p>所有算数运算都是按无符号操作数进行的，如果是减法运算，输出 的结果是补码。对于乘法，若为无符号数，可直接用乘法算符 （*）；若为有符号数乘，则需将操作数和输出结果用signed定义为有符号数，乘法结果为补码。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201201095056.png" alt=""></p><ol start="20"><li>参数定义关键词parameter和localparam</li></ol><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201201100507.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201201100528.png" alt=""></p><p>localparam的功能和用法与parameter类似，它是一个局部参数 定义关键词，但无法通过外部程序的数据传递来改变localparam定义的常量。</p><ol start="21"><li>整数型寄存器类型定义</li></ol><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201201100912.png" alt=""></p><p>reg类型必须明确定义其位数。但integer类型的定义不必特指 位数，因为它们都默认为32位宽的二进制寄存器类型。</p><ol start="22"><li>for语句</li></ol><p>（1）本次循环开始前根据“循环初始值设置表达式”计算获得循 环次数初始值。<br>（2）在本次循环开始前根据“循环控制条件表达式”计算所得的 数据判断是否满足继续循环的条件，如果“循环控制条件表达式” 为真，则继续执行“循环体语句结构”中的语句，否则即刻跳出循环。<br>（3）在本次循环结束时，根据“循环控制变量增值表达式”计算<br>出循环控制变量的数值，然后跳到以上步骤（2）。</p><ol start="23"><li>移位操作符</li></ol><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201206155605.png" alt=""></p><p>右移或左移，移出腾空的位用0填补。</p><p>有符号数左右移，右移一律将符号位，即最高位填补移出的位。左移操 作同普通左移&lt;&lt;。</p><ol start="24"><li>repeat语句用法</li></ol><ul><li>“循环次数表达式”可以是数值确定的整数、变量或定义了 常数的参数标识符等。</li><li>repeat语句的循环次数是在进入此语句执行以前就已决定的，无需循环次数控制增量表达式及其计算。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201206160554.png" alt=""></p><ol start="25"><li>while语句</li></ol><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201206162407.png" alt=""></p><p>（1）首先根据“循环控制条件表达式”的计算所得判断是否 满足继续循环的条件，如果为真，执行一遍“循环体语句结 构”中的所有语句；若为伪，即不满足循环表达式的条件， 结束循环。<br>（2）对于此种循环语句，必须在“循环体语句结构”中包含类似for语句的“循环控制变量增值表达式”。</p><ol start="26"><li>parameter的参数传递功能</li></ol><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201206162806.png" alt=""></p><p>从顶层传递到底层</p><ol start="27"><li>异步清零和同步清零的区别</li></ol><p><font color='red'>异步：</font>在任意时刻，只要rst有效，D触发器输出立刻清零，与时钟clk状态无关。<br><font color='red'>同步：</font>指的是与时钟同步，某个控制信号（比如清零信号）只有当时钟信号有效时才起作用。而当时钟信号没有到来时，该控制信号不起作用。</p><p>异步时序电路的Verilog表述特点</p><p>没有单一主控时钟的时序电路，或系统中所有的时序部件不随某个主控时钟同步接受时钟信号达到状态同步变化的电路都属于异步时序电路。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201207142137.png" alt=""></p><figure class="highlight verilog"><table><tr><td class="code"><pre><span class="line"><span class="keyword">module</span> AMOD(CLK,D,Q,A);</span><br><span class="line"><span class="keyword">output</span> Q;</span><br><span class="line"><span class="keyword">input</span> A,D,CLK;</span><br><span class="line"><span class="keyword">reg</span> Q,Q1;</span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> CLK)</span><br><span class="line">Q1=~(A|Q);</span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> Q1)</span><br><span class="line">Q=D;</span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><ul><li>时钟过程表述的特点和规律</li></ul><p>（1）如果将某信号A定义为边沿敏感时钟信 号，则必须在敏感信号列表中给出对应的表述， 如posedge A或negedge A; 但在always过程结构中不能再出现信号A了。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201207142831.png" alt=""></p><p>（2）若将某信号B定义为对应于时钟的电平敏感的异步控制信号（或仅仅是 异步输入信号），则除了在敏感信号表中给出对应的表述外，如posedge B或 negedge B，在always过程结构中必须明示信号B的逻辑行为，如上面例中的 RST。特别注意这种表述的不一致性，即表述上必须是边沿敏感信号，如negedge RST, 但电路性能上是电平敏感的。</p><p>(3）若将某信号定义为对应于时钟的同步控制信号 （或仅仅是同步输入信号），则绝不可以以任何形式出<br>现在敏感信号表中，如下面例子中的RST。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201207142909.png" alt=""></p><p>（4）敏感信号列表中不允许出现混合信号。敏感 信号表一旦含有posedge或negedge的边沿敏感信号<br>后, 所有其他普通变量都不能放在敏感信号表中了</p><p>以下形式是错误的：</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201207143100.png" alt=""></p><blockquote><p>CLK是边沿敏感型的，RST是电平敏感型的</p></blockquote><p>（5）若定义某变量为异步低电平敏感信号，则在 if条件语句中应该对敏感信号表中的信号有匹配的<br>表述，以下三种表述方式都是正确的：</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201207143217.png" alt=""></p><p>（6）不允许在敏感信号表中定义除了异步时序控 制信号以外的信号。在下面的例子中，如果试图使<br>用以下的表述是错误的。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201207143241.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201207143302.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201207143315.png" alt=""></p><h1>结合案例总结</h1><ul><li>4选1多路选择器</li></ul><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201130203038.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201130205502.png" alt=""></p><ul><li>设计16选1选择器</li></ul><figure class="highlight verilog"><table><tr><td class="code"><pre><span class="line"><span class="keyword">module</span> mux16_1( </span><br><span class="line">    <span class="keyword">input</span> [<span class="number">3</span>:<span class="number">0</span>] sel, </span><br><span class="line">    <span class="keyword">input</span> [<span class="number">15</span>:<span class="number">0</span>] D, </span><br><span class="line">    <span class="keyword">output</span> Y</span><br><span class="line">);</span><br><span class="line"><span class="keyword">assign</span> Y = D[sel];</span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><ul><li>8位加法器设计</li></ul><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201201092635.png" alt=""></p><ul><li>BCD码加法器设计</li></ul><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201201095156.png" alt=""></p><ul><li>设计n位乘加器</li></ul><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201206164647.png" alt=""></p><ul><li><p>设计24位无符号数乘法器<img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201206164620.png" alt=""></p></li><li><p>基本D触发器</p></li></ul><figure class="highlight verilog"><table><tr><td class="code"><pre><span class="line"><span class="keyword">module</span> DFF1(CLK,D,Q);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Input Port(s)</span></span><br><span class="line"><span class="keyword">input</span> D,CLK;</span><br><span class="line"><span class="comment">// Output Port(s)</span></span><br><span class="line"><span class="keyword">output</span> Q;</span><br><span class="line"><span class="keyword">reg</span> Q;</span><br><span class="line">    <span class="keyword">always</span> @(<span class="keyword">posedge</span> CLK)<span class="comment">//posedge:CLK时钟上升沿敏感。</span></span><br><span class="line">Q&lt;=D;</span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><p>关键词posedge：posedge CLK时钟上升沿敏感。</p><p>相对应的，还有negedge CLK时钟下降沿敏感。</p><ul><li>含异步复位和时钟使能的D触发器</li></ul><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201206172635.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201206210343.png" alt=""></p><figure class="highlight verilog"><table><tr><td class="code"><pre><span class="line"><span class="keyword">module</span> DFF2(CLK,D,Q,RST,EN);</span><br><span class="line"></span><br><span class="line"><span class="keyword">input</span> CLK,D,RST,EN;</span><br><span class="line"><span class="keyword">output</span> Q;</span><br><span class="line"><span class="keyword">reg</span> Q;</span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> CLK <span class="keyword">or</span> <span class="keyword">negedge</span> RST)</span><br><span class="line"><span class="keyword">begin</span> </span><br><span class="line"><span class="keyword">if</span> (!RST)<span class="comment">//若RST等于零时，Q清零</span></span><br><span class="line">Q&lt;=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(EN)<span class="comment">//EN=1时，Q=D</span></span><br><span class="line">Q&lt;=D;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><ul><li>含同步复位控制的D触发器</li></ul><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201206211132.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201206211149.png" alt=""></p><figure class="highlight verilog"><table><tr><td class="code"><pre><span class="line"><span class="keyword">module</span> DFF3(CLK,D,Q,RST);</span><br><span class="line"></span><br><span class="line"><span class="keyword">input</span> CLK,D,RST;</span><br><span class="line"><span class="keyword">output</span> Q;</span><br><span class="line"><span class="keyword">reg</span> Q;</span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> CLK)</span><br><span class="line"><span class="keyword">begin</span> </span><br><span class="line">        <span class="keyword">if</span> (RST==<span class="number">1</span>)<span class="comment">//同步的</span></span><br><span class="line">Q=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(RST==<span class="number">0</span>)</span><br><span class="line">Q=D;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><figure class="highlight verilog"><table><tr><td class="code"><pre><span class="line"><span class="keyword">module</span> DFF1(CLK,D,Q,RST);</span><br><span class="line"></span><br><span class="line"><span class="keyword">input</span> CLK,D,RST;</span><br><span class="line"><span class="keyword">output</span> Q;</span><br><span class="line"><span class="keyword">reg</span> Q,Q1;<span class="comment">//注意定义了Q1信号</span></span><br><span class="line"><span class="keyword">always</span> @(RST)<span class="comment">//纯组合过程</span></span><br><span class="line"><span class="keyword">if</span> (RST==<span class="number">1</span>)</span><br><span class="line">Q1=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">Q1=D;</span><br><span class="line">        <span class="keyword">always</span> @(<span class="keyword">posedge</span> CLK)</span><br><span class="line">            Q&lt;=Q1;</span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><figure class="highlight verilog"><table><tr><td class="code"><pre><span class="line"><span class="keyword">module</span> DFF2(<span class="keyword">input</span> CLK,<span class="keyword">input</span> D,<span class="keyword">output</span> <span class="keyword">reg</span> Q,<span class="keyword">input</span> RST);</span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> CLK)</span><br><span class="line">Q&lt;=RST?<span class="number">1&#x27;b0</span>:D;<span class="comment">//当RST=1的时候，Q=0,否则Q=D</span></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><ul><li>根据RTL图写程序，同步清零</li></ul><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201206213925.png" alt=""></p><figure class="highlight verilog"><table><tr><td class="code"><pre><span class="line"><span class="keyword">module</span> DFF1(D,EN,CLK,RST,Q1,Q2);</span><br><span class="line"><span class="keyword">input</span> D,EN,CLK,RST;</span><br><span class="line"><span class="keyword">output</span> Q1,Q2;</span><br><span class="line"><span class="keyword">reg</span> Q2;</span><br><span class="line"><span class="keyword">wire</span> Q10;</span><br><span class="line"><span class="keyword">assign</span> Q10=D&amp;EN;</span><br><span class="line"><span class="keyword">assign</span> Q1=(~Q10)|RST;</span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> CLK <span class="keyword">or</span> <span class="keyword">negedge</span> RST)</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"><span class="keyword">if</span>(!RST)</span><br><span class="line">Q2&lt;=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(EN)<span class="comment">//EN是同步的</span></span><br><span class="line">Q2&lt;=D;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201206214029.png" alt=""></p><figure class="highlight verilog"><table><tr><td class="code"><pre><span class="line"><span class="keyword">module</span> DFF2(b,rst_n,a,clk,cout,q);</span><br><span class="line"><span class="keyword">input</span> b,rst_n,a,clk;</span><br><span class="line"><span class="keyword">output</span> cout,q;</span><br><span class="line"><span class="keyword">reg</span> q;</span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> clk)</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">            <span class="keyword">if</span>(!rst_n)<span class="comment">//若rst_n=0时，q=0</span></span><br><span class="line">q&lt;=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">q&lt;=a;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">assign</span> cout=a^b;</span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><ul><li>基本锁存器</li></ul><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201206215617.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201206215630.png" alt=""></p><figure class="highlight verilog"><table><tr><td class="code"><pre><span class="line"><span class="keyword">module</span> LATCH1(CLK,D,Q);</span><br><span class="line"><span class="keyword">output</span> Q;</span><br><span class="line"><span class="keyword">input</span> CLK,D;</span><br><span class="line"><span class="keyword">reg</span> Q;</span><br><span class="line"><span class="keyword">always</span> @(D <span class="keyword">or</span> CLK)</span><br><span class="line"><span class="keyword">if</span>(CLK)</span><br><span class="line">Q&lt;=D;</span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201206220000.png" alt=""></p><blockquote><p>当CLK为高电平时，输出Q才随D输入的数据而改变;<br>而当CLK为低电平时将保存其在高电平时锁入的数据。这就意味着需要引入存储元件于设计模块中。</p></blockquote><ul><li>含清0控制的锁存器</li></ul><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201206220148.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201206221617.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201206221629.png" alt=""></p><figure class="highlight verilog"><table><tr><td class="code"><pre><span class="line"><span class="keyword">module</span> LATCH2(CLK,D,Q,RST);</span><br><span class="line"><span class="keyword">output</span> Q;</span><br><span class="line"><span class="keyword">input</span> CLK,D,RST;</span><br><span class="line"><span class="keyword">assign</span> Q=(!RST)?<span class="number">0</span>:(CLK?D:Q);<span class="comment">//当RST=0的时候，Q=0;否则再判断CLK，当CLK=1的时候，Q=D，否则Q=Q，即保持不变</span></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><figure class="highlight verilog"><table><tr><td class="code"><pre><span class="line"><span class="keyword">module</span> LATCH2(CLK,D,Q,RST);</span><br><span class="line"><span class="keyword">output</span> Q;</span><br><span class="line"><span class="keyword">input</span> CLK,D,RST;</span><br><span class="line"><span class="keyword">reg</span> Q;</span><br><span class="line"><span class="keyword">always</span> @(D <span class="keyword">or</span> CLK <span class="keyword">or</span> RST)</span><br><span class="line">    <span class="keyword">if</span>(!RST)<span class="comment">//RST=0时，Q=0</span></span><br><span class="line">        Q&lt;=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(CLK)</span><br><span class="line">    Q&lt;=D;</span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><ul><li>简单加法计数器</li></ul><figure class="highlight verilog"><table><tr><td class="code"><pre><span class="line"><span class="keyword">module</span> CNT4(clk,q);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Input Port(s)</span></span><br><span class="line"><span class="keyword">input</span> clk;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Output Port(s)</span></span><br><span class="line"><span class="keyword">output</span> [<span class="number">3</span>:<span class="number">0</span>] q;</span><br><span class="line"><span class="comment">// Additional Module Item(s)</span></span><br><span class="line"><span class="keyword">reg</span>[<span class="number">3</span>:<span class="number">0</span>] q1;</span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span>)</span><br><span class="line">q1&lt;=q1+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">assign</span> q=q1;</span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><figure class="highlight verilog"><table><tr><td class="code"><pre><span class="line"><span class="keyword">module</span> CNT4(clk,q);</span><br><span class="line"><span class="comment">// Input Port(s)</span></span><br><span class="line"><span class="keyword">input</span> clk;</span><br><span class="line"><span class="comment">// Output Port(s)</span></span><br><span class="line"><span class="keyword">output</span> [<span class="number">3</span>:<span class="number">0</span>] q;</span><br><span class="line"><span class="comment">// Additional Module Item(s)</span></span><br><span class="line"><span class="keyword">reg</span>[<span class="number">3</span>:<span class="number">0</span>] q;</span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span>)</span><br><span class="line">q&lt;=q1+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201208093504.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201208093514.png" alt=""></p><ul><li>实用加法计数器设计</li></ul><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201208093524.png" alt=""></p><figure class="highlight verilog"><table><tr><td class="code"><pre><span class="line"><span class="keyword">module</span> shift(load,rst,clk,en,data,cout,dout);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Input Port(s)</span></span><br><span class="line"><span class="keyword">input</span> load,rst,clk,en;<span class="comment">//数据加载控制信号，复位，时钟，时钟使能</span></span><br><span class="line"><span class="keyword">input</span> [<span class="number">3</span>:<span class="number">0</span>] data;<span class="comment">//4位并行加载数据</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Output Port(s)</span></span><br><span class="line"><span class="keyword">output</span> cout;<span class="comment">//计数进位输出</span></span><br><span class="line"><span class="keyword">output</span> [<span class="number">3</span>:<span class="number">0</span>]dout;<span class="comment">//4位计数输出</span></span><br><span class="line"><span class="keyword">reg</span> cout;</span><br><span class="line"><span class="keyword">reg</span> q1;</span><br><span class="line"><span class="keyword">assign</span> dout=q1;<span class="comment">//将内部寄存器的计数结果输出至dout</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Additional Module Item(s)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> clk <span class="keyword">or</span> <span class="keyword">negedge</span> rst)</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"><span class="keyword">if</span>(!rst)<span class="comment">//rst=0时，对内部寄存器单元异步清零</span></span><br><span class="line">q1&lt;=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(en)<span class="comment">//同步时能en=1，则允许加载或计数</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"><span class="keyword">if</span>(!load)<span class="comment">//当load=0，向内部寄存器加载数据</span></span><br><span class="line">q1&lt;=data;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(q1&lt;<span class="number">9</span>)<span class="comment">//当q1小于9时，允许累加</span></span><br><span class="line">q1&lt;=q1+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">q1&lt;=<span class="number">4&#x27;b0000</span>;<span class="comment">//否则将一个时钟后清零返回初值</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span> @(q1)<span class="comment">//组合过程</span></span><br><span class="line"><span class="keyword">if</span>(q1==<span class="number">4&#x27;h9</span>)</span><br><span class="line">cout=<span class="number">1&#x27;b1</span>;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">cout=<span class="number">1&#x27;b0</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201208093754.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201208093837.png" alt=""></p><ul><li>计数器的清零和置数端的设计</li></ul><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201208094104.png" alt=""></p><ul><li>二选一多路器</li></ul><figure class="highlight verilog"><table><tr><td class="code"><pre><span class="line"><span class="keyword">module</span> led_test(a,b,key_in,led_out);</span><br><span class="line"></span><br><span class="line"><span class="keyword">input</span> a,b;<span class="comment">//输入端口a和输出端口b</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">input</span> key_in;<span class="comment">//按键输入，实现输入输出通道的选择</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">output</span> led_out;<span class="comment">//led控制端口</span></span><br><span class="line"><span class="comment">//当key_in==0:led_out=a</span></span><br><span class="line"><span class="keyword">assign</span> led_out = (key_in == <span class="number">0</span>)? a:b;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight verilog"><table><tr><td class="code"><pre><span class="line"><span class="meta">`<span class="meta-keyword">timescale</span> 1ns/1ps</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">module</span> led_test_tb;</span><br><span class="line"></span><br><span class="line"><span class="comment">//激励信号定义，对应连接到待测模块的输入端口</span></span><br><span class="line"><span class="keyword">reg</span> signal_a;</span><br><span class="line"><span class="keyword">reg</span> signal_b;</span><br><span class="line"><span class="keyword">reg</span> signal_c;</span><br><span class="line"></span><br><span class="line"><span class="comment">//待检测信号定义，对应连接到待测模块的输出端口</span></span><br><span class="line"><span class="keyword">wire</span> led;</span><br><span class="line"></span><br><span class="line"><span class="comment">//例化待测试模块</span></span><br><span class="line">led_test led_test0(</span><br><span class="line"><span class="variable">.a</span>(signal_a),</span><br><span class="line"><span class="variable">.b</span>(signal_b),</span><br><span class="line"><span class="variable">.key_in</span>(signal_c),</span><br><span class="line"><span class="variable">.led_out</span>(led)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//产生激励</span></span><br><span class="line"><span class="keyword">initial</span> <span class="keyword">begin</span></span><br><span class="line">signal_a= <span class="number">0</span>;signal_b=<span class="number">0</span>;signal_c=<span class="number">0</span>;</span><br><span class="line">#<span class="number">100</span>;</span><br><span class="line">signal_a= <span class="number">0</span>;signal_b=<span class="number">0</span>;signal_c=<span class="number">1</span>;</span><br><span class="line">#<span class="number">100</span>;</span><br><span class="line">signal_a= <span class="number">0</span>;signal_b=<span class="number">1</span>;signal_c=<span class="number">0</span>;</span><br><span class="line">#<span class="number">100</span>;</span><br><span class="line">signal_a= <span class="number">0</span>;signal_b=<span class="number">1</span>;signal_c=<span class="number">1</span>;</span><br><span class="line">#<span class="number">100</span>;</span><br><span class="line">signal_a= <span class="number">1</span>;signal_b=<span class="number">0</span>;signal_c=<span class="number">0</span>;</span><br><span class="line">#<span class="number">100</span>;</span><br><span class="line">signal_a= <span class="number">1</span>;signal_b=<span class="number">0</span>;signal_c=<span class="number">1</span>;</span><br><span class="line">#<span class="number">100</span>;</span><br><span class="line">signal_a= <span class="number">1</span>;signal_b=<span class="number">1</span>;signal_c=<span class="number">0</span>;</span><br><span class="line">#<span class="number">100</span>;</span><br><span class="line">signal_a= <span class="number">1</span>;signal_b=<span class="number">1</span>;signal_c=<span class="number">1</span>;</span><br><span class="line">#<span class="number">200</span>;</span><br><span class="line"><span class="built_in">$stop</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><p>模拟仿真结果：</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201211161311.png" alt=""></p><ul><li>3-8译码器</li></ul><blockquote><p><font color='red'>凡是在always块中赋值的信号，在定义的时候，必须将其定义成reg类型！！！</font></p></blockquote><figure class="highlight verilog"><table><tr><td class="code"><pre><span class="line"><span class="keyword">module</span> my_8(a,b,c,out);</span><br><span class="line"></span><br><span class="line"><span class="keyword">input</span> a,b,c;<span class="comment">//输入端口</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">output</span> <span class="keyword">reg</span> [<span class="number">7</span>:<span class="number">0</span>]out;<span class="comment">//定义一个多位位宽的信号，高位在前，8位宽</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span>@(a,b,c)<span class="keyword">begin</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span>(&#123;a,b,c&#125;)<span class="comment">//拼接成三位</span></span><br><span class="line"><span class="number">3&#x27;b000</span>:out = <span class="number">8&#x27;b0000_0001</span>;<span class="comment">//“_”这是占位符，不做什么作用，便于区分</span></span><br><span class="line"><span class="number">3&#x27;b001</span>:out = <span class="number">8&#x27;b0000_0010</span>;</span><br><span class="line"><span class="number">3&#x27;b010</span>:out = <span class="number">8&#x27;b0000_0100</span>;</span><br><span class="line"><span class="number">3&#x27;b011</span>:out = <span class="number">8&#x27;b0000_1000</span>;</span><br><span class="line"><span class="number">3&#x27;b100</span>:out = <span class="number">8&#x27;b0001_0000</span>;</span><br><span class="line"><span class="number">3&#x27;b101</span>:out = <span class="number">8&#x27;b0010_0000</span>;</span><br><span class="line"><span class="number">3&#x27;b110</span>:out = <span class="number">8&#x27;b0100_0000</span>;</span><br><span class="line"><span class="number">3&#x27;b111</span>:out = <span class="number">8&#x27;b1000_0000</span>;</span><br><span class="line"><span class="comment">//default:out = 8&#x27;b1000_0000;//与上一句语句的作用一样，除以上情况以外的情况</span></span><br><span class="line"><span class="keyword">endcase</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><figure class="highlight verilog"><table><tr><td class="code"><pre><span class="line"><span class="meta">`<span class="meta-keyword">timescale</span> 1ns/1ps</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">module</span> my_8_tb();</span><br><span class="line"></span><br><span class="line"><span class="keyword">reg</span> a;</span><br><span class="line"><span class="keyword">reg</span> b;</span><br><span class="line"><span class="keyword">reg</span> c;</span><br><span class="line"></span><br><span class="line"><span class="keyword">wire</span> [<span class="number">7</span>:<span class="number">0</span>] out;</span><br><span class="line"></span><br><span class="line">my_8 U1(</span><br><span class="line"><span class="variable">.a</span>(a),</span><br><span class="line"><span class="variable">.b</span>(b),</span><br><span class="line"><span class="variable">.c</span>(c),</span><br><span class="line"><span class="variable">.out</span>(out)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">initial</span> <span class="keyword">begin</span></span><br><span class="line"></span><br><span class="line">a=<span class="number">0</span>;b=<span class="number">0</span>;c=<span class="number">0</span>;</span><br><span class="line">#<span class="number">200</span>; </span><br><span class="line">a=<span class="number">0</span>;b=<span class="number">0</span>;c=<span class="number">1</span>;</span><br><span class="line">#<span class="number">200</span>; </span><br><span class="line">a=<span class="number">0</span>;b=<span class="number">1</span>;c=<span class="number">0</span>;</span><br><span class="line">#<span class="number">200</span>; </span><br><span class="line">a=<span class="number">0</span>;b=<span class="number">1</span>;c=<span class="number">1</span>;</span><br><span class="line">#<span class="number">200</span>; </span><br><span class="line">a=<span class="number">1</span>;b=<span class="number">0</span>;c=<span class="number">0</span>;</span><br><span class="line">#<span class="number">200</span>; </span><br><span class="line">a=<span class="number">1</span>;b=<span class="number">0</span>;c=<span class="number">1</span>;</span><br><span class="line">#<span class="number">200</span>; </span><br><span class="line">a=<span class="number">1</span>;b=<span class="number">1</span>;c=<span class="number">0</span>;</span><br><span class="line">#<span class="number">200</span>; </span><br><span class="line">a=<span class="number">1</span>;b=<span class="number">1</span>;c=<span class="number">1</span>;</span><br><span class="line">#<span class="number">200</span>; </span><br><span class="line"><span class="built_in">$stop</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201213114140.png" alt=""></p><ul><li>状态机</li></ul><p>序列检测器</p><figure class="highlight verilog"><table><tr><td class="code"><pre><span class="line"><span class="keyword">module</span> List(clk,rst,data,out);</span><br><span class="line"></span><br><span class="line"><span class="keyword">input</span> clk,rst;<span class="comment">//默认50M，低电平复位</span></span><br><span class="line"><span class="keyword">input</span> [<span class="number">7</span>:<span class="number">0</span>]data;</span><br><span class="line"></span><br><span class="line"><span class="keyword">output</span> <span class="keyword">reg</span> out;</span><br><span class="line"></span><br><span class="line"><span class="keyword">localparam</span></span><br><span class="line">CHECK_H = <span class="number">5&#x27;b0_0001</span>,</span><br><span class="line">CHECK_e = <span class="number">5&#x27;b0_0010</span>,</span><br><span class="line">CHECK_la = <span class="number">5&#x27;b0_0100</span>,</span><br><span class="line">CHECK_lb = <span class="number">5&#x27;b0_1000</span>,</span><br><span class="line">CHECK_o = <span class="number">5&#x27;b1_0000</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">reg</span>[<span class="number">4</span>:<span class="number">0</span>]state;</span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span>@(<span class="keyword">posedge</span> clk <span class="keyword">or</span> <span class="keyword">negedge</span> rst)</span><br><span class="line"><span class="keyword">if</span>(!rst)<span class="keyword">begin</span></span><br><span class="line">out &lt;= <span class="number">1&#x27;b1</span>;</span><br><span class="line">state &lt;= CHECK_H;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">begin</span></span><br><span class="line"><span class="keyword">case</span>(state)</span><br><span class="line">CHECK_H:</span><br><span class="line"><span class="keyword">if</span>(data == <span class="string">&quot;H&quot;</span>)</span><br><span class="line">state &lt;= CHECK_e;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">state &lt;= CHECK_H;</span><br><span class="line">CHECK_e:</span><br><span class="line"><span class="keyword">if</span>(data == <span class="string">&quot;e&quot;</span>)</span><br><span class="line">state &lt;= CHECK_la;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">state &lt;= CHECK_H;</span><br><span class="line">CHECK_la:</span><br><span class="line"><span class="keyword">if</span>(data == <span class="string">&quot;l&quot;</span>)</span><br><span class="line">state &lt;= CHECK_lb;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">state &lt;= CHECK_H;</span><br><span class="line">CHECK_lb:</span><br><span class="line"><span class="keyword">if</span>(data == <span class="string">&quot;l&quot;</span>)</span><br><span class="line">state &lt;= CHECK_o;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">state &lt;= CHECK_H;</span><br><span class="line">CHECK_o:</span><br><span class="line"><span class="keyword">if</span>(data == <span class="string">&quot;o&quot;</span>)<span class="keyword">begin</span></span><br><span class="line">out &lt;= ~ out;</span><br><span class="line">state &lt;= CHECK_H;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">state &lt;= CHECK_H;</span><br><span class="line"></span><br><span class="line"><span class="comment">//begin</span></span><br><span class="line"><span class="comment">//state &lt;= CHECK_H;</span></span><br><span class="line"><span class="comment">//if(data == &quot;o&quot;)</span></span><br><span class="line"><span class="comment">//out &lt;= ~ out;</span></span><br><span class="line"><span class="comment">//else</span></span><br><span class="line"><span class="comment">//out &lt;= out;</span></span><br><span class="line"><span class="keyword">default</span>: state &lt;= CHECK_H;</span><br><span class="line"><span class="keyword">endcase</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">endmodule</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight verilog"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><p><img src="D:%5Cblog%5Cpicture%5CPicGo%5Ccopypicture%5Cimage-20201213150623372.png" alt="image-20201213150623372"></p><h1>自己编写（改编）</h1><ul><li>四位移位寄存器</li></ul><p>不带有异步清零，属于串行输入并行输出</p><figure class="highlight verilog"><table><tr><td class="code"><pre><span class="line"><span class="keyword">module</span> DFF1(din,clk,q);</span><br><span class="line"></span><br><span class="line"> <span class="keyword">input</span> din;</span><br><span class="line"> <span class="keyword">input</span> clk;</span><br><span class="line"> <span class="keyword">output</span> <span class="keyword">reg</span> [<span class="number">3</span>:<span class="number">0</span>] q=<span class="number">4&#x27;b0000</span>;</span><br><span class="line"> <span class="keyword">reg</span> q3=<span class="number">1&#x27;b0</span>,q2=<span class="number">1&#x27;b0</span>,q1=<span class="number">1&#x27;b0</span>,q0=<span class="number">1&#x27;b0</span>;</span><br><span class="line"> <span class="keyword">always</span> @(<span class="keyword">posedge</span> clk)</span><br><span class="line"> <span class="keyword">begin</span> </span><br><span class="line">  q3&lt;=q2;</span><br><span class="line">  q2&lt;=q1;</span><br><span class="line">  q1&lt;=q0;</span><br><span class="line">  q0&lt;=din;</span><br><span class="line">  q=&#123;q3,q2,q1,q0&#125;;</span><br><span class="line"> <span class="keyword">end</span></span><br><span class="line"><span class="keyword">endmodule</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">module</span> t1();</span><br><span class="line"></span><br><span class="line"><span class="keyword">reg</span> din;</span><br><span class="line"><span class="keyword">reg</span> clk;</span><br><span class="line"></span><br><span class="line"><span class="keyword">wire</span> [<span class="number">3</span>:<span class="number">0</span>] q;</span><br><span class="line"></span><br><span class="line">DFF1 U1(<span class="variable">.clk</span>(clk),<span class="variable">.din</span>(din),<span class="variable">.q</span>(q));</span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span> <span class="keyword">begin</span></span><br><span class="line"> #<span class="number">10</span> clk=~clk;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">initial</span> <span class="keyword">begin</span></span><br><span class="line"> clk = <span class="number">1&#x27;b0</span>;</span><br><span class="line"> din = <span class="number">1&#x27;b1</span>;<span class="comment">//第一个移进的数</span></span><br><span class="line">   #<span class="number">15</span> din = <span class="number">1&#x27;b0</span>;<span class="comment">//第二个移进的数</span></span><br><span class="line">   #<span class="number">20</span> din = <span class="number">1&#x27;b1</span>;<span class="comment">//第三个</span></span><br><span class="line">   #<span class="number">20</span> din = <span class="number">1&#x27;b0</span>;<span class="comment">//第四个</span></span><br><span class="line">   #<span class="number">20</span> din = <span class="number">1&#x27;b1</span>;<span class="comment">//第五个</span></span><br><span class="line">   #<span class="number">20</span> din = <span class="number">1&#x27;b0</span>;   <span class="comment">//第六个  </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span> </span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201209214417.png" alt="image-20201209214407163"></p><ul><li>dds</li></ul><figure class="highlight verilog"><table><tr><td class="code"><pre><span class="line"> <span class="keyword">module</span> control (</span><br><span class="line">                 clk, <span class="comment">//外部输入时钟</span></span><br><span class="line"></span><br><span class="line">                 rst_n,<span class="comment">//系统复位</span></span><br><span class="line"></span><br><span class="line">                 addr<span class="comment">//有效地址</span></span><br><span class="line"></span><br><span class="line">              );</span><br><span class="line"></span><br><span class="line">      <span class="comment">//模块输入</span></span><br><span class="line">      <span class="keyword">input</span> clk;<span class="comment">//外部输入时钟</span></span><br><span class="line">      <span class="keyword">input</span> rst_n;<span class="comment">//系统复位</span></span><br><span class="line">      <span class="comment">//模块输出</span></span><br><span class="line">      <span class="keyword">output</span> <span class="keyword">reg</span> [<span class="number">7</span>:<span class="number">0</span>] addr;<span class="comment">//有效地址</span></span><br><span class="line"></span><br><span class="line">     <span class="keyword">always</span> @ (<span class="keyword">posedge</span> clk <span class="keyword">or</span> <span class="keyword">negedge</span> rst_n)</span><br><span class="line">          <span class="keyword">begin</span></span><br><span class="line"></span><br><span class="line">              <span class="keyword">if</span> (!rst_n) <span class="comment">//复位的时候，addr清零</span></span><br><span class="line">                  addr &lt;= <span class="number">0</span>;</span><br><span class="line">             <span class="keyword">else</span></span><br><span class="line">                 <span class="keyword">if</span> (addr &lt; <span class="number">255</span>)</span><br><span class="line"></span><br><span class="line">                     addr &lt;= addr + <span class="number">1</span>;<span class="comment">//地址在0~255之间循环</span></span><br><span class="line"></span><br><span class="line">                 <span class="keyword">else</span></span><br><span class="line">                    addr &lt;= <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">         <span class="keyword">end</span>    </span><br><span class="line"><span class="keyword">endmodule</span> </span><br></pre></td></tr></table></figure><figure class="highlight verilog"><table><tr><td class="code"><pre><span class="line"><span class="keyword">module</span> dds (</span><br><span class="line">              clk, <span class="comment">//外部输入时钟</span></span><br><span class="line">             rst_n,<span class="comment">//系统复位</span></span><br><span class="line">             num <span class="comment">//波形数据输出</span></span><br><span class="line">         );</span><br><span class="line">      <span class="comment">//系统输入</span></span><br><span class="line">      <span class="keyword">input</span> clk;<span class="comment">//外部输入时钟</span></span><br><span class="line">      <span class="keyword">input</span> rst_n;<span class="comment">//系统复位</span></span><br><span class="line">      <span class="comment">//系统输出</span></span><br><span class="line">      <span class="keyword">output</span> [<span class="number">7</span>:<span class="number">0</span>] num;<span class="comment">//波形数据输出</span></span><br><span class="line">      <span class="comment">//定义中间连线</span></span><br><span class="line">      <span class="keyword">wire</span> [<span class="number">7</span>:<span class="number">0</span>] addr;<span class="comment">//有效地址</span></span><br><span class="line">      <span class="comment">//实例化control</span></span><br><span class="line">      control control (</span><br><span class="line">                  <span class="variable">.clk</span>(clk), <span class="comment">//外部输入时钟</span></span><br><span class="line">                 <span class="variable">.rst_n</span>(rst_n), <span class="comment">//系统复位</span></span><br><span class="line">                  <span class="variable">.addr</span>(addr)<span class="comment">//有效地址</span></span><br><span class="line">              );</span><br><span class="line">      <span class="comment">//调用ip核</span></span><br><span class="line"></span><br><span class="line">      rom rom_inst (</span><br><span class="line">                  <span class="variable">.address</span> ( addr ),</span><br><span class="line">                  <span class="variable">.clock</span> ( clk ),</span><br><span class="line">                  <span class="variable">.q</span> ( num )</span><br><span class="line">              );</span><br><span class="line">  <span class="keyword">endmodule</span> </span><br></pre></td></tr></table></figure><figure class="highlight verilog"><table><tr><td class="code"><pre><span class="line"><span class="meta">`<span class="meta-keyword">timescale</span> 1ns/1ps //定义时间单位和精度</span></span><br><span class="line"></span><br><span class="line"> <span class="keyword">module</span> dds_tb;</span><br><span class="line"> <span class="comment">//系统输入</span></span><br><span class="line"> <span class="keyword">reg</span> clk;<span class="comment">//外部输入时钟</span></span><br><span class="line"> <span class="keyword">reg</span> rst_n;<span class="comment">//系统复位</span></span><br><span class="line"> <span class="comment">//系统输出</span></span><br><span class="line"> <span class="keyword">wire</span> [<span class="number">7</span>:<span class="number">0</span>] num;<span class="comment">//波形数据输出</span></span><br><span class="line"></span><br><span class="line"> <span class="keyword">initial</span> <span class="keyword">begin</span></span><br><span class="line"> clk = <span class="number">1</span>;</span><br><span class="line"> rst_n = <span class="number">0</span>;</span><br><span class="line"> # <span class="number">200</span><span class="variable">.1</span></span><br><span class="line"> rst_n = <span class="number">1</span>;</span><br><span class="line"> <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"> <span class="keyword">always</span> # <span class="number">10</span> clk = ~clk;<span class="comment">//50M的时钟</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> dds dds (</span><br><span class="line"></span><br><span class="line"> <span class="variable">.clk</span>(clk), <span class="comment">//外部输入时钟</span></span><br><span class="line"></span><br><span class="line"> <span class="variable">.rst_n</span>(rst_n), <span class="comment">//系统复位</span></span><br><span class="line"></span><br><span class="line"> <span class="variable">.num</span>(num)<span class="comment">//波形数据输出</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"> <span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><p>图像改成无符号数仿真，194.5kHz</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201221180549.png" alt=""></p>]]></content>
    
    
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; class=&quot;aplayer-secondary-script-marker&quot;&gt;&lt;/script&gt;&lt;h1&gt;基础知识&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;模块语句及其表达方式&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201130195313.png&quot; alt&gt;&lt;/p&gt;
&lt;p&gt;任一可综合的最基本的模块都必须以关键词module开头。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;模块名最好根据相应电路的功能来确定。如4位二进制计数器用counter4b。&lt;/li&gt;
&lt;li&gt;模块端口列表中须列出此模块的所有输入、输出或双向端口名，端口名间用逗号分开，括号外加分号。&lt;/li&gt;
&lt;li&gt;endmodule是模块结束语句关键词，旁边不加任何标点符号。对模块端口及其功能的描述语句都 必须放在模块语句module_endmodule之间。&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&quot;2&quot;&gt;
&lt;li&gt;端口语句、端口信号名和端口模式&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201130195425.png&quot; alt&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;输入端口：input&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;输出端口：output&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;双向端口：inout&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&quot;3&quot;&gt;
&lt;li&gt;逻辑操作符&lt;/li&gt;
&lt;/ol&gt;</summary>
    
    
    
    <category term="记录&amp;烂笔头" scheme="http://stardust14.com/categories/%E8%AE%B0%E5%BD%95-%E7%83%82%E7%AC%94%E5%A4%B4/"/>
    
    
    <category term="quartus" scheme="http://stardust14.com/tags/quartus/"/>
    
  </entry>
  
  <entry>
    <title>CentOs6.5下升级Firefox</title>
    <link href="http://stardust14.com/2020/11/28/CentOs6-5%E4%B8%8B%E5%8D%87%E7%BA%A7Firefox/"/>
    <id>http://stardust14.com/2020/11/28/CentOs6-5%E4%B8%8B%E5%8D%87%E7%BA%A7Firefox/</id>
    <published>2020-11-28T11:08:12.000Z</published>
    <updated>2020-11-28T11:08:12.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class='tip error'><p>无效<p></div><p><s>1.下载最新安装文件</s></p><p><s>在firefox的官网里下载最新的linux版安装文件Firefox-latest-x86_64.tar.bz2(我下载的是64bit版)，然后解压。</s></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[star@localhost 下载]# tar -xjvf Firefox-latest-x86_64.tar.bz2 </span><br></pre></td></tr></table></figure><blockquote><p><s>解压要在主用户，不要在最高管理员（root）权限下进行</s></p></blockquote><p><s>2.卸载旧版</s></p><p><s>系统默认安装的旧版 firefox ，通常位于 /usr/lib 目录下，我们把旧版卸载。</s></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[star@localhost 下载]# whereis firefox</span><br><span class="line">firefox: /usr/bin/firefox /usr/lib/firefox /usr/lib64/firefox /usr/share/man/man1/firefox.1.gz</span><br></pre></td></tr></table></figure><p><s>删除程序目录</s></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@localhost 下载]# sudo rm -rf /usr/lib/firefox</span><br></pre></td></tr></table></figure><p><s>删除启动脚本</s></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@localhost 下载]# sudo rm -f /usr/bin/firefox</span><br></pre></td></tr></table></figure><blockquote><p><s>有无sudo都可</s></p></blockquote><p><s>3.安装新版</s></p><p><s>将解压的firefox 目录移动到 /usr/lib 目录下</s></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@localhost 下载]# mv firefox /usr/lib</span><br></pre></td></tr></table></figure><p><s>进入 /usr/bin 目录，删除其下的 firefox 脚本</s></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@localhost bin]# rm firefox</span><br></pre></td></tr></table></figure><p><s>创建一个软链接，指向/usr/lib/firefox/firefox</s></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# ln -s /usr/lib/firefox/firefox /usr/bin/firefox</span><br></pre></td></tr></table></figure><p><s>修改左上角的firefox 浏览器图标属性里的程序启动路径，在 “命令”字段的文本框中，输入</s></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">/usr/lib/firefox/firefox %u</span><br></pre></td></tr></table></figure><p><s><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201128192425.png" alt="image-20201128192359442"></s></p><p><s>参考网上的解决方案：</s></p><p><a href="https://blog.yayuanzi.com/8754.html">https://blog.yayuanzi.com/8754.html</a></p><p><a href="https://blog.csdn.net/weixin_34289744/article/details/92890618">https://blog.csdn.net/weixin_34289744/article/details/92890618</a></p><div class='tip error'><p>无效<p></div><h1>解决</h1><div class="note success flat"><p>成功</p></div><p>卸载旧版后，在终端输入<code>yum -y install firefox</code>再把之前的设置修改回来即可。</p>]]></content>
    
    
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; class=&quot;aplayer-secondary-script-marker&quot;&gt;&lt;/script&gt;&lt;div class=&quot;tip error&quot;&gt;&lt;p&gt;无效&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/div&gt;
&lt;p&gt;&lt;s&gt;1.下载最新安装文件&lt;/s&gt;&lt;/p&gt;
&lt;p&gt;&lt;s&gt;在firefox的官网里下载最新的linux版安装文件Firefox-latest-x86_64.tar.bz2(我下载的是64bit版)，然后解压。&lt;/s&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[star@localhost 下载]# tar -xjvf Firefox-latest-x86_64.tar.bz2 &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;s&gt;解压要在主用户，不要在最高管理员（root）权限下进行&lt;/s&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;s&gt;2.卸载旧版&lt;/s&gt;&lt;/p&gt;
&lt;p&gt;&lt;s&gt;系统默认安装的旧版 firefox ，通常位于 /usr/lib 目录下，我们把旧版卸载。&lt;/s&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[star@localhost 下载]# whereis firefox&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;firefox: /usr/bin/firefox /usr/lib/firefox /usr/lib64/firefox /usr/share/man/man1/firefox.1.gz&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;s&gt;删除程序目录&lt;/s&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="记录&amp;烂笔头" scheme="http://stardust14.com/categories/%E8%AE%B0%E5%BD%95-%E7%83%82%E7%AC%94%E5%A4%B4/"/>
    
    
    <category term="CentOS6.5" scheme="http://stardust14.com/tags/CentOS6-5/"/>
    
  </entry>
  
  <entry>
    <title>Linux简单知识</title>
    <link href="http://stardust14.com/2020/10/31/Linux%E7%AE%80%E5%8D%95%E7%9F%A5%E8%AF%86/"/>
    <id>http://stardust14.com/2020/10/31/Linux%E7%AE%80%E5%8D%95%E7%9F%A5%E8%AF%86/</id>
    <published>2020-10-31T08:26:03.000Z</published>
    <updated>2020-10-31T08:26:03.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1>简单命令</h1><h2 id="常用系统工作命令"><a class="header-anchor" href="#常用系统工作命令">¶</a>常用系统工作命令</h2><ol><li>echo命令</li></ol><p>用于在终端输出字符串或变量提取后的值，格式为&quot;echo[字符串|$变量]&quot;</p><blockquote><p>相当于打印字符串/提取变量的值</p></blockquote><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[hello@hello Desktop]$ echo $SHELL</span><br><span class="line">/bin/bash</span><br></pre></td></tr></table></figure><ol start="2"><li>date命令</li></ol><p>用于显示及设置系统的时间或日期，格式为&quot;<code>date[选项][+指定的格式]</code>&quot;</p><p>只需在强大的date命令中输入以“+”号开头的参数，即可按照指定格式来输出系统的时间或日期，这样在日常工作时便可以把备份数据的命令与指定格式输出的时间信息结合到一起。</p><p>​date命令中的参数及作用</p><table><thead><tr><th>参数</th><th>作用</th></tr></thead><tbody><tr><td>%S</td><td>秒（00～59）</td></tr><tr><td>%M</td><td>分钟（00～59）</td></tr><tr><td>%H</td><td>小时（00～23）</td></tr><tr><td>%I</td><td>小时（00～12）</td></tr><tr><td>%m</td><td>月份（1~12）</td></tr><tr><td>%p</td><td>显示出AM或PM</td></tr><tr><td>%a</td><td>缩写的工作日名称（例如：Sun）</td></tr><tr><td>%A</td><td>完整的工作日名称（例如：Sunday）</td></tr><tr><td>%b</td><td>缩写的月份名称（例如：Jan）</td></tr><tr><td>%B</td><td>完整的月份名称（例如：January）</td></tr><tr><td>%q</td><td>季度（1~4）</td></tr><tr><td>%y</td><td>简写年份（例如：20）</td></tr><tr><td>%Y</td><td>完整年份（例如：2020）</td></tr><tr><td>%d</td><td>本月中的第几天</td></tr><tr><td>%j</td><td>今年中的第几天</td></tr><tr><td>%n</td><td>换行符（相当于按下回车键）</td></tr><tr><td>%t</td><td>跳格（相当于按下Tab键）</td></tr></tbody></table><ol start="3"><li>reboot命令</li></ol><p>reboot命令用于重启系统，其格式为reboot。需要root管理员权限</p><ol start="4"><li>poweroff命令</li></ol><p>用于关闭系统，其格式为poweroff，默认root管理员权限。</p><ol start="5"><li>wget命令</li></ol><p>用于在终端下载网络文件，格式为&quot;wget[参数]下载地址&quot;。</p><p>​wget命令的参数以及命令</p><table><thead><tr><th>参数</th><th>作用</th></tr></thead><tbody><tr><td>-b</td><td>后台下载模式</td></tr><tr><td>-P</td><td>下载到指定目录</td></tr><tr><td>-t</td><td>最大尝试次数</td></tr><tr><td>-c</td><td>断点续传</td></tr><tr><td>-p</td><td>下载页面内所有资源，包括图片、视频等</td></tr><tr><td>-r</td><td>递归下载</td></tr></tbody></table><div class='tip error'><p>error：出现错误<p></div><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201112210230.png" alt="image-20201112210227444"></p><p>解决:</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">wget --no-check-certificate  https://www.linuxprobe.com/docs/LinuxProbe.pdf</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201112210519.png" alt="image-20201112210518064"></p><ol start="6"><li>ps命令</li></ol><p>ps命令用于查看系统中的进程状态，格式为“ps [参数]”。</p><p>ps命令的参数以及作用</p><table><thead><tr><th>参数</th><th>作用</th></tr></thead><tbody><tr><td>-a</td><td>显示所有进程（包括其他用户的进程）</td></tr><tr><td>-u</td><td>用户以及其他详细信息</td></tr><tr><td>-x</td><td>显示没有控制终端的进程</td></tr></tbody></table><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">R（运行）：进程正在运行或在运行队列中等待。</span><br><span class="line">S（中断）：进程处于休眠中，当某个条件形成后或者接收到信号时，则脱离该状态。</span><br><span class="line">D（不可中断）：进程不响应系统异步信号，即便用kill命令也不能将其中断。</span><br><span class="line">Z（僵死）：进程已经终止，但进程描述符依然存在, 直到父进程调用wait4()系统函数后将进程释放。</span><br><span class="line">T（停止）：进程收到停止信号后停止运行。</span><br></pre></td></tr></table></figure><ol start="7"><li>top命令</li></ol><p>top命令用于动态地监视进程活动与系统负载等信息，其格式为top。</p><p>top命令相当强大，能够动态地查看系统运维状态，完全将它看作Linux中的“强化版的Windows任务管理器”。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201112212251.png" alt="image-20201112212250825"></p><ol start="8"><li>pidof命令</li></ol><p>pidof命令用于查询某个指定服务进程的PID值，格式为“pidof [参数] [服务名称]”。</p><p>每个进程的进程号码值（PID）是唯一的，因此可以通过PID来区分不同的进程。例如，可以使用如下命令来查询本机上sshd服务程序的PID：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[hello@hello Desktop]$ pidof sshd</span><br><span class="line">2037</span><br></pre></td></tr></table></figure><ol start="9"><li>kill命令</li></ol><p>kill命令用于终止某个指定PID的服务进程，格式为“kill [参数] [进程PID]”。</p><p>接下来，我们使用kill命令把上面用pidof命令查询到的PID所代表的进程终止掉，其命令如下所示。这种操作的效果等同于强制停止sshd服务。</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[hello@hello Desktop]$ kill 2037</span><br></pre></td></tr></table></figure><ol start="10"><li>killall命令</li></ol><p>killall命令用于终止某个指定名称的服务所对应的全部进程，格式为：“killall [参数] [服务名称]”。</p><h2 id="系统状态检测命令"><a class="header-anchor" href="#系统状态检测命令">¶</a>系统状态检测命令</h2><ol><li>ifconfig命令</li></ol><p>ifconfig命令用于获取网卡配置与网络状态等信息，格式为“ifconfig [网络设备] [参数]”。</p><h1>基本命令</h1><p>通用语法格式：# <font color='red'>指令名称 [选项] [操作的目标]</font></p><h2 id="简单命令"><a class="header-anchor" href="#简单命令">¶</a>简单命令</h2><h3 id="ls指令"><a class="header-anchor" href="#ls指令">¶</a>ls指令</h3><p>语法1：<strong>#ls [路径]</strong></p><p>表示列出指定路径下的文件夹和文件的名字，如果路径没有指定则列出当前路径下的（list）</p><p>例如：在root用户的家目录中输入ls命令，则会看到以下的效果：</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201122112536.jpg" alt="img"></p><p>要求列出/home的文档的名称。</p><p>#ls /home</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201122112648.png" alt="image-20201122112647863"></p><p>语法2：<strong>#ls -l [路径]</strong></p><p>表示<strong>以列表的形式</strong>列出指定路径下的文件夹和文件的名字</p><p>例如：使用ls –l的命令列出当前用户家目录中的文件夹和文件信息</p><p>语法3：**#ls -la [**<strong>路径]</strong></p><p>表示<strong>以列表的形式</strong>列出指定路径下的文件夹和文件名（<strong>包含隐藏文件</strong>**,all**）</p><p>例如：在当前用户的家目录中输入ls –la命令可以查看全部的文件夹和文件名，并且包含了隐藏文件（<font color='red'>特点是以“<strong>.</strong>”开头的名字</font>）</p><h3 id="clear指令"><a class="header-anchor" href="#clear指令">¶</a>clear指令</h3><p>表示的含义：清空当前屏幕中全部的命令（<strong>其实质是没有清空，只不过是顶到上面去了</strong>）</p><p><strong>语法：#clear</strong></p><p><strong>等效于快捷键：ctrl + L</strong></p><h3 id="su指令"><a class="header-anchor" href="#su指令">¶</a>su指令</h3><p>作用：切换用户（switch user）。</p><p>语法：<strong>#su</strong> <strong>需要切换到的用户名（用户名可以不写，则表示切换到root用户）</strong></p><p>例如：</p><p>1、从root用户切换到admin用户。</p><p>2、从admin用户切换到root用户。</p><p>#su root</p><p>等价于：</p><p>#su</p><blockquote><p>密码输错有两种方式：1，根据提示重新输入；2，按住backspace（删除键）三秒</p></blockquote><p>通过上述两个命令的操作发现一个结论：</p><p><strong>当切换到的用户权限如果比当前用户的权限低，可以直接切换，不需要密码；反之，如果从低往高切换则要求输入被切换到的账户对应的密码。</strong></p><h3 id="cd指令"><a class="header-anchor" href="#cd指令">¶</a>cd指令</h3><p>作用：切换目录（change directory）。</p><p><strong>语法：#cd</strong> <strong>需要切换到的路径（路径可以是相对路径，也可以是绝对路径）</strong></p><p><strong>路径可以写也可以不写，不写则表示切换到当前用户的家目录。</strong></p><p>例如：</p><p>1、从root用户家目录中切换到admin用户的家目录中</p><blockquote><p><strong>提示：在切换路径或者后期打开一个文件的时候可以多建议使用tab键（可以自动补全命令路径）。</strong></p></blockquote><p>2、切换用户切换到admin用户，然后从admin用户的家目录使用cd切换到root的家目录</p><p>#su admin</p><p>#cd /root</p><p>结论： <strong>低级用户没有权限访问高级用户相关的资源</strong>。</p><p><strong>关于路径：</strong></p><p>路径分为相对路径和绝对路径。</p><p>相对路径是相对当前路径的一种表现形式。</p><p>特点：只要不是以“/”开头的就是相对路径。</p><p>绝对路径是直接从“根”开始的一种路径形式。</p><p>特点：以“/”开头的路径称之为绝对路径。</p><p>案例：从root用户家目录中切换到admin用户的家目录中，要求以相对路径形式书写。</p><p>#cd …/home/admin</p><p>分析：</p><p>​     当前路径：**/**root</p><p>​     目标路径：**/**home/admin</p>]]></content>
    
    
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; class=&quot;aplayer-secondary-script-marker&quot;&gt;&lt;/script&gt;&lt;h1&gt;简单命令&lt;/h1&gt;
&lt;h2 id=&quot;常用系统工作命令&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#常用系统工作命令&quot;&gt;¶&lt;/a&gt;常用系统工作命令&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;echo命令&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;用于在终端输出字符串或变量提取后的值，格式为&amp;quot;echo[字符串|$变量]&amp;quot;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;相当于打印字符串/提取变量的值&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[hello@hello Desktop]$ echo $SHELL&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/bin/bash&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol start=&quot;2&quot;&gt;
&lt;li&gt;date命令&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;用于显示及设置系统的时间或日期，格式为&amp;quot;&lt;code&gt;date[选项][+指定的格式]&lt;/code&gt;&amp;quot;&lt;/p&gt;
&lt;p&gt;只需在强大的date命令中输入以“+”号开头的参数，即可按照指定格式来输出系统的时间或日期，这样在日常工作时便可以把备份数据的命令与指定格式输出的时间信息结合到一起。&lt;/p&gt;</summary>
    
    
    
    <category term="linux" scheme="http://stardust14.com/categories/linux/"/>
    
    
    <category term="linux" scheme="http://stardust14.com/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>python爬虫</title>
    <link href="http://stardust14.com/2020/10/20/python%E7%88%AC%E8%99%AB/"/>
    <id>http://stardust14.com/2020/10/20/python%E7%88%AC%E8%99%AB/</id>
    <published>2020-10-20T08:29:35.000Z</published>
    <updated>2020-10-20T08:29:35.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1>预备知识</h1><h2 id="正则法则"><a class="header-anchor" href="#正则法则">¶</a>正则法则</h2><table><thead><tr><th style="text-align:center">字符</th><th style="text-align:center">描述</th></tr></thead><tbody><tr><td style="text-align:center"><code>\d</code></td><td style="text-align:center">代表任意数字，就是阿拉伯数字 0-9 这些玩意。</td></tr><tr><td style="text-align:center"><code>\D</code></td><td style="text-align:center">大写的就是和小写的唱反调，\d 你代表的是任意数字是吧？那么我 \D 就代表不是数字的。</td></tr><tr><td style="text-align:center"><code>\w</code></td><td style="text-align:center">代表字母，数字，下划线。也就是 a-z、A-Z、0-9、_。</td></tr><tr><td style="text-align:center"><code>\W</code></td><td style="text-align:center">跟 \w 唱反调，代表不是字母，不是数字，不是下划线的。</td></tr><tr><td style="text-align:center"><code>\n</code></td><td style="text-align:center">代表一个换行。</td></tr><tr><td style="text-align:center"><code>\r</code></td><td style="text-align:center">代表一个回车。</td></tr><tr><td style="text-align:center"><code>\f</code></td><td style="text-align:center">代表换页。</td></tr><tr><td style="text-align:center"><code>\t</code></td><td style="text-align:center">代表一个 Tab 。</td></tr><tr><td style="text-align:center"><code>\s</code></td><td style="text-align:center">代表所有的空白字符，也就是上面这个：\n、\r、\t、\f。</td></tr><tr><td style="text-align:center"><code>\S</code></td><td style="text-align:center">跟 \s 唱反调，代表所有不是空白的字符。</td></tr><tr><td style="text-align:center"><code>\A</code></td><td style="text-align:center">代表字符串的开始。</td></tr><tr><td style="text-align:center"><code>\Z</code></td><td style="text-align:center">代表字符串的结束。</td></tr><tr><td style="text-align:center"><code>^</code></td><td style="text-align:center">匹配字符串开始的位置。</td></tr><tr><td style="text-align:center"><code>$</code></td><td style="text-align:center">匹配字符创结束的位置。</td></tr><tr><td style="text-align:center"><code>.</code></td><td style="text-align:center">代表所有的单个字符，除了 \n \r</td></tr><tr><td style="text-align:center"><code>[...]</code></td><td style="text-align:center">代表在 [] 范围内的字符，比如 [a-z] 就代表 a到z的字母</td></tr><tr><td style="text-align:center"><code>[^...]</code></td><td style="text-align:center">跟 […] 唱反调，代表不在 [] 范围内的字符</td></tr><tr><td style="text-align:center"><code>&#123;n&#125;</code></td><td style="text-align:center">匹配在 {n} 前面的东西，比如: o{2} 不能匹配 Bob 中的 o ，但是能匹配 food 中的两个o。</td></tr><tr><td style="text-align:center"><code>&#123;n,m&#125;</code></td><td style="text-align:center">匹配在 {n,m} 前面的东西，比如：o{1,3} 将匹配“fooooood”中的前三个o。</td></tr><tr><td style="text-align:center"><code>&#123;n，&#125;</code></td><td style="text-align:center">匹配在 {n,} 前面的东西，比如：o{2,} 不能匹配“Bob”中的“o”，但能匹配“foooood”中的所有o。</td></tr><tr><td style="text-align:center"><code>*</code></td><td style="text-align:center">和 {0,} 一个样，匹配 * 前面的 0 次或多次。 比如 zo* 能匹配“z”、“zo”以及“zoo”。</td></tr><tr><td style="text-align:center"><code>+</code></td><td style="text-align:center">和{1，} 一个样，匹配 + 前面 1 次或多次。 比如 zo+”能匹配“zo”以及“zoo”，但不能匹配“z”。</td></tr><tr><td style="text-align:center"><code>？</code></td><td style="text-align:center">和{0,1} 一个样，匹配 ？前面 0 次或 1 次。</td></tr><tr><td style="text-align:center"><code>a|b</code></td><td style="text-align:center">匹配 a 或者 b。</td></tr><tr><td style="text-align:center"><code>（）</code></td><td style="text-align:center">匹配括号里面的内容。</td></tr></tbody></table><p>例子：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#贪婪匹配</span></span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">content=<span class="string">&#x27;hello,world.xiaoshuaib has 100 bananas&#x27;</span></span><br><span class="line">res=re.match(<span class="string">&#x27;^he.*(\d+)\s.*s$&#x27;</span>,content)</span><br><span class="line">print(res.group(<span class="number">1</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">#结果是0</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#非贪婪匹配，多了个？</span></span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">content=<span class="string">&#x27;hello,world.xiaoshuaib has 100 bananas&#x27;</span></span><br><span class="line">res=re.match(<span class="string">&#x27;^he.*?(\d+)\s.*s$&#x27;</span>,content)</span><br><span class="line">print(res.group(<span class="number">1</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">#结果是100</span></span><br></pre></td></tr></table></figure><blockquote><p>所谓贪婪匹配就是第一段代码一个数一个数都要去匹配</p><p>而非贪婪是直接把 100 给匹配出来了</p></blockquote><blockquote><p><code>.\*？</code>:表示的就是匹配任意字符</p><p>.*？的 . 代表所有的单个字符，除了 \n \r</p></blockquote><p>字符串有换行:</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">content=<span class="string">&#x27;&#x27;&#x27;hello,world.xiaoshuaib </span></span><br><span class="line"><span class="string">has 100 bananas&#x27;&#x27;&#x27;</span></span><br><span class="line">res=re.match(<span class="string">&#x27;^he.*?(\d+)\s.*s$&#x27;</span>,content,re.S)</span><br><span class="line">print(res.group(<span class="number">1</span>))</span><br><span class="line"><span class="comment">#直接用 re.S </span></span><br></pre></td></tr></table></figure><p><strong>re.search</strong>:直接去扫描字符串,然后把匹配成功的<strong>第一个</strong>结果的返回</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">content=<span class="string">&#x27;&#x27;&#x27;hello,world.xiaoshuaib </span></span><br><span class="line"><span class="string">has 100 bananas&#x27;&#x27;&#x27;</span></span><br><span class="line">res=re.search(<span class="string">&#x27;he.*?(\d+)\s.*s&#x27;</span>,content,re.S)</span><br><span class="line">print(res.group(<span class="number">1</span>))</span><br></pre></td></tr></table></figure><p><strong>re.findall</strong>:轻松的获取所有匹配的内容</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#又在结尾多了个？</span></span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">content=<span class="string">&#x27;&#x27;&#x27;hello,world.xiaoshuaib has 100 bananas;</span></span><br><span class="line"><span class="string">hello,world.xiaoshuaib has 100 bananas;</span></span><br><span class="line"><span class="string">hello,world.xiaoshuaib has 100 bananas;</span></span><br><span class="line"><span class="string">hello,world.xiaoshuaib has 100 bananas;&#x27;&#x27;&#x27;</span></span><br><span class="line">res=re.findall(<span class="string">&#x27;he.*?(\d+)\s.*?s&#x27;</span>,content,re.S)</span><br><span class="line">print(res)</span><br></pre></td></tr></table></figure><p><strong>re.sub</strong>：替换字符/数字</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">content=<span class="string">&#x27;&#x27;&#x27;hello,world.xiaoshuaib has 100 bananas;</span></span><br><span class="line"><span class="string">hello,world.xiaoshuaib has 100 bananas;</span></span><br><span class="line"><span class="string">hello,world.xiaoshuaib has 100 bananas;</span></span><br><span class="line"><span class="string">hello,world.xiaoshuaib has 100 bananas;&#x27;&#x27;&#x27;</span></span><br><span class="line">content=re.sub(<span class="string">&#x27;\d+&#x27;</span>,<span class="string">&#x27;250&#x27;</span>,content)</span><br><span class="line">print(content)</span><br></pre></td></tr></table></figure><p><strong>re.compile</strong>：主要就是把我们的匹配符封装一下</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">content=<span class="string">&#x27;&#x27;&#x27;hello,world.xiaoshuaib has 100 bananas;</span></span><br><span class="line"><span class="string">hello,world.xiaoshuaib has 100 bananas;</span></span><br><span class="line"><span class="string">hello,world.xiaoshuaib has 100 bananas;</span></span><br><span class="line"><span class="string">hello,world.xiaoshuaib has 100 bananas;&#x27;&#x27;&#x27;</span></span><br><span class="line">pattern=re.compile(<span class="string">&#x27;he.*?(\d+)\s.*?s&#x27;</span>,re.S)</span><br><span class="line">res=re.findall(pattern,content)</span><br><span class="line">print(res)</span><br></pre></td></tr></table></figure><p>当当网爬虫：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">request_dandan</span>(<span class="params">url</span>):</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        response=requests.get(url)</span><br><span class="line">        <span class="keyword">if</span> response.status_code==<span class="number">200</span>:</span><br><span class="line">            <span class="keyword">return</span> response.text</span><br><span class="line">    <span class="keyword">except</span> requests.RequestException:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">parse_result</span>(<span class="params">html</span>):</span></span><br><span class="line">    pattern=re.compile(<span class="string">&#x27;&lt;li&gt;.*?list_num.*?(\d+).&lt;/div&gt;.*?&lt;img src&quot;(.*?)&quot;.*?class=&quot;name&quot;.*?title=&quot;(.*?)&quot;&gt;.*?class=&quot;star&quot;&gt;.*?class=&quot;tuijian&quot;&gt;(.*?)&lt;/span&gt;.?class=&quot;publisher_info&quot;&gt;.*?target=&quot;_blank&quot;&gt;(.*?)&lt;/a&gt;.*?class=&quot;biaosheng&quot;&gt;.*?&lt;span&gt;(.*?)&lt;/span&gt;&lt;/div&gt;.?&lt;p&gt;&lt;span\sclass=&quot;price_n&quot;&gt;￥(.*?)&lt;/span&gt;.*?&lt;/li&gt;&#x27;</span>,re.S)</span><br><span class="line">    items=re.finditer(pattern,html)</span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> items:</span><br><span class="line">        <span class="keyword">yield</span> &#123;</span><br><span class="line">            <span class="string">&#x27;range&#x27;</span>:item[<span class="number">0</span>],</span><br><span class="line">            <span class="string">&#x27;iamge&#x27;</span>:item[<span class="number">1</span>],</span><br><span class="line">            <span class="string">&#x27;title&#x27;</span>:item[<span class="number">2</span>],</span><br><span class="line">            <span class="string">&#x27;recommend&#x27;</span>:item[<span class="number">3</span>],</span><br><span class="line">            <span class="string">&#x27;author&#x27;</span>:item[<span class="number">4</span>],</span><br><span class="line">            <span class="string">&#x27;times&#x27;</span>:item[<span class="number">5</span>],</span><br><span class="line">            <span class="string">&#x27;price&#x27;</span>:item[<span class="number">6</span>]</span><br><span class="line">        &#125;</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">write_item_to_file</span>(<span class="params">item</span>):</span></span><br><span class="line">    print(<span class="string">&#x27;开始写入数据====&gt;&#x27;</span>+str(item))</span><br><span class="line">    <span class="keyword">with</span> open(<span class="string">&#x27;book.txt&#x27;</span>,<span class="string">&#x27;a&#x27;</span>,encoding=<span class="string">&#x27;UTF-8&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        f.write(json.dumps(item,ensure_ascii=<span class="literal">False</span>)+<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">        f.close()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>(<span class="params">page</span>):</span></span><br><span class="line">    url=<span class="string">&#x27;http://bang.dangdang.com/books/fivestars/01.00.00.00.00.00-recent30-0-0-1-1&#x27;</span>+str(page)</span><br><span class="line">    html=request_dandan(url)</span><br><span class="line">    items=parse_result(html)</span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> items:</span><br><span class="line">        write_item_to_file(item)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">26</span>):</span><br><span class="line">        main(i)</span><br></pre></td></tr></table></figure><h2 id="BeautifulSoup"><a class="header-anchor" href="#BeautifulSoup">¶</a>BeautifulSoup</h2><p>BeautifulSoup4将复杂HTML文档转换成一个复杂的树形结构，每个节点都是Python对象，所有对象可以归纳为四种:</p><ul><li>Tag</li><li>NavigableString</li><li>BeautifulSoup</li><li>comment</li></ul><ol><li>Tag</li></ol><p>标签及其内容，拿到她所找到的第一个内容</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib.request</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line">url=<span class="string">&quot;https://www.douban.com&quot;</span></span><br><span class="line">headers=&#123;</span><br><span class="line">    <span class="string">&quot;User-Agent&quot;</span>: <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.135 Safari/537.36&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># data=bytes(urllib.parse.urlencode(&#123;&#x27;name&#x27;:&#x27;eric&#x27;&#125;),encoding=&quot;utf-8&quot;)</span></span><br><span class="line">req=urllib.request.Request(url=url,headers=headers)</span><br><span class="line">reponse=urllib.request.urlopen(req)</span><br><span class="line">bs=BeautifulSoup(reponse,<span class="string">&quot;html.parser&quot;</span>)</span><br><span class="line"></span><br><span class="line">print(bs.a)<span class="comment">#拿到找到第一个标签的全部信息</span></span><br></pre></td></tr></table></figure><ol start="2"><li>NavigableString</li></ol><p>标签里面的内容（字符串）</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">print(bs.title.string)<span class="comment">#拿到标签里的内容</span></span><br><span class="line">print(bs.a.attrs)  <span class="comment">#快速拿到一个标签里所有的属性，并返回一个字典</span></span><br></pre></td></tr></table></figure><ol start="3"><li>BeautifulSoup</li></ol><p>表示整个文档</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">print(bs)</span><br></pre></td></tr></table></figure><ol start="4"><li>comment</li></ol><p>是一个特殊的NavigableString，输出的内容不包含注释符号</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">print(type(bs.title.string))</span><br></pre></td></tr></table></figure><h2 id="selenium"><a class="header-anchor" href="#selenium">¶</a>selenium</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"></span><br><span class="line">driver=webdriver.Chrome()<span class="comment">#创建了一个 Chrome 驱动</span></span><br><span class="line">driver.get(<span class="string">&quot;http://www.baidu.com&quot;</span>)<span class="comment">#使用 get 方法打开百度</span></span><br><span class="line"></span><br><span class="line">input=driver.find_element_by_css_selector(<span class="string">&#x27;#kw&#x27;</span>)<span class="comment">#id 定位也就是百度的搜索框所在的标签位置</span></span><br><span class="line">input.send_keys(<span class="string">&quot;hexo博客&quot;</span>)<span class="comment">#写入我们要搜索的内容</span></span><br><span class="line"></span><br><span class="line">button=driver.find_element_by_css_selector(<span class="string">&#x27;#su&#x27;</span>)<span class="comment">#相当于点击百度的百度一下按钮</span></span><br><span class="line">button.click()<span class="comment">#模拟点击一次鼠标</span></span><br></pre></td></tr></table></figure><p>当我们要在页面中获取一个元素的时候</p><p>可以使用这些方法</p><ul><li>find_element_by_id</li><li>find_element_by_name</li><li>find_element_by_xpath</li><li>find_element_by_link_text</li><li>find_element_by_partial_link_text</li><li>find_element_by_tag_name</li><li>find_element_by_class_name</li><li>find_element_by_css_selector</li></ul><p>想要在页面获取多个元素呢</p><p>就可以这样</p><ul><li>find_elements_by_name</li><li>find_elements_by_xpath</li><li>find_elements_by_link_text</li><li>find_elements_by_partial_link_text</li><li>find_elements_by_tag_name</li><li>find_elements_by_class_name</li><li>find_elements_by_css_selector</li></ul><h2 id="一些函数"><a class="header-anchor" href="#一些函数">¶</a>一些函数</h2><h3 id="class"><a class="header-anchor" href="#class">¶</a>class</h3><p>调用被封装的内容时，有两种情况：</p><ul><li>通过对象直接调用</li><li>通过self间接调用</li></ul><p>直接调用</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">obj1 = Foo(<span class="string">&#x27;chengd&#x27;</span>, <span class="number">18</span>)</span><br><span class="line"><span class="comment"># obj1.detail()  # Python默认会将obj1传给self参数，即：obj1.detail(obj1)，所以，此时方法内部的 self ＝ obj1，即：self.name 是 chengd ；self.age 是 18</span></span><br><span class="line">print(obj1.name)</span><br><span class="line">print(obj1.age)</span><br></pre></td></tr></table></figure><p>间接调用</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Foo</span>:</span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, name, age</span>):</span></span><br><span class="line">    self.name = name</span><br><span class="line">    self.age = age</span><br><span class="line">  </span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">detail</span>(<span class="params">self</span>):</span></span><br><span class="line">    print(self.name)</span><br><span class="line">    print(self.age)</span><br><span class="line">  </span><br><span class="line">obj1 = Foo(<span class="string">&#x27;chengd&#x27;</span>, <span class="number">18</span>)</span><br><span class="line">obj1.detail()  <span class="comment"># Python默认会将obj1传给self参数，即：obj1.detail(obj1)，所以，此时方法内部的 self ＝ obj1，即：self.name 是 chengd ；self.age 是 18</span></span><br><span class="line">  </span><br><span class="line">obj2 = Foo(<span class="string">&#x27;python&#x27;</span>, <span class="number">99</span>)</span><br><span class="line">obj2.detail()  <span class="comment"># Python默认会将obj2传给self参数，即：obj1.detail(obj2)，所以，此时方法内部的 self ＝ obj2，即：self.name 是 python ； self.age 是 99x</span></span><br></pre></td></tr></table></figure><h3 id="open"><a class="header-anchor" href="#open">¶</a>open</h3><p>open(path, ‘-模式-‘,encoding=’UTF-8’)<br>即open(路径+文件名, 读写模式, 编码)</p><p>读写模式：<br>r ：只读<br>r+ : 读写<br>w ： 新建（会对原有文件进行覆盖）<br>a ： 追加<br>b ： 二进制文件</p><p>常用的模式有：<br>“a” 以“追加”模式打开， (从 EOF 开始, 必要时创建新文件)<br>“a+” 以”读写”模式打开<br>“ab” 以”二进制 追加”模式打开<br>“ab+” 以”二进制 读写”模式打开</p><p>“w” 以”写”的方式打开<br>“w+” 以“读写”模式打开<br>“wb” 以“二进制 写”模式打开<br>“wb+” 以“二进制 读写”模式打开</p><p>“r+” 以”读写”模式打开<br>“rb” 以”二进制 读”模式打开<br>“rb+” 以”二进制 读写”模式打开</p><p>f.write(“hello\n”) #如果要写入字符串以外的数据,先将他转换为字符串.</p><h3 id="with函数"><a class="header-anchor" href="#with函数">¶</a>with函数</h3><p>工作原理</p><p><strong>紧跟with后面的语句会被求值，返回对象的__enter__()方法被调用，这个方法的返回值将被赋值给as关键字后面的变量，当with后面的代码块全部被执行完之后，将调用前面返回对象的__exit__()方法。</strong></p><blockquote><p><strong><em>enter</em>_()方法在语句体（with语句包裹起来的代码块）执行之前进入运行，<strong>exit</strong>()方法在语句体执行完毕退出后运行。</strong></p></blockquote><h3 id="write函数"><a class="header-anchor" href="#write函数">¶</a>write函数</h3><p>用于向文件中写入指定字符串。</p><h3 id="sys-stdout-write"><a class="header-anchor" href="#sys-stdout-write">¶</a>sys.stdout.write</h3><p>sys.stdout.write(&quot; “）的本质是print(” “, end=”&quot;)</p><h1>实例</h1><h2 id="豆瓣爬虫"><a class="header-anchor" href="#豆瓣爬虫">¶</a>豆瓣爬虫</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> xlwt</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> urllib.request,urllib.error</span><br><span class="line"><span class="keyword">import</span> _sqlite3</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">    baseurl=<span class="string">&quot;https://movie.douban.com/top250?start=&quot;</span></span><br><span class="line">    <span class="comment">#1.爬取网页</span></span><br><span class="line">    datalist=getDate(baseurl)</span><br><span class="line">    savepath=<span class="string">&quot;.\\豆瓣电影Top250.xls&quot;</span></span><br><span class="line">    <span class="comment"># 3.保存数据</span></span><br><span class="line">    saveDate(datalist,savepath)</span><br><span class="line">    <span class="comment"># askURL(baseurl)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#影片详情的规则</span></span><br><span class="line">findLink=re.compile(<span class="string">r&#x27;&lt;a href=&quot;(.*?)&quot;&gt;&#x27;</span>)       <span class="comment">#创建正则表达式对象，表示规则（字符串的模式）</span></span><br><span class="line"><span class="comment">#影片片名</span></span><br><span class="line">findTitle=re.compile(<span class="string">r&#x27;&lt;span class=&quot;title&quot;&gt;(.*)&lt;/span&gt;&#x27;</span>)</span><br><span class="line"><span class="comment">#影片的图片</span></span><br><span class="line">findImg=re.compile(<span class="string">r&#x27;&lt;img.*src=&quot;(.*?)&quot;&#x27;</span>,re.S)</span><br><span class="line"><span class="comment">#影片评分</span></span><br><span class="line">findRating=re.compile(<span class="string">r&#x27;&lt;span.*property.*&gt;(.*)&lt;/span&gt;&#x27;</span>)</span><br><span class="line"><span class="comment">#影片评价人数</span></span><br><span class="line">findPeople=re.compile(<span class="string">r&#x27;&lt;span&gt;(.*)&lt;/span&gt;&#x27;</span>)</span><br><span class="line"><span class="comment">#找到概况</span></span><br><span class="line">findInq=re.compile(<span class="string">r&#x27;&lt;span class=&quot;inq&quot;&gt;(.*)&lt;/span&gt;&#x27;</span>)</span><br><span class="line"><span class="comment">#找到影片的相关内容</span></span><br><span class="line">findBd=re.compile(<span class="string">r&#x27;&lt;p class=&quot;&quot;&gt;(.*?)&lt;/p&gt;&#x27;</span>,re.S)</span><br><span class="line"></span><br><span class="line"><span class="comment">#爬取网页</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getDate</span>(<span class="params">baseurl</span>):</span></span><br><span class="line">    datalist=[]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">10</span>):       <span class="comment">#调用获取页面信息的函数，10次</span></span><br><span class="line">        url=baseurl+str(i*<span class="number">25</span>)</span><br><span class="line">        html=askURL(url)        <span class="comment">#保存获取到的网页源码</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 2.逐一解析网页</span></span><br><span class="line">        soup=BeautifulSoup(html,<span class="string">&quot;html.parser&quot;</span>)</span><br><span class="line">        <span class="keyword">for</span> item <span class="keyword">in</span> soup.find_all(<span class="string">&#x27;div&#x27;</span>,class_=<span class="string">&quot;item&quot;</span>):</span><br><span class="line">            <span class="comment"># print(item)#测试查看电影item全部信息</span></span><br><span class="line">            data=[]<span class="comment">#保存一部电影的全部信息</span></span><br><span class="line">            item=str(item)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="comment">#获取到影片详情的链接</span></span><br><span class="line">            link=re.findall(findLink,item)[<span class="number">0</span>]   <span class="comment">#用re用来通过正则表达式查找指定的字符串</span></span><br><span class="line">            data.append(link)</span><br><span class="line">            <span class="comment"># print(link)</span></span><br><span class="line">            title=re.findall(findTitle,item)     <span class="comment">#影片名字</span></span><br><span class="line">            <span class="keyword">if</span>(len(title)==<span class="number">2</span>):</span><br><span class="line">                ctitle=title[<span class="number">0</span>]     <span class="comment">#添加中国名</span></span><br><span class="line">                data.append(ctitle)</span><br><span class="line">                otitle=title[<span class="number">1</span>].replace(<span class="string">&quot;/&quot;</span>,<span class="string">&quot;&quot;</span>)<span class="comment">#去掉无关的符号</span></span><br><span class="line">                data.append(otitle) <span class="comment">#添加外国名</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                data.append(title[<span class="number">0</span>])</span><br><span class="line">                data.append(<span class="string">&#x27; &#x27;</span>)        <span class="comment">#外国名留空</span></span><br><span class="line">            <span class="comment"># print(title)</span></span><br><span class="line">            img=re.findall(findImg,item)[<span class="number">0</span>]     <span class="comment">#影片图片</span></span><br><span class="line">            data.append(img)</span><br><span class="line">            <span class="comment"># print(img)</span></span><br><span class="line">            rate=re.findall(findRating,item)[<span class="number">0</span>]     <span class="comment">#评价分数</span></span><br><span class="line">            data.append(rate)</span><br><span class="line">            <span class="comment"># print(rate)</span></span><br><span class="line">            people=re.findall(findPeople,item)[<span class="number">0</span>]      <span class="comment">#评价人数</span></span><br><span class="line">            data.append(people)</span><br><span class="line">            <span class="comment"># print(people)</span></span><br><span class="line">            inp=re.findall(findInq,item)     <span class="comment">#评价概述</span></span><br><span class="line">            <span class="keyword">if</span> len(inp)!=<span class="number">0</span>:</span><br><span class="line">                inp=inp[<span class="number">0</span>].replace(<span class="string">&quot;。&quot;</span>,<span class="string">&quot;&quot;</span>)  <span class="comment">#去掉句号</span></span><br><span class="line">                data.append(inp)            <span class="comment">#添加注释</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                data.append(<span class="string">&quot; &quot;</span>)            <span class="comment">#留空</span></span><br><span class="line">            <span class="comment"># print(inp)</span></span><br><span class="line">            bd=re.findall(findBd,item)[<span class="number">0</span>]       <span class="comment">#影片相关内容</span></span><br><span class="line">            bd=re.sub(<span class="string">&#x27;&lt;br(\s+)?/&gt;(\s+)?&#x27;</span>,<span class="string">&quot; &quot;</span>,bd)   <span class="comment">#去掉br</span></span><br><span class="line">            bd=re.sub(<span class="string">&#x27;/&#x27;</span>,<span class="string">&quot; &quot;</span>,bd)       <span class="comment">#替换</span></span><br><span class="line">            data.append(bd.strip())     <span class="comment">#去掉前后的空格</span></span><br><span class="line">            <span class="comment"># print(bd)</span></span><br><span class="line">            datalist.append(data)      <span class="comment">#把处理好的一部电影信息放入datalist</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># print(datalist)</span></span><br><span class="line">    <span class="keyword">return</span> datalist</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 得到指定一个URL的网页内容</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">askURL</span>(<span class="params">url</span>):</span></span><br><span class="line">    head=&#123;<span class="comment">#模拟浏览器头部信息，向豆瓣服务器发送消息</span></span><br><span class="line">        <span class="comment"># 用户代理，告诉豆瓣服务器，我们是什么类型的机器，浏览器（本质上是告诉浏览器，我么可以接收什么水平的文件内容）</span></span><br><span class="line">        <span class="string">&quot;User-Agent&quot;</span>: <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.135 Safari/537.36&quot;</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    request = urllib.request.Request(url,headers=head)</span><br><span class="line">    html=<span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        response=urllib.request.urlopen(request)</span><br><span class="line">        html=response.read().decode(<span class="string">&quot;utf-8&quot;</span>)</span><br><span class="line">        <span class="comment"># print(html)</span></span><br><span class="line">    <span class="keyword">except</span> urllib.error.URLError <span class="keyword">as</span> e:</span><br><span class="line">        <span class="keyword">if</span> hasattr(e,<span class="string">&quot;code&quot;</span>):</span><br><span class="line">            print(e.code)</span><br><span class="line">        <span class="keyword">if</span> hasattr(e,<span class="string">&quot;reason&quot;</span>):</span><br><span class="line">            print(e.reason)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> html</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#保存数据</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">saveDate</span>(<span class="params">datalist,savepath</span>):</span></span><br><span class="line">    book=xlwt.Workbook(encoding=<span class="string">&quot;utf-8&quot;</span>,style_compression=<span class="number">0</span>)<span class="comment">#创建workbook对象</span></span><br><span class="line">    sheet=book.add_sheet(<span class="string">&quot;豆瓣电影TOP250&quot;</span>,cell_overwrite_ok=<span class="literal">True</span>)<span class="comment">#创建工作表格</span></span><br><span class="line">    col=(<span class="string">&quot;电影详情链接&quot;</span>,<span class="string">&quot;电影中文名字&quot;</span>,<span class="string">&quot;电影外国名&quot;</span>,<span class="string">&quot;电影图片链接&quot;</span>,<span class="string">&quot;电影评分&quot;</span>,<span class="string">&quot;电影评分人数&quot;</span>,<span class="string">&quot;电影概述&quot;</span>,<span class="string">&quot;电影相关内容&quot;</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">8</span>):</span><br><span class="line">        sheet.write(<span class="number">0</span>,i,col[i])<span class="comment">#列名</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">250</span>):</span><br><span class="line">        print(<span class="string">&quot;第%d条&quot;</span>%(i+<span class="number">1</span>))</span><br><span class="line">        data=datalist[i]</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">8</span>):</span><br><span class="line">            sheet.write(i+<span class="number">1</span>,j,data[j])</span><br><span class="line">    book.save(savepath)     <span class="comment">#保存</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br><span class="line">    print(<span class="string">&quot;爬取完毕！&quot;</span>)</span><br></pre></td></tr></table></figure><h2 id="当当网"><a class="header-anchor" href="#当当网">¶</a>当当网</h2><p>获取什么信息：</p><ul><li>书名</li><li>作者</li><li>封面链接</li><li>价格</li><li>出版日期</li><li>评价人数</li><li>五星好评的次数</li></ul><div class='tip error'><p>error:部分出现乱码，还未解决，应该是生僻字<p></div><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> xlwt</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> urllib.request,urllib.error</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">    baseurl=<span class="string">&quot;http://bang.dangdang.com/books/fivestars/01.00.00.00.00.00-recent30-0-0-1-&quot;</span></span><br><span class="line">    datalist = getDate(baseurl)</span><br><span class="line">    savepath=<span class="string">&quot;.\\当当网.xls&quot;</span></span><br><span class="line">    saveDate(datalist,savepath)</span><br><span class="line"><span class="comment">#书名</span></span><br><span class="line">findBook=re.compile(<span class="string">r&#x27;class=&quot;name&quot;.*?title=&quot;(.*?)&quot;&gt;&#x27;</span>,re.S)</span><br><span class="line"><span class="comment">#作者</span></span><br><span class="line">findAuthor=re.compile(<span class="string">r&#x27;&lt;a href.*?key=(.*?)&quot;&#x27;</span>,re.S)</span><br><span class="line"><span class="comment"># #封面链接</span></span><br><span class="line">findLink=re.compile(<span class="string">r&#x27;.*?&quot; src=&quot;(.*?)&quot;&#x27;</span>)</span><br><span class="line"><span class="comment"># #非会员价格</span></span><br><span class="line">findPrice1=re.compile(<span class="string">r&#x27;&lt;span class=&quot;price_r&quot;&gt;(.*?)&lt;/span&gt;&#x27;</span>)</span><br><span class="line"><span class="comment">#会员价格</span></span><br><span class="line">findPrice2=re.compile(<span class="string">r&#x27;&lt;span class=&quot;price_n&quot;&gt;(.*?)&lt;/span&gt;&#x27;</span>,re.S)</span><br><span class="line"><span class="comment">#电子书价格</span></span><br><span class="line">findPrice3=re.compile(<span class="string">r&#x27;&lt;p class=&quot;price_e&quot;&gt;.*&quot;price_n&quot;&gt;(.*?)&lt;/span&gt;&#x27;</span>,re.S)</span><br><span class="line"><span class="comment"># #出版日期</span></span><br><span class="line">findDate=re.compile(<span class="string">r&#x27;.*?_info&quot;&gt;&lt;span&gt;(.*?)&lt;/span&gt;&#x27;</span>)</span><br><span class="line"><span class="comment"># # 评价人数</span></span><br><span class="line">findPeople=re.compile(<span class="string">r&#x27;&quot;star&quot;&gt;.*?&quot;_blank&quot;&gt;(.*?)&lt;/a&gt;&#x27;</span>)</span><br><span class="line"><span class="comment"># #五星好评次数</span></span><br><span class="line">findStar=re.compile(<span class="string">r&#x27;&quot;biaosheng&quot;&gt;.*?&lt;span&gt;(.*?)&lt;/span&gt;&#x27;</span>)</span><br><span class="line"><span class="comment"># 出版社</span></span><br><span class="line">findPrint=re.compile(<span class="string">r&#x27;&quot;publisher_info&quot;&gt;.*?&quot;_blank&quot;&gt;(.*?)&lt;/a&gt;&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getDate</span>(<span class="params">baseurl</span>):</span></span><br><span class="line">    datalist=[]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">26</span>):</span><br><span class="line">        url=baseurl+str(i)</span><br><span class="line">        html = askURL(url)  <span class="comment"># 保存获取到的网页源码</span></span><br><span class="line">        <span class="comment"># print(html)</span></span><br><span class="line"></span><br><span class="line">        soup=BeautifulSoup(html,<span class="string">&quot;html.parser&quot;</span>)</span><br><span class="line">        <span class="comment"># print(soup)</span></span><br><span class="line">        <span class="keyword">for</span> item <span class="keyword">in</span> soup.find_all(<span class="string">&#x27;ul&#x27;</span>,class_=<span class="string">&quot;bang_list&quot;</span>):</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> item.find_all(<span class="string">&#x27;li&#x27;</span>):</span><br><span class="line"></span><br><span class="line">                data=[]</span><br><span class="line">                item=str(i)</span><br><span class="line">                <span class="comment"># print(item)</span></span><br><span class="line"></span><br><span class="line">                book=re.findall(findBook,item)[<span class="number">0</span>]   <span class="comment">#书名</span></span><br><span class="line">                <span class="comment"># print(book)</span></span><br><span class="line">                data.append(book)</span><br><span class="line">                author=re.findall(findAuthor,item)[<span class="number">0</span>]   <span class="comment">#作者</span></span><br><span class="line">                <span class="comment"># print(author)</span></span><br><span class="line">                data.append(author)</span><br><span class="line">                img=re.findall(findLink,item)[<span class="number">0</span>]        <span class="comment">#图片链接</span></span><br><span class="line">                <span class="comment"># print(img)</span></span><br><span class="line">                data.append(img)</span><br><span class="line">                price=re.findall(findPrice1,item)[<span class="number">0</span>]        <span class="comment">#非会员书籍价格</span></span><br><span class="line">                data.append(price)</span><br><span class="line">                vipPrice=re.findall(findPrice2,item)[<span class="number">0</span>]     <span class="comment">#会员书籍价格</span></span><br><span class="line">                <span class="comment"># print(vipPrice)</span></span><br><span class="line">                data.append(vipPrice)</span><br><span class="line">                EbookPrice = re.findall(findPrice3, item)</span><br><span class="line">                <span class="comment"># print(price)</span></span><br><span class="line">                <span class="keyword">if</span> (len(EbookPrice) == <span class="number">1</span>):</span><br><span class="line">                    Eprice = EbookPrice[<span class="number">0</span>]</span><br><span class="line">                    data.append(Eprice)</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="comment"># data.append(price)</span></span><br><span class="line">                    data.append(<span class="string">&#x27; &#x27;</span>)</span><br><span class="line">                <span class="comment"># print(data)</span></span><br><span class="line">                date=re.findall(findDate,item)[<span class="number">0</span>]       <span class="comment">#出版日期</span></span><br><span class="line">                data.append(date)</span><br><span class="line">                <span class="comment"># print(date)</span></span><br><span class="line">                people=re.findall(findPeople,item)[<span class="number">0</span>]      <span class="comment">#评价人数</span></span><br><span class="line">                <span class="comment"># print(people)</span></span><br><span class="line">                data.append(people)</span><br><span class="line">                star=re.findall(findStar,item)[<span class="number">0</span>]   <span class="comment">#五星好评数</span></span><br><span class="line">                <span class="comment"># print(star)</span></span><br><span class="line">                data.append(star)</span><br><span class="line">                Print=re.findall(findPrint,item)[<span class="number">0</span>]     <span class="comment">#出版社</span></span><br><span class="line">                <span class="comment"># print(Print)</span></span><br><span class="line">                data.append(Print)</span><br><span class="line">                datalist.append(data)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># print(data)</span></span><br><span class="line">    <span class="keyword">return</span> datalist</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">askURL</span>(<span class="params">url</span>):</span></span><br><span class="line">    head=&#123;<span class="comment">#模拟浏览器头部信息，向豆瓣服务器发送消息</span></span><br><span class="line">        <span class="comment"># 用户代理，告诉豆瓣服务器，我们是什么类型的机器，浏览器（本质上是告诉浏览器，我么可以接收什么水平的文件内容）</span></span><br><span class="line">        <span class="string">&quot;User-Agent&quot;</span>: <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.135 Safari/537.36&quot;</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    request = urllib.request.Request(url,headers=head)</span><br><span class="line">    html=<span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        response=urllib.request.urlopen(request)</span><br><span class="line">        html=response.read()<span class="comment">#.decode(&quot;gb2312&quot;)</span></span><br><span class="line">        <span class="comment"># print(html)</span></span><br><span class="line">    <span class="keyword">except</span> urllib.error.URLError <span class="keyword">as</span> e:</span><br><span class="line">        <span class="keyword">if</span> hasattr(e,<span class="string">&quot;code&quot;</span>):</span><br><span class="line">            print(e.code)</span><br><span class="line">        <span class="keyword">if</span> hasattr(e,<span class="string">&quot;reason&quot;</span>):</span><br><span class="line">            print(e.reason)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> html</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">saveDate</span>(<span class="params">datalist,savepath</span>):</span></span><br><span class="line">    book=xlwt.Workbook(encoding=<span class="string">&quot;utf-8&quot;</span>,style_compression=<span class="number">0</span>)</span><br><span class="line">    sheet=book.add_sheet(<span class="string">&quot;当当网书籍&quot;</span>,cell_overwrite_ok=<span class="literal">True</span>)</span><br><span class="line">    col=(<span class="string">&quot;书名&quot;</span>,<span class="string">&quot;作者&quot;</span>,<span class="string">&quot;封面链接&quot;</span>,<span class="string">&quot;非会员价格&quot;</span>,<span class="string">&quot;VIP价格&quot;</span>,<span class="string">&quot;电子书价格&quot;</span>,<span class="string">&quot;出版日期&quot;</span>,<span class="string">&quot;评价人数&quot;</span>,<span class="string">&quot;五星好评数&quot;</span>,<span class="string">&quot;出版社&quot;</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">10</span>):</span><br><span class="line">        sheet.write(<span class="number">0</span>,i,col[i])</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">500</span>):</span><br><span class="line">        print(<span class="string">&quot;第%d条&quot;</span>%(i+<span class="number">1</span>))</span><br><span class="line">        data=datalist[i]</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">10</span>):</span><br><span class="line">            sheet.write(i+<span class="number">1</span>,j,data[j])</span><br><span class="line">    book.save(savepath)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br><span class="line">    print(<span class="string">&quot;爬取结束！&quot;</span>)</span><br></pre></td></tr></table></figure><h2 id="小说爬取成txt格式"><a class="header-anchor" href="#小说爬取成txt格式">¶</a>小说爬取成txt格式</h2><h3 id="一念永恒-txt"><a class="header-anchor" href="#一念永恒-txt">¶</a>一念永恒.txt</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="comment">#在类中定义的函数只有一点不同，就是第一个参数永远是实例变量self</span></span><br><span class="line"><span class="comment"># 类外面的叫函数(function)不叫方法(method)。</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">download</span>(<span class="params">object</span>):</span>         <span class="comment">#用来描述具有相同的属性和方法的对象的集合</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span>     <span class="comment">#__init__方法的第一个参数永远是self，表示创建的实例本身</span></span><br><span class="line">        self.sever = <span class="string">&#x27;https://www.biqukan.com/&#x27;</span></span><br><span class="line">        self.baseurl = <span class="string">&#x27;https://www.biqukan.com/1_1094/&#x27;</span></span><br><span class="line">        self.titleNames=[]      <span class="comment">#章节的名字</span></span><br><span class="line">        self.titleUrls = []     <span class="comment">#章节的链接</span></span><br><span class="line">        self.titleNums=<span class="number">0</span>        <span class="comment">#章节数</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># def main():</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment">#     baseurl = &#x27;https://www.biqukan.com/1_1094/&#x27;</span></span><br><span class="line">    <span class="comment">#     # req = requests.get(url=baseurl)</span></span><br><span class="line">    <span class="comment">#     # html = req.text</span></span><br><span class="line">    <span class="comment">#     getData(self.baseurl)</span></span><br><span class="line">    <span class="comment">#     # askURL(baseurl)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">getData</span>(<span class="params">self</span>):</span>      <span class="comment">#可以访问初始化self的定义值</span></span><br><span class="line">        head = &#123;  <span class="comment"># 模拟浏览器头部信息，向豆瓣服务器发送消息</span></span><br><span class="line">            <span class="comment"># 用户代理，告诉豆瓣服务器，我们是什么类型的机器，浏览器（本质上是告诉浏览器，我么可以接收什么水平的文件内容）</span></span><br><span class="line">            <span class="string">&quot;User-Agent&quot;</span>: <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.135 Safari/537.36&quot;</span></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"># datalist=[]</span></span><br><span class="line">        <span class="comment"># titleNums=0</span></span><br><span class="line">        <span class="comment"># url = self.baseurl</span></span><br><span class="line">        <span class="comment"># html=askURL(url)</span></span><br><span class="line">        response = requests.get(url=self.baseurl, headers=head)</span><br><span class="line">        response.encoding = <span class="string">&quot;gb2312&quot;</span></span><br><span class="line">        html = response.text</span><br><span class="line">        bf = BeautifulSoup(html, <span class="string">&quot;html.parser&quot;</span>)</span><br><span class="line">        div=bf.find_all(<span class="string">&#x27;div&#x27;</span>,class_=<span class="string">&#x27;listmain&#x27;</span>)</span><br><span class="line">        a_bf=BeautifulSoup(str(div[<span class="number">0</span>]),<span class="string">&quot;lxml&quot;</span>)</span><br><span class="line">        a=a_bf.find_all(<span class="string">&#x27;a&#x27;</span>)</span><br><span class="line">        self.titleNums=len(a[<span class="number">13</span>:])</span><br><span class="line">        <span class="keyword">for</span> each <span class="keyword">in</span> a[<span class="number">13</span>:]:</span><br><span class="line">            self.titleNames.append(each.string)</span><br><span class="line">            self.titleUrls.append(self.sever+each.get(<span class="string">&#x27;href&#x27;</span>))</span><br><span class="line">            <span class="comment"># print(each.string,sever+each.get(&#x27;href&#x27;))</span></span><br><span class="line">        <span class="comment"># print(bf)</span></span><br><span class="line">        <span class="comment"># for item in bf.find_all()</span></span><br><span class="line">        <span class="comment"># print(self.titleNames)</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">saveBook</span>(<span class="params">self,name,path,text</span>):</span>  <span class="comment">#第一个参数永远是self，实际调用写入self后面的参数即可</span></span><br><span class="line">        write_flag=<span class="literal">True</span></span><br><span class="line">        <span class="keyword">with</span> open(path,<span class="string">&#x27;a&#x27;</span>,encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> f:  <span class="comment">#open(路径+文件名, 读写模式, 编码)</span></span><br><span class="line">            f.write(name+<span class="string">&#x27;\n&#x27;</span>)      <span class="comment">#写入path中多行，用于向文件中写入指定字符串。</span></span><br><span class="line">            f.writelines(text)      <span class="comment">#既可以传入字符串又可以传入一个字符序列,并将该字符序列写入文件</span></span><br><span class="line">            f.write(<span class="string">&#x27;\n\n&#x27;</span>)         <span class="comment">#写入回车换行</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">getContent</span>(<span class="params">self,baseurl</span>):</span></span><br><span class="line">        head = &#123;  <span class="comment"># 模拟浏览器头部信息，向豆瓣服务器发送消息</span></span><br><span class="line">            <span class="comment"># 用户代理，告诉豆瓣服务器，我们是什么类型的机器，浏览器（本质上是告诉浏览器，我么可以接收什么水平的文件内容）</span></span><br><span class="line">            <span class="string">&quot;User-Agent&quot;</span>: <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.135 Safari/537.36&quot;</span></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment"># url = baseurl</span></span><br><span class="line">        response = requests.get(url=baseurl, headers=head)</span><br><span class="line">        response.encoding = <span class="string">&quot;gb2312&quot;</span></span><br><span class="line">        html = response.text</span><br><span class="line"></span><br><span class="line">        <span class="comment"># html = askURL(url)</span></span><br><span class="line">        bf = BeautifulSoup(html, <span class="string">&quot;html.parser&quot;</span>)</span><br><span class="line">        texts=bf.find_all(<span class="string">&#x27;div&#x27;</span>,class_=<span class="string">&#x27;showtxt&#x27;</span>)</span><br><span class="line">        texts=texts[<span class="number">0</span>].text.replace(<span class="string">&#x27;\xa0&#x27;</span>*<span class="number">8</span>,<span class="string">&#x27;\n\n&#x27;</span>)    <span class="comment">#去除空格八次，用回车换行替换</span></span><br><span class="line">        <span class="keyword">return</span> texts    <span class="comment">#返回每一章的内容</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment"># def askURL(url):</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment">#     # request = requests.get(url, headers=head)</span></span><br><span class="line">    <span class="comment">#     response = requests.get(url=url,headers=head)</span></span><br><span class="line">    <span class="comment">#     html = &quot;&quot;</span></span><br><span class="line">    <span class="comment">#     try:</span></span><br><span class="line">    <span class="comment">#         if response.status_code == 200:</span></span><br><span class="line">    <span class="comment">#             response.encoding = &quot;gb2312&quot;</span></span><br><span class="line">    <span class="comment">#             html = response.text</span></span><br><span class="line">    <span class="comment">#     except requests.RequestException:</span></span><br><span class="line">    <span class="comment">#         return None</span></span><br><span class="line">    <span class="comment">#     return html</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    d1=download()<span class="comment">#这里对类进行实例化</span></span><br><span class="line">    d1.getData()<span class="comment">#调用类中定义的方法</span></span><br><span class="line">    print(<span class="string">&#x27;小说开始下载：&#x27;</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(d1.titleNums):   <span class="comment">#i循环总章节次</span></span><br><span class="line">        d1.saveBook(d1.titleNames[i],<span class="string">&#x27;白小纯.txt&#x27;</span>,d1.getContent(d1.titleUrls[i]))<span class="comment">#调用方法，没有txt就创建，设置i是调用不同的章节链接</span></span><br><span class="line">        sys.stdout.write(<span class="string">&quot;已下载:%.3f%%&quot;</span>%  float(i/d1.titleNums) + <span class="string">&#x27;\r&#x27;</span>)<span class="comment">#%格式化输出</span></span><br><span class="line">        <span class="comment">#.3f保留三位小数</span></span><br><span class="line">        sys.stdout.flush()<span class="comment">#强制其“刷新”缓冲区，刷新输出</span></span><br><span class="line">        <span class="comment"># main()</span></span><br><span class="line">    print(<span class="string">&#x27;小说下载完成&#x27;</span>)</span><br></pre></td></tr></table></figure><h2 id="妹子图"><a class="header-anchor" href="#妹子图">¶</a>妹子图</h2><p>不完美，ip被禁！</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> concurrent.futures <span class="keyword">import</span> ThreadPoolExecutor</span><br><span class="line"><span class="keyword">import</span> concurrent</span><br><span class="line"></span><br><span class="line"><span class="comment">#获取每一页的章节链接</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getPageUrls</span>():</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">2</span>):</span><br><span class="line">        baseurl=<span class="string">&#x27;https://www.mzitu.com/page/&#123;&#125;&#x27;</span>.format(i)</span><br><span class="line">        head = &#123;</span><br><span class="line">            <span class="string">&quot;DNT&quot;</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">            <span class="string">&quot;Referer&quot;</span>: <span class="string">&quot;https://www.mzitu.com/&quot;</span>,</span><br><span class="line">            <span class="comment"># 用户代理，告诉豆瓣服务器，我们是什么类型的机器，浏览器（本质上是告诉浏览器，我么可以接收什么水平的文件内容）</span></span><br><span class="line">            <span class="string">&quot;User-Agent&quot;</span>: <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.135 Safari/537.36&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">        response=requests.get(url=baseurl,headers=head,)</span><br><span class="line">        response.encoding=<span class="string">&quot;utf-8&quot;</span></span><br><span class="line">        html=response.text</span><br><span class="line">        soup=BeautifulSoup(html,<span class="string">&#x27;lxml&#x27;</span>)</span><br><span class="line">        list=soup.find(class_=<span class="string">&#x27;postlist&#x27;</span>).find_all(<span class="string">&#x27;li&#x27;</span>)</span><br><span class="line">        urls=[]</span><br><span class="line">        <span class="keyword">for</span> item <span class="keyword">in</span> list:</span><br><span class="line">            url=item.find(<span class="string">&#x27;span&#x27;</span>).find(<span class="string">&#x27;a&#x27;</span>).get(<span class="string">&#x27;href&#x27;</span>)</span><br><span class="line">            <span class="comment"># print(&#x27;页面链接：%s&#x27;%url)</span></span><br><span class="line">            urls.append(url)</span><br><span class="line">    <span class="keyword">return</span> urls</span><br><span class="line"></span><br><span class="line"><span class="comment">#获取每一页的链接地址，并下载</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getPages</span>(<span class="params">url</span>):</span></span><br><span class="line">    head = &#123;</span><br><span class="line">        <span class="string">&quot;DNT&quot;</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">        <span class="string">&quot;Referer&quot;</span>: <span class="string">&quot;https://www.mzitu.com/&quot;</span>,</span><br><span class="line">        <span class="comment"># 用户代理，告诉豆瓣服务器，我们是什么类型的机器，浏览器（本质上是告诉浏览器，我么可以接收什么水平的文件内容）</span></span><br><span class="line">        <span class="string">&quot;User-Agent&quot;</span>: <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.135 Safari/537.36&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">    response = requests.get(url=url, headers=head)</span><br><span class="line">    response.encoding = <span class="string">&quot;utf-8&quot;</span></span><br><span class="line">    html = response.text</span><br><span class="line">    soup = BeautifulSoup(html, <span class="string">&#x27;lxml&#x27;</span>)</span><br><span class="line">    total = soup.find(class_=<span class="string">&#x27;pagenavi&#x27;</span>).find_all(<span class="string">&#x27;a&#x27;</span>)[<span class="number">-2</span>].find(<span class="string">&#x27;span&#x27;</span>).string</span><br><span class="line">    title = soup.find(<span class="string">&#x27;h2&#x27;</span>).string</span><br><span class="line">    imageList=[]</span><br><span class="line">    <span class="comment"># print(total)</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(int(total)):</span><br><span class="line">        <span class="comment"># html = request_page(url + &#x27;/%s&#x27; % (i + 1))</span></span><br><span class="line">        head = &#123;</span><br><span class="line">            <span class="string">&quot;DNT&quot;</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">            <span class="string">&quot;Referer&quot;</span>: <span class="string">&quot;https://www.mzitu.com/&quot;</span>,</span><br><span class="line">            <span class="comment"># 用户代理，告诉豆瓣服务器，我们是什么类型的机器，浏览器（本质上是告诉浏览器，我么可以接收什么水平的文件内容）</span></span><br><span class="line">            <span class="string">&quot;User-Agent&quot;</span>: <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.135 Safari/537.36&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">        response = requests.get(url=url + <span class="string">&#x27;/%s&#x27;</span> % (i + <span class="number">1</span>), headers=head)</span><br><span class="line">        response.encoding = <span class="string">&quot;utf-8&quot;</span></span><br><span class="line">        html = response.text</span><br><span class="line">        soup = BeautifulSoup(html, <span class="string">&#x27;lxml&#x27;</span>)</span><br><span class="line">        imgUrl = soup.find(<span class="string">&#x27;img&#x27;</span>).get(<span class="string">&#x27;src&#x27;</span>)</span><br><span class="line">        imageList.append(imgUrl)</span><br><span class="line">    <span class="comment"># print(imageList)</span></span><br><span class="line">    downloadAllImage(title,imageList)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#下载每一页的图片，并写入文件</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">downloadAllImage</span>(<span class="params">title,imagelist</span>):</span></span><br><span class="line">    os.mkdir(title)</span><br><span class="line">    j = <span class="number">1</span></span><br><span class="line">    head = &#123;</span><br><span class="line">        <span class="string">&quot;DNT&quot;</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">        <span class="string">&quot;Referer&quot;</span>: <span class="string">&quot;https://www.mzitu.com/&quot;</span>,</span><br><span class="line">        <span class="comment"># 用户代理，告诉豆瓣服务器，我们是什么类型的机器，浏览器（本质上是告诉浏览器，我么可以接收什么水平的文件内容）</span></span><br><span class="line">        <span class="string">&quot;User-Agent&quot;</span>: <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.135 Safari/537.36&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"># 下载图片</span></span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> imagelist:</span><br><span class="line">        filename = <span class="string">&#x27;%s/%s.jpg&#x27;</span> % (title, str(j))</span><br><span class="line">        print(<span class="string">&#x27;downloading....%s : NO.%s&#x27;</span> % (title, str(j)))</span><br><span class="line">        <span class="keyword">with</span> open(filename, <span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            img = requests.get(item, allow_redirects=<span class="literal">False</span>,headers=head)</span><br><span class="line">            f.write(img.content)</span><br><span class="line">        j += <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">download_all_images</span>(<span class="params">list_page_urls</span>):</span><span class="comment">#多线程下载</span></span><br><span class="line">    <span class="comment"># 获取每一个详情妹纸</span></span><br><span class="line">    <span class="comment"># works = len(list_page_urls)</span></span><br><span class="line">    <span class="keyword">with</span> concurrent.futures.ProcessPoolExecutor(max_workers=<span class="number">5</span>) <span class="keyword">as</span> exector:</span><br><span class="line">        <span class="keyword">for</span> url <span class="keyword">in</span> list_page_urls:</span><br><span class="line">            exector.submit(getPages, url)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="comment"># urls=getPageUrls()</span></span><br><span class="line">    <span class="comment"># getPages(&#x27;https://www.mzitu.com/218092&#x27;)</span></span><br><span class="line">    listPageUrls=getPageUrls()</span><br><span class="line">    <span class="comment"># print(listPageUrls)</span></span><br><span class="line">    download_all_images(listPageUrls)</span><br><span class="line">    print(<span class="string">&#x27;爬虫结束！&#x27;</span>)</span><br></pre></td></tr></table></figure><p>改进：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> concurrent.futures <span class="keyword">import</span> ThreadPoolExecutor</span><br><span class="line"><span class="keyword">import</span> concurrent</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getPageUrls</span>():</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">2</span>):</span><br><span class="line">        baseurl=<span class="string">&#x27;https://www.mzitu.com/page/&#123;&#125;&#x27;</span>.format(i)</span><br><span class="line">        proxy=&#123;</span><br><span class="line">            <span class="string">&#x27;http&#x27;</span>: <span class="string">&#x27;61.135.185.78:80&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;http&#x27;</span>: <span class="string">&#x27;61.135.185.172:80&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;http&#x27;</span>: <span class="string">&#x27;111.13.100.91:80&#x27;</span></span><br><span class="line">               &#125;</span><br><span class="line">        head = &#123;</span><br><span class="line">            <span class="string">&quot;DNT&quot;</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">            <span class="string">&quot;Referer&quot;</span>: <span class="string">&quot;https://www.mzitu.com/&quot;</span>,</span><br><span class="line">            <span class="comment"># 用户代理，告诉豆瓣服务器，我们是什么类型的机器，浏览器（本质上是告诉浏览器，我么可以接收什么水平的文件内容）</span></span><br><span class="line">            <span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows; U; Windows NT 5.1; it; rv:1.8.1.11) Gecko/20071127 Firefox/2.0.0.11&#x27;</span></span><br><span class="line">            <span class="comment"># &quot;User-Agent&quot;: &quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.135 Safari/537.36&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">        time.sleep(<span class="number">0.5</span>)<span class="comment">#设置访问间隔</span></span><br><span class="line">        response=requests.get(url=baseurl,headers=head,proxies=proxy)</span><br><span class="line">        response.encoding=<span class="string">&quot;utf-8&quot;</span></span><br><span class="line">        html=response.text</span><br><span class="line">        soup=BeautifulSoup(html,<span class="string">&#x27;lxml&#x27;</span>)</span><br><span class="line">        list=soup.find(class_=<span class="string">&#x27;postlist&#x27;</span>).find_all(<span class="string">&#x27;li&#x27;</span>)</span><br><span class="line">        urls=[]</span><br><span class="line">        <span class="keyword">for</span> item <span class="keyword">in</span> list:</span><br><span class="line">            url=item.find(<span class="string">&#x27;span&#x27;</span>).find(<span class="string">&#x27;a&#x27;</span>).get(<span class="string">&#x27;href&#x27;</span>)</span><br><span class="line">            <span class="comment"># print(&#x27;页面链接：%s&#x27;%url)</span></span><br><span class="line">            urls.append(url)</span><br><span class="line">    <span class="keyword">return</span> urls</span><br><span class="line"></span><br><span class="line"><span class="comment">#获取每一页的链接地址，并下载</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getPages</span>(<span class="params">url</span>):</span></span><br><span class="line">    proxy = &#123;<span class="string">&#x27;http&#x27;</span>: <span class="string">&#x27;61.135.185.78:80&#x27;</span>&#125;</span><br><span class="line">    head = &#123;</span><br><span class="line">        <span class="string">&quot;DNT&quot;</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">        <span class="string">&quot;Referer&quot;</span>: <span class="string">&quot;https://www.mzitu.com/&quot;</span>,</span><br><span class="line">        <span class="comment"># 用户代理，告诉豆瓣服务器，我们是什么类型的机器，浏览器（本质上是告诉浏览器，我么可以接收什么水平的文件内容）</span></span><br><span class="line">        <span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows; U; Windows NT 5.1; it; rv:1.8.1.11) Gecko/20071127 Firefox/2.0.0.11&#x27;</span></span><br><span class="line">        <span class="comment"># &quot;User-Agent&quot;: &quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.135 Safari/537.36&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">    time.sleep(<span class="number">0.5</span>)</span><br><span class="line">    response = requests.get(url=url, headers=head,proxies=proxy)</span><br><span class="line">    response.encoding = <span class="string">&quot;utf-8&quot;</span></span><br><span class="line">    html = response.text</span><br><span class="line">    soup = BeautifulSoup(html, <span class="string">&#x27;lxml&#x27;</span>)</span><br><span class="line">    total = soup.find(class_=<span class="string">&#x27;pagenavi&#x27;</span>).find_all(<span class="string">&#x27;a&#x27;</span>)[<span class="number">-2</span>].find(<span class="string">&#x27;span&#x27;</span>).string<span class="comment">#获取页数转换成字符串形式</span></span><br><span class="line">    title = soup.find(<span class="string">&#x27;h2&#x27;</span>).string<span class="comment">#找出标题</span></span><br><span class="line">    imageList=[]<span class="comment">#存储每一页的照片链接</span></span><br><span class="line">    <span class="comment"># print(total)</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(int(total)):</span><br><span class="line">        <span class="comment"># html = request_page(url + &#x27;/%s&#x27; % (i + 1))</span></span><br><span class="line">        proxy = &#123;<span class="string">&#x27;http&#x27;</span>: <span class="string">&#x27;61.135.185.78:80&#x27;</span>&#125;</span><br><span class="line">        head = &#123;</span><br><span class="line">            <span class="string">&quot;DNT&quot;</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">            <span class="string">&quot;Referer&quot;</span>: <span class="string">&quot;https://www.mzitu.com/&quot;</span>,</span><br><span class="line">            <span class="comment"># 用户代理，告诉豆瓣服务器，我们是什么类型的机器，浏览器（本质上是告诉浏览器，我么可以接收什么水平的文件内容）</span></span><br><span class="line">            <span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows; U; Windows NT 5.1; it; rv:1.8.1.11) Gecko/20071127 Firefox/2.0.0.11&#x27;</span></span><br><span class="line">            <span class="comment">#&quot;User-Agent&quot;: &quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.135 Safari/537.36&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">        time.sleep(<span class="number">0.5</span>)</span><br><span class="line">        response = requests.get(url=url + <span class="string">&#x27;/%s&#x27;</span> % (i + <span class="number">1</span>), headers=head,proxies=proxy)<span class="comment">#</span></span><br><span class="line">        response.encoding = <span class="string">&quot;utf-8&quot;</span></span><br><span class="line">        html = response.text</span><br><span class="line">        soup = BeautifulSoup(html, <span class="string">&#x27;lxml&#x27;</span>)</span><br><span class="line">        imgUrl = soup.find(<span class="string">&#x27;img&#x27;</span>).get(<span class="string">&#x27;src&#x27;</span>)<span class="comment">#找出每张照片的链接</span></span><br><span class="line">        imageList.append(imgUrl)</span><br><span class="line">    <span class="comment"># print(imageList)</span></span><br><span class="line">    downloadAllImage(title,imageList)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#下载每一页的图片，并写入文件</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">downloadAllImage</span>(<span class="params">title,imagelist</span>):</span></span><br><span class="line">    os.mkdir(title)</span><br><span class="line">    j = <span class="number">1</span></span><br><span class="line">    proxy = &#123;<span class="string">&#x27;http&#x27;</span>: <span class="string">&#x27;61.135.185.78:80&#x27;</span>&#125;</span><br><span class="line">    head = &#123;</span><br><span class="line">        <span class="string">&quot;DNT&quot;</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">        <span class="string">&quot;Referer&quot;</span>: <span class="string">&quot;https://www.mzitu.com/&quot;</span>,</span><br><span class="line">        <span class="comment"># 用户代理，告诉豆瓣服务器，我们是什么类型的机器，浏览器（本质上是告诉浏览器，我么可以接收什么水平的文件内容）</span></span><br><span class="line">        <span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows; U; Windows NT 5.1; it; rv:1.8.1.11) Gecko/20071127 Firefox/2.0.0.11&#x27;</span></span><br><span class="line">        <span class="comment">#&quot;User-Agent&quot;: &quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.135 Safari/537.36&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 下载图片</span></span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> imagelist:</span><br><span class="line">        filename = <span class="string">&#x27;%s/%s.jpg&#x27;</span> % (title, str(j))</span><br><span class="line">        print(<span class="string">&#x27;downloading....%s : NO.%s&#x27;</span> % (title, str(j)))</span><br><span class="line">        <span class="keyword">with</span> open(filename, <span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> f:<span class="comment">#打开新建的文件，并写入图片</span></span><br><span class="line">            time.sleep(<span class="number">0.5</span>)</span><br><span class="line">            img = requests.get(item, allow_redirects=<span class="literal">False</span>,headers=head,proxies=proxy)<span class="comment">#allow_redirects=False为拒绝默认的301/302重定向</span></span><br><span class="line">            <span class="comment"># 获取二进制数据; 注意: 这里不要解码, 因为图片,视频等文件都是二进制的不是文本,不需要解码</span></span><br><span class="line">            f.write(img.content)<span class="comment">#写入图片（下载图片）</span></span><br><span class="line">        j += <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#设置多线程</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">download_all_images</span>(<span class="params">list_page_urls</span>):</span></span><br><span class="line">    <span class="comment"># 获取每一个详情妹纸</span></span><br><span class="line">    <span class="comment"># works = len(list_page_urls)</span></span><br><span class="line">    <span class="keyword">with</span> concurrent.futures.ProcessPoolExecutor(max_workers=<span class="number">5</span>) <span class="keyword">as</span> exector:</span><br><span class="line">        <span class="keyword">for</span> url <span class="keyword">in</span> list_page_urls:</span><br><span class="line">            exector.submit(getPages, url)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="comment"># urls=getPageUrls()</span></span><br><span class="line">    <span class="comment"># print(urls)</span></span><br><span class="line">    <span class="comment"># getPages(&#x27;https://www.mzitu.com/218092&#x27;)</span></span><br><span class="line">    listPageUrls=getPageUrls()</span><br><span class="line">    <span class="comment"># print(listPageUrls)</span></span><br><span class="line">    download_all_images(listPageUrls)</span><br><span class="line">    print(<span class="string">&#x27;爬虫结束！&#x27;</span>)</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; class=&quot;aplayer-secondary-script-marker&quot;&gt;&lt;/script&gt;&lt;h1&gt;预备知识&lt;/h1&gt;
&lt;h2 id=&quot;正则法则&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#正则法则&quot;&gt;¶&lt;/a&gt;正则法则&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:center&quot;&gt;字符&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;\d&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;代表任意数字，就是阿拉伯数字 0-9 这些玩意。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;\D&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;大写的就是和小写的唱反调，\d 你代表的是任意数字是吧？那么我 \D 就代表不是数字的。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;\w&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;代表字母，数字，下划线。也就是 a-z、A-Z、0-9、_。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;\W&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;跟 \w 唱反调，代表不是字母，不是数字，不是下划线的。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;\n&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;代表一个换行。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;\r&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;代表一个回车。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;\f&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;代表换页。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;\t&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;代表一个 Tab 。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;\s&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;代表所有的空白字符，也就是上面这个：\n、\r、\t、\f。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;\S&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;跟 \s 唱反调，代表所有不是空白的字符。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;\A&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;代表字符串的开始。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;\Z&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;代表字符串的结束。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;^&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;匹配字符串开始的位置。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;$&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;匹配字符创结束的位置。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;.&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;代表所有的单个字符，除了 \n \r&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;[...]&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;代表在 [] 范围内的字符，比如 [a-z] 就代表 a到z的字母&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;[^...]&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;跟 […] 唱反调，代表不在 [] 范围内的字符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;&amp;#123;n&amp;#125;&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;匹配在 {n} 前面的东西，比如: o{2} 不能匹配 Bob 中的 o ，但是能匹配 food 中的两个o。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;&amp;#123;n,m&amp;#125;&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;匹配在 {n,m} 前面的东西，比如：o{1,3} 将匹配“fooooood”中的前三个o。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;&amp;#123;n，&amp;#125;&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;匹配在 {n,} 前面的东西，比如：o{2,} 不能匹配“Bob”中的“o”，但能匹配“foooood”中的所有o。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;*&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;和 {0,} 一个样，匹配 * 前面的 0 次或多次。 比如 zo* 能匹配“z”、“zo”以及“zoo”。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;+&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;和{1，} 一个样，匹配 + 前面 1 次或多次。 比如 zo+”能匹配“zo”以及“zoo”，但不能匹配“z”。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;？&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;和{0,1} 一个样，匹配 ？前面 0 次或 1 次。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;a|b&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;匹配 a 或者 b。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;（）&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;匹配括号里面的内容。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;例子：&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#贪婪匹配&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; re&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;content=&lt;span class=&quot;string&quot;&gt;&amp;#x27;hello,world.xiaoshuaib has 100 bananas&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;res=re.match(&lt;span class=&quot;string&quot;&gt;&amp;#x27;^he.*(\d+)\s.*s$&amp;#x27;&lt;/span&gt;,content)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(res.group(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#结果是0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#非贪婪匹配，多了个？&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; re&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;content=&lt;span class=&quot;string&quot;&gt;&amp;#x27;hello,world.xiaoshuaib has 100 bananas&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;res=re.match(&lt;span class=&quot;string&quot;&gt;&amp;#x27;^he.*?(\d+)\s.*s$&amp;#x27;&lt;/span&gt;,content)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(res.group(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#结果是100&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;所谓贪婪匹配就是第一段代码一个数一个数都要去匹配&lt;/p&gt;
&lt;p&gt;而非贪婪是直接把 100 给匹配出来了&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;.\*？&lt;/code&gt;:表示的就是匹配任意字符&lt;/p&gt;
&lt;p&gt;.*？的 . 代表所有的单个字符，除了 \n \r&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;字符串有换行:&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; re&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;content=&lt;span class=&quot;string&quot;&gt;&amp;#x27;&amp;#x27;&amp;#x27;hello,world.xiaoshuaib &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;has 100 bananas&amp;#x27;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;res=re.match(&lt;span class=&quot;string&quot;&gt;&amp;#x27;^he.*?(\d+)\s.*s$&amp;#x27;&lt;/span&gt;,content,re.S)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(res.group(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#直接用 re.S &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="爬虫" scheme="http://stardust14.com/categories/%E7%88%AC%E8%99%AB/"/>
    
    
    <category term="爬虫" scheme="http://stardust14.com/tags/%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
  <entry>
    <title>js学习</title>
    <link href="http://stardust14.com/2020/10/17/js%E5%AD%A6%E4%B9%A0/"/>
    <id>http://stardust14.com/2020/10/17/js%E5%AD%A6%E4%B9%A0/</id>
    <published>2020-10-17T03:40:44.000Z</published>
    <updated>2020-10-17T03:40:44.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1>快速入门</h1>]]></content>
    
    
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; class=&quot;aplayer-secondary-script-marker&quot;&gt;&lt;/script&gt;&lt;h1&gt;快速入门&lt;/h1&gt;
</summary>
    
    
    
    <category term="js" scheme="http://stardust14.com/categories/js/"/>
    
    
    <category term="js" scheme="http://stardust14.com/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>python 爬虫随笔记录</title>
    <link href="http://stardust14.com/2020/10/14/python%E7%88%AC%E8%99%AB%E9%9A%8F%E7%AC%94%E8%AE%B0%E5%BD%95/"/>
    <id>http://stardust14.com/2020/10/14/python%E7%88%AC%E8%99%AB%E9%9A%8F%E7%AC%94%E8%AE%B0%E5%BD%95/</id>
    <published>2020-10-14T11:06:42.000Z</published>
    <updated>2020-10-14T11:06:42.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1>前言</h1><p>记录一下遇到的错误，或者是疑问，解决的问题，随笔记录！！！</p><h1>python 爬虫问题</h1><h2 id="语句解释"><a class="header-anchor" href="#语句解释">¶</a>语句解释</h2><p>爬虫中<code>if __name__ == '__main__'</code>语句解释：</p><p>相当于是 Python <strong>模拟的程序入口</strong>。</p><p>由于模块之间相互引用，不同模块可能都有这样的定义，而入口程序只能有一个。到底哪个入口程序被选中，这取决于 <code>__name__</code> 的值。</p><p><code>__name__</code>是Python的内置变量，用于指代当前模块。</p><p>两个例子说明：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">print(<span class="string">&#x27;hello,I\&#x27;m A&#x27;</span>)</span><br><span class="line">print(<span class="string">&#x27;A的__name__值:&#123;&#125;&#x27;</span>.format(__name__))</span><br><span class="line">print(<span class="string">&#x27;---------------&#x27;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> day01 <span class="keyword">import</span> demo01</span><br><span class="line">print(<span class="string">&#x27;hello,I\&#x27;m B&#x27;</span>)</span><br><span class="line">print(<span class="string">&#x27;B中__name__的值：&#123;&#125;&#x27;</span>.format(__name__))</span><br></pre></td></tr></table></figure><p>上述两个例子分别结果：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">hello,I<span class="string">&#x27;m A</span></span><br><span class="line"><span class="string">A的__name__值:__main__</span></span><br><span class="line"><span class="string">---------------</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">hello,I<span class="string">&#x27;m A</span></span><br><span class="line"><span class="string">A的__name__值:day01.demo01</span></span><br><span class="line"><span class="string">---------------</span></span><br><span class="line"><span class="string">hello,I&#x27;</span>m B</span><br><span class="line">B中__name__的值：__main__</span><br></pre></td></tr></table></figure><p>发现神奇之处了吗？当哪个模块被直接执行时，该模块“<code>__name__</code>”的值就是“<code>__main__</code>”，当被导入另一模块时，“<code>__name__</code>”的值就是模块的真实名称。用一个类比来解释一下：记得小时候要轮流打算教室，轮到自己的时候（模块被直接执行的时候），我们会说今天是“我”（<code>__main__</code>）值日，称呼其他人时，我们就会直接喊他们的名字。所以，“<code>__main__</code>”就相当于当事人，或者说第一人称的“我”。</p><p>所以，当运行“<code>if __name__=='__main__':</code>”语句时，如果当前模块时被直接执行，<code>__name__</code>的值就是<code>__main__</code>，条件判断的结果为True，“<code>if __name__=='__main__':</code>”下面的代码块就会被执行。</p><h2 id="遇到的错误"><a class="header-anchor" href="#遇到的错误">¶</a>遇到的错误</h2><p>在进行当当网爬虫练习时，出现<code>UnicodeDecodeError: 'utf-8' codec can't decode byte 0xd0 in position 284: invalid continuation byte</code></p><p>修改字符集参数，一般这种情况出现得较多是在国标码(GBK)和utf-8之间选择出现了问题。<br>出现异常报错是由于设置了decode()方法的第二个参数errors为严格（strict）形式造成的，因为默认就是这个参数，将其更改为ignore等即可。例如:</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">html=response.read().decode(<span class="string">&quot;utf-8&quot;</span>,<span class="string">&quot;ignore&quot;</span>)</span><br></pre></td></tr></table></figure><h1>PyCharm中的问题</h1><h2 id="第三方库安装失败"><a class="header-anchor" href="#第三方库安装失败">¶</a>第三方库安装失败</h2><p>pycharm安装路径：<code>D:\Python\Code\venv\Scripts&gt;</code>在该径路下打开命令窗口，输入提示的信息。<code>python.exe -m pip install --upgrade pip</code></p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201018204828.png" alt=""></p>]]></content>
    
    
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; class=&quot;aplayer-secondary-script-marker&quot;&gt;&lt;/script&gt;&lt;h1&gt;前言&lt;/h1&gt;
&lt;p&gt;记录一下遇到的错误，或者是疑问，解决的问题，随笔记录！！！&lt;/p&gt;
&lt;h1&gt;python 爬虫问题&lt;/h1&gt;
&lt;h2 id=&quot;语句解释&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#语句解释&quot;&gt;¶&lt;/a&gt;语句解释&lt;/h2&gt;
&lt;p&gt;爬虫中&lt;code&gt;if __name__ == &#39;__main__&#39;&lt;/code&gt;语句解释：&lt;/p&gt;
&lt;p&gt;相当于是 Python &lt;strong&gt;模拟的程序入口&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;由于模块之间相互引用，不同模块可能都有这样的定义，而入口程序只能有一个。到底哪个入口程序被选中，这取决于 &lt;code&gt;__name__&lt;/code&gt; 的值。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;__name__&lt;/code&gt;是Python的内置变量，用于指代当前模块。&lt;/p&gt;
&lt;p&gt;两个例子说明：&lt;/p&gt;</summary>
    
    
    
    <category term="随笔" scheme="http://stardust14.com/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
    <category term="python" scheme="http://stardust14.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Typora使用</title>
    <link href="http://stardust14.com/2020/10/09/Typora%E4%BD%BF%E7%94%A8/"/>
    <id>http://stardust14.com/2020/10/09/Typora%E4%BD%BF%E7%94%A8/</id>
    <published>2020-10-09T03:28:19.000Z</published>
    <updated>2020-10-09T03:28:19.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1>公式的使用</h1><p><strong>上/下标</strong></p><table><thead><tr><th>算式</th><th>Markdown</th></tr></thead><tbody><tr><td>$x^2 $</td><td>x^2</td></tr><tr><td>$y_1 $</td><td>y_1</td></tr></tbody></table><p><strong>分式</strong></p><table><thead><tr><th>算式</th><th>Markdown</th></tr></thead><tbody><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn><mi mathvariant="normal">/</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">1/2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord">/</span><span class="mord">2</span></span></span></span></td><td>1/2</td></tr><tr><td>$ \frac{1}{2}$</td><td>\frac{1}{2}</td></tr></tbody></table><p><strong>省略号</strong></p><table><thead><tr><th>省略号</th><th>Markdown</th></tr></thead><tbody><tr><td>$ \cdots$</td><td>\cdots</td></tr></tbody></table><p><strong>开根号</strong></p><table><thead><tr><th>算式</th><th>Markdown</th></tr></thead><tbody><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msqrt><mn>2</mn></msqrt></mrow><annotation encoding="application/x-tex">\sqrt{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.04em;vertical-align:-0.13278em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.90722em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord">2</span></span></span><span style="top:-2.86722em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.13278em;"><span></span></span></span></span></span></span></span></span></td><td>\sqrt{2}</td></tr></tbody></table><p><strong>矢量</strong></p><table><thead><tr><th>算式</th><th>Markdown</th></tr></thead><tbody><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi>a</mi><mo>⃗</mo></mover></mrow><annotation encoding="application/x-tex">\vec{a}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.714em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.714em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">a</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2355em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 53.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 1110.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359c-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span></span></span></span></td><td>\vec{a}</td></tr></tbody></table><p><strong>积分</strong></p><table><thead><tr><th>算式</th><th>Markdown</th></tr></thead><tbody><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∫</mo><mi>x</mi><mi>d</mi><mi>x</mi></mrow><annotation encoding="application/x-tex">\int{x}dx</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.11112em;vertical-align:-0.30612em;"></span><span class="mop op-symbol small-op" style="margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;">∫</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">x</span></span><span class="mord mathdefault">d</span><span class="mord mathdefault">x</span></span></span></span></td><td>\int{x}dx</td></tr><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mo>∫</mo><mn>1</mn><mn>2</mn></msubsup><mi>x</mi><mi>d</mi><mi>x</mi></mrow><annotation encoding="application/x-tex">\int_{1}^{2}{x}dx</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.3648280000000002em;vertical-align:-0.35582em;"></span><span class="mop"><span class="mop op-symbol small-op" style="margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0090080000000001em;"><span style="top:-2.34418em;margin-left:-0.19445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span><span style="top:-3.2579000000000002em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35582em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">x</span></span><span class="mord mathdefault">d</span><span class="mord mathdefault">x</span></span></span></span></td><td>\int_{1}^{2}{x}dx</td></tr></tbody></table><p><strong>极限</strong></p><table><thead><tr><th>算式</th><th>Markdown</th></tr></thead><tbody><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>lim</mi><mo>⁡</mo><mrow><mi>a</mi><mo>+</mo><mi>b</mi></mrow></mrow><annotation encoding="application/x-tex">\lim{a+b}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mop">lim</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">b</span></span></span></span></span></td><td>\lim{a+b}</td></tr><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mo><mi>lim</mi><mo>⁡</mo></mo><mrow><mi>n</mi><mo>→</mo><mo>+</mo><mi mathvariant="normal">∞</mi></mrow></msub></mrow><annotation encoding="application/x-tex">\lim_{n\rightarrow+\infty}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.902771em;vertical-align:-0.208331em;"></span><span class="mop"><span class="mop">lim</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.25833100000000003em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mrel mtight">→</span><span class="mord mtight">+</span><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span></span></td><td>\lim_{n\rightarrow+\infty}</td></tr></tbody></table><p><strong>累加</strong></p><table><thead><tr><th>算式</th><th>Markdown</th></tr></thead><tbody><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∑</mo><mi>a</mi></mrow><annotation encoding="application/x-tex">\sum{a}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.00001em;vertical-align:-0.25001em;"></span><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">a</span></span></span></span></span></td><td>\sum{a}</td></tr><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mo>∑</mo><mrow><mi>n</mi><mo>=</mo><mn>1</mn></mrow><mn>100</mn></msubsup><msub><mi>a</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">\sum_{n=1}^{100}{a_n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.253718em;vertical-align:-0.29971000000000003em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.954008em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">0</span><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></td><td>\sum_{n=1}^{100}{a_n}</td></tr></tbody></table><p><strong>累乘</strong></p><table><thead><tr><th>算式</th><th>Markdown</th></tr></thead><tbody><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∏</mo><mi>x</mi></mrow><annotation encoding="application/x-tex">\prod{x}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.00001em;vertical-align:-0.25001em;"></span><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∏</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">x</span></span></span></span></span></td><td>\prod{x}</td></tr><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mo>∏</mo><mrow><mi>n</mi><mo>=</mo><mn>1</mn></mrow><mn>99</mn></msubsup><msub><mi>x</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">\prod_{n=1}^{99}{x_n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.253718em;vertical-align:-0.29971000000000003em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∏</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.954008em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">9</span><span class="mord mtight">9</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></td><td>\prod_{n=1}^{99}{x_n}</td></tr></tbody></table><p><strong>三角函数</strong></p><table><thead><tr><th>三角函数</th><th>Markdown</th></tr></thead><tbody><tr><td>$ ⁡ \sin$</td><td>\sin</td></tr></tbody></table><p><strong>对数函数</strong></p><table><thead><tr><th>算式</th><th>Markdown</th></tr></thead><tbody><tr><td>$ \ln2$</td><td>\ln2</td></tr><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mo><mi>log</mi><mo>⁡</mo></mo><mn>2</mn></msub><mn>8</mn></mrow><annotation encoding="application/x-tex">\log_28</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.93858em;vertical-align:-0.24414em;"></span><span class="mop"><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.20696799999999996em;"><span style="top:-2.4558600000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24414em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">8</span></span></span></span></td><td>\log_28</td></tr><tr><td>$ \lg10$</td><td>\lg10</td></tr></tbody></table><p><strong>关系运算符</strong></p><table><thead><tr><th>运算符</th><th>Markdown</th></tr></thead><tbody><tr><td>$± $</td><td>\pm</td></tr><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>×</mo></mrow><annotation encoding="application/x-tex">\times</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord">×</span></span></span></span></td><td>\times</td></tr><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⋅</mo></mrow><annotation encoding="application/x-tex">\cdot</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.44445em;vertical-align:0em;"></span><span class="mord">⋅</span></span></span></span></td><td>\cdot</td></tr><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>÷</mo></mrow><annotation encoding="application/x-tex">\div</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord">÷</span></span></span></span></td><td>\div</td></tr><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">≠</mi></mrow><annotation encoding="application/x-tex">\neq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mrel"><span class="mrel"><span class="mord"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="rlap"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mrel"></span></span><span class="fix"></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span><span class="mrel">=</span></span></span></span></span></td><td>\neq</td></tr><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>≡</mo></mrow><annotation encoding="application/x-tex">\equiv</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.46375em;vertical-align:0em;"></span><span class="mrel">≡</span></span></span></span></td><td>\equiv</td></tr><tr><td>$ \leq$</td><td>\leq</td></tr><tr><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>≥</mo></mrow><annotation encoding="application/x-tex">\geq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mrel">≥</span></span></span></span></td><td>\geq</td></tr></tbody></table><p><strong>其它特殊字符</strong></p><table><thead><tr><th>符号</th><th>Markdown</th></tr></thead><tbody><tr><td>$ \forall$</td><td>\forall</td></tr><tr><td>$ \infty$</td><td>\infty</td></tr><tr><td>$ \emptyset$</td><td>\emptyset</td></tr><tr><td>$ \exists$</td><td>\exists</td></tr><tr><td>$ \nabla$</td><td>\nabla</td></tr><tr><td>$ \bot$</td><td>\bot</td></tr><tr><td>$ \angle$</td><td>\angle</td></tr><tr><td>$ \because$</td><td>\because</td></tr><tr><td>$ \therefore$</td><td>\therefore</td></tr></tbody></table><p>花括号<br>$c(u)=\begin{cases} \sqrt\frac{1}{N}，u=0\ \sqrt\frac{2}{N}， u\neq0\end{cases}  $</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">c(u)=\begin&#123;cases&#125; \sqrt\frac&#123;1&#125;&#123;N&#125;，u=0\\ \sqrt\frac&#123;2&#125;&#123;N&#125;， u\neq0\end&#123;cases&#125;  </span><br></pre></td></tr></table></figure><p>空格<br><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mspace width="1em"/><mi>b</mi></mrow><annotation encoding="application/x-tex">a \quad b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathdefault">b</span></span></span></span></p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">a \quad b</span><br></pre></td></tr></table></figure><p>矩阵</p>a = \left[\matrix{  \alpha_1 & test1\\  \alpha_2 & test2\\  \alpha_3 & test3 }\right]<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">$$</span><br><span class="line">a = \left[</span><br><span class="line">\matrix&#123;</span><br><span class="line">  \alpha<span class="emphasis">_1 &amp; test1\\</span></span><br><span class="line"><span class="emphasis">  \alpha_</span>2 &amp; test2\\</span><br><span class="line">  \alpha<span class="emphasis">_3 &amp; test3 </span></span><br><span class="line"><span class="emphasis">&#125;</span></span><br><span class="line"><span class="emphasis">\right]</span></span><br><span class="line"><span class="emphasis">$$</span></span><br></pre></td></tr></table></figure><h1>希腊字母写法</h1><table><thead><tr><th>字母</th><th>代码</th></tr></thead><tbody><tr><td>α</td><td><code>$\alpha$</code></td></tr><tr><td>β</td><td><code>$\beta$</code></td></tr><tr><td>γ</td><td><code>$\gamma$</code></td></tr><tr><td>Γ</td><td><code>$\Gamma$</code></td></tr><tr><td>δ</td><td><code>$\delta$</code></td></tr><tr><td>Δ</td><td><code>$\Delta$ </code></td></tr><tr><td>ϵ</td><td><code>$\epsilon$</code></td></tr><tr><td>ε</td><td><code>$\varepsilon$</code></td></tr><tr><td>ζ</td><td><code>$\zeta$</code></td></tr><tr><td>η</td><td><code>$\eta$</code></td></tr><tr><td>θ</td><td><code>$\theta$</code></td></tr><tr><td>Θ</td><td><code>$\Theta$</code></td></tr><tr><td>ϑ</td><td><code>$\vartheta$</code></td></tr><tr><td>ι</td><td><code>$\iota$</code></td></tr><tr><td>κ</td><td><code>$\kappa$</code></td></tr><tr><td>λ</td><td><code>$\lambda$</code></td></tr><tr><td>Λ</td><td><code>$\Lambda$</code></td></tr><tr><td>μ</td><td><code>$\mu$</code></td></tr><tr><td>ν</td><td><code>$\nu$</code></td></tr><tr><td>ξ</td><td><code>$\xi$</code></td></tr><tr><td>Ξ</td><td><code>$\Xi$</code></td></tr><tr><td>π</td><td><code>$\pi$</code></td></tr><tr><td>Π</td><td><code>$\Pi$</code></td></tr><tr><td>ϖ</td><td><code>$\varpi$</code></td></tr><tr><td>ρ</td><td><code>$\rho$</code></td></tr><tr><td>ϱ</td><td><code>$\varrho$</code></td></tr><tr><td>σ</td><td><code>$\sigma$</code></td></tr><tr><td>Σ</td><td><code>$\Sigma$</code></td></tr><tr><td>ς</td><td><code>$\varsigma$</code></td></tr><tr><td>τ</td><td><code>$\tau$</code></td></tr><tr><td>υ</td><td><code>$\upsilon$</code></td></tr><tr><td>Υ</td><td><code>$\Upsilon$</code></td></tr><tr><td>ϕ</td><td><code>$\phi$</code></td></tr><tr><td>Φ</td><td><code>$\Phi$</code></td></tr><tr><td>φ</td><td><code>$\varphi$</code></td></tr><tr><td>χ</td><td><code>$\chi$</code></td></tr><tr><td>ψ</td><td><code>$\psi$</code></td></tr><tr><td>Ψ</td><td><code>$\Psi$</code></td></tr><tr><td>Ω</td><td><code>$\Omega$</code></td></tr><tr><td>ω</td><td><code>$\omega$</code></td></tr></tbody></table><h1>字母上面加横线</h1><p>输入 \overline{G} 显示 ( G ‾ ) $$(\overline{G})$$<br>输入 \widehat{G} 显示( G ^ ) $$(\widehat{G} )$$(<em>G</em>)<br>输入 \hat{G} 显示 ( G ^ ) $$( \hat{G})$$(<em>G</em>^)<br>输入 \widetilde 显示 ( G ~ ) $$(\widetilde{G})$$(<em>G</em>)<br>输入 \dot{G} 显示 ( G ˙ )$$ (\dot{G})$$(<em>G</em>˙)<br>输入 \ddot{G} 显示( G ¨ ) $$(\ddot{G})$$(<em>G</em>¨)</p>]]></content>
    
    
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; class=&quot;aplayer-secondary-script-marker&quot;&gt;&lt;/script&gt;&lt;h1&gt;公式的使用&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;上/下标&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;算式&lt;/th&gt;
&lt;th&gt;Markdown&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;$x^2 $&lt;/td&gt;
&lt;td&gt;x^2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;$y_1 $&lt;/td&gt;
&lt;td&gt;y_1&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;分式&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;算式&lt;/th&gt;
&lt;th&gt;Markdown&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;mi mathvariant=&quot;normal&quot;&gt;/&lt;/mi&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;1/2&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:1em;vertical-align:-0.25em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;1/2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;$ \frac{1}{2}$&lt;/td&gt;
&lt;td&gt;\frac{1}{2}&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;省略号&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;省略号&lt;/th&gt;
&lt;th&gt;Markdown&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;$ \cdots$&lt;/td&gt;
&lt;td&gt;\cdots&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;开根号&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;算式&lt;/th&gt;
&lt;th&gt;Markdown&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msqrt&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/msqrt&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;\sqrt{2}&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:1.04em;vertical-align:-0.13278em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord sqrt&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.90722em;&quot;&gt;&lt;span class=&quot;svg-align&quot; style=&quot;top:-3em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot; style=&quot;padding-left:0.833em;&quot;&gt;&lt;span class=&quot;mord&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;top:-2.86722em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;hide-tail&quot; style=&quot;min-width:0.853em;height:1.08em;&quot;&gt;&lt;svg width=&quot;400em&quot; height=&quot;1.08em&quot; viewBox=&quot;0 0 400000 1080&quot; preserveAspectRatio=&quot;xMinYMin slice&quot;&gt;&lt;path d=&quot;M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,
-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,
-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,
35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,
-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467
s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422
s-65,47,-65,47z M834 80H400000v40H845z&quot;/&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.13278em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;\sqrt{2}&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;</summary>
    
    
    
    <category term="typora" scheme="http://stardust14.com/categories/typora/"/>
    
    
    <category term="typora" scheme="http://stardust14.com/tags/typora/"/>
    
  </entry>
  
  <entry>
    <title>C语言例题</title>
    <link href="http://stardust14.com/2020/09/24/C%E8%AF%AD%E8%A8%80%E4%BE%8B%E9%A2%98/"/>
    <id>http://stardust14.com/2020/09/24/C%E8%AF%AD%E8%A8%80%E4%BE%8B%E9%A2%98/</id>
    <published>2020-09-24T13:42:09.000Z</published>
    <updated>2020-09-24T13:42:09.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1>前言</h1><p>做的例题整理，修改和改进</p><blockquote><p>VS2019中scanf语句要使用scanf_s</p></blockquote><h1>练习实例</h1><p>ex1:</p><p>ex2:</p><p>ex3:</p><p>ex4:**题目：**输入某年某月某日，判断这一天是这一年的第几天？</p><p>**程序分析：**以3月5日为例，应该先把前两个月的加起来，然后再加上5天即本年的第几天，特殊情况，闰年且输入月份大于3时需考虑多加一天。</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> day, month, year, sum, leap;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n请输入年、月、日，格式为：年,月,日（2020,9,24[英文标点]）\n&quot;</span>);</span><br><span class="line">    scanf_s(<span class="string">&quot;%d,%d,%d&quot;</span>, &amp;year, &amp;month, &amp;day);  <span class="comment">// 格式为：2020,9,24</span></span><br><span class="line">    <span class="keyword">switch</span> (month) <span class="comment">// 先计算某月以前月份的总天数</span></span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">1</span>:sum = <span class="number">0</span>; <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">2</span>:sum = <span class="number">31</span>; <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">3</span>:sum = <span class="number">59</span>; <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">4</span>:sum = <span class="number">90</span>; <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">5</span>:sum = <span class="number">120</span>; <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">6</span>:sum = <span class="number">151</span>; <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">7</span>:sum = <span class="number">181</span>; <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">8</span>:sum = <span class="number">212</span>; <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">9</span>:sum = <span class="number">243</span>; <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">10</span>:sum = <span class="number">273</span>; <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">11</span>:sum = <span class="number">304</span>; <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">12</span>:sum = <span class="number">334</span>; <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:<span class="built_in">printf</span>(<span class="string">&quot;data error&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    sum = sum + day;<span class="comment">//再加上某天的天数</span></span><br><span class="line">    <span class="keyword">if</span> (year % <span class="number">400</span> == <span class="number">0</span> || (year % <span class="number">4</span> == <span class="number">0</span> &amp;&amp; year % <span class="number">100</span> != <span class="number">0</span>)) &#123;<span class="comment">//判断是否是闰年</span></span><br><span class="line">        leap = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        leap = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (leap == <span class="number">1</span> &amp;&amp; month &gt; <span class="number">2</span>) &#123;<span class="comment">//如果是闰年且月份大于2，总数应该加一天</span></span><br><span class="line">        sum++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;这是这一年的第%d天\n&quot;</span>, sum);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>☑️调试时要用英文标点</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">请输入年、月、日，格式为：年,月,日（<span class="number">2020</span>,<span class="number">9</span>,<span class="number">24</span>）</span><br><span class="line"><span class="number">2020</span>,<span class="number">9</span>,<span class="number">10</span></span><br><span class="line">这是这一年的第<span class="number">254</span>天</span><br></pre></td></tr></table></figure><p>ex5:输入三个整数x,y,z，请把这三个数由小到大输出。</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//输入三个整数x,y,z，请把这三个数由小到大输出。</span></span><br><span class="line"><span class="comment">//要用三个if语句并行</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> x, y, z, t;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n输入三个数字：\n&quot;</span>);</span><br><span class="line">scanf_s(<span class="string">&quot;%d%d%d&quot;</span>, &amp;x, &amp;y, &amp;z);</span><br><span class="line"><span class="keyword">if</span> (x &gt; y) &#123;</span><br><span class="line">t = x;</span><br><span class="line">x = y;</span><br><span class="line">y = t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (x &gt; z) &#123;<span class="comment">//交换x，z的值</span></span><br><span class="line">t = z;</span><br><span class="line">z = x;</span><br><span class="line">x = t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(y&gt;z) &#123;</span><br><span class="line">t = y;</span><br><span class="line">y = z;</span><br><span class="line">z = t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;从大到小为：%d&gt;%d&gt;%d\n&quot;</span>, z, y, x);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;从小到大的排列：%d%d%d\n&quot;</span>, x, y, z);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">输入三个数字：</span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line">从大到小为：<span class="number">3</span>&gt;<span class="number">2</span>&gt;<span class="number">1</span></span><br><span class="line">从小到大的排列：<span class="number">123</span></span><br></pre></td></tr></table></figure><p>ex6:输出9*9口诀</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//输出9*9口诀。</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i, j, m;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">1</span>; j &lt;=i; j++) &#123;</span><br><span class="line">            m = i * j;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d*%d=%-3d&quot;</span>, i, j, m);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>*<span class="number">1</span>=<span class="number">1</span></span><br><span class="line"><span class="number">2</span>*<span class="number">1</span>=<span class="number">2</span>  <span class="number">2</span>*<span class="number">2</span>=<span class="number">4</span></span><br><span class="line"><span class="number">3</span>*<span class="number">1</span>=<span class="number">3</span>  <span class="number">3</span>*<span class="number">2</span>=<span class="number">6</span>  <span class="number">3</span>*<span class="number">3</span>=<span class="number">9</span></span><br><span class="line"><span class="number">4</span>*<span class="number">1</span>=<span class="number">4</span>  <span class="number">4</span>*<span class="number">2</span>=<span class="number">8</span>  <span class="number">4</span>*<span class="number">3</span>=<span class="number">12</span> <span class="number">4</span>*<span class="number">4</span>=<span class="number">16</span></span><br><span class="line"><span class="number">5</span>*<span class="number">1</span>=<span class="number">5</span>  <span class="number">5</span>*<span class="number">2</span>=<span class="number">10</span> <span class="number">5</span>*<span class="number">3</span>=<span class="number">15</span> <span class="number">5</span>*<span class="number">4</span>=<span class="number">20</span> <span class="number">5</span>*<span class="number">5</span>=<span class="number">25</span></span><br><span class="line"><span class="number">6</span>*<span class="number">1</span>=<span class="number">6</span>  <span class="number">6</span>*<span class="number">2</span>=<span class="number">12</span> <span class="number">6</span>*<span class="number">3</span>=<span class="number">18</span> <span class="number">6</span>*<span class="number">4</span>=<span class="number">24</span> <span class="number">6</span>*<span class="number">5</span>=<span class="number">30</span> <span class="number">6</span>*<span class="number">6</span>=<span class="number">36</span></span><br><span class="line"><span class="number">7</span>*<span class="number">1</span>=<span class="number">7</span>  <span class="number">7</span>*<span class="number">2</span>=<span class="number">14</span> <span class="number">7</span>*<span class="number">3</span>=<span class="number">21</span> <span class="number">7</span>*<span class="number">4</span>=<span class="number">28</span> <span class="number">7</span>*<span class="number">5</span>=<span class="number">35</span> <span class="number">7</span>*<span class="number">6</span>=<span class="number">42</span> <span class="number">7</span>*<span class="number">7</span>=<span class="number">49</span></span><br><span class="line"><span class="number">8</span>*<span class="number">1</span>=<span class="number">8</span>  <span class="number">8</span>*<span class="number">2</span>=<span class="number">16</span> <span class="number">8</span>*<span class="number">3</span>=<span class="number">24</span> <span class="number">8</span>*<span class="number">4</span>=<span class="number">32</span> <span class="number">8</span>*<span class="number">5</span>=<span class="number">40</span> <span class="number">8</span>*<span class="number">6</span>=<span class="number">48</span> <span class="number">8</span>*<span class="number">7</span>=<span class="number">56</span> <span class="number">8</span>*<span class="number">8</span>=<span class="number">64</span></span><br><span class="line"><span class="number">9</span>*<span class="number">1</span>=<span class="number">9</span>  <span class="number">9</span>*<span class="number">2</span>=<span class="number">18</span> <span class="number">9</span>*<span class="number">3</span>=<span class="number">27</span> <span class="number">9</span>*<span class="number">4</span>=<span class="number">36</span> <span class="number">9</span>*<span class="number">5</span>=<span class="number">45</span> <span class="number">9</span>*<span class="number">6</span>=<span class="number">54</span> <span class="number">9</span>*<span class="number">7</span>=<span class="number">63</span> <span class="number">9</span>*<span class="number">8</span>=<span class="number">72</span> <span class="number">9</span>*<span class="number">9</span>=<span class="number">81</span></span><br></pre></td></tr></table></figure><p>ex7:有一对兔子，从出生后第3个月起每个月都生一对兔子，小兔子长到第三个月后每个月又生一对兔子，假如兔子都不死，问每个月的兔子总数为多少？（输出前40个月即可）。</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> f1=<span class="number">1</span>, f2=<span class="number">1</span>,i;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= <span class="number">20</span>; i++) &#123;<span class="comment">//一次输出两位f1,f2,所以取i&lt;=20</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%12d%12d&quot;</span>,f1,f2);</span><br><span class="line">        <span class="keyword">if</span> (i % <span class="number">2</span> == <span class="number">0</span>)<span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">        f1 = f1 + f2;</span><br><span class="line">        f2 = f1 + f2;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">       <span class="number">1</span>           <span class="number">1</span>           <span class="number">2</span>           <span class="number">3</span></span><br><span class="line">       <span class="number">5</span>           <span class="number">8</span>          <span class="number">13</span>          <span class="number">21</span></span><br><span class="line">      <span class="number">34</span>          <span class="number">55</span>          <span class="number">89</span>         <span class="number">144</span></span><br><span class="line">     <span class="number">233</span>         <span class="number">377</span>         <span class="number">610</span>         <span class="number">987</span></span><br><span class="line">    <span class="number">1597</span>        <span class="number">2584</span>        <span class="number">4181</span>        <span class="number">6765</span></span><br><span class="line">   <span class="number">10946</span>       <span class="number">17711</span>       <span class="number">28657</span>       <span class="number">46368</span></span><br><span class="line">   <span class="number">75025</span>      <span class="number">121393</span>      <span class="number">196418</span>      <span class="number">317811</span></span><br><span class="line">  <span class="number">514229</span>      <span class="number">832040</span>     <span class="number">1346269</span>     <span class="number">2178309</span></span><br><span class="line"> <span class="number">3524578</span>     <span class="number">5702887</span>     <span class="number">9227465</span>    <span class="number">14930352</span></span><br><span class="line"><span class="number">24157817</span>    <span class="number">39088169</span>    <span class="number">63245986</span>   <span class="number">102334155</span></span><br></pre></td></tr></table></figure><p>ex8:判断101到200之间的素数。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; class=&quot;aplayer-secondary-script-marker&quot;&gt;&lt;/script&gt;&lt;h1&gt;前言&lt;/h1&gt;
&lt;p&gt;做的例题整理，修改和改进&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;VS2019中scanf语句要使用scanf_s&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1&gt;练习实例&lt;/h1&gt;
&lt;p&gt;ex1:&lt;/p&gt;
&lt;p&gt;ex2:&lt;/p&gt;
&lt;p&gt;ex3:&lt;/p&gt;
&lt;p&gt;ex4:**题目：**输入某年某月某日，判断这一天是这一年的第几天？&lt;/p&gt;
&lt;p&gt;**程序分析：**以3月5日为例，应该先把前两个月的加起来，然后再加上5天即本年的第几天，特殊情况，闰年且输入月份大于3时需考虑多加一天。&lt;/p&gt;</summary>
    
    
    
    <category term="C" scheme="http://stardust14.com/categories/C/"/>
    
    
    <category term="C" scheme="http://stardust14.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>MATLAB例题</title>
    <link href="http://stardust14.com/2020/09/22/MATLAB%E4%BE%8B%E9%A2%98/"/>
    <id>http://stardust14.com/2020/09/22/MATLAB%E4%BE%8B%E9%A2%98/</id>
    <published>2020-09-22T13:16:26.000Z</published>
    <updated>2020-09-22T13:16:26.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1>引言</h1><p>参考胡广书老师所著的《数字信号处理-理论算法与实现》</p><p>下面给出Matlab中下标及希腊字母的使用方法，还有更多的使用方法可以参考matlab帮助 文档中的Text Properties: 下标用 _(下划线) 上标用^ （尖号） 希腊字母等特殊字符用 \加拼音如α \alphaβ \betaγ \gammaθ \thetaΘ \ThetaГ \Gammaδ \deltaΔ \Deltaξ \xiΞ \Xiη \eltaε \epsilongζ \zetaμ \miuυ \nuτ \tauλ \lamdaΛ \Lamdaπ \piΠ \Piσ \sigmaΣ \Sigmaφ \phiΦ \Phiψ \psiΨ \Psiχ \chiω \ommigaΩ \Ommiga&lt; \leq&gt; \geq不等于 \neq&gt; \gg正负\pm左箭头 \leftarrow 右箭头 \rightarrow 上箭头 \uparrow 上圆圈（度数） \circ 例text(2,3,’\alpha_2^\beta’) 很多时候都要在matlab画图的时候添加一些公式符号之类的，有一些特殊的字符并不能直接从键盘上输入，比如希腊字母等等。</p><h1>胡广书老师课本例题</h1><h2 id="第一章"><a class="header-anchor" href="#第一章">¶</a>第一章</h2><p>待续。。。</p><h2 id="第二章"><a class="header-anchor" href="#第二章">¶</a>第二章</h2><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200922212358.png" alt=""></p><p>ex0201:求该系统函数的阶跃响应（所谓阶跃响应是系统输入的输出）。实现该任务的程序如下：</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="comment">%exa020801_filter</span></span><br><span class="line"><span class="comment">%filter函数用来求一个离散系统的输出，是在已知B（z）,A(z)，但是不知道h（n）的情况下求y（n）</span></span><br><span class="line">x=<span class="built_in">ones</span>(<span class="number">100</span>);t=<span class="number">1</span>:<span class="number">100</span>;<span class="comment">%x(n)=1,对n=1~100,t用于后面的绘图</span></span><br><span class="line">b=[<span class="number">0.001836</span>,<span class="number">0.007344</span>,<span class="number">0.011016</span>,<span class="number">0.007374</span>,<span class="number">0.001836</span>];</span><br><span class="line">a=[<span class="number">1</span>,<span class="number">-3.0544</span>,<span class="number">3.829</span>,<span class="number">-2.2925</span>,<span class="number">0.55075</span>];</span><br><span class="line">y=filter(b,a,x);</span><br><span class="line"><span class="built_in">plot</span>(t,x,<span class="string">&#x27;g.&#x27;</span>,t,y,<span class="string">&#x27;k-&#x27;</span>);<span class="comment">%将x(n)(绿色)和y(n)（黑色）画在同一图上</span></span><br></pre></td></tr></table></figure><blockquote><p>主要是用filter函数</p><p>调用格式：y=filter(b,a,x)</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200922213533.png" alt=""></p><p>ex0202:求上式所给系统的单位抽样响应h(n)。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="comment">%exa020802_impz</span></span><br><span class="line"><span class="comment">%impz函数在已知B(z),A(z)的晴空下求出系统的单位抽样响应h(n)</span></span><br><span class="line"><span class="comment">%调用格式：h=impz(b,a,N)或着[h,t]=impz(b,a,N)其中N是所需的h(n)的长度。</span></span><br><span class="line"><span class="comment">%前者绘图n从1开始，而后者从0开始</span></span><br><span class="line">b=[<span class="number">0.001836</span>,<span class="number">0.007344</span>,<span class="number">0.011016</span>,<span class="number">0.007374</span>,<span class="number">0.001836</span>];</span><br><span class="line">a=[<span class="number">1</span>,<span class="number">-3.0544</span>,<span class="number">3.829</span>,<span class="number">-2.2925</span>,<span class="number">0.55075</span>];</span><br><span class="line">[h,t]=impz(b,a,<span class="number">40</span>);</span><br><span class="line">stem(t,h,<span class="string">&#x27;.&#x27;</span>);<span class="comment">%stem函数：杆图</span></span><br><span class="line">grid on;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200922213458.png" alt=""></p><p>ex0203:求上式所给系统的频率响应H(e^jw)，画出其幅频响应和相频响应。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="comment">%exa020803_freqz</span></span><br><span class="line"><span class="comment">%freqz函数是在已知B(z),A(z)的情况下求出系统的频率响应H(e^jw)</span></span><br><span class="line"><span class="comment">%调用格式：[H,w]=freqz(b,a,N,&#x27;whole&#x27;,Fs),N是频率轴的分点数,建议N为2的整次幂</span></span><br><span class="line"><span class="comment">%w是返回频率轴坐标向量，Fs是抽样频率，Fs=1，频率轴给出归一化频率</span></span><br><span class="line"><span class="comment">%whole指定计算的频率范围是从0~Fs,缺省是从0~Fs/2</span></span><br><span class="line">clear</span><br><span class="line">b=[<span class="number">0.001836</span>,<span class="number">0.007344</span>,<span class="number">0.011016</span>,<span class="number">0.007374</span>,<span class="number">0.001836</span>];</span><br><span class="line">a=[<span class="number">1</span>,<span class="number">-3.0544</span>,<span class="number">3.829</span>,<span class="number">-2.2925</span>,<span class="number">0.55075</span>];</span><br><span class="line">[H,w]=freqz(b,a,<span class="number">256</span>,<span class="string">&#x27;whole&#x27;</span>,<span class="number">1</span>);</span><br><span class="line">Hr=<span class="built_in">abs</span>(H);<span class="comment">%求幅频响应，abs函数是求复数的幅值</span></span><br><span class="line">Hphase1=<span class="built_in">angle</span>(H);<span class="comment">%angle函数是求复数相角，提取相角</span></span><br><span class="line">Hphase2=<span class="built_in">unwrap</span>(Hphase1);<span class="comment">%unwrap函数显示积累的相角解卷绕</span></span><br><span class="line">subplot(<span class="number">2</span>,<span class="number">2</span>,<span class="number">1</span>)</span><br><span class="line"><span class="built_in">plot</span>(w,Hr);grid on;</span><br><span class="line">xlabel(<span class="string">&#x27;w/2Π&#x27;</span>)</span><br><span class="line">ylabel(<span class="string">&#x27;|H(e^(jw)|&#x27;</span>)</span><br><span class="line">subplot(<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>)</span><br><span class="line"><span class="built_in">plot</span>(w,Hphase2);grid on;</span><br><span class="line">xlabel(<span class="string">&#x27;w/2Π&#x27;</span>);ylabel(<span class="string">&#x27;\phi(w)/rad&#x27;</span>);</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200923101127.png" alt=""></p><p>ex0204:显示上式及FIR系统<code>H(z)=1-1.7z^(-1)+1.53z^(-2)-0.648z^(-3)</code>的极零图。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="comment">%exa020804_zplane.m</span></span><br><span class="line"><span class="comment">%zplane函数用来显示离散系统的极零图</span></span><br><span class="line"><span class="comment">%调用函数格式：zplane(z,p)或着zplane(b,a)</span></span><br><span class="line"><span class="comment">%前者是在已知系统零点的列向量z和极点的列向量p的情况下画出极零图</span></span><br><span class="line"><span class="comment">%后者是在已知B(z),A(z)的情况下画出极零图</span></span><br><span class="line">b=[<span class="number">0.001836</span>,<span class="number">0.007344</span>,<span class="number">0.011016</span>,<span class="number">0.007374</span>,<span class="number">0.001836</span>];</span><br><span class="line">a=[<span class="number">1</span>,<span class="number">-3.0544</span>,<span class="number">3.829</span>,<span class="number">-2.2925</span>,<span class="number">0.55075</span>];</span><br><span class="line">subplot(<span class="number">221</span>)</span><br><span class="line">zplane(b,a);</span><br><span class="line">z=[<span class="number">1</span>,<span class="number">-1.7</span>,<span class="number">1.53</span>,<span class="number">-0.648</span>];</span><br><span class="line">p=<span class="number">1</span>;</span><br><span class="line">subplot(<span class="number">222</span>)</span><br><span class="line">zplane(z,p);</span><br></pre></td></tr></table></figure><blockquote><p>zplane仅能给出系统的极零图，不能给出极零点的坐标值。若想求出具体的数值，可用tf2zp或着roots;反之，若想由已知的极零点得到分子、分母多项式，可用zp2tf或着poly文件。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200923102839.png" alt=""></p><p><font color='red'>知识：</font>residuer文件可将z的有理分式分解成简单有理分式的和，因此可用来求逆Z变换，即<img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200923105146.png" alt=""></p><p>式中p(1),p(2),···，p(n)的集合p是列向量，它的每一个元素都是X(Z)的极点。类似的，r也是列向量，它的每一个元素都是X(z)在相应极点处的留数；k是行向量，它代表了分解后的直接项。X(z)的极点数n=n0,并等于r和p的维数。若nb&lt;n0,则分解后没有直接项，否则，k的长度等于nb-n0+1。</p><p>若X(z)在p(j)处有一m阶重极点，则X(z)分解后将为m项之和，即</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200923114827.png" alt=""></p><p>调用格式为：[r,p,k]=residuez(b,a)</p><p>假如知道了向量p，r和k，利用reduez.m还可以反过来求出多项式B(z),A(z),格式是:[b,a]=residuez(r,p,k)</p><blockquote><p>nb和n0分别是H(z)分母与分子多项式的阶次。</p></blockquote><p>ex0205:residuer.m文件的应用。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="comment">%exa020805_residuez.m</span></span><br><span class="line">clear</span><br><span class="line">b=[<span class="number">1.7</span> <span class="number">-1.69</span> <span class="number">0.39</span>];<span class="comment">%形成分子多项式向量</span></span><br><span class="line">a=[<span class="number">1</span> <span class="number">-1.7</span> <span class="number">0.8</span> <span class="number">-0.1</span>];<span class="comment">%分母多项式向量</span></span><br><span class="line">[r,p,k]=residuez(b,a)<span class="comment">%作逆Z变换，求出向量r,p,k</span></span><br><span class="line">[b1,a1]=residuez(r,p,k)<span class="comment">%反过来，有求出的r，p,k求多项式向量b,a</span></span><br><span class="line">[r,p,k]=residuez(a,b)<span class="comment">%交换分子、分母多项式向量，再求向量r,p,k</span></span><br></pre></td></tr></table></figure><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; exa020805_residuez</span><br><span class="line"></span><br><span class="line">r =</span><br><span class="line"></span><br><span class="line">    <span class="number">1.0000</span></span><br><span class="line">    <span class="number">0.2000</span></span><br><span class="line">    <span class="number">0.5000</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">p =</span><br><span class="line"></span><br><span class="line">    <span class="number">1.0000</span></span><br><span class="line">    <span class="number">0.5000</span></span><br><span class="line">    <span class="number">0.2000</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">k =</span><br><span class="line"></span><br><span class="line">     []</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">b1 =</span><br><span class="line"></span><br><span class="line">    <span class="number">1.7000</span>   <span class="number">-1.6900</span>    <span class="number">0.3900</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">a1 =</span><br><span class="line"></span><br><span class="line">    <span class="number">1.0000</span>   <span class="number">-1.7000</span>    <span class="number">0.8000</span>   <span class="number">-0.1000</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">r =</span><br><span class="line"></span><br><span class="line">   <span class="number">-0.1153</span></span><br><span class="line">   <span class="number">-0.2366</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">p =</span><br><span class="line"></span><br><span class="line">    <span class="number">0.6299</span></span><br><span class="line">    <span class="number">0.3642</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">k =</span><br><span class="line"></span><br><span class="line">    <span class="number">0.9402</span>   <span class="number">-0.2564</span></span><br></pre></td></tr></table></figure><p><font color='red'>知识：</font>tf2zp.m、zp2tf.m、roots.m、poly.m、sort.m文件用于转移函数与极零点之间的相互转换及极零点的排序。</p><blockquote><p>tf2zp：用来求H(z)=B(z)/A(z)的极零点及增益</p><p>zp2tf：用于在极零点已知时求出B(z)和A(z)的系数</p><p>roots：用来求一个多项式的根</p><p>poly：可由给定的根求出相应多项式的系数</p><p>sort：的作用是将求出的根按绝对值的大小值排序</p></blockquote><p>ex0206:设H(z)有5个零点，一个在z=0.8，另4个是0.5e^(jΠ/3)及其共轭与镜像，不难求出</p><p><code>B(z)=1-3.3z^(-1)+7.25z^(-2)-6.7z^(-3)+3z^(-4)-0.8z^(-5)</code></p><p>下面的程序可求出该系统的零点，并由这些零点再求出系统的系数。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="comment">%exa020806</span></span><br><span class="line">clear;</span><br><span class="line">B=[<span class="number">1</span> <span class="number">-3.3</span> <span class="number">7.25</span> <span class="number">-6.7</span> <span class="number">3</span> <span class="number">-0.8</span>];</span><br><span class="line">L=<span class="built_in">length</span>(B);</span><br><span class="line">A=<span class="built_in">zeros</span>(<span class="number">1</span>,L);</span><br><span class="line">A(<span class="number">1</span>)=<span class="number">1</span>;</span><br><span class="line">[Z,P,K]=tf2zp(B,A)</span><br><span class="line"><span class="comment">%使用tf2zp时，B和A是同维的行向量，Z，P是同维的列向量，Z中含有零点，P中含有极点</span></span><br><span class="line"><span class="comment">%K是标量，为系统的增益</span></span><br><span class="line"><span class="built_in">sort</span>(Z)<span class="comment">%对零点排序</span></span><br><span class="line">[b,a]=zp2tf(Z,P,K)<span class="comment">%如果分解和综合正确，那么，b=B,a=A</span></span><br><span class="line">Z1=roots(B)<span class="comment">%求出多项式B(z)的根，即零点</span></span><br><span class="line">poly(Z1)<span class="comment">%由分解到的零点再综合出多项式H(z)</span></span><br></pre></td></tr></table></figure><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; exa020806</span><br><span class="line"></span><br><span class="line">Z =</span><br><span class="line"></span><br><span class="line">   <span class="number">1.0000</span> + <span class="number">1.7321</span><span class="built_in">i</span></span><br><span class="line">   <span class="number">1.0000</span> - <span class="number">1.7321</span><span class="built_in">i</span></span><br><span class="line">   <span class="number">0.8000</span> + <span class="number">0.0000</span><span class="built_in">i</span></span><br><span class="line">   <span class="number">0.2500</span> + <span class="number">0.4330</span><span class="built_in">i</span></span><br><span class="line">   <span class="number">0.2500</span> - <span class="number">0.4330</span><span class="built_in">i</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">P =</span><br><span class="line"></span><br><span class="line">     <span class="number">0</span></span><br><span class="line">     <span class="number">0</span></span><br><span class="line">     <span class="number">0</span></span><br><span class="line">     <span class="number">0</span></span><br><span class="line">     <span class="number">0</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">K =</span><br><span class="line"></span><br><span class="line">     <span class="number">1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">   <span class="number">0.2500</span> - <span class="number">0.4330</span><span class="built_in">i</span></span><br><span class="line">   <span class="number">0.2500</span> + <span class="number">0.4330</span><span class="built_in">i</span></span><br><span class="line">   <span class="number">0.8000</span> + <span class="number">0.0000</span><span class="built_in">i</span></span><br><span class="line">   <span class="number">1.0000</span> - <span class="number">1.7321</span><span class="built_in">i</span></span><br><span class="line">   <span class="number">1.0000</span> + <span class="number">1.7321</span><span class="built_in">i</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">b =</span><br><span class="line"></span><br><span class="line">  <span class="number">1</span> 至 <span class="number">5</span> 列</span><br><span class="line"></span><br><span class="line">    <span class="number">1.0000</span>   <span class="number">-3.3000</span>    <span class="number">7.2500</span>   <span class="number">-6.7000</span>    <span class="number">3.0000</span></span><br><span class="line"></span><br><span class="line">  <span class="number">6</span> 列</span><br><span class="line"></span><br><span class="line">   <span class="number">-0.8000</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">a =</span><br><span class="line"></span><br><span class="line">     <span class="number">1</span>     <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Z1 =</span><br><span class="line"></span><br><span class="line">   <span class="number">1.0000</span> + <span class="number">1.7321</span><span class="built_in">i</span></span><br><span class="line">   <span class="number">1.0000</span> - <span class="number">1.7321</span><span class="built_in">i</span></span><br><span class="line">   <span class="number">0.8000</span> + <span class="number">0.0000</span><span class="built_in">i</span></span><br><span class="line">   <span class="number">0.2500</span> + <span class="number">0.4330</span><span class="built_in">i</span></span><br><span class="line">   <span class="number">0.2500</span> - <span class="number">0.4330</span><span class="built_in">i</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">  <span class="number">1</span> 至 <span class="number">5</span> 列</span><br><span class="line"></span><br><span class="line">    <span class="number">1.0000</span>   <span class="number">-3.3000</span>    <span class="number">7.2500</span>   <span class="number">-6.7000</span>    <span class="number">3.0000</span></span><br><span class="line"></span><br><span class="line">  <span class="number">6</span> 列</span><br><span class="line"></span><br><span class="line">   <span class="number">-0.8000</span></span><br></pre></td></tr></table></figure><p><font color='red'>知识：</font>tf2sos.m、sos2tf.m、sos2zp.m、zp2sos.m用来实现系统的转移函数及零极点和二阶子系统之间的相互转换。</p><ul><li>tf2sos：用来实现将H(z)=B(z)/A(z)分解为一系列二姐子系统Hk(z)的级联，Hk(z)的表达式：</li></ul><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200923114807.png" alt=""></p><p>调用格式：[sos,G]=tf2sos(B,A)</p><blockquote><p>其中，G是系统的增益，sos是——L*6的矩阵，L是二阶子系统的个数，每一行的元素都是按如下方式排列：</p><p>[b0k,b1k,1,a1k,a2k],   k=1,2,····，L</p></blockquote><ul><li><p>sos2tf:功能与tf2sos相反，它用来由二阶子系统构成H(z)，调用格式：</p><p>[B,A]=sos2tf(sos,G)</p></li><li><p>zp2sos：用来实现由系统的零极点到二阶子系统的转换，调用格式：</p><p>[sos,G]=zp2sos(Z,P,K)</p></li><li><p>sos2zp:与zp2sos实现相反的转换，调用格式：[Z,P,K]=sos2zp(sos,G)</p></li></ul><p>ex0207:用上面的知识</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="comment">%exa020807.m</span></span><br><span class="line">clear</span><br><span class="line">B=[<span class="number">0.0201</span> <span class="number">0</span> <span class="number">-0.0402</span> <span class="number">0</span> <span class="number">0.0201</span>];</span><br><span class="line">A=[<span class="number">1</span> <span class="number">-1.637</span> <span class="number">2.237</span> <span class="number">-1.307</span> <span class="number">0.641</span>];</span><br><span class="line">[sos,G]=tf2sos(B,A)<span class="comment">%将转移函数分解成二阶子系统的级联</span></span><br><span class="line">[B,A]=sos2tf(sos,G)<span class="comment">%由级联的二阶子系统重构转移函数</span></span><br><span class="line">[Z,P,K]=tf2zp(B,A)<span class="comment">%求转移函数的极零点</span></span><br><span class="line">[sos,G]=zp2sos(Z,P,K)<span class="comment">%由系统的极零点得到级联的二阶子系统</span></span><br><span class="line">[Z,P,K]=sos2zp(sos,G)<span class="comment">%由级联的二阶子系统得到系统的极零点</span></span><br></pre></td></tr></table></figure><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; exa020807</span><br><span class="line"></span><br><span class="line">sos =</span><br><span class="line"></span><br><span class="line">  <span class="number">1</span> 至 <span class="number">5</span> 列</span><br><span class="line"></span><br><span class="line">    <span class="number">1.0000</span>    <span class="number">2.0000</span>    <span class="number">1.0000</span>    <span class="number">1.0000</span>   <span class="number">-0.6332</span></span><br><span class="line">    <span class="number">1.0000</span>   <span class="number">-2.0000</span>    <span class="number">1.0000</span>    <span class="number">1.0000</span>   <span class="number">-1.0038</span></span><br><span class="line"></span><br><span class="line">  <span class="number">6</span> 列</span><br><span class="line"></span><br><span class="line">    <span class="number">0.7906</span></span><br><span class="line">    <span class="number">0.8107</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">G =</span><br><span class="line"></span><br><span class="line">    <span class="number">0.0201</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">B =</span><br><span class="line"></span><br><span class="line">    <span class="number">0.0201</span>    <span class="number">0.0000</span>   <span class="number">-0.0402</span>   <span class="number">-0.0000</span>    <span class="number">0.0201</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">A =</span><br><span class="line"></span><br><span class="line">    <span class="number">1.0000</span>   <span class="number">-1.6370</span>    <span class="number">2.2370</span>   <span class="number">-1.3070</span>    <span class="number">0.6410</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Z =</span><br><span class="line"></span><br><span class="line">  <span class="number">-1.0000</span> + <span class="number">0.0000</span><span class="built_in">i</span></span><br><span class="line">  <span class="number">-1.0000</span> - <span class="number">0.0000</span><span class="built_in">i</span></span><br><span class="line">   <span class="number">1.0000</span> + <span class="number">0.0000</span><span class="built_in">i</span></span><br><span class="line">   <span class="number">1.0000</span> - <span class="number">0.0000</span><span class="built_in">i</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">P =</span><br><span class="line"></span><br><span class="line">   <span class="number">0.5019</span> + <span class="number">0.7476</span><span class="built_in">i</span></span><br><span class="line">   <span class="number">0.5019</span> - <span class="number">0.7476</span><span class="built_in">i</span></span><br><span class="line">   <span class="number">0.3166</span> + <span class="number">0.8309</span><span class="built_in">i</span></span><br><span class="line">   <span class="number">0.3166</span> - <span class="number">0.8309</span><span class="built_in">i</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">K =</span><br><span class="line"></span><br><span class="line">    <span class="number">0.0201</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">sos =</span><br><span class="line"></span><br><span class="line">  <span class="number">1</span> 至 <span class="number">5</span> 列</span><br><span class="line"></span><br><span class="line">    <span class="number">1.0000</span>    <span class="number">2.0000</span>    <span class="number">1.0000</span>    <span class="number">1.0000</span>   <span class="number">-0.6332</span></span><br><span class="line">    <span class="number">1.0000</span>   <span class="number">-2.0000</span>    <span class="number">1.0000</span>    <span class="number">1.0000</span>   <span class="number">-1.0038</span></span><br><span class="line"></span><br><span class="line">  <span class="number">6</span> 列</span><br><span class="line"></span><br><span class="line">    <span class="number">0.7906</span></span><br><span class="line">    <span class="number">0.8107</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">G =</span><br><span class="line"></span><br><span class="line">    <span class="number">0.0201</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Z =</span><br><span class="line"></span><br><span class="line">  <span class="number">-1.0000</span> + <span class="number">0.0000</span><span class="built_in">i</span></span><br><span class="line">  <span class="number">-1.0000</span> - <span class="number">0.0000</span><span class="built_in">i</span></span><br><span class="line">   <span class="number">1.0000</span> + <span class="number">0.0000</span><span class="built_in">i</span></span><br><span class="line">   <span class="number">1.0000</span> - <span class="number">0.0000</span><span class="built_in">i</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">P =</span><br><span class="line"></span><br><span class="line">   <span class="number">0.3166</span> + <span class="number">0.8309</span><span class="built_in">i</span></span><br><span class="line">   <span class="number">0.3166</span> - <span class="number">0.8309</span><span class="built_in">i</span></span><br><span class="line">   <span class="number">0.5019</span> + <span class="number">0.7476</span><span class="built_in">i</span></span><br><span class="line">   <span class="number">0.5019</span> - <span class="number">0.7476</span><span class="built_in">i</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">K =</span><br><span class="line"></span><br><span class="line">    <span class="number">0.0201</span></span><br></pre></td></tr></table></figure><h2 id="第三章"><a class="header-anchor" href="#第三章">¶</a>第三章</h2><p><font color='red'>知识：</font>fftfilt.m文件用DFT来实现长序列的卷积，采用的是叠接相加法，调用格式：</p><p>y=fftfilt(h,x)或着y=fftfilt(h,x,N)</p><blockquote><p>设x(n)的长度为N，h(n)的长度为M，若采用第一种调用方式，程序自动的确定对x(n)分段的长度L及做FFT的长度N，这样分的段数为Nx/L，显然N是最接近（L+M）的2的整次幂。</p><p>若第二种调用方式，可以自己指定做FFT的长度。</p></blockquote><p>ex0301： 令x(n)为一正弦加白噪声信号，长度为500，h(n)用firl.m文件设计出的一个低通FIR滤波器，长度为11，试用fftfilt实现长序列的卷积。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="comment">%exa031101_fftfilt.m</span></span><br><span class="line">h=fir1(<span class="number">10</span>,<span class="number">0.3</span>,hanning(<span class="number">11</span>));<span class="comment">%设计低通滤波器，得到h(n)</span></span><br><span class="line">N=<span class="number">500</span>;p=<span class="number">0.05</span>;f=<span class="number">1</span>/<span class="number">16</span>;<span class="comment">%设定必要的参数</span></span><br><span class="line">u=<span class="built_in">randn</span>(<span class="number">1</span>,N)*<span class="built_in">sqrt</span>(p);<span class="comment">%产生白噪声信号</span></span><br><span class="line">s=<span class="built_in">sin</span>(<span class="number">2</span>*<span class="built_in">pi</span>*f*[<span class="number">0</span>:N<span class="number">-1</span>]);<span class="comment">%产生正弦信号</span></span><br><span class="line">x=u(<span class="number">1</span>:N)+s;<span class="comment">%得到正弦加白噪声信号</span></span><br><span class="line">y=fftfilt(h,x);<span class="comment">%实现叠接相加法滤波</span></span><br><span class="line">subplot(<span class="number">211</span>);<span class="built_in">plot</span>(x);xlabel(<span class="string">&#x27;原始信号&#x27;</span>)</span><br><span class="line">subplot(<span class="number">212</span>);<span class="built_in">plot</span>(y);xlabel(<span class="string">&#x27;滤波后的信号&#x27;</span>)</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200923204216.png" alt=""></p><p><font color='red'>知识：</font>Hibert.m文件用来计算信号x(n)的希尔伯特变换，调用的格式是：</p><p>​y=hilbert(x)</p><p>y的实部就是x(n)，虚部是x(n)的希尔伯特变换x^(n)。</p><p>ex0302:令x(n)为一正弦信号，长度为25，试求其希尔伯特变换x^(n)。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="comment">%exa0301102_hilbert.m</span></span><br><span class="line">clear;</span><br><span class="line">N=<span class="number">25</span>;f=<span class="number">1</span>/<span class="number">16</span>;x=<span class="built_in">sin</span>(<span class="number">2</span>*<span class="built_in">pi</span>*f*(<span class="number">0</span>:N<span class="number">-1</span>));y=hilbert(x);</span><br><span class="line">subplot(<span class="number">221</span>);stem(x,<span class="string">&#x27;.&#x27;</span>);<span class="built_in">hold</span> on;<span class="built_in">plot</span>(<span class="built_in">zeros</span>(<span class="built_in">size</span>(x)));</span><br><span class="line">subplot(<span class="number">222</span>);stem(<span class="built_in">imag</span>(y),<span class="string">&#x27;.&#x27;</span>);<span class="built_in">hold</span> on;<span class="built_in">plot</span>(<span class="built_in">zeros</span>(<span class="built_in">size</span>(x)));</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200924160604.png" alt=""></p><h2 id="第四章"><a class="header-anchor" href="#第四章">¶</a>第四章</h2><p><font color='red'>知识：</font><code>fft.m</code>:实现快速傅里叶变换</p><p>调用格式：X=fft(x)或着X=fft(x,N)</p><p>对前者，若x的长度是2的整数次幂，则按该长度实现x的快速变换，否则，实现的是慢速的非2的整数次幂的变换；</p><p>对后者，N应该为2的整数次幂，若x的长度小于N，则补零，若超过N，则舍弃N以后的数据。ifft的调用格式与之相同。</p><p>ex0401:令x(n)是两个正弦信号及其白噪声的叠加，试用fft文件对其作频谱分析。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="comment">%exa040801_fft.m</span></span><br><span class="line">clear</span><br><span class="line">N=<span class="number">256</span>;</span><br><span class="line">f1=<span class="number">0.1</span>;f2=<span class="number">0.2</span>;fs=<span class="number">1</span>;</span><br><span class="line">a1=<span class="number">5</span>;a2=<span class="number">3</span>;</span><br><span class="line">w=<span class="number">2</span>*<span class="built_in">pi</span>/fs;</span><br><span class="line">x=a1*<span class="built_in">sin</span>(w*f1*(<span class="number">0</span>:N<span class="number">-1</span>))+a2*<span class="built_in">sin</span>(w*f2*(<span class="number">0</span>:N<span class="number">-1</span>))+<span class="built_in">randn</span>(<span class="number">1</span>,N);</span><br><span class="line">subplot(<span class="number">311</span>);<span class="built_in">plot</span>(x(<span class="number">1</span>:N/<span class="number">4</span>));ylabel(<span class="string">&#x27;x(n)&#x27;</span>);</span><br><span class="line">f=<span class="number">-0.5</span>:<span class="number">1</span>/N:<span class="number">0.5</span><span class="number">-1</span>/N;</span><br><span class="line">X=fft(x);y=ifft(X);</span><br><span class="line">subplot(<span class="number">312</span>);<span class="built_in">plot</span>(f,fftshift(<span class="built_in">abs</span>(X)));ylabel(<span class="string">&#x27;|X(k)|&#x27;</span>);grid on;</span><br><span class="line">subplot(<span class="number">313</span>);<span class="built_in">plot</span>(<span class="built_in">real</span>(y(<span class="number">1</span>:N/<span class="number">4</span>)));ylabel(<span class="string">&#x27;|DFT[X(k)]|&#x27;</span>);</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200924170643.png" alt=""></p><p><font color='red'>知识：</font><code>czt.m</code>文件用来实现线性调频Z变换。</p><p>调用格式：X=czt(x,M,W,A)</p><blockquote><p>式中x是待变换的时域信号x(n)，其长度设为N,M是变换的长度，W确定变换的步长，A确定变换的起点。若M=N,A=1,则CZT变成DFT。</p></blockquote><p>ex0402:设x(n)由三个实正弦所组成，频率分别是8Hz，8.22Hz和9Hz，抽样频率是40Hz，时域取128点。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="comment">%exa040802_czt.m</span></span><br><span class="line">clear</span><br><span class="line">N=<span class="number">128</span>;f1=<span class="number">8</span>;f2=<span class="number">8.22</span>;f3=<span class="number">9</span>;fs=<span class="number">40</span>;</span><br><span class="line">stepf=fs/N;n=<span class="number">0</span>:N<span class="number">-1</span>;</span><br><span class="line">t=<span class="number">2</span>*<span class="built_in">pi</span>*n/fs;</span><br><span class="line">n1=<span class="number">0</span>:stepf:fs/<span class="number">2</span>-stepf;</span><br><span class="line">x=<span class="built_in">sin</span>(f1*t)+<span class="built_in">sin</span>(f2*t)+<span class="built_in">sin</span>(f3*t);</span><br><span class="line">M=N;W=<span class="built_in">exp</span>(-<span class="built_in">j</span>*<span class="number">2</span>*<span class="built_in">pi</span>/M);<span class="comment">%A=1时的czt变换A=1;</span></span><br><span class="line">A=<span class="number">1</span>;Y1=czt(x,M,W,A);</span><br><span class="line">subplot(<span class="number">311</span>);<span class="built_in">plot</span>(n1,<span class="built_in">abs</span>(Y1(<span class="number">1</span>:N/<span class="number">2</span>)));grid on;xlabel(<span class="string">&#x27;f/Hz&#x27;</span>);ylabel(<span class="string">&#x27;|X(e^(jw))|&#x27;</span>);<span class="comment">%DTFT</span></span><br><span class="line">Y2=<span class="built_in">abs</span>(fft(x));</span><br><span class="line">subplot(<span class="number">312</span>);<span class="built_in">plot</span>(n1,<span class="built_in">abs</span>(Y2(<span class="number">1</span>:N/<span class="number">2</span>)));grid on;xlabel(<span class="string">&#x27;f/Hz&#x27;</span>);ylabel(<span class="string">&#x27;|X(e^(jw))|&#x27;</span>);</span><br><span class="line">M=<span class="number">60</span>;f0=<span class="number">7.2</span>;DELf=<span class="number">0.05</span>;A=<span class="built_in">exp</span>(<span class="built_in">j</span>*<span class="number">2</span>*<span class="built_in">pi</span>*f0/fs);</span><br><span class="line">W=<span class="built_in">exp</span>(-<span class="built_in">j</span>*<span class="number">2</span>*<span class="built_in">pi</span>*DELf/fs);</span><br><span class="line">Y3=czt(x,M,W,A);</span><br><span class="line">n2=f0:DELf:f0+(M<span class="number">-1</span>)*DELf;</span><br><span class="line">subplot(<span class="number">313</span>);<span class="built_in">plot</span>(n2,<span class="built_in">abs</span>(Y3));grid on;xlabel(<span class="string">&#x27;f/Hz&#x27;</span>);ylabel(<span class="string">&#x27;|X(e^(jw))|&#x27;</span>);</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200924170630.png" alt=""></p><h2 id="第五章"><a class="header-anchor" href="#第五章">¶</a>第五章</h2><p><font color='red'>知识：</font>filtfilt.m文件实现零相位滤波，调用格式：</p><p>y=filtfilt(B,A,x)</p><blockquote><p>式中B是H(z)的分子多项式，A是分母多项式，x是待滤波信号，y是滤波后的信号。</p></blockquote><p>ex0501:令x(n)为两个正弦信号的叠加，其原频率分别是0.1Π和0.2Π。已知：<img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200925100621.png" alt=""></p><p>为一低通滤波器，现用H(z)对x(n)作零相位滤波。</p><p>待续…</p><h1>维纳滤波器</h1><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="comment">%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%</span></span><br><span class="line">clc;clear all; close all;  </span><br><span class="line"><span class="comment">%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%</span></span><br><span class="line"><span class="comment">%输入信号</span></span><br><span class="line">A=<span class="number">1</span>; <span class="comment">%信号的幅值</span></span><br><span class="line">f=<span class="number">1000</span>; <span class="comment">%信号的频率</span></span><br><span class="line">fs=<span class="number">10</span>^<span class="number">5</span>;<span class="comment">%采样频率</span></span><br><span class="line">t=(<span class="number">0</span>:<span class="number">999</span>); <span class="comment">%采样点</span></span><br><span class="line">Mlag=<span class="number">100</span>;<span class="comment">%相关函数长度变量   </span></span><br><span class="line">x=A*<span class="built_in">cos</span>(<span class="number">2</span>*<span class="built_in">pi</span>*f*t/fs);<span class="comment">%输入正弦波信号</span></span><br><span class="line">xmean=<span class="built_in">mean</span>(x);<span class="comment">%正弦波信号均值</span></span><br><span class="line">xvar=var(x,<span class="number">1</span>);<span class="comment">%正弦波信号方差</span></span><br><span class="line">noise=wgn(<span class="number">1</span>,<span class="number">1000</span>,<span class="number">2</span>);<span class="comment">%产生1行1000列的矩阵，强度为2dbw</span></span><br><span class="line">xn=x+noise; <span class="comment">%给正弦波信号加入信噪比为20dB的高斯白噪声</span></span><br><span class="line"><span class="built_in">plot</span>(t,xn)    </span><br><span class="line">xlabel(<span class="string">&#x27;x轴单位：t/s&#x27;</span>,<span class="string">&#x27;color&#x27;</span>,<span class="string">&#x27;b&#x27;</span>)</span><br><span class="line">ylabel(<span class="string">&#x27;y轴单位：A/V&#x27;</span>,<span class="string">&#x27;color&#x27;</span>,<span class="string">&#x27;b&#x27;</span>)</span><br><span class="line">xnmean = <span class="built_in">mean</span>(xn);  <span class="comment">%计算加噪信号均值</span></span><br><span class="line">xnms = <span class="built_in">mean</span>(xn.^<span class="number">2</span>);  <span class="comment">%计算加噪信号均方值</span></span><br><span class="line">xnvar = var(xn,<span class="number">1</span>);<span class="comment">%计算输入信号方差</span></span><br><span class="line">Rxn=xcorr(xn,Mlag,<span class="string">&#x27;biased&#x27;</span>);  <span class="comment">%计算加噪信号自相关函数</span></span><br><span class="line"><span class="comment">% figure(2)</span></span><br><span class="line"><span class="comment">% subplot(221)</span></span><br><span class="line"><span class="comment">% plot((-Mlag:Mlag),Rxn)   %绘制自相关函数图像</span></span><br><span class="line"><span class="comment">% title(&#x27;加噪信号自相关函数图像&#x27;)</span></span><br><span class="line"><span class="comment">% [f,xi]=ksdensity(xn); %计算加噪信号的概率密度，f为样本点xi处的概率密度</span></span><br><span class="line"><span class="comment">% subplot(222)</span></span><br><span class="line"><span class="comment">% plot(xi,f) %绘制概率密度图像</span></span><br><span class="line"><span class="comment">% title(&#x27;加噪信号概率密度图像&#x27;)</span></span><br><span class="line"><span class="comment">% X=fft(xn); %计算加噪信号序列的快速离散傅里叶变换</span></span><br><span class="line"><span class="comment">% Px=X.*conj(X)/600; %计算信号频谱</span></span><br><span class="line"><span class="comment">% subplot(223)</span></span><br><span class="line"><span class="comment">% semilogy(t,Px) %绘制在半对数坐标系下频谱图像</span></span><br><span class="line"><span class="comment">% title(&#x27;输入信号在半对数坐标系下频谱图像&#x27;)</span></span><br><span class="line"><span class="comment">% xlabel(&#x27;x轴单位：w/rad&#x27;,&#x27;color&#x27;,&#x27;b&#x27;)</span></span><br><span class="line"><span class="comment">% ylabel(&#x27;y轴单位：w/HZ&#x27;,&#x27;color&#x27;,&#x27;b&#x27;)</span></span><br><span class="line"><span class="comment">% pxx=periodogram(xn);%计算加噪信号的功率谱密度</span></span><br><span class="line"><span class="comment">% subplot(224)</span></span><br><span class="line"><span class="comment">% semilogy(pxx) %绘制在半对数坐标系下功率谱密度图像</span></span><br><span class="line"><span class="comment">% title(&#x27;加噪信号在半对数坐标系下功率谱密度图像&#x27;)</span></span><br><span class="line"><span class="comment">% </span></span><br><span class="line"><span class="comment">% xlabel(&#x27;x轴单位：w/rad&#x27;,&#x27;color&#x27;,&#x27;b&#x27;)</span></span><br><span class="line"><span class="comment">% ylabel(&#x27;y轴单位：w/HZ&#x27;,&#x27;color&#x27;,&#x27;b&#x27;)</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">%维纳滤波</span></span><br><span class="line">N=<span class="number">100</span>;   <span class="comment">%维纳滤波器长度</span></span><br><span class="line">Rxnx=xcorr(xn,x,Mlag,<span class="string">&#x27;biased&#x27;</span>);  <span class="comment">%产生加噪信号与原始信号的互相关函数</span></span><br><span class="line">rxnx=<span class="built_in">zeros</span>(N,<span class="number">1</span>); </span><br><span class="line">rxnx(:)=Rxnx(<span class="number">101</span>:<span class="number">101</span>+N<span class="number">-1</span>);</span><br><span class="line">Rxx=<span class="built_in">zeros</span>(N,N);  <span class="comment">%产生加噪信号自相关矩阵</span></span><br><span class="line">Rxx=<span class="built_in">diag</span>(Rxn(<span class="number">101</span>)*<span class="built_in">ones</span>(<span class="number">1</span>,N));</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">2</span>:N</span><br><span class="line">    c=Rxn(<span class="number">101</span>+<span class="built_in">i</span>)*<span class="built_in">ones</span>(<span class="number">1</span>,N+<span class="number">1</span>-<span class="built_in">i</span>);</span><br><span class="line">    Rxx=Rxx+<span class="built_in">diag</span>(c,<span class="built_in">i</span><span class="number">-1</span>)+<span class="built_in">diag</span>(c,-<span class="built_in">i</span>+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">Rxx;</span><br><span class="line">h=<span class="built_in">zeros</span>(N,<span class="number">1</span>);</span><br><span class="line">h=inv(Rxx)*rxnx; <span class="comment">%计算维纳滤波器的h(n)</span></span><br><span class="line">yn=filter(h,<span class="number">1</span>,xn); <span class="comment">%将加噪信号通过维纳滤波器</span></span><br><span class="line"><span class="built_in">figure</span>(<span class="number">5</span>)</span><br><span class="line"><span class="built_in">plot</span>(yn) <span class="comment">%绘制经过维纳滤波器后信号图像</span></span><br><span class="line">title(<span class="string">&#x27;经过维纳滤波器后信号信号图像&#x27;</span>)</span><br><span class="line">xlabel(<span class="string">&#x27;x轴单位：f/HZ&#x27;</span>,<span class="string">&#x27;color&#x27;</span>,<span class="string">&#x27;b&#x27;</span>)</span><br><span class="line">ylabel(<span class="string">&#x27;y轴单位：A/V&#x27;</span>,<span class="string">&#x27;color&#x27;</span>,<span class="string">&#x27;b&#x27;</span>)</span><br><span class="line">ynmean=<span class="built_in">mean</span>(yn) <span class="comment">%计算经过维纳滤波器后信号均值</span></span><br><span class="line">ynms=<span class="built_in">mean</span>(yn.^<span class="number">2</span>) <span class="comment">%计算经过维纳滤波器后信号均方值</span></span><br><span class="line">ynvar=var(yn,<span class="number">1</span>)  <span class="comment">%计算经过维纳滤波器后信号方差</span></span><br><span class="line">Ryn=xcorr(yn,Mlag,<span class="string">&#x27;biased&#x27;</span>);  <span class="comment">%计算经过维纳滤波器后信号自相关函数</span></span><br><span class="line"><span class="built_in">figure</span>(<span class="number">6</span>)</span><br><span class="line">subplot(<span class="number">221</span>)</span><br><span class="line"><span class="built_in">plot</span>((-Mlag:Mlag),Ryn) <span class="comment">%绘制自相关函数图像</span></span><br><span class="line">title(<span class="string">&#x27;经过维纳滤波器后信号自相关函数图像&#x27;</span>)</span><br><span class="line">[f,yi]=ksdensity(yn);  <span class="comment">%计算经过维纳滤波器后信号的概率密度，f为样本点xi处的概率密度</span></span><br><span class="line">subplot(<span class="number">222</span>)</span><br><span class="line"><span class="built_in">plot</span>(yi,f) <span class="comment">%绘制概率密度图像</span></span><br><span class="line">title(<span class="string">&#x27;经过维纳滤波器后信号概率密度图像&#x27;</span>)</span><br><span class="line">Y=fft(yn); <span class="comment">%计算经过维纳滤波器后信号序列的快速离散傅里叶变换</span></span><br><span class="line">Py=Y.*<span class="built_in">conj</span>(Y)/<span class="number">600</span>; <span class="comment">%计算信号频谱</span></span><br><span class="line">subplot(<span class="number">223</span>)</span><br><span class="line">semilogy(t,Py)   <span class="comment">%绘制在半对数坐标系下频谱图像</span></span><br><span class="line">title(<span class="string">&#x27;经过维纳滤波器后信号在半对数坐标系下频谱图像&#x27;</span>)</span><br><span class="line">xlabel(<span class="string">&#x27;x轴单位：w/rad&#x27;</span>,<span class="string">&#x27;color&#x27;</span>,<span class="string">&#x27;b&#x27;</span>)</span><br><span class="line">ylabel(<span class="string">&#x27;y轴单位：w/HZ&#x27;</span>,<span class="string">&#x27;color&#x27;</span>,<span class="string">&#x27;b&#x27;</span>)</span><br><span class="line">pyn=periodogram(yn);  <span class="comment">%计算经过维纳滤波器后信号的功率谱密度</span></span><br><span class="line">subplot(<span class="number">224</span>)</span><br><span class="line">semilogy(pyn)  <span class="comment">%绘制在半对数坐标系下功率谱密度图像</span></span><br><span class="line">title(<span class="string">&#x27;经过维纳滤波器后信号在半对数坐标系下功率谱密度图像&#x27;</span>)</span><br><span class="line">xlabel(<span class="string">&#x27;x轴单位：w/rad&#x27;</span>,<span class="string">&#x27;color&#x27;</span>,<span class="string">&#x27;b&#x27;</span>)</span><br><span class="line">ylabel(<span class="string">&#x27;y轴单位：w/HZ&#x27;</span>,<span class="string">&#x27;color&#x27;</span>,<span class="string">&#x27;b&#x27;</span>)</span><br><span class="line">subplot(<span class="number">4</span>,<span class="number">1</span>,<span class="number">1</span>),<span class="built_in">plot</span>(noise); title(<span class="string">&#x27;噪声信号&#x27;</span>)</span><br><span class="line">subplot(<span class="number">4</span>,<span class="number">1</span>,<span class="number">2</span>),<span class="built_in">plot</span>(x); title(<span class="string">&#x27;正弦信号&#x27;</span>)</span><br><span class="line">subplot(<span class="number">4</span>,<span class="number">1</span>,<span class="number">3</span>),<span class="built_in">plot</span>(xn); title(<span class="string">&#x27;加噪信号&#x27;</span>)</span><br><span class="line">subplot(<span class="number">4</span>,<span class="number">1</span>,<span class="number">4</span>),<span class="built_in">plot</span>(yn); title(<span class="string">&#x27;维纳信号&#x27;</span>)</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201005213624.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201005213632.png" alt=""></p><h1>另一本书例题</h1><h2 id="第一章-v2"><a class="header-anchor" href="#第一章-v2">¶</a>第一章</h2><h3 id="离散时间信号的MATLAB实现"><a class="header-anchor" href="#离散时间信号的MATLAB实现">¶</a>离散时间信号的MATLAB实现</h3><ol><li>正弦序列</li></ol><p>离散正弦序列的MATLAB表示与连续信号类似，只不过用stem函数而不是用plot函数来画出序列的波形。</p><p>ex0101:正弦序列sin(Π/6)*k的MATLAB源程序</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="comment">%exa0101_sin6pik.m</span></span><br><span class="line">clear all;</span><br><span class="line">k=<span class="number">0</span>:<span class="number">39</span>;</span><br><span class="line">fk=<span class="built_in">sin</span>(<span class="built_in">pi</span>/<span class="number">6</span>*k);</span><br><span class="line">stem(k,fk)</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200925112757.png" alt=""></p><ol start="2"><li>指数序列</li></ol><p>离散指数序列的一般形式为<code>ca^k</code>，可用MATLAB中的数组幂运算（即点幂运算）<code>c*a.^k</code>来实现。</p><p>ex0102:先编写绘制离散时间<strong>实指数序列</strong>波形的函数。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="comment">%function_dszsu</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">dszsu</span><span class="params">(c,a,k1,k2)</span></span></span><br><span class="line"><span class="comment">%c:知数序列的幅度</span></span><br><span class="line"><span class="comment">%a:指数序列的底数</span></span><br><span class="line"><span class="comment">%k1:绘制序列的起始序号</span></span><br><span class="line"><span class="comment">%k2:绘制序列的终止序号</span></span><br><span class="line">k=k1:k2;</span><br><span class="line">x=c*(a.^k);</span><br><span class="line">stem(k,x,<span class="string">&#x27;filled&#x27;</span>)</span><br><span class="line"><span class="built_in">hold</span> on</span><br><span class="line"><span class="built_in">plot</span>([k1,k2],[<span class="number">0</span>,<span class="number">0</span>])</span><br><span class="line"><span class="built_in">hold</span> off</span><br></pre></td></tr></table></figure><blockquote><p>编写的函数保存名称与function后面写的必须保持一致</p></blockquote><p>利用上述函数，实现<strong>实指数</strong>波形（a=5/4,3/4,-5/4,-3/4）</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="comment">%exa0102_dszsu.m</span></span><br><span class="line">subplot(<span class="number">221</span>);</span><br><span class="line">dszsu(<span class="number">1</span>,<span class="number">5</span>/<span class="number">4</span>,<span class="number">0</span>,<span class="number">20</span>);</span><br><span class="line">xlabel(<span class="string">&#x27;k&#x27;</span>);title(<span class="string">&#x27;f1[k]&#x27;</span>);</span><br><span class="line">subplot(<span class="number">222</span>);</span><br><span class="line">dszsu(<span class="number">1</span>,<span class="number">3</span>/<span class="number">4</span>,<span class="number">0</span>,<span class="number">20</span>);</span><br><span class="line">xlabel(<span class="string">&#x27;k&#x27;</span>);title(<span class="string">&#x27;f2[k]&#x27;</span>);</span><br><span class="line">subplot(<span class="number">223</span>);</span><br><span class="line">dszsu(<span class="number">1</span>,<span class="number">-5</span>/<span class="number">4</span>,<span class="number">0</span>,<span class="number">20</span>);</span><br><span class="line">xlabel(<span class="string">&#x27;k&#x27;</span>);title(<span class="string">&#x27;f3[k]&#x27;</span>);</span><br><span class="line">subplot(<span class="number">224</span>);</span><br><span class="line">dszsu(<span class="number">1</span>,<span class="number">-3</span>/<span class="number">4</span>,<span class="number">0</span>,<span class="number">20</span>);</span><br><span class="line">xlabel(<span class="string">&#x27;k&#x27;</span>);title(<span class="string">&#x27;f4[k]&#x27;</span>);</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200925114116.png" alt=""></p><p>对于离散时间<strong>虚指数序列</strong>，可用通过调用下列绘制虚指数序列时域波形的MATLAB函数。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span><span class="params">[]</span> = <span class="title">dxzsu</span><span class="params">(n1,n2,w)</span></span></span><br><span class="line"><span class="comment">%n1：绘制波形的虚指数序列的起始时间序号</span></span><br><span class="line"><span class="comment">%n2：绘制波形的虚指数序列的终止时间序号</span></span><br><span class="line"><span class="comment">%w：虚指数序列的角频率</span></span><br><span class="line">k=n1:n2;</span><br><span class="line">f=<span class="built_in">exp</span>(<span class="built_in">i</span>*w*k);</span><br><span class="line">Xr=<span class="built_in">real</span>(f);<span class="comment">%real函数是取f函数的实部</span></span><br><span class="line">Xi=<span class="built_in">imag</span>(f);<span class="comment">%imag函数是取f函数的虚部</span></span><br><span class="line">Xa=<span class="built_in">abs</span>(f);<span class="comment">%abs函数可以用来取复数的模</span></span><br><span class="line">Xn=<span class="built_in">angle</span>(f);<span class="comment">%angle函数取f函数的相角</span></span><br><span class="line">subplot(<span class="number">221</span>),stem(k,Xr,<span class="string">&#x27;filled&#x27;</span>),title(<span class="string">&#x27;实部&#x27;</span>);</span><br><span class="line">subplot(<span class="number">223</span>),stem(k,Xi,<span class="string">&#x27;filled&#x27;</span>),title(<span class="string">&#x27;虚部&#x27;</span>);</span><br><span class="line">subplot(<span class="number">222</span>),stem(k,Xa,<span class="string">&#x27;filled&#x27;</span>),title(<span class="string">&#x27;模&#x27;</span>);</span><br><span class="line">subplot(<span class="number">224</span>),stem(k,Xn,<span class="string">&#x27;filled&#x27;</span>),title(<span class="string">&#x27;相角&#x27;</span>);</span><br></pre></td></tr></table></figure><p>调用上述的程序：</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="comment">%exa0102_dxzsu.m</span></span><br><span class="line">clear;</span><br><span class="line"><span class="built_in">figure</span>(<span class="number">1</span>);<span class="comment">%创建一个新的窗口1</span></span><br><span class="line">dxzsu(<span class="number">0</span>,<span class="number">20</span>,<span class="built_in">pi</span>/<span class="number">4</span>);</span><br><span class="line"><span class="built_in">figure</span>(<span class="number">2</span>);<span class="comment">%创建一个新的窗口2</span></span><br><span class="line">dxzsu(<span class="number">0</span>,<span class="number">20</span>,<span class="number">2</span>);</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200925163353.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200925163407.png" alt=""></p><p>复指数序列，其一般形式为：<code>f[k]=r^(k)*(e^j*w*k)</code></p><p>编写下面的程序，绘制复指数序列时域波形的MATLAB函数。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">dfzsu</span><span class="params">(n1,n2,r,w)</span></span></span><br><span class="line"><span class="comment">%n1:绘制波形的虚指数的起始时间序号</span></span><br><span class="line"><span class="comment">%n2：绘制波形的虚指数的终止时间序号</span></span><br><span class="line"><span class="comment">%w：虚指数序列的角频率</span></span><br><span class="line"><span class="comment">%r：指数序列的底数</span></span><br><span class="line">k=n1:n2;</span><br><span class="line">f=(r*<span class="built_in">exp</span>(<span class="built_in">i</span>*w)).^k;</span><br><span class="line">Xr=<span class="built_in">real</span>(f);</span><br><span class="line">Xi=<span class="built_in">imag</span>(f);</span><br><span class="line">Xa=<span class="built_in">abs</span>(f);</span><br><span class="line">Xn=<span class="built_in">angle</span>(f);</span><br><span class="line">subplot(<span class="number">221</span>),stem(k,Xr,<span class="string">&#x27;filled&#x27;</span>),title(<span class="string">&#x27;实部&#x27;</span>);</span><br><span class="line">subplot(<span class="number">223</span>),stem(k,Xi,<span class="string">&#x27;filled&#x27;</span>),title(<span class="string">&#x27;虚部&#x27;</span>);</span><br><span class="line">subplot(<span class="number">222</span>),stem(k,Xa,<span class="string">&#x27;filled&#x27;</span>),title(<span class="string">&#x27;模&#x27;</span>);</span><br><span class="line">subplot(<span class="number">224</span>),stem(k,Xn,<span class="string">&#x27;filled&#x27;</span>),title(<span class="string">&#x27;相角&#x27;</span>);</span><br></pre></td></tr></table></figure><p>调用上面的程序：</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="comment">%exa0102_dfzsu.m</span></span><br><span class="line"><span class="built_in">figure</span>(<span class="number">1</span>)</span><br><span class="line">dfzsu(<span class="number">0</span>,<span class="number">20</span>,<span class="number">1.2</span>,<span class="built_in">pi</span>/<span class="number">4</span>);</span><br><span class="line"><span class="built_in">figure</span>(<span class="number">2</span>)</span><br><span class="line">dfzsu(<span class="number">0</span>,<span class="number">20</span>,<span class="number">0.8</span>,<span class="built_in">pi</span>/<span class="number">4</span>);</span><br><span class="line"><span class="built_in">figure</span>(<span class="number">3</span>)</span><br><span class="line">dfzsu(<span class="number">0</span>,<span class="number">20</span>,<span class="number">1</span>,<span class="built_in">pi</span>/<span class="number">4</span>);</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200925174933.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200925174952.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200925175012.png" alt=""></p><ol start="3"><li>单位抽样序列</li></ol><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="comment">%exa0103_danwei.m</span></span><br><span class="line"><span class="comment">%单位取样序列实现程序</span></span><br><span class="line">k=<span class="number">-30</span>:<span class="number">30</span>;</span><br><span class="line">delta=[<span class="built_in">zeros</span>(<span class="number">1</span>,<span class="number">30</span>),<span class="number">1</span>,<span class="built_in">zeros</span>(<span class="number">1</span>,<span class="number">30</span>)];</span><br><span class="line">stem(k,delta)</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200925175838.png" alt=""></p><ol start="4"><li>单位阶跃序列</li></ol><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="comment">%exa0104_jieyue.m</span></span><br><span class="line">k=<span class="number">-30</span>:<span class="number">30</span>;</span><br><span class="line">uk=[<span class="built_in">zeros</span>(<span class="number">1</span>,<span class="number">30</span>),<span class="built_in">ones</span>(<span class="number">1</span>,<span class="number">31</span>)];</span><br><span class="line">stem(k,uk)</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200925192231.png" alt=""></p><p>ex0107:编写程序来产生下列基本序列。</p><p>(1)单位抽样序列，起点ns=0，终点nf=10，在n。=3处有一单位脉冲。</p><p>(2)单位阶跃序列，起点ns=0，终点nf=10，在n。=3前为0，在ns=3后为1。</p><p>(3)复指数序列，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>σ</mi></mrow><annotation encoding="application/x-tex">\sigma</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span></span></span></span>=-0.2,w。=0.5。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="comment">%exa010701_chouyang.m</span></span><br><span class="line"><span class="comment">%(1)单位抽样序列，起点ns=0，终点nf=10，在n。=3处有一单位脉冲。</span></span><br><span class="line">clear</span><br><span class="line">ns=<span class="number">0</span>;nf=<span class="number">10</span>;n0=<span class="number">3</span>;</span><br><span class="line">n1=[ns:nf];x1=[<span class="built_in">zeros</span>(<span class="number">1</span>,n0-ns),<span class="number">1</span>,<span class="built_in">zeros</span>(<span class="number">1</span>,nf-n0)];<span class="comment">%实际上zeros函数从标号0开始生成</span></span><br><span class="line">subplot(<span class="number">221</span>);stem(n1,x1),title(<span class="string">&#x27;单位抽样序列\Gamma(n-3)&#x27;</span>);</span><br><span class="line"><span class="comment">%(2)单位阶跃序列，起点ns=0，终点nf=10，在n。=3前为0，在ns=3后为1。</span></span><br><span class="line">n2=[ns:nf];</span><br><span class="line">x2=[<span class="built_in">zeros</span>(<span class="number">1</span>,n0-ns),<span class="built_in">ones</span>(<span class="number">1</span>,nf-n0+<span class="number">1</span>)];</span><br><span class="line">subplot(<span class="number">222</span>);stem(n2,x2),title(<span class="string">&#x27;单位阶跃序列u(n-3)&#x27;</span>);</span><br><span class="line"><span class="comment">%复指数序列:e^jw/e^(a+jb)</span></span><br><span class="line">n3=[ns:nf];x3=<span class="built_in">exp</span>((<span class="number">-0.2</span>+<span class="number">0.5</span><span class="built_in">j</span>)*n3);</span><br><span class="line">subplot(<span class="number">223</span>),stem(n3,<span class="built_in">real</span>(x3)),line([<span class="number">0</span>,<span class="number">10</span>],[<span class="number">0</span>,<span class="number">0</span>]),title(<span class="string">&#x27;复指数序列的实部&#x27;</span>),ylabel(<span class="string">&#x27;实部&#x27;</span>);</span><br><span class="line">subplot(<span class="number">224</span>),stem(n3,<span class="built_in">imag</span>(x3)),line([<span class="number">0</span>,<span class="number">10</span>],[<span class="number">0</span>,<span class="number">0</span>]),title(<span class="string">&#x27;复指数序列的虚部&#x27;</span>),ylabel(<span class="string">&#x27;虚部&#x27;</span>);</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200925210339.png" alt=""></p><p>还可以自己编写一些子程序以便调用。</p><ul><li><p>(1) 单位抽样序列δ(n-n0)的生成函数impseq.m</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="comment">%单位抽样序列生成函数δ(n-n0)的生成函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span><span class="params">[x,n]</span>=<span class="title">impseq</span><span class="params">(n0,ns,nf)</span></span></span><br><span class="line">n=[ns:nf];</span><br><span class="line">x=[(n-n0)==<span class="number">0</span>];<span class="comment">%序列的起点为ns，终点为nf，在n=n0点处生成一个单位脉冲</span></span><br></pre></td></tr></table></figure></li><li><p>(2)单位阶跃序列u(n-n0)的生成函数stepseq.m</p></li></ul><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="comment">%单位阶跃序列u(n-n0)的生成函数stepseq.m</span></span><br><span class="line"><span class="function"><span class="keyword">function</span><span class="params">[x,n]</span>=<span class="title">stepseq</span><span class="params">(n0,ns,nf)</span></span></span><br><span class="line">n=[ns:nf];</span><br><span class="line">x=[(n-n0)&gt;=<span class="number">0</span>];<span class="comment">%序列的起点为ns，终点为nf，在n=n0点处生成单位阶跃</span></span><br></pre></td></tr></table></figure><ul><li>(3)两个信号相加的生成函数sigadd.m</li></ul><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="comment">%两个信号相加的生成函数sigadd.m</span></span><br><span class="line"><span class="function"><span class="keyword">function</span><span class="params">[y,n]</span>=<span class="title">sigadd</span><span class="params">(x1,n1,x2,n2)</span></span></span><br><span class="line">n=<span class="built_in">min</span>(<span class="built_in">min</span>(n1),<span class="built_in">min</span>(n2),<span class="built_in">min</span>(x1),<span class="built_in">min</span>(x2))</span><br><span class="line">y1=<span class="built_in">zeros</span>(<span class="number">1</span>,<span class="built_in">length</span>(n));y2=y1;</span><br><span class="line">y1=(<span class="built_in">find</span>(n&gt;=<span class="built_in">min</span>(n1))&amp;(n&lt;=<span class="built_in">max</span>(n1))==<span class="number">1</span>)=x1;</span><br><span class="line">y2=(<span class="built_in">find</span>(n&gt;=<span class="built_in">min</span>(n2))&amp;(n&lt;=<span class="built_in">max</span>(n2))==<span class="number">1</span>)=x2;</span><br><span class="line">y=y1+y2;</span><br></pre></td></tr></table></figure><ul><li>(4)两个信号相乘的生成函数sigmult.m</li></ul><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="comment">%两个信号相乘的生成函数sigmult.m</span></span><br><span class="line"><span class="function"><span class="keyword">function</span><span class="params">[y,n]</span>=<span class="title">sigmult</span><span class="params">(x1,n1,x2,n2)</span></span></span><br><span class="line">n=<span class="built_in">min</span>(<span class="built_in">min</span>(n1),<span class="built_in">min</span>(n1),<span class="built_in">min</span>(x1),<span class="built_in">min</span>(x2))</span><br><span class="line">y1=<span class="built_in">zeros</span>(<span class="number">1</span>,<span class="built_in">length</span>(n));y2=y1;</span><br><span class="line">y1=(<span class="built_in">find</span>(n&gt;=<span class="built_in">min</span>(n1))&amp;(n&lt;=<span class="built_in">max</span>(n1))==<span class="number">1</span>)=x1;</span><br><span class="line">y2=(<span class="built_in">find</span>(n&gt;=<span class="built_in">min</span>(n2))&amp;(n&lt;=<span class="built_in">max</span>(n2))==<span class="number">1</span>)=x2;</span><br><span class="line">y=y1*y2;</span><br></pre></td></tr></table></figure><ul><li>(5)序列移位y(n)=x(n-n0)的生成函数signshift.m</li></ul><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="comment">%序列移位y(n)=x(n-n0)的生成函数signshift.m</span></span><br><span class="line"><span class="function"><span class="keyword">function</span><span class="params">[y,n]</span>=<span class="title">signshift</span><span class="params">(x,m,n0)</span></span></span><br><span class="line">n=m+n0;y=x</span><br></pre></td></tr></table></figure><ul><li>(6)序列翻褶y(n)=x(-n)的生成函数sigfold.m</li></ul><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span><span class="params">[y,n]</span>=<span class="title">sigfold</span><span class="params">(x,n)</span></span></span><br><span class="line">y=<span class="built_in">fliplr</span>(x);n=-<span class="built_in">fliplr</span>(n)<span class="comment">%fliplr函数是对矩阵实施左右翻转</span></span><br></pre></td></tr></table></figure><ul><li>(7)奇偶综合函数evenodd.m</li></ul><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="comment">%奇偶综合函数evenodd.m</span></span><br><span class="line"><span class="function"><span class="keyword">function</span><span class="params">[xe,x0,m]</span>=<span class="title">evenodd</span><span class="params">(x,n)</span></span></span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">imag</span>(x)~=<span class="number">0</span>)</span><br><span class="line">    error(<span class="string">&#x27;x is not a real sequence&#x27;</span>);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">m=-<span class="built_in">fliplr</span>(n);m1=<span class="built_in">min</span>([m,n]);m2=<span class="built_in">max</span>([m,n]);m=m1:m2;</span><br><span class="line">nm=n(<span class="number">1</span>)-m(<span class="number">2</span>);n1=<span class="number">1</span>;<span class="built_in">length</span>(n);</span><br><span class="line">x1=<span class="built_in">zeros</span>(<span class="number">1</span>,<span class="built_in">length</span>(m));</span><br><span class="line">xe=<span class="number">0.5</span>*(x+<span class="built_in">fliplr</span>(x));<span class="comment">%fliplr函数是对矩阵实施左右翻转</span></span><br><span class="line">x0=<span class="number">0.5</span>*(x-<span class="built_in">fliplr</span>(x));</span><br></pre></td></tr></table></figure><ul><li>(8)求卷积和</li></ul><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="comment">%求卷积和,可以求从负值开始的</span></span><br><span class="line"><span class="function"><span class="keyword">function</span><span class="params">[y,ny]</span>=<span class="title">conv_m</span><span class="params">(x,nx,h,nh)</span></span></span><br><span class="line">ny1=nx(<span class="number">1</span>)+nh(<span class="number">1</span>);ny2=nx(<span class="built_in">length</span>(x))+nh(<span class="built_in">length</span>(h));</span><br><span class="line">ny=[ny1:ny2];</span><br><span class="line">y=conv(x,h);</span><br></pre></td></tr></table></figure><p>ex0108:产生系列序列，并绘出离散图。</p><p>(1)x1(n)=3δ(n-2)-δ(n+4)-5&lt;=n&lt;=5</p><p>(2) x2(n)=n[u(n)-u(n-5)]+10e^(-0.2(n-5))[u(n-10)-u(n-20)]0&lt;=n&lt;=20</p><p>(3)x3(n)=cos(0.04Πn)+0.2w(n)0&lt;=n&lt;=50</p><p>式中，w(n)是均值为0，方差为1的白噪声序列。</p><p>(4)$$\overline{x}4(n)=\widetilde{x}(n)=[x1x1x1x1]$$,其中x1=[1 0 1 2 3]</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="comment">%exa0108_line.m</span></span><br><span class="line">n=[<span class="number">-5</span>:<span class="number">5</span>];</span><br><span class="line">x1=<span class="number">3</span>*impseq(<span class="number">2</span>,<span class="number">-5</span>,<span class="number">5</span>)-impseq(<span class="number">-4</span>,<span class="number">-5</span>,<span class="number">5</span>);</span><br><span class="line">subplot(<span class="number">221</span>),stem(n,x1);ylabel(<span class="string">&#x27;x(n)&#x27;</span>);axis([<span class="number">-5</span>,<span class="number">5</span>,<span class="number">-2</span>,<span class="number">4</span>]);</span><br><span class="line">n=[<span class="number">0</span>:<span class="number">20</span>];</span><br><span class="line">x21=n.*(stepseq(<span class="number">0</span>,<span class="number">0</span>,<span class="number">20</span>)-stepseq(<span class="number">10</span>,<span class="number">0</span>,<span class="number">20</span>));</span><br><span class="line">x22=<span class="number">10</span>*<span class="built_in">exp</span>(<span class="number">-2</span>*(n<span class="number">-5</span>)).*(stepseq(<span class="number">10</span>,<span class="number">0</span>,<span class="number">20</span>)-stepseq(<span class="number">20</span>,<span class="number">0</span>,<span class="number">20</span>));</span><br><span class="line">x2=x21+x22;</span><br><span class="line">subplot(<span class="number">222</span>),stem(n,x2),ylabel(<span class="string">&#x27;x2(n)&#x27;</span>);axis([<span class="number">0</span>,<span class="number">20</span>,<span class="number">-1</span>,<span class="number">11</span>])</span><br><span class="line">n=[<span class="number">0</span>:<span class="number">50</span>];</span><br><span class="line">x3=<span class="built_in">cos</span>(<span class="number">0.04</span>*<span class="built_in">pi</span>*n)+<span class="number">0.2</span>*<span class="built_in">randn</span>(<span class="built_in">size</span>(n));</span><br><span class="line">subplot(<span class="number">223</span>),stem(n,x3);xlabel(<span class="string">&#x27;n&#x27;</span>);ylabel(<span class="string">&#x27;x3(n)&#x27;</span>);axis([<span class="number">0</span>,<span class="number">50</span>,<span class="number">-2</span>,<span class="number">2</span>])</span><br><span class="line">n=[<span class="number">-10</span>:<span class="number">9</span>];</span><br><span class="line">x4=[<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>];</span><br><span class="line">xtilde=x4&#x27;*<span class="built_in">ones</span>(<span class="number">1</span>,<span class="number">4</span>);xtilde=(xtilde(:))&#x27;;</span><br><span class="line">subplot(<span class="number">224</span>);stem(n,xtilde);ylabel(<span class="string">&#x27;x4(n)&#x27;</span>);axis([<span class="number">-10</span>,<span class="number">9</span>,<span class="number">-1</span>,<span class="number">4</span>])</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200928215224.png" alt=""></p><blockquote><p>axis函数：用于操作普通的坐标属性，（轴的缩放和外观）。</p><p>axis( [xmin xmax ymin ymax] )  设置当前坐标轴 x轴 和 y轴的限制范围</p></blockquote><h3 id="离散序列的基本运算"><a class="header-anchor" href="#离散序列的基本运算">¶</a>离散序列的基本运算</h3><ol><li>加法</li></ol><p>对于离散序列而言，序列相加是将信号对应时间序号的值逐项相加，在这里不能像连续时间信号那样用符号运算来实现，而必须用向量表示的方法，即在MATLAB中离散序列的相加需表示成两个向量的相加，因而参加运算的两序列向量必须具有相同的维数。</p><p>实现离散序列相加的MATLAB实用子程序如下：</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="comment">%实现离散序列相加</span></span><br><span class="line"><span class="function"><span class="keyword">function</span><span class="params">[f,k]</span>=<span class="title">lsxj</span><span class="params">(f1,f2,k1,k2)</span></span></span><br><span class="line"><span class="comment">%实现f(k)=f1(k)+f2(k),f1,f2,k1,k2是参加运算的两离散序列及其对应的时间序列向量</span></span><br><span class="line"><span class="comment">%f和k为返回的和序列及其对应的时间序列向量</span></span><br><span class="line">k=<span class="built_in">min</span>(<span class="built_in">min</span>(k1),<span class="built_in">min</span>(k2)):<span class="built_in">max</span>(<span class="built_in">max</span>(k1),<span class="built_in">max</span>(k2));<span class="comment">%构造和序列长度</span></span><br><span class="line">s1=<span class="built_in">zeros</span>(<span class="number">1</span>,<span class="built_in">length</span>(k));s2=s1;<span class="comment">%初始化新向量</span></span><br><span class="line">s1(<span class="built_in">find</span>((k&gt;=<span class="built_in">min</span>(k1))&amp;(k&lt;=<span class="built_in">max</span>(k1))==<span class="number">1</span>))=f1;<span class="comment">%将f1中在和序列范围内但又无定义的点赋值为零</span></span><br><span class="line">s2(<span class="built_in">find</span>((k&gt;=<span class="built_in">min</span>(k2))&amp;(k&lt;=<span class="built_in">max</span>(k2))==<span class="number">1</span>))=f2;<span class="comment">%将f2中在和序列范围内但又无定义的点赋值为零//保证了s1和s2序列长度相同</span></span><br><span class="line">f=s1+s2;<span class="comment">%两长度相等序列求和</span></span><br><span class="line">stem(k,f,<span class="string">&#x27;filled&#x27;</span>)</span><br><span class="line">axis([(<span class="built_in">min</span>(<span class="built_in">min</span>(k1),<span class="built_in">min</span>(k2))<span class="number">-1</span>),(<span class="built_in">max</span>(<span class="built_in">max</span>(k1),<span class="built_in">max</span>(k2))+<span class="number">1</span>),(<span class="built_in">min</span>(f)<span class="number">-0.5</span>),(<span class="built_in">max</span>(f)+<span class="number">0.5</span>)])<span class="comment">%坐标轴显示范围</span></span><br></pre></td></tr></table></figure><blockquote><p>find函数：查询非零元素的位置和值</p></blockquote><p>ex0109:已知两离散序列分别为</p><p>f1[k]={-2,-1,0,1,2}f2[k]={1,1,1}</p><p>试用MATLAB绘出它们的波形及f1[k]+f2[k]的波形。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="comment">%exa0109_lisanxulie.m</span></span><br><span class="line">clear</span><br><span class="line">f1=<span class="number">-2</span>:<span class="number">2</span>;k1=<span class="number">-2</span>:<span class="number">2</span>;</span><br><span class="line">f2=[<span class="number">1</span> <span class="number">1</span> <span class="number">1</span>];k2=<span class="number">-1</span>:<span class="number">1</span>;</span><br><span class="line">subplot(<span class="number">221</span>);stem(k1,f1);axis([<span class="number">-3</span> <span class="number">3</span> <span class="number">-2.5</span> <span class="number">2.5</span>]);title(<span class="string">&#x27;f1[k]&#x27;</span>);</span><br><span class="line">subplot(<span class="number">222</span>);stem(k2,f2);axis([<span class="number">-3</span> <span class="number">3</span> <span class="number">-2.5</span> <span class="number">2.5</span>]);title(<span class="string">&#x27;f2[k]&#x27;</span>);</span><br><span class="line">subplot <span class="number">223</span>;</span><br><span class="line">[f,k]=lsxj(f1,f2,k1,k2);</span><br><span class="line">title(<span class="string">&#x27;f[k]=f1[k]+f2[k]&#x27;</span>)</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200929102701.png" alt=""></p><ol start="2"><li>乘法</li></ol><p>与离散序列加法相似，这里参加运算的两序列向量必须具有相同的维数。实现离散时间信号相乘的MATLAB实用子程序如下：</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="comment">%离散序列乘法</span></span><br><span class="line"><span class="function"><span class="keyword">function</span><span class="params">[f,k]</span>=<span class="title">lsxc</span><span class="params">(f1,f2,k1,k2)</span></span></span><br><span class="line"><span class="comment">%实现f(k)=f1(k)+f2(k),f1,f2,k1,k2是参加运算的两离散序列及其对应的时间序列向量</span></span><br><span class="line"><span class="comment">%f和k为返回的和序列及其对应的时间序列向量</span></span><br><span class="line">k=<span class="built_in">min</span>(<span class="built_in">min</span>(k1),<span class="built_in">min</span>(k2)):<span class="built_in">max</span>(<span class="built_in">max</span>(k1),<span class="built_in">max</span>(k2));<span class="comment">%构造和序列长度</span></span><br><span class="line">s1=<span class="built_in">zeros</span>(<span class="number">1</span>,<span class="built_in">length</span>(k));s2=s1;<span class="comment">%初始化新向量</span></span><br><span class="line">s1(<span class="built_in">find</span>((k&gt;=<span class="built_in">min</span>(k1))&amp;(k&lt;=<span class="built_in">max</span>(k1))==<span class="number">1</span>))=f1;<span class="comment">%将f1中在和序列范围内但又无定义的点赋值为0</span></span><br><span class="line">s2(<span class="built_in">find</span>((k&gt;=<span class="built_in">min</span>(k2))&amp;(k&lt;=<span class="built_in">max</span>(k2))==<span class="number">1</span>))=f2;<span class="comment">%将f2中在和序列范围内但又无定义的点赋值为0</span></span><br><span class="line">f=s1.*s2;<span class="comment">%两长度相等序列求和</span></span><br><span class="line">stem(k,f,<span class="string">&#x27;filled&#x27;</span>)</span><br><span class="line">axis([(<span class="built_in">min</span>(<span class="built_in">min</span>(k1),<span class="built_in">min</span>(k2))<span class="number">-1</span>),(<span class="built_in">max</span>(<span class="built_in">max</span>(k1),<span class="built_in">max</span>(k2))+<span class="number">1</span>),(<span class="built_in">min</span>(f)<span class="number">-0.5</span>),(<span class="built_in">max</span>(f)+<span class="number">0.5</span>)])</span><br></pre></td></tr></table></figure><p>ex01010:试用MATLAB绘出上例中两离散序列乘法f1[k]*f2[k]的波形。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="comment">% exa01010_lisanchengfa.m</span></span><br><span class="line">f1=<span class="number">-2</span>:<span class="number">2</span>;k1=<span class="number">-2</span>:<span class="number">2</span>;</span><br><span class="line">f2=[<span class="number">1</span> <span class="number">1</span> <span class="number">1</span>];k2=<span class="number">-1</span>:<span class="number">1</span>;</span><br><span class="line">subplot <span class="number">221</span>;stem(k1,f1);axis([<span class="number">-3</span> <span class="number">3</span> <span class="number">-2.5</span> <span class="number">2.5</span>]);title(<span class="string">&#x27;f1[k]&#x27;</span>);</span><br><span class="line">subplot <span class="number">222</span>;stem(k2,f2);axis([<span class="number">-3</span> <span class="number">3</span> <span class="number">-2.5</span> <span class="number">2.5</span>]);title(<span class="string">&#x27;f2[k]&#x27;</span>);</span><br><span class="line">subplot <span class="number">223</span>;</span><br><span class="line">[f,k]=lsxc(f1,f2,k1,k2);title(<span class="string">&#x27;f[k]=f1[k]*f2[k]&#x27;</span>);</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200929110346.png" alt=""></p><ol start="3"><li>差分与求和</li></ol><p>离散序列的差分<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∇</mi></mrow><annotation encoding="application/x-tex">\nabla</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">∇</span></span></span></span>f[k]=f[k]-f[k-1]，在MATLAB中用diff函数来实现，其调用格式为：             y=diff(f)</p><p>离散序列的求和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi><mn>2</mn><mo stretchy="false">(</mo><mo>∑</mo><mi>f</mi><mo stretchy="false">[</mo><mi>k</mi><mo stretchy="false">]</mo><mo stretchy="false">)</mo><mi>k</mi><mo>=</mo><mi>k</mi><mn>1</mn></mrow><annotation encoding="application/x-tex">k2(\sum f[k])k=k1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.00001em;vertical-align:-0.25001em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mord">2</span><span class="mopen">(</span><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mclose">]</span><span class="mclose">)</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mord">1</span></span></span></span>与信号相加运算不同，求和运算是把k1和k2之间的所有样本f[k]加起来，在MATLAB中可利用sum函数来实现，其调用形式为：y=sum(f(k1:2))</p><ol start="4"><li>时移、反褶、尺度变换</li></ol><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="comment">%离散序列图像变换实现程序</span></span><br><span class="line">clear;</span><br><span class="line">k=<span class="number">-12</span>:<span class="number">12</span>;</span><br><span class="line">k1=<span class="number">2.</span>*k+<span class="number">4</span>;</span><br><span class="line">f=-[stepfun(k,<span class="number">-3</span>)-stepfun(k,<span class="number">-1</span>)]+...</span><br><span class="line">    <span class="number">4.</span>*[stepfun(k,<span class="number">-1</span>)-stepfun(k,<span class="number">0</span>)]+...</span><br><span class="line">    <span class="number">0.5</span>*k.*[stepfun(k,<span class="number">0</span>)-stepfun(k,<span class="number">11</span>)];</span><br><span class="line">f1=-[stepfun(k1,<span class="number">-3</span>)-stepfun(k1,<span class="number">-1</span>)]+...</span><br><span class="line">    <span class="number">4.</span>*[stepfun(k1,<span class="number">-1</span>)-stepfun(k1,<span class="number">0</span>)]+...</span><br><span class="line">    <span class="number">0.5</span>*k1.*[stepfun(k1,<span class="number">0</span>)-stepfun(k1,<span class="number">11</span>)];</span><br><span class="line">subplot(<span class="number">221</span>);</span><br><span class="line">stem(k,f);</span><br><span class="line">axis([<span class="number">-12</span> <span class="number">12</span> <span class="number">-1</span> <span class="number">6</span>]);</span><br><span class="line">grid on;</span><br><span class="line">text(<span class="number">-8</span>,<span class="number">3</span>,<span class="string">&#x27;f[k]&#x27;</span>)</span><br><span class="line">subplot(<span class="number">222</span>);</span><br><span class="line">stem(k+<span class="number">1</span>,f);</span><br><span class="line">axis([<span class="number">-12</span> <span class="number">12</span> <span class="number">-1</span> <span class="number">6</span>]);</span><br><span class="line">grid on;</span><br><span class="line">text(<span class="number">-9.5</span>,<span class="number">3</span>,<span class="string">&#x27;f[k-1]&#x27;</span>)</span><br><span class="line">subplot <span class="number">223</span>;</span><br><span class="line">stem(k,f1);</span><br><span class="line">axis([<span class="number">-12</span> <span class="number">12</span> <span class="number">-1</span> <span class="number">6</span>]);</span><br><span class="line">grid on;</span><br><span class="line">text(<span class="number">-8</span>,<span class="number">3</span>,<span class="string">&#x27;f[2k+4]&#x27;</span>)</span><br><span class="line">subplot(<span class="number">224</span>);</span><br><span class="line">stem(<span class="number">2</span> -k,f);</span><br><span class="line">axis([<span class="number">-12</span> <span class="number">12</span> <span class="number">-1</span> <span class="number">6</span>]);</span><br><span class="line">grid on;</span><br><span class="line">text(<span class="number">5.5</span>,<span class="number">3</span>,<span class="string">&#x27;f[2-k]&#x27;</span>)</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200929193443.png" alt=""></p><h3 id="奇偶分解"><a class="header-anchor" href="#奇偶分解">¶</a>奇偶分解</h3><p>可以利用MATLAB编写的函数evenodd()将序列分解成偶序列和奇序列两部分，程序如下：</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="comment">%离散序列分解成偶分量和奇分量的程序</span></span><br><span class="line">clf</span><br><span class="line">n0=<span class="number">0</span>;n1=<span class="number">-10</span>;n2=<span class="number">10</span>;</span><br><span class="line">n=n1:n2;</span><br><span class="line">x=[(n-n0)&gt;=<span class="number">0</span>];</span><br><span class="line">subplot <span class="number">221</span>;</span><br><span class="line">stem(n,x)</span><br><span class="line">xlabel(<span class="string">&#x27;n&#x27;</span>);ylabel(<span class="string">&#x27;x(n)&#x27;</span>);title(<span class="string">&#x27;Step Sequence&#x27;</span>);</span><br><span class="line">grid on;</span><br><span class="line"><span class="comment">%Decompositon of the Seqence</span></span><br><span class="line">[xeven,xodd,m]=evenodd(x,n);<span class="comment">%evenodd函数分解奇偶向量</span></span><br><span class="line">subplot <span class="number">223</span></span><br><span class="line">stem(m,xeven);</span><br><span class="line">xlabel(<span class="string">&#x27;m&#x27;</span>);ylabel(<span class="string">&#x27;x even(n)&#x27;</span>);title(<span class="string">&#x27;Even Part&#x27;</span>);</span><br><span class="line">grid on;</span><br><span class="line">subplot <span class="number">224</span></span><br><span class="line">stem(m,xodd);</span><br><span class="line">xlabel(<span class="string">&#x27;m&#x27;</span>);ylabel(<span class="string">&#x27;x odd(n)&#x27;</span>);title(<span class="string">&#x27;Odd Part&#x27;</span>);</span><br><span class="line">grid on;</span><br></pre></td></tr></table></figure><blockquote><p><em>clf函数</em>：清除图形窗口上的旧图形</p><p>evenodd.m函数:可以将任一给定的序列x(n)分解为xe(n)和xo(n)两部分</p><p>用法：[xe,xo,m]=evenodd(x,n)</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200929161849.png" alt=""></p><p>ex01011:已知x(n)=u(n)-u(n-10)，要求将序列分解成奇偶序列。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="comment">%exa01011_evenodd.m</span></span><br><span class="line">clear</span><br><span class="line">n=[<span class="number">0</span>:<span class="number">10</span>];</span><br><span class="line">x=stepseq(<span class="number">0</span>,<span class="number">0</span>,<span class="number">10</span>)-stepseq(<span class="number">10</span>,<span class="number">0</span>,<span class="number">10</span>);</span><br><span class="line">[xe,xo,m]=evenodd(x,n);</span><br><span class="line">subplot <span class="number">221</span>;stem(n,x),ylabel(<span class="string">&#x27;x(n)&#x27;</span>),xlabel(<span class="string">&#x27;n&#x27;</span>),title(<span class="string">&#x27;矩形序列&#x27;</span>),axis([<span class="number">-10</span>,<span class="number">10</span>,<span class="number">-1.2</span>,<span class="number">1.2</span>]);</span><br><span class="line">subplot <span class="number">222</span>;</span><br><span class="line">stem(m,xe);</span><br><span class="line">ylabel(<span class="string">&#x27;xe(n)&#x27;</span>);</span><br><span class="line">title(<span class="string">&#x27;奇序列&#x27;</span>);</span><br><span class="line">axis([<span class="number">-10</span> <span class="number">10</span> <span class="number">-1.2</span> <span class="number">1.2</span>])</span><br><span class="line">subplot <span class="number">224</span>;</span><br><span class="line">stem(m,xo);</span><br><span class="line">ylabel(<span class="string">&#x27;xo(n)&#x27;</span>),xlabel(<span class="string">&#x27;n&#x27;</span>),title(<span class="string">&#x27;偶序列&#x27;</span>),axis([<span class="number">-10</span> <span class="number">10</span> <span class="number">-1.2</span> <span class="number">1.2</span>]);</span><br></pre></td></tr></table></figure><div class='tip error'><p>error:出现错误，画不出图来<p></div><h3 id="常系数线性差分方程解"><a class="header-anchor" href="#常系数线性差分方程解">¶</a>常系数线性差分方程解</h3><p>ex01012:设线性时不变系统的抽样响应h(n)=(0.9)^n*u(n)，输入序列x(n)=u(n)-u(n-10)，求系统的输出y(n)。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="comment">%线性差分方程解</span></span><br><span class="line"><span class="comment">%exa01012_chafen.m</span></span><br><span class="line">n=<span class="number">-5</span>:<span class="number">50</span>;x=stepseq(<span class="number">0</span>,<span class="number">-5</span>,<span class="number">50</span>)-stepseq(<span class="number">10</span>,<span class="number">-5</span>,<span class="number">50</span>);</span><br><span class="line">h=((<span class="number">0.9</span>).^(n)).*stepseq(<span class="number">0</span>,<span class="number">-5</span>,<span class="number">50</span>);</span><br><span class="line">subplot(<span class="number">311</span>);stem(n,x);axis([<span class="number">-5</span>,<span class="number">50</span>,<span class="number">0</span>,<span class="number">2</span>]);ylabel(<span class="string">&#x27;x(n)&#x27;</span>);</span><br><span class="line">subplot(<span class="number">312</span>);stem(n,h);axis([<span class="number">-5</span>,<span class="number">50</span>,<span class="number">0</span>,<span class="number">2</span>]);ylabel(<span class="string">&#x27;h(n)&#x27;</span>);</span><br><span class="line">[y,ny]=conv_m(x,n,h,n);</span><br><span class="line">subplot(<span class="number">313</span>);stem(ny,y);axis([<span class="number">-5</span>,<span class="number">50</span>,<span class="number">0</span>,<span class="number">8</span>]);</span><br><span class="line">xlabel(<span class="string">&#x27;n&#x27;</span>);ylabel(<span class="string">&#x27;y(n)&#x27;</span>);</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200929203435.png" alt=""></p><p>ex01013:给定因果稳定线性时不变系统的差分方程</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200929203427.png" alt=""></p><p>对下列输入序列x(n)，求出输出序列y(n)。</p><p>(1)   x(n)=δ(n);(2)x(n)=u(n);(3)x(n)=R30(n);(4)x(n)=e^(jpi/4*n)u(n)</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="comment">%exa01013_shuchu.m</span></span><br><span class="line">N=<span class="number">100</span>;n=<span class="number">0</span>:N<span class="number">-1</span>;</span><br><span class="line">b=<span class="number">1</span>;a=[<span class="number">1</span>,<span class="number">-1</span>,<span class="number">0.9</span>];<span class="comment">%这个好像是自己设置的</span></span><br><span class="line">x1=[n==<span class="number">0</span>];<span class="comment">%当成冲激函数</span></span><br><span class="line">y1=filter(b,a,x1);<span class="comment">%一维滤波器</span></span><br><span class="line">subplot(<span class="number">321</span>);stem(n,y1,<span class="string">&#x27;.&#x27;</span>);axis([<span class="number">0</span>,N,<span class="number">-1</span>,<span class="number">2</span>]);ylabel(<span class="string">&#x27;y1(n)&#x27;</span>);</span><br><span class="line">x2=[n&gt;=<span class="number">0</span>];<span class="comment">%当成阶跃函数</span></span><br><span class="line">y2=filter(b,a,x2);</span><br><span class="line">subplot(<span class="number">322</span>);stem(n,y2,<span class="string">&#x27;.&#x27;</span>);axis([<span class="number">0</span>,N,<span class="number">-1</span>,<span class="number">2</span>]);ylabel(<span class="string">&#x27;y2(n)&#x27;</span>);</span><br><span class="line">x3=[(n&gt;=<span class="number">0</span>)&amp;(n&lt;<span class="number">30</span>)];<span class="comment">%当成矩形函数</span></span><br><span class="line">y3=filter(b,a,x3);</span><br><span class="line">subplot(<span class="number">323</span>);stem(n,<span class="built_in">real</span>(y3),<span class="string">&#x27;.&#x27;</span>);axis([<span class="number">0</span>,N,<span class="number">-2</span>,<span class="number">2</span>]);ylabel(<span class="string">&#x27;Re[y4(n)]&#x27;</span>);</span><br><span class="line">x4=<span class="built_in">exp</span>(<span class="built_in">j</span>*<span class="built_in">pi</span>*n/<span class="number">8</span>);<span class="comment">%exp默认是乘方？？？</span></span><br><span class="line">y4=filter(b,a,x4);</span><br><span class="line">subplot(<span class="number">325</span>);stem(n,<span class="built_in">real</span>(y4),<span class="string">&#x27;.&#x27;</span>);axis([<span class="number">0</span>,N,<span class="number">-2</span>,<span class="number">2</span>]);ylabel(<span class="string">&#x27;Re[y4(n)]&#x27;</span>);</span><br><span class="line">subplot(<span class="number">326</span>);stem(n,<span class="built_in">imag</span>(y4),<span class="string">&#x27;.&#x27;</span>);axis([<span class="number">0</span>,N,<span class="number">-2</span>,<span class="number">2</span>]);ylabel(<span class="string">&#x27;Im[y4(n)]&#x27;</span>);</span><br></pre></td></tr></table></figure><blockquote><p>上面的xn通过逻辑判断来生成对应的函数</p><p>y = filter(b,a,X) 滤除向量X中的数据，其中b是分子系数<strong>向量</strong>，a是分母系数<strong>向量</strong>。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200929203410.png" alt=""></p><h3 id="序列的傅里叶变换与信号重构"><a class="header-anchor" href="#序列的傅里叶变换与信号重构">¶</a>序列的傅里叶变换与信号重构</h3><p>ex01014: Xa(t)=e^(-1000(t))，求其傅里叶变换Xa(jw)。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="comment">%exa01014_bianhuan.m</span></span><br><span class="line">Dt=<span class="number">0.00005</span>;t=<span class="number">-0.005</span>:Dt:<span class="number">0.005</span>;<span class="comment">%模拟信号</span></span><br><span class="line">xa=<span class="built_in">exp</span>(<span class="number">-1000</span>*<span class="built_in">abs</span>(t));</span><br><span class="line">Wmax=<span class="number">2</span>*<span class="built_in">pi</span>*<span class="number">2000</span>;K=<span class="number">500</span>;k=<span class="number">0</span>:<span class="number">1</span>:K;W=k*Wmax/K;<span class="comment">%连续时间傅里叶变换</span></span><br><span class="line">Xa=xa*<span class="built_in">exp</span>(<span class="number">-1</span><span class="built_in">i</span>*t&#x27;*W)*Dt;Xa=<span class="built_in">real</span>(Xa);</span><br><span class="line">W=[-<span class="built_in">fliplr</span>(W),W(<span class="number">2</span>:<span class="number">501</span>)];</span><br><span class="line">Xa=[<span class="built_in">fliplr</span>(Xa),Xa(<span class="number">2</span>:<span class="number">501</span>)];</span><br><span class="line"><span class="built_in">figure</span>(<span class="number">1</span>)</span><br><span class="line">subplot <span class="number">211</span>;<span class="built_in">plot</span>(t*<span class="number">1000</span>,xa,<span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">xlabel(<span class="string">&#x27;t in msec&#x27;</span>);ylabel(<span class="string">&#x27;xa(t)&#x27;</span>);gtext(<span class="string">&#x27;模拟信号&#x27;</span>);</span><br><span class="line">subplot <span class="number">212</span>;<span class="built_in">plot</span>(W/(<span class="number">2</span>*<span class="built_in">pi</span>*<span class="number">1000</span>),Xa*<span class="number">1000</span>,<span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">xlabel(<span class="string">&#x27;Frequence in kHz&#x27;</span>);ylabel(<span class="string">&#x27;Xa(jw)*1000&#x27;</span>);gtext(<span class="string">&#x27;连续时间傅里叶变换&#x27;</span>);</span><br></pre></td></tr></table></figure><blockquote><p>fliplr函数：矩阵翻转</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201002163344.png" alt=""></p><p>ex01015:以上例中的xa(t)，说明采样频率对频域特性的影响，分别取采样频率为fx=5000Hz和fa=1000Hz，绘出Xa(jw)曲线。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="comment">%exa01015</span></span><br><span class="line">Dt=<span class="number">0.00005</span>;t=<span class="number">-0.005</span>:Dt:<span class="number">0.005</span>;<span class="comment">%模拟信号</span></span><br><span class="line">xa=<span class="built_in">exp</span>(<span class="number">-1000</span>*<span class="built_in">abs</span>(t));</span><br><span class="line"></span><br><span class="line">Ts=<span class="number">0.0002</span>;n=<span class="number">-25</span>:<span class="number">1</span>:<span class="number">25</span>;</span><br><span class="line">x=<span class="built_in">exp</span>(<span class="number">-1000</span>*<span class="built_in">abs</span>(n*Ts));</span><br><span class="line">K=<span class="number">500</span>;k=<span class="number">0</span>:<span class="number">1</span>:K;w=<span class="built_in">pi</span>*k/K;</span><br><span class="line">X=x*<span class="built_in">exp</span>(-<span class="built_in">j</span>*n&#x27;*w);X=<span class="built_in">real</span>(X);</span><br><span class="line">w=[-<span class="built_in">fliplr</span>(w),w(<span class="number">2</span>:<span class="number">501</span>)];<span class="comment">%第二位元素到501位元素</span></span><br><span class="line">X=[<span class="built_in">fliplr</span>(X),X(<span class="number">2</span>:<span class="number">501</span>)];</span><br><span class="line"><span class="built_in">figure</span></span><br><span class="line">subplot <span class="number">211</span>;<span class="built_in">plot</span>(t*<span class="number">1000</span>,xa,<span class="string">&#x27;.&#x27;</span>);ylabel(<span class="string">&#x27;xal(t)&#x27;</span>);</span><br><span class="line">gtext(<span class="string">&#x27;离散信号&#x27;</span>);<span class="built_in">hold</span> on</span><br><span class="line">stem(n*Ts*<span class="number">1000</span>,x);<span class="built_in">hold</span> off</span><br><span class="line">subplot <span class="number">212</span>;<span class="built_in">plot</span>(w/<span class="built_in">pi</span>,X,<span class="string">&#x27;.&#x27;</span>);ylabel(<span class="string">&#x27;Xi(jw)&#x27;</span>);</span><br><span class="line">gtext(<span class="string">&#x27;离散时间傅里叶变换&#x27;</span>);gtext(<span class="string">&#x27;Ts=0.2msec&#x27;</span>)</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201005213708.png" alt=""></p><p>ex01016:对上面产生的离散序列x1(n)和x2(n)，采用sinc函数进行内插重构。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="comment">%exa01016</span></span><br><span class="line">clear</span><br><span class="line">Ts1=<span class="number">0.0002</span>;Fs1=<span class="number">1</span>/Ts1;n1=<span class="number">-25</span>:<span class="number">1</span>:<span class="number">25</span>;nTs1=n1*Ts1;</span><br><span class="line">x1=<span class="built_in">exp</span>(<span class="number">-1000</span>*<span class="built_in">abs</span>(nTs1));</span><br><span class="line">Ts2=<span class="number">0.001</span>;Fs2=<span class="number">1</span>/Ts2;n2=<span class="number">-5</span>:<span class="number">1</span>:<span class="number">5</span>;nTs2=n2*Ts2;</span><br><span class="line">x2=<span class="built_in">exp</span>(<span class="number">-1000</span>*<span class="built_in">abs</span>(nTs2));</span><br><span class="line"></span><br><span class="line">Dt=<span class="number">0.00005</span>;t=<span class="number">-0.5</span>:Dt:<span class="number">0.005</span>;<span class="comment">%模拟信号重构</span></span><br><span class="line">xa1=x1*sinc(Fs1*(<span class="built_in">ones</span>(<span class="built_in">length</span>(nTs1),<span class="number">1</span>)*t - nTs1&#x27;*<span class="built_in">ones</span>(<span class="number">1</span>,<span class="built_in">length</span>(t))));</span><br><span class="line">xa2=x2*sinc(Fs2*(<span class="built_in">ones</span>(<span class="built_in">length</span>(nTs2),<span class="number">1</span>)*t - nTs2&#x27;*<span class="built_in">ones</span>(<span class="number">1</span>,<span class="built_in">length</span>(t))));</span><br><span class="line"></span><br><span class="line">subplot <span class="number">211</span>;<span class="built_in">plot</span>(t*<span class="number">1000</span>,xa1,<span class="string">&#x27;.&#x27;</span>);ylabel(<span class="string">&#x27;xa1(t)&#x27;</span>);</span><br><span class="line">title(<span class="string">&#x27;从x1(n)重构模拟信号xa(t)&#x27;</span>);<span class="built_in">hold</span> on</span><br><span class="line">stem(n1*Ts1*<span class="number">1000</span>,x1);<span class="built_in">hold</span> off</span><br><span class="line">subplot <span class="number">212</span>;<span class="built_in">plot</span>(t*<span class="number">1000</span>,xa2,<span class="string">&#x27;.&#x27;</span>);ylabel(<span class="string">&#x27;xa2(t)&#x27;</span>);</span><br><span class="line">title(<span class="string">&#x27;从x2(n)重构模拟信号xa(t)&#x27;</span>);<span class="built_in">hold</span> on</span><br><span class="line">stem(n2*Ts2*<span class="number">1000</span>,x2);<span class="built_in">hold</span> off</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201005213701.png" alt=""></p><h2 id="第二章-v2"><a class="header-anchor" href="#第二章-v2">¶</a>第二章</h2><h3 id="MATLAB几个信号处理工具箱函数"><a class="header-anchor" href="#MATLAB几个信号处理工具箱函数">¶</a>MATLAB几个信号处理工具箱函数</h3><ol><li>residuez:求极点留数分解</li></ol><p>Y(z)=X(z)H(z)=B(z)/A(z)</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201006095659.png" alt=""></p><p>从上式可得出时域信号为</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201006095651.png" alt=""></p><p>调用格式为：[r,p,k]=residuez(B,A)</p><ol start="2"><li>impz:求H(z)的Z的反变换h(n)</li></ol><p>[h,T]=impz(B,A,N)</p><blockquote><p>h为存放h(n)的列向量，时间变量N存放在列向量T中，当N为标量时，表示T=[0:N-1]’，计算h(n)，n=0,1,2，···，N-1;当N为向量时，T=N,仅计算N指定的整数上的h(n)。</p></blockquote><ol start="3"><li>freqz：求数字滤波器H(z)的频率响应函数</li></ol><p>H=freqz[B,A,M]</p><p>计算由向量w指定的数字频率点上数字滤波器H(z)的频率响应，结果存在H向量中。</p><p>[H,w]=freqz[B,A,M]</p><p>计算出M个频率点上的频率响应，存放在H向量中，M个频率存放在w向量中，freqz函数自动将这M个频率点均匀设置在频率范围[0,Π]之间。</p><blockquote><p>若省略w和M时，函数自动选取512个频率点计算。</p></blockquote><ol start="4"><li>zplane:绘制H(z)的零极点图</li></ol><p>zplane(z,p)</p><p>绘制出列向量z中的零点（以符号“ 。”表示）和列向量p中的极点（以符号“X”表示）以及参考单位圆，并在多阶零点和极点的右上角标出其阶数。若z和p为矩阵，则会以不同颜色绘出z和p各列中的零点和极点。</p><p>zplane(B,A)</p><blockquote><p>绘制出系统函数H(z)的零极点图</p></blockquote><h3 id="绘制离散系统的极零图"><a class="header-anchor" href="#绘制离散系统的极零图">¶</a>绘制离散系统的极零图</h3><p>离散系统的系统函数零点和极点可以用MATLAB的多项式求根函数roots()来实现，调用该函数的命令格式为：</p><p>p=roots(A)</p><blockquote><p>A为待求根的多项式的系数构成的行向量，返回向量p则包含该多项式所有的根位置列向量。</p></blockquote><p>下面是求系统函数零极点，并绘制其零极点图的MATLAB实用函数ljdt()，该函数在绘制系统零极点图的同时，还绘出了Z平面的单位圆。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ljdt</span><span class="params">(A,B)</span></span></span><br><span class="line"><span class="comment">%The function to draw the pole-zero diagram for discrete system</span></span><br><span class="line">p=roots(A);<span class="comment">%求系统极点</span></span><br><span class="line">q=roots(B);<span class="comment">%求系统零点</span></span><br><span class="line">p=p&#x27;;<span class="comment">%将极点列向量转置为行向量</span></span><br><span class="line">q=q&#x27;;<span class="comment">%将零点列向量转置为行向量</span></span><br><span class="line">x=<span class="built_in">max</span>(<span class="built_in">abs</span>([p q <span class="number">1</span>]));<span class="comment">%确定纵坐标范围</span></span><br><span class="line">x=x+<span class="number">0.1</span>;</span><br><span class="line">y=x;<span class="comment">%确定横坐标范围</span></span><br><span class="line">clf</span><br><span class="line"><span class="built_in">hold</span> on</span><br><span class="line">axis([-x x -y y])<span class="comment">%确定坐标轴显示范围</span></span><br><span class="line">w=<span class="number">0</span>:<span class="built_in">pi</span>/<span class="number">300</span>:<span class="number">2</span>*<span class="built_in">pi</span>;</span><br><span class="line">t=<span class="built_in">exp</span>(<span class="built_in">i</span>*w);</span><br><span class="line"><span class="built_in">plot</span>(t)<span class="comment">%画单位圆</span></span><br><span class="line">axis(<span class="string">&#x27;square&#x27;</span>)</span><br><span class="line"><span class="built_in">plot</span>([-x x],[<span class="number">0</span> <span class="number">0</span>])<span class="comment">%画横坐标轴</span></span><br><span class="line"><span class="built_in">plot</span>([<span class="number">0</span> <span class="number">0</span>],[-y y])<span class="comment">%画纵坐标轴</span></span><br><span class="line">text(<span class="number">0.1</span>,x,<span class="string">&#x27;jIm[z]&#x27;</span>)</span><br><span class="line">text(y,<span class="number">1</span>/<span class="number">10</span>,<span class="string">&#x27;Re[z]&#x27;</span>)</span><br><span class="line"><span class="built_in">plot</span>(<span class="built_in">real</span>(p),<span class="built_in">imag</span>(p),<span class="string">&#x27;x&#x27;</span>)<span class="comment">%画极点</span></span><br><span class="line"><span class="built_in">plot</span>(<span class="built_in">real</span>(q),<span class="built_in">imag</span>(q),<span class="string">&#x27;o&#x27;</span>)<span class="comment">%画零点</span></span><br><span class="line">title(<span class="string">&#x27;pole-zero diagram for discrete system&#x27;</span>)<span class="comment">%标注标题</span></span><br><span class="line"><span class="built_in">hold</span> off</span><br></pre></td></tr></table></figure><p>exa02026:已知某离散系统的系统函数为</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>H</mi><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><mi>z</mi><mo>+</mo><mn>1</mn></mrow><mrow><mn>3</mn><msup><mi>z</mi><mn>5</mn></msup><mo>−</mo><msup><mi>z</mi><mn>4</mn></msup><mo>+</mo><mn>1</mn></mrow></mfrac></mrow><annotation encoding="application/x-tex">H(z)=\frac{z+1}{3z^5-z^4+1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.09077em;vertical-align:-0.7693300000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693300000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>试用MATLAB求出该系统的零极点，并画出零极点分布图，判断系统是否稳定。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="comment">%exa02026</span></span><br><span class="line"><span class="comment">%绘制零极点分布图的实现程序</span></span><br><span class="line">a=[<span class="number">3</span> <span class="number">-1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">1</span>];</span><br><span class="line">b=[<span class="number">1</span> <span class="number">1</span>];</span><br><span class="line">ljdt(a,b)</span><br><span class="line">p=roots(a);</span><br><span class="line">q=roots(b);</span><br><span class="line">pa=<span class="built_in">abs</span>(p);</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201009193128.png" alt=""></p><p>exa02027:已知某离散系统的系统函数为</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>H</mi><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><msup><mi>z</mi><mn>2</mn></msup><mo>+</mo><mn>2</mn><mi>z</mi><mo>+</mo><mn>1</mn></mrow><mrow><msup><mi>z</mi><mn>3</mn></msup><mo>−</mo><mn>0.5</mn><msup><mi>z</mi><mn>2</mn></msup><mo>−</mo><mn>0.005</mn><mi>z</mi><mo>+</mo><mn>0.3</mn></mrow></mfrac></mrow><annotation encoding="application/x-tex">H(z)=\frac{z^2+2z+1}{z^3-0.5z^2-0.005z+0.3}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.4212509999999998em;vertical-align:-0.403331em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01792em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7463142857142857em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mtight">0</span><span class="mord mtight">.</span><span class="mord mtight">5</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7463142857142857em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mtight">0</span><span class="mord mtight">.</span><span class="mord mtight">0</span><span class="mord mtight">0</span><span class="mord mtight">5</span><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span><span class="mbin mtight">+</span><span class="mord mtight">0</span><span class="mord mtight">.</span><span class="mord mtight">3</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913142857142857em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mbin mtight">+</span><span class="mord mtight">2</span><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.403331em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p><p>试用MATLAB求该系统的零极点，并画出零极点分布图，求系统的单位冲激响应和幅频响应，并判断系统是否稳定。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="comment">%exa02027</span></span><br><span class="line"><span class="comment">%由系统函数求解系统脉冲响应，频率响应实现程序</span></span><br><span class="line">b=[<span class="number">0</span> <span class="number">1</span> <span class="number">2</span> <span class="number">1</span>];</span><br><span class="line">a=[<span class="number">1</span> <span class="number">-0.5</span> <span class="number">-0.005</span> <span class="number">0.3</span>];</span><br><span class="line">subplot <span class="number">311</span>;</span><br><span class="line">zplane(b,a);<span class="comment">%绘制H(z)的零极点图</span></span><br><span class="line">xlabel(<span class="string">&#x27;实部&#x27;</span>);ylabel(<span class="string">&#x27;虚部&#x27;</span>);</span><br><span class="line">num=[<span class="number">0</span> <span class="number">1</span> <span class="number">2</span> <span class="number">1</span>];</span><br><span class="line">den=[<span class="number">1</span> <span class="number">-0.5</span> <span class="number">-0.005</span> <span class="number">0.3</span>];</span><br><span class="line">h=impz(num,den);</span><br><span class="line">subplot <span class="number">312</span>;</span><br><span class="line">stem(h);xlabel(<span class="string">&#x27;k&#x27;</span>);title(<span class="string">&#x27;单位脉冲响应&#x27;</span>);</span><br><span class="line">[H,w]=freqz(num,den);<span class="comment">%求数字滤波器H(z)的频率响应函数</span></span><br><span class="line">subplot <span class="number">313</span>;</span><br><span class="line"><span class="built_in">plot</span>(w/<span class="built_in">pi</span>,<span class="built_in">abs</span>(H));</span><br><span class="line">xlabel(<span class="string">&#x27;频率\omega&#x27;</span>);</span><br><span class="line">title(<span class="string">&#x27;频率响应&#x27;</span>)</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201009193141.png" alt=""></p><h3 id="分析离散系统的零极图分布与系统单位响应时域特性的关系"><a class="header-anchor" href="#分析离散系统的零极图分布与系统单位响应时域特性的关系">¶</a>分析离散系统的零极图分布与系统单位响应时域特性的关系</h3><p>exa02028:已知离散系统的零极分布分别如图2.12所示，其中虚线表示单位圆，试用MATLAB分析系统单位响应h(n)的时域特性。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201009200621.png" alt="图2.12 离散系统的零极分布图"></p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="comment">%exa02028</span></span><br><span class="line"><span class="comment">%零极点分布与单位响应的关系实现程序</span></span><br><span class="line">a=[<span class="number">1</span>,<span class="number">-1</span>];b=[<span class="number">1</span>];</span><br><span class="line">subplot <span class="number">321</span></span><br><span class="line">impz(b,a);<span class="comment">%求H(z)的Z的反变换h(n)，画出图像</span></span><br><span class="line">a1=[<span class="number">1</span>,<span class="number">-0.8</span>];b1=[<span class="number">1</span>];</span><br><span class="line">subplot <span class="number">322</span></span><br><span class="line">impz(b1,a1,<span class="number">10</span>);</span><br><span class="line">a2=[<span class="number">1</span>,<span class="number">-2</span>];b2=[<span class="number">1</span>];</span><br><span class="line">subplot <span class="number">323</span></span><br><span class="line">impz(b2,a2,<span class="number">10</span>);</span><br><span class="line">a3=[<span class="number">1</span>, <span class="number">-2</span>*<span class="number">0.8</span>*<span class="built_in">cos</span>(<span class="built_in">pi</span>/<span class="number">4</span>),<span class="number">0.8</span>^<span class="number">2</span>];</span><br><span class="line">b3=[<span class="number">1</span>];</span><br><span class="line">subplot <span class="number">324</span></span><br><span class="line">impz(b3,a3,<span class="number">20</span>);</span><br><span class="line">a4=[<span class="number">1</span>,<span class="number">-2</span>*<span class="number">0.8</span>*<span class="built_in">cos</span>(<span class="built_in">pi</span>/<span class="number">8</span>),<span class="number">1</span>];b4=[<span class="number">1</span>];</span><br><span class="line">subplot <span class="number">325</span></span><br><span class="line">impz(b4,a4,<span class="number">20</span>)</span><br><span class="line">a5=[<span class="number">1</span>,<span class="number">-2</span>*<span class="number">1.2</span>*<span class="built_in">cos</span>(<span class="built_in">pi</span>/<span class="number">4</span>),<span class="number">1.2</span>^<span class="number">2</span>];b5=[<span class="number">1</span>];</span><br><span class="line">subplot <span class="number">326</span></span><br><span class="line">impz(b5,a5,<span class="number">20</span>);</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201010110839.png" alt=""></p><p>exa02029:求一因果线性移不变系统<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>y</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mn>0.81</mn><mi>y</mi><mo stretchy="false">(</mo><mi>n</mi><mo>−</mo><mn>2</mn><mo stretchy="false">)</mo><mo>+</mo><mi>x</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>−</mo><mi>x</mi><mo stretchy="false">(</mo><mi>n</mi><mo>−</mo><mn>2</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">y(n)=0.81y(n-2)+x(n)-x(n-2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">8</span><span class="mord">1</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">x</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">x</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mclose">)</span></span></span></span>的单位抽样响应h(n)，单位阶跃响应g(n)，并绘出<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>H</mi><mo stretchy="false">(</mo><msup><mi>e</mi><mrow><mi>j</mi><mi>w</mi></mrow></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">H(e^{jw})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0746639999999998em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>的幅频和相频特性。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="comment">%exa02029</span></span><br><span class="line">b=[<span class="number">1</span>,<span class="number">0</span>,<span class="number">-1</span>];a=[<span class="number">1</span> <span class="number">0</span> <span class="number">-0.81</span>];</span><br><span class="line"><span class="built_in">figure</span>(<span class="number">1</span>)</span><br><span class="line">subplot <span class="number">211</span>;dimpulse(b,a,<span class="number">50</span>);ylabel(<span class="string">&#x27;h(n)&#x27;</span>);</span><br><span class="line">subplot <span class="number">212</span>;dstep(b,a,<span class="number">50</span>);ylabel(<span class="string">&#x27;g(n)&#x27;</span>);</span><br><span class="line"><span class="built_in">figure</span>(<span class="number">2</span>)</span><br><span class="line">w=[<span class="number">0</span>:<span class="number">1</span>:<span class="number">500</span>]*<span class="built_in">pi</span>/<span class="number">500</span>;</span><br><span class="line">freqz(b,a,w)</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201010114343.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201010114351.png" alt=""></p><p>exa02030:梳状滤波器零极点和幅频特性。梳状滤波器系统函数有如下两种类型：</p><p>FIR型：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>H</mi><mn>1</mn></msub><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn><mo>−</mo><msup><mi>z</mi><mrow><mo>−</mo><mi>N</mi></mrow></msup></mrow><annotation encoding="application/x-tex">H_1(z)=1-z^{-N}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span></span></span></span></span></span></span></span></span>IIR型：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>H</mi><mn>2</mn></msub><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><mn>1</mn><mo>−</mo><msup><mi>z</mi><mrow><mo>−</mo><mi>N</mi></mrow></msup></mrow><mrow><mn>1</mn><mo>−</mo><msup><mi>a</mi><mi>N</mi></msup><msup><mi>z</mi><mrow><mo>−</mo><mi>N</mi></mrow></msup></mrow></mfrac></mrow><annotation encoding="application/x-tex">H_2(z)=\frac{1-z^{-N}}{1-a^{N}z^{-N}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.4475609999999999em;vertical-align:-0.4101959999999999em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0373649999999999em;"><span style="top:-2.648135em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathdefault mtight">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7740928571428571em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span></span></span></span></span></span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7740928571428571em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9190928571428572em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4101959999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p><p>分别令N=8,a=0.8,0.9,0.98计算并图示<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>H</mi><mn>1</mn></msub><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo><mi mathvariant="normal">和</mi><msub><mi>H</mi><mn>2</mn></msub><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">H_1(z)和H_2(z)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mord cjk_fallback">和</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mclose">)</span></span></span></span>的零、极点图及幅频特性，说明极点位置的影响。</p><p>☑️增加了相频特性曲线</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="comment">%exa02030</span></span><br><span class="line">b=[<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">-1</span>];</span><br><span class="line">a0=<span class="number">1</span>;</span><br><span class="line">a1=[<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,-(<span class="number">0.8</span>)^<span class="number">8</span>];</span><br><span class="line">a2=[<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,-(<span class="number">0.9</span>)^<span class="number">8</span>];</span><br><span class="line">a3=[<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,-(<span class="number">0.98</span>)^<span class="number">8</span>];</span><br><span class="line">[H,w]=freqz(b,a0);</span><br><span class="line">[H1,w1]=freqz(b,a1);</span><br><span class="line">[H2,w2]=freqz(b,a2);</span><br><span class="line">[H3,w3]=freqz(b,a3);</span><br><span class="line"><span class="built_in">figure</span>(<span class="number">1</span>)</span><br><span class="line">subplot <span class="number">221</span>;zplane(b,a0);xlabel(<span class="string">&#x27;实部&#x27;</span>);ylabel(<span class="string">&#x27;虚部&#x27;</span>);title(<span class="string">&#x27;FIR梳状滤波器零点图&#x27;</span>)</span><br><span class="line">subplot <span class="number">222</span>;zplane(b,a1);xlabel(<span class="string">&#x27;实部&#x27;</span>);ylabel(<span class="string">&#x27;虚部&#x27;</span>);title(<span class="string">&#x27;IIR梳状滤波器零极点图a=0.8&#x27;</span>)</span><br><span class="line">subplot <span class="number">223</span>;zplane(b,a2);xlabel(<span class="string">&#x27;实部&#x27;</span>);ylabel(<span class="string">&#x27;虚部&#x27;</span>);title(<span class="string">&#x27;IIR梳状滤波器零极点图a=0.9&#x27;</span>)</span><br><span class="line">subplot <span class="number">224</span>;zplane(b,a3);xlabel(<span class="string">&#x27;实部&#x27;</span>);ylabel(<span class="string">&#x27;虚部&#x27;</span>);title(<span class="string">&#x27;IIR梳状滤波器零极点图a=0.98&#x27;</span>)</span><br><span class="line"><span class="built_in">figure</span>(<span class="number">2</span>)</span><br><span class="line">subplot <span class="number">221</span>;<span class="built_in">plot</span>(w/<span class="built_in">pi</span>,<span class="built_in">abs</span>(H));title(<span class="string">&#x27;FIR梳状滤波器幅频响应曲线&#x27;</span>)</span><br><span class="line">subplot <span class="number">222</span>;<span class="built_in">plot</span>(w1/<span class="built_in">pi</span>,<span class="built_in">abs</span>(H1));title(<span class="string">&#x27;IIR梳状滤波器幅频响应曲线a=0.8&#x27;</span>)</span><br><span class="line">subplot <span class="number">223</span>;<span class="built_in">plot</span>(w2/<span class="built_in">pi</span>,<span class="built_in">abs</span>(H2));title(<span class="string">&#x27;IIR梳状滤波器幅频响应曲线a=0.9&#x27;</span>)</span><br><span class="line">subplot <span class="number">224</span>;<span class="built_in">plot</span>(w3/<span class="built_in">pi</span>,<span class="built_in">abs</span>(H3));title(<span class="string">&#x27;IIR梳状滤波器幅频响应曲线a=0.98&#x27;</span>)</span><br><span class="line"><span class="built_in">figure</span>(<span class="number">3</span>)<span class="comment">%相频响应</span></span><br><span class="line">subplot <span class="number">221</span>;<span class="built_in">plot</span>(w/<span class="built_in">pi</span>,<span class="built_in">angle</span>(H));title(<span class="string">&#x27;FIR梳状滤波器相频响应曲线&#x27;</span>)<span class="comment">%取相位值对应相位角</span></span><br><span class="line">subplot <span class="number">222</span>;<span class="built_in">plot</span>(w1/<span class="built_in">pi</span>,<span class="built_in">angle</span>(H1));title(<span class="string">&#x27;IIR梳状滤波器相频响应曲线a=0.8&#x27;</span>)</span><br><span class="line">subplot <span class="number">223</span>;<span class="built_in">plot</span>(w2/<span class="built_in">pi</span>,<span class="built_in">angle</span>(H2));title(<span class="string">&#x27;IIR梳状滤波器相频响应曲线a=0.9&#x27;</span>)</span><br><span class="line">subplot <span class="number">224</span>;<span class="built_in">plot</span>(w3/<span class="built_in">pi</span>,<span class="built_in">angle</span>(H3));title(<span class="string">&#x27;IIR梳状滤波器相频响应曲线a=0.98&#x27;</span>)</span><br></pre></td></tr></table></figure><blockquote><p>angle()函数：取相位值对应相位角，相当于相频响应</p><p>abs()函数：求复数的模值，幅频响应</p><p>real()函数：求复数实部</p><p>imag()函数：求复数的虚部</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201011114720.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201011114801.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201011114827.png" alt=""></p><p>exa02031:求解差分方程<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>y</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>−</mo><mn>0.4</mn><mi>y</mi><mo stretchy="false">(</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo>−</mo><mn>0.45</mn><mi>y</mi><mo stretchy="false">(</mo><mi>n</mi><mo>−</mo><mn>2</mn><mo stretchy="false">)</mo><mo>=</mo><mn>0.45</mn><mi>x</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>+</mo><mn>0.4</mn><mi>x</mi><mo stretchy="false">(</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo>−</mo><mi>x</mi><mo stretchy="false">(</mo><mi>n</mi><mo>−</mo><mn>2</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">y(n)-0.4y(n-1)-0.45y(n-2)=0.45x(n)+0.4x(n-1)-x(n-2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">4</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">4</span><span class="mord">5</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">4</span><span class="mord">5</span><span class="mord mathdefault">x</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">4</span><span class="mord mathdefault">x</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">x</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mclose">)</span></span></span></span>，其中，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mn>0.</mn><msup><mn>8</mn><mi>n</mi></msup><mi>ϵ</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">x(n)=0.8^{n}\epsilon(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">x</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord"><span class="mord">8</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mord mathdefault">ϵ</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span>，初始状态<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>y</mi><mo stretchy="false">(</mo><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo>=</mo><mn>0</mn><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">(</mo><mo>−</mo><mn>2</mn><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mi>x</mi><mo stretchy="false">(</mo><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mi>x</mi><mo stretchy="false">(</mo><mo>−</mo><mn>2</mn><mo stretchy="false">)</mo><mo>=</mo><mn>2</mn></mrow><annotation encoding="application/x-tex">y(-1)=0,y(-2)=1,x(-1)=1,x(-2)=2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mopen">(</span><span class="mord">−</span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mopen">(</span><span class="mord">−</span><span class="mord">2</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">x</span><span class="mopen">(</span><span class="mord">−</span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">x</span><span class="mopen">(</span><span class="mord">−</span><span class="mord">2</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span></span></span></span>。</p><p>求解：可得Z变换<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>H</mi><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><mn>0.45</mn><mo>+</mo><mn>0.4</mn><msup><mi>z</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><mo>−</mo><msup><mi>z</mi><mrow><mo>−</mo><mn>2</mn></mrow></msup></mrow><mrow><mn>1</mn><mo>−</mo><mn>0.</mn><msup><mn>4</mn><mrow><mo>−</mo><mn>1</mn></mrow></msup><mo>−</mo><mn>0.45</mn><msup><mi>z</mi><mrow><mo>−</mo><mn>2</mn></mrow></msup></mrow></mfrac></mrow><annotation encoding="application/x-tex">H(z)=\frac{0.45+0.4z^{-1}-z^{-2}}{1-0.4^{-1}-0.45z^{-2}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.4212509999999998em;vertical-align:-0.403331em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01792em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mbin mtight">−</span><span class="mord mtight">0</span><span class="mord mtight">.</span><span class="mord mtight"><span class="mord mtight">4</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7463142857142857em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mtight">0</span><span class="mord mtight">.</span><span class="mord mtight">4</span><span class="mord mtight">5</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7463142857142857em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span><span class="mord mtight">.</span><span class="mord mtight">4</span><span class="mord mtight">5</span><span class="mbin mtight">+</span><span class="mord mtight">0</span><span class="mord mtight">.</span><span class="mord mtight">4</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913142857142857em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913142857142857em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.403331em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p><div class='tip'><p>B是分子上的系数，A是分母上的系数</p></div><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="comment">%exa02031</span></span><br><span class="line"><span class="comment">%求差分方程的解的实现程序</span></span><br><span class="line">num=[<span class="number">0.45</span>,<span class="number">0.4</span>,<span class="number">-1</span>];</span><br><span class="line">den=[<span class="number">1</span>,<span class="number">-0.4</span>,<span class="number">-0.45</span>];</span><br><span class="line">x0=[<span class="number">1</span>,<span class="number">2</span>];y0=[<span class="number">0</span> <span class="number">1</span>];</span><br><span class="line">N=<span class="number">50</span>;</span><br><span class="line">n=[<span class="number">0</span>:N<span class="number">-1</span>]&#x27;;<span class="comment">%单引号是转置,成为列向量</span></span><br><span class="line">x=<span class="number">0.8</span>.^n;</span><br><span class="line">Zi=filtic(num,den,y0,x0);</span><br><span class="line">[y,Zf]=filter(num,den,x,Zi);</span><br><span class="line"><span class="built_in">plot</span>(n,x,<span class="string">&#x27;r--&#x27;</span>,n,y,<span class="string">&#x27;b--&#x27;</span>);</span><br><span class="line">title(<span class="string">&#x27;响应&#x27;</span>);</span><br><span class="line">xlabel(<span class="string">&#x27;n&#x27;</span>);ylabel(<span class="string">&#x27;x(n)-y(n)&#x27;</span>);</span><br><span class="line"><span class="built_in">legend</span>(<span class="string">&#x27;输入x&#x27;</span>,<span class="string">&#x27;输出y&#x27;</span>,<span class="string">&#x27;location&#x27;</span>,<span class="string">&#x27;NorthEast&#x27;</span>);<span class="comment">%相当于legend(&#x27;输入x&#x27;,&#x27;输出y&#x27;)</span></span><br><span class="line">grid;</span><br></pre></td></tr></table></figure><blockquote><p>legend()函数：注释视图</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201011154036.png" alt=""></p><h3 id="利用MATLAB实现Z域的部分分式展开式"><a class="header-anchor" href="#利用MATLAB实现Z域的部分分式展开式">¶</a>利用MATLAB实现Z域的部分分式展开式</h3><p>MATLAB提供了一个对F(z)进行部分分式展开的函数residuez()，其调用格式为</p><p>[r,p,k]=residuez(num,den)</p><blockquote><p>式中，num和den分别为F(z)的分子多项式和分母多项式的系数向量，r为部分分式的系数向量，p为极点向量，k为多项式的系数向量。</p></blockquote><p>exa02032:利用MATLAB计算<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>18</mn><mrow><mn>18</mn><mo>+</mo><mn>3</mn><msup><mi>z</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><mo>−</mo><mn>4</mn><msup><mi>z</mi><mrow><mo>−</mo><mn>2</mn></mrow></msup><mo>−</mo><msup><mi>z</mi><mrow><mo>−</mo><mn>3</mn></mrow></msup></mrow></mfrac></mrow><annotation encoding="application/x-tex">F(z)=\frac{18}{18+3z^{-1}-4z^{-2}-z^{-3}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.2484389999999999em;vertical-align:-0.403331em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">8</span><span class="mbin mtight">+</span><span class="mord mtight">3</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7463142857142857em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mtight">4</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7463142857142857em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7463142857142857em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">3</span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">8</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.403331em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>的部分分式展开式。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="comment">% exa02032</span></span><br><span class="line"><span class="comment">%部分分式展开式的实现程序</span></span><br><span class="line">num=[<span class="number">18</span>];den=[<span class="number">18</span> <span class="number">3</span> <span class="number">-4</span> <span class="number">-1</span>];</span><br><span class="line">[r,p,k]=residuez(num,den)</span><br></pre></td></tr></table></figure><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; exa02032</span><br><span class="line"></span><br><span class="line">r =</span><br><span class="line"></span><br><span class="line">    <span class="number">0.3600</span></span><br><span class="line">    <span class="number">0.2400</span></span><br><span class="line">    <span class="number">0.4000</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">p =</span><br><span class="line"></span><br><span class="line">    <span class="number">0.5000</span></span><br><span class="line">   <span class="number">-0.3333</span></span><br><span class="line">   <span class="number">-0.3333</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">k =</span><br><span class="line"></span><br><span class="line">     []</span><br></pre></td></tr></table></figure><h3 id="利用MATLAB实现Z变换和Z反变换"><a class="header-anchor" href="#利用MATLAB实现Z变换和Z反变换">¶</a>利用MATLAB实现Z变换和Z反变换</h3><p>MATLAB的符号数学工具箱提供了计算Z变换的函数<code>ztrans()</code>和Z反变换的函数<code>iztrans()</code>，其调用格式为</p><p>F=ztrans(f)f=iztrans(F)</p><p>上边两式中，右端的f和F分别为时域表示式和Z域表示式的符号表示，可应用函数sym来实现，其调用格式为</p><p>S=sym(‘A’)</p><blockquote><p>式中，A为待分析的表示式的字符串，S为符号化的数字或变量</p></blockquote><p>exa02033:求(1)  <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mi>c</mi><mi>o</mi><mi>s</mi><mo stretchy="false">(</mo><mi>a</mi><mi>k</mi><mo stretchy="false">)</mo><mi>u</mi><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(n)=cos(ak)u(k)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">c</span><span class="mord mathdefault">o</span><span class="mord mathdefault">s</span><span class="mopen">(</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mclose">)</span><span class="mord mathdefault">u</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mclose">)</span></span></span></span>的Z变换；</p><p>(2) <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><mi>a</mi><mi>z</mi></mrow><mrow><mo stretchy="false">(</mo><mi>z</mi><mo>−</mo><mi>a</mi><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow></mfrac></mrow><annotation encoding="application/x-tex">F(z)=\frac{az}{(z-a)^{2}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.215392em;vertical-align:-0.52em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.695392em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight">a</span><span class="mclose mtight"><span class="mclose mtight">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7463142857142857em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.52em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>的Z反变换。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="comment">% exa02033</span></span><br><span class="line">f1=sym(<span class="string">&#x27;cos(a*k)&#x27;</span>);</span><br><span class="line">F1=ztrans(f1)</span><br><span class="line"></span><br><span class="line">F2=sym(<span class="string">&#x27;a*z/(z-a)^2&#x27;</span>);</span><br><span class="line">f2=iztrans(F2)</span><br></pre></td></tr></table></figure><p>exa02034:常用信号的Z变换。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="comment">% exa02034</span></span><br><span class="line"><span class="comment">% 指数序列的Z变换的程序实现</span></span><br><span class="line">f1=sym(<span class="string">&#x27;a^n&#x27;</span>);</span><br><span class="line">F1=ztrans(f1)</span><br><span class="line"><span class="comment">%阶跃序列的Z变换的程序实现</span></span><br><span class="line">f2=sym(<span class="string">&#x27;1&#x27;</span>);</span><br><span class="line">F2=ztrans(f2)</span><br><span class="line"><span class="comment">%单位序列的Z变换的程序实现</span></span><br><span class="line">f3=sym(<span class="string">&#x27;charfcn[0](n)&#x27;</span>);</span><br><span class="line">F3=ztrans(f3)</span><br></pre></td></tr></table></figure><p>exa02035:计算<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>X</mi><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mn>0.9</mn><msup><mi>z</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo stretchy="false">(</mo><mn>1</mn><mo>+</mo><mn>0.9</mn><msup><mi>z</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><mo stretchy="false">)</mo></mrow></mfrac></mrow><annotation encoding="application/x-tex">X(z)=\frac{1}{(1-0.9z^{-1})^{2}(1+0.9z^{-1})}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.365108em;vertical-align:-0.52em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">1</span><span class="mbin mtight">−</span><span class="mord mtight">0</span><span class="mord mtight">.</span><span class="mord mtight">9</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7463142857142857em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mclose mtight"><span class="mclose mtight">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7463142857142857em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mopen mtight">(</span><span class="mord mtight">1</span><span class="mbin mtight">+</span><span class="mord mtight">0</span><span class="mord mtight">.</span><span class="mord mtight">9</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7463142857142857em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mclose mtight">)</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.52em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∣</mi><mi>z</mi><mi mathvariant="normal">∣</mi><mo>&gt;</mo><mn>0.9</mn></mrow><annotation encoding="application/x-tex">|z|&gt;0.9</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">9</span></span></span></span>的Z反变换。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">b=<span class="number">1</span>;</span><br><span class="line">a=poly([<span class="number">0.9</span> <span class="number">0.9</span> <span class="number">-0.9</span>]);</span><br><span class="line">[r,p,k]=residuez(b,a)</span><br></pre></td></tr></table></figure><h2 id="第三章-v2"><a class="header-anchor" href="#第三章-v2">¶</a>第三章</h2><h3 id="MATLAB信号处理工具箱提供一些函数"><a class="header-anchor" href="#MATLAB信号处理工具箱提供一些函数">¶</a>MATLAB信号处理工具箱提供一些函数</h3><ol><li>fft和ifft：一维快速正傅里叶变换和逆傅里叶变换</li></ol><p>X=fft(x,N)</p><ol start="2"><li>fft2和ifft2：二维快速正傅里叶变换和逆傅里叶变换</li></ol><p>Y=fft2(x)</p><p>Y=fft2(x,m,n)</p><blockquote><p>指定对X截断或补零，使之成为<code>m*n</code>矩阵，然后再做二维FFT，因此其结果Y也为<code>m*n</code>。</p></blockquote><ol start="3"><li>czt：线性调频Z变换</li></ol><p>y=czt(x,m,w,s)</p><blockquote><p>此函数计算由<code>z=a*w.^(-(0:m-1))</code>定义的Z平面旋螺线上各点的Z变换，a规定起点，w规定相邻点的比例，m规定了变换的长度，后三个变量默认值为<code>a=1,w=exp(j*2*pi/m)</code>及<code>m=length(x)</code>，因此<code>y=czt(x)</code>就等于<code>y=fft(x)</code>。</p></blockquote><ol start="4"><li>dct和idct：离散余弦正变换和离散余弦逆变换</li></ol><p>y=dct(x,N)</p><blockquote><p>N的默认值为length(x)</p></blockquote><ol start="5"><li>fftshift</li></ol><p>Y=fftshift(X)</p><blockquote><p>用来重新排列X=fft(x)的输出，当X为向量时，把X的左右两边进行交换，从而将零频分量移至频谱的中心；如果X为二维傅里叶变换的结果，它同时将X的左右和上下部分进行交换。</p></blockquote><ol start="6"><li>fftfilt</li></ol><p>y=fftfilt(b,x)</p><blockquote><p>采用重合相加法FFT对信号向量x快速滤波，得到输出序列向量y，向量b为FIR滤波器的单位脉冲响应，<code>h(n)=b(n+1),n=0,1,···，length(b)-1</code>。</p></blockquote><p>y=fftfilt(b,x,N)</p><blockquote><p>自动选取FFT长度NF=2<sup>nextpow2(N),输入数据x分段长度M=NF-length(b)+1,其中nextpow2(N)函数求得一个整数，满足：2</sup>(nextpow2(N)-1)&lt;=N&lt;=2^nextpow(N)</p><p>N省略时，fftfilt自动选择合适的FFT长度NF和对x的分段长度M。</p></blockquote><h3 id="MTALB实现序列的移位和周期延拓运算"><a class="header-anchor" href="#MTALB实现序列的移位和周期延拓运算">¶</a>MTALB实现序列的移位和周期延拓运算</h3><p>exa03010:已知<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mn>0.</mn><msup><mn>8</mn><mi>n</mi></msup><msub><mi>R</mi><mn>8</mn></msub><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">x(n)=0.8^nR_8(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">x</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord"><span class="mord">8</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">8</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span>，利用MATLAB生成并图示x(n),x(n-m),<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mo stretchy="false">(</mo><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><msub><mo stretchy="false">)</mo><mn>8</mn></msub><msub><mi>R</mi><mi>N</mi></msub><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">x((n))_8R_N(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">x</span><span class="mopen">(</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">8</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span>,其中N=24,0&lt;m&lt;N,<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mo stretchy="false">(</mo><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><msub><mo stretchy="false">)</mo><mn>8</mn></msub></mrow><annotation encoding="application/x-tex">x((n))_8</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">x</span><span class="mopen">(</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">8</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>表示x(n)以8为周期的延拓。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="comment">% exa03010</span></span><br><span class="line">N=<span class="number">24</span>;M=<span class="number">8</span>;m=<span class="number">3</span>;<span class="comment">%设位移值3</span></span><br><span class="line">n=<span class="number">0</span>:N<span class="number">-1</span>;</span><br><span class="line">x1=<span class="number">0.8</span>.^n;x2=[(n&gt;=<span class="number">0</span>)&amp;(n&lt;M)];</span><br><span class="line">xn=x1.*x2;<span class="comment">%产生x(n)</span></span><br><span class="line">[xm,nm]=sigshift(xn,n,m);<span class="comment">%产生x(n-m)</span></span><br><span class="line">xc=xn(<span class="built_in">mod</span>(n,<span class="number">8</span>)+<span class="number">1</span>);<span class="comment">%产生x(n)的周期延拓，求余后加1是因为MATLAB向量下标从1开始</span></span><br><span class="line">xcm=xn(<span class="built_in">mod</span>(n-m,<span class="number">8</span>)+<span class="number">1</span>);<span class="comment">%产生x(n)移位后的周期延拓</span></span><br><span class="line"><span class="comment">%mod函数是求余</span></span><br><span class="line">subplot <span class="number">221</span>;stem(n,xn,<span class="string">&#x27;.&#x27;</span>);axis([<span class="number">0</span>,<span class="built_in">length</span>(n),<span class="number">0</span>,<span class="number">1</span>]);title(<span class="string">&#x27;x(n)&#x27;</span>)</span><br><span class="line">subplot <span class="number">222</span>;stem(nm,xm,<span class="string">&#x27;.&#x27;</span>);axis([<span class="number">0</span>,<span class="built_in">length</span>(nm),<span class="number">0</span>,<span class="number">1</span>]);title(<span class="string">&#x27;x(n-m)&#x27;</span>)</span><br><span class="line">subplot <span class="number">223</span>;stem(n,xc,<span class="string">&#x27;.&#x27;</span>);axis([<span class="number">0</span>,<span class="built_in">length</span>(n),<span class="number">0</span>,<span class="number">1</span>]);title(<span class="string">&#x27;x(n)的周期延拓&#x27;</span>)</span><br><span class="line">subplot <span class="number">224</span>;stem(n,xcm,<span class="string">&#x27;.&#x27;</span>);axis([<span class="number">0</span>,<span class="built_in">length</span>(n),<span class="number">0</span>,<span class="number">1</span>]);title(<span class="string">&#x27;x(n)的循环移位&#x27;</span>)</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201103164050.png" alt=""></p><h3 id="MATLAB实现基本序列的离散傅里叶变换计算"><a class="header-anchor" href="#MATLAB实现基本序列的离散傅里叶变换计算">¶</a>MATLAB实现基本序列的离散傅里叶变换计算</h3><p>exa03011：已知复正弦序列<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mn>1</mn></msub><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><msup><mi>e</mi><mrow><mi>j</mi><mo stretchy="false">(</mo><mi mathvariant="normal">Π</mi><mi mathvariant="normal">/</mi><mn>2</mn><mo stretchy="false">)</mo><mi>n</mi></mrow></msup><msub><mi>R</mi><mi>N</mi></msub><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">x_1(n)=e^{j(Π/2)n}R_N(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.138em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mopen mtight">(</span><span class="mord mtight">Π</span><span class="mord mtight">/</span><span class="mord mtight">2</span><span class="mclose mtight">)</span><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span>,余弦<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mn>2</mn></msub><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mi>c</mi><mi>o</mi><mi>s</mi><mo stretchy="false">(</mo><mfrac><mrow><mi>p</mi><mi>i</mi></mrow><mn>8</mn></mfrac><mi>n</mi><mo stretchy="false">)</mo><msub><mi>R</mi><mi>N</mi></msub><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">x_2(n)=cos(\frac{pi}{8}n)R_N(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.252772em;vertical-align:-0.345em;"></span><span class="mord mathdefault">c</span><span class="mord mathdefault">o</span><span class="mord mathdefault">s</span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.907772em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">8</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.446108em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">p</span><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span>,分别对序列对序列求当N=16和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>N</mi><mn>1</mn></msub><mo>=</mo><mn>8</mn></mrow><annotation encoding="application/x-tex">N_1=8</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">8</span></span></span></span>时的DFT，并绘出幅频特性曲线，并分析两种N值下DFT是否有差别，及产生原因。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="comment">%exa03011</span></span><br><span class="line">N=<span class="number">16</span>;N1=<span class="number">8</span>;</span><br><span class="line">n=<span class="number">0</span>:N<span class="number">-1</span>;k=<span class="number">0</span>:N1<span class="number">-1</span>;</span><br><span class="line">x1n=<span class="built_in">exp</span>(<span class="built_in">j</span>*<span class="built_in">pi</span>*n/<span class="number">8</span>);<span class="comment">%产生x1(n)</span></span><br><span class="line">X1k=fft(x1n,N);<span class="comment">%计算N点的DFT[x1(n)]</span></span><br><span class="line">X2k=fft(x1n,N1);<span class="comment">%计算N1点DFT[x1(n)]</span></span><br><span class="line">x2n=<span class="built_in">cos</span>(<span class="built_in">pi</span>*n/<span class="number">8</span>);<span class="comment">%产生x2(n)</span></span><br><span class="line">X3k=fft(x2n,N);<span class="comment">%计算N点DFT[x2(n)]</span></span><br><span class="line">X4k=fft(x2n,N1);<span class="comment">%计算N1点DFT[x2(n)]</span></span><br><span class="line"></span><br><span class="line">subplot <span class="number">221</span>;stem(n,<span class="built_in">abs</span>(X1k),<span class="string">&#x27;.&#x27;</span>);axis([<span class="number">0</span>,<span class="number">20</span>,<span class="number">0</span>,<span class="number">20</span>]);ylabel(<span class="string">&#x27;|X1(k)|&#x27;</span>);title(<span class="string">&#x27;16点的DFT[x1(n)]&#x27;</span>)</span><br><span class="line">subplot <span class="number">222</span>;stem(n,<span class="built_in">abs</span>(X3k),<span class="string">&#x27;.&#x27;</span>);axis([<span class="number">0</span>,<span class="number">20</span>,<span class="number">0</span>,<span class="number">20</span>]);ylabel(<span class="string">&#x27;|X2(k)|&#x27;</span>);title(<span class="string">&#x27;16点DFT[x2(n)]&#x27;</span>)</span><br><span class="line">subplot <span class="number">223</span>;stem(k,<span class="built_in">abs</span>(X2k),<span class="string">&#x27;.&#x27;</span>);axis([<span class="number">0</span>,<span class="number">20</span>,<span class="number">0</span>,<span class="number">20</span>]);ylabel(<span class="string">&#x27;|X1(k)|&#x27;</span>);title(<span class="string">&#x27;8点DFT[x1(n)]&#x27;</span>)</span><br><span class="line">subplot <span class="number">224</span>;stem(k,<span class="built_in">abs</span>(X4k),<span class="string">&#x27;.&#x27;</span>);axis([<span class="number">0</span>,<span class="number">20</span>,<span class="number">0</span>,<span class="number">20</span>]);ylabel(<span class="string">&#x27;|X2(k)|&#x27;</span>);title(<span class="string">&#x27;8点DFT[x2(n)]&#x27;</span>)</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201103210358.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201103210727.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201103210740.png" alt=""></p><h3 id="MATLAB验证N点DFT的物理意义"><a class="header-anchor" href="#MATLAB验证N点DFT的物理意义">¶</a>MATLAB验证N点DFT的物理意义</h3><p>exa03012：已知<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mi>R</mi><mn>1</mn></msub><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">x(n)=R_1(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">x</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span>,<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>X</mi><mo stretchy="false">(</mo><msup><mi>e</mi><mrow><mi>j</mi><mi>w</mi></mrow></msup><mo stretchy="false">)</mo><mo>=</mo><mi>F</mi><mi>T</mi><mo stretchy="false">[</mo><mi>x</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo stretchy="false">]</mo><mo>=</mo><mfrac><mrow><mn>1</mn><mo>−</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>j</mi><mn>4</mn><mi>w</mi></mrow></msup></mrow><mrow><mn>1</mn><mo>−</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>j</mi><mi>w</mi></mrow></msup></mrow></mfrac></mrow><annotation encoding="application/x-tex">X(e^{jw})=FT[x(n)]=\frac{1-e^{-j4w}}{1-e^{-jw}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0746639999999998em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mopen">[</span><span class="mord mathdefault">x</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.428791em;vertical-align:-0.403331em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.02546em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathdefault mtight">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7570857142857144em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathdefault mtight">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9020857142857144em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mtight">4</span><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.403331em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>，绘制相应的幅频和相频曲线，并计算图示N=8和N=16时的DFT。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="comment">%exa03012</span></span><br><span class="line">N1=<span class="number">8</span>;N2=<span class="number">16</span>;</span><br><span class="line">n=<span class="number">0</span>:N1<span class="number">-1</span>;k1=<span class="number">0</span>:N1<span class="number">-1</span>;k2=<span class="number">0</span>:N2<span class="number">-1</span>;</span><br><span class="line">w=<span class="number">2</span>*<span class="built_in">pi</span>*(<span class="number">0</span>:<span class="number">2047</span>)/<span class="number">2048</span>;</span><br><span class="line">Xw=(<span class="number">1</span>-<span class="built_in">exp</span>(-<span class="built_in">j</span>*<span class="number">4</span>*w))./(<span class="number">1</span>-<span class="built_in">exp</span>(-<span class="built_in">j</span>*w));</span><br><span class="line"><span class="comment">%对x(n)的频谱函数采样2048个点可以近似地看做成连续的频谱</span></span><br><span class="line">xn=[(n&gt;=<span class="number">0</span>)&amp;(n&lt;<span class="number">4</span>)];</span><br><span class="line">X1k=fft(xn,N1);</span><br><span class="line">X2k=fft(xn,N2);</span><br><span class="line">subplot <span class="number">321</span>;<span class="built_in">plot</span>(w/<span class="built_in">pi</span>,<span class="built_in">abs</span>(Xw));xlabel(<span class="string">&#x27;w/\pi&#x27;</span>);title(<span class="string">&#x27;x(n)的幅频曲线&#x27;</span>)</span><br><span class="line">subplot <span class="number">322</span>;<span class="built_in">plot</span>(w/<span class="built_in">pi</span>,<span class="built_in">angle</span>(Xw));axis([<span class="number">0</span>,<span class="number">2</span>,-<span class="built_in">pi</span>,<span class="built_in">pi</span>]);line([<span class="number">0</span>,<span class="number">2</span>],[<span class="number">0</span>,<span class="number">0</span>]);xlabel(<span class="string">&#x27;w/\pi&#x27;</span>);</span><br><span class="line">title(<span class="string">&#x27;x(n)的相频曲线&#x27;</span>)</span><br><span class="line">subplot <span class="number">323</span>;stem(k1,<span class="built_in">abs</span>(X1k),<span class="string">&#x27;.&#x27;</span>);xlabel(<span class="string">&#x27;k(w=2\pik/N1)&#x27;</span>);ylabel(<span class="string">&#x27;|X1(k)|&#x27;</span>);<span class="built_in">hold</span> on;</span><br><span class="line"><span class="built_in">plot</span>(N1/<span class="number">2</span>*w/<span class="built_in">pi</span>,<span class="built_in">abs</span>(Xw));title(<span class="string">&#x27;N_1点的DFT[x(n)]=X_1(k)&#x27;</span>)<span class="comment">%图形上叠加连续频谱的幅度曲线</span></span><br><span class="line">subplot <span class="number">324</span>;stem(k1,<span class="built_in">angle</span>(X1k),<span class="string">&#x27;.&#x27;</span>);axis([<span class="number">0</span>,N1,-<span class="built_in">pi</span>,<span class="built_in">pi</span>]);line([<span class="number">0</span>,N1],[<span class="number">0</span>,<span class="number">0</span>]);xlabel(<span class="string">&#x27;k(w=2\pik/N1)&#x27;</span>);ylabel(<span class="string">&#x27;Arg[X1(k)]&#x27;</span>);<span class="built_in">hold</span> on;</span><br><span class="line"><span class="built_in">plot</span>(N1/<span class="number">2</span>*w/<span class="built_in">pi</span>,<span class="built_in">angle</span>(Xw));title(<span class="string">&#x27;X_1(k)的相位&#x27;</span>)<span class="comment">%图像上叠加连续幅频的相位曲线</span></span><br><span class="line">subplot <span class="number">325</span>;stem(k2,<span class="built_in">abs</span>(X2k),<span class="string">&#x27;.&#x27;</span>);xlabel(<span class="string">&#x27;k(w=2\pik/N2)&#x27;</span>);ylabel(<span class="string">&#x27;|X2(k)|&#x27;</span>);<span class="built_in">hold</span> on;</span><br><span class="line"><span class="built_in">plot</span>(N2/<span class="number">2</span>*w/<span class="built_in">pi</span>,<span class="built_in">abs</span>(Xw));title(<span class="string">&#x27;N_2点的DFT[x(n)]=X_2(k)&#x27;</span>)</span><br><span class="line">subplot <span class="number">326</span>;stem(k2,<span class="built_in">angle</span>(X2k),<span class="string">&#x27;.&#x27;</span>);axis([<span class="number">0</span>,N2,-<span class="built_in">pi</span>,<span class="built_in">pi</span>]);line([<span class="number">0</span>,N2],[<span class="number">0</span>,<span class="number">0</span>]);xlabel(<span class="string">&#x27;k(w=2\pik/N2)&#x27;</span>);ylabel(<span class="string">&#x27;Arg[X2(k)]&#x27;</span>);<span class="built_in">hold</span> on;</span><br><span class="line"><span class="built_in">plot</span>(N2/<span class="number">2</span>*w/<span class="built_in">pi</span>,<span class="built_in">angle</span>(Xw));title(<span class="string">&#x27;X_2(k)的相位&#x27;</span>)</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201104114526.png" alt=""></p><p>MATLAB验证频域采样和时域采样的对偶性</p><p>exa03013:(1)产生一个三角波序列x(n),长度为M=40；</p><p>(2)计算N=64时的X(k)=DFT[x(n)],并图示x(n)和X(k);</p><p>(3)对X(k)在[0,2pi]上进行32点抽样，得到<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>X</mi><mn>1</mn></msub><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo><mo>=</mo><mi>X</mi><mo stretchy="false">(</mo><mn>2</mn><mi>k</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>k</mi><mo>=</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo separator="true">,</mo><mo separator="true">⋅</mo><mo separator="true">⋅</mo><mo separator="true">⋅</mo><mo separator="true">,</mo><mn>3</mn></mrow><annotation encoding="application/x-tex">X_1(k)=X(2k),k=0,1,···,3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mopen">(</span><span class="mord">2</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">⋅</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">⋅</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">⋅</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">3</span></span></span></span>；</p><p>(4)求<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>X</mi><mn>1</mn></msub><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">X_1(k)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mclose">)</span></span></span></span>的32点IDFT，即<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mn>1</mn></msub><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mi>I</mi><mi>D</mi><mi>F</mi><mi>T</mi><mo stretchy="false">[</mo><msub><mi>X</mi><mn>1</mn></msub><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">x_1(n)=IDFT[X_1(k)]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mopen">[</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mclose">)</span><span class="mclose">]</span></span></span></span>;</p><p>(5)绘制<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mn>1</mn></msub><mo stretchy="false">(</mo><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><msub><mo stretchy="false">)</mo><mn>32</mn></msub></mrow><annotation encoding="application/x-tex">x_1((n))_{32}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的波形图，观察<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mn>1</mn></msub><mo stretchy="false">(</mo><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><msub><mo stretchy="false">)</mo><mn>32</mn></msub></mrow><annotation encoding="application/x-tex">x_1((n))_{32}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>和x(n)的关系，并加以说明。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="comment">% exa03013</span></span><br><span class="line">clc;clear;</span><br><span class="line">M=<span class="number">40</span>;N=<span class="number">64</span>;k=<span class="number">32</span>;n=<span class="number">0</span>:M;</span><br><span class="line">xa=[<span class="number">0</span>:<span class="built_in">floor</span>(M/<span class="number">2</span>)];<span class="comment">%向下取整</span></span><br><span class="line">xb=<span class="built_in">ceil</span>(M/<span class="number">2</span>)<span class="number">-1</span>:<span class="number">-1</span>:<span class="number">0</span>;<span class="comment">%向上取整</span></span><br><span class="line">xn=[xa,xb];</span><br><span class="line">Xk=fft(xn,<span class="number">64</span>);<span class="comment">%计算X(k)=DFT[x(n)]</span></span><br><span class="line">X1k=Xk(<span class="number">1</span>:<span class="number">2</span>:N);<span class="comment">%隔点取样得到X1k</span></span><br><span class="line">x1n=ifft(X1k,<span class="number">32</span>);<span class="comment">%计算x1(n)=IDFT[X1(k)]</span></span><br><span class="line"><span class="comment">%周期延拓</span></span><br><span class="line">nc=<span class="number">0</span>:<span class="number">4</span>*N/<span class="number">2</span>;</span><br><span class="line">xc=x1n(<span class="built_in">mod</span>(nc,N/<span class="number">2</span>)+<span class="number">1</span>);<span class="comment">%将x1(n)以N/2为周期进行延拓，mod求余函数</span></span><br><span class="line">subplot <span class="number">321</span>;stem(n,xn,<span class="string">&#x27;.&#x27;</span>);ylabel(<span class="string">&#x27;x(n)&#x27;</span>);title(<span class="string">&#x27;40点的三角波序列[x(n)]&#x27;</span>);</span><br><span class="line">subplot <span class="number">322</span>;k1=<span class="number">0</span>:N<span class="number">-1</span>;stem(k1,<span class="built_in">abs</span>(Xk),<span class="string">&#x27;.&#x27;</span>);ylabel(<span class="string">&#x27;|X(k)|&#x27;</span>);title(<span class="string">&#x27;64点的DFT[X(k)]&#x27;</span>);</span><br><span class="line">subplot <span class="number">323</span>;k2=<span class="number">0</span>:N/<span class="number">2</span><span class="number">-1</span>;stem(k2,<span class="built_in">abs</span>(X1k),<span class="string">&#x27;.&#x27;</span>);ylabel(<span class="string">&#x27;|X1(k)|&#x27;</span>);title(<span class="string">&#x27;隔点抽样X(k)得到X1(k)&#x27;</span>);</span><br><span class="line">subplot <span class="number">324</span>;stem(k2,x1n,<span class="string">&#x27;.&#x27;</span>);ylabel(<span class="string">&#x27;x_1(n)&#x27;</span>);title(<span class="string">&#x27;X_1(k)的IDFT[X1(k)]=x1(n)&#x27;</span>)</span><br><span class="line">subplot <span class="number">325</span>;stem(nc,xc,<span class="string">&#x27;.&#x27;</span>);ylabel(<span class="string">&#x27;x_1((n))_&#123;32&#125;&#x27;</span>);title(<span class="string">&#x27;x_1(n)的周期延拓序列&#x27;</span>)</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201112202242.png" alt="image-20201112202202957"></p><p>==135page==</p>]]></content>
    
    
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; class=&quot;aplayer-secondary-script-marker&quot;&gt;&lt;/script&gt;&lt;h1&gt;引言&lt;/h1&gt;
&lt;p&gt;参考胡广书老师所著的《数字信号处理-理论算法与实现》&lt;/p&gt;
&lt;p&gt;下面给出Matlab中下标及希腊字母的使用方法，还有更多的使用方法可以参考matlab帮助 文档中的Text Properties: 下标用 _(下划线) 上标用^ （尖号） 希腊字母等特殊字符用 \加拼音如α \alphaβ \betaγ \gammaθ \thetaΘ \ThetaГ \Gammaδ \deltaΔ \Deltaξ \xiΞ \Xiη \eltaε \epsilongζ \zetaμ \miuυ \nuτ \tauλ \lamdaΛ \Lamdaπ \piΠ \Piσ \sigmaΣ \Sigmaφ \phiΦ \Phiψ \psiΨ \Psiχ \chiω \ommigaΩ \Ommiga&amp;lt; \leq&amp;gt; \geq不等于 \neq&amp;gt; \gg正负\pm左箭头 \leftarrow 右箭头 \rightarrow 上箭头 \uparrow 上圆圈（度数） \circ 例text(2,3,’\alpha_2^\beta’) 很多时候都要在matlab画图的时候添加一些公式符号之类的，有一些特殊的字符并不能直接从键盘上输入，比如希腊字母等等。&lt;/p&gt;
&lt;h1&gt;胡广书老师课本例题&lt;/h1&gt;
&lt;h2 id=&quot;第一章&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#第一章&quot;&gt;¶&lt;/a&gt;第一章&lt;/h2&gt;
&lt;p&gt;待续。。。&lt;/p&gt;
&lt;h2 id=&quot;第二章&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#第二章&quot;&gt;¶&lt;/a&gt;第二章&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200922212358.png&quot; alt&gt;&lt;/p&gt;
&lt;p&gt;ex0201:求该系统函数的阶跃响应（所谓阶跃响应是系统输入的输出）。实现该任务的程序如下：&lt;/p&gt;</summary>
    
    
    
    <category term="matlab" scheme="http://stardust14.com/categories/matlab/"/>
    
    
    <category term="matlab" scheme="http://stardust14.com/tags/matlab/"/>
    
  </entry>
  
  <entry>
    <title>C语言基础</title>
    <link href="http://stardust14.com/2020/09/08/C%E8%AF%AD%E8%A8%80/"/>
    <id>http://stardust14.com/2020/09/08/C%E8%AF%AD%E8%A8%80/</id>
    <published>2020-09-08T11:58:34.000Z</published>
    <updated>2020-09-08T11:58:34.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1>引言</h1><p>基于VS2019版，编写练习代码，基础中的基础。通过菜鸟教程上的知识学习。</p><h1>C语言基本</h1><h2 id="基本语法"><a class="header-anchor" href="#基本语法">¶</a>基本语法</h2><h3 id="标识符"><a class="header-anchor" href="#标识符">¶</a>标识符</h3><p>C 标识符是用来标识变量、函数，或任何其他用户自定义项目的名称。一个标识符以字母 A-Z 或 a-z 或下划线 _ 开始，后跟零个或多个字母、下划线和数字（0-9）。</p><p>C 标识符内不允许出现标点字符，比如 @、$ 和 %。C 是<strong>区分大小写</strong>的编程语言。因此，在 C 中，<em>Manpower</em> 和 <em>manpower</em> 是两个不同的标识符。下面列出几个有效的标识符：</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">mohd       zara    abc   move<span class="emphasis">_name  a_</span>123</span><br><span class="line">myname50   <span class="emphasis">_temp   j     a23b9      retVal</span></span><br></pre></td></tr></table></figure><h3 id="关键字"><a class="header-anchor" href="#关键字">¶</a>关键字</h3><p>下表列出了 C 中的保留字。这些保留字不能作为常量名、变量名或其他标识符名称。</p><table><thead><tr><th style="text-align:left">关键字</th><th style="text-align:left">说明</th></tr></thead><tbody><tr><td style="text-align:left">auto</td><td style="text-align:left">声明自动变量</td></tr><tr><td style="text-align:left">break</td><td style="text-align:left">跳出当前循环</td></tr><tr><td style="text-align:left">case</td><td style="text-align:left">开关语句分支</td></tr><tr><td style="text-align:left">char</td><td style="text-align:left">声明字符型变量或函数返回值类型</td></tr><tr><td style="text-align:left">const</td><td style="text-align:left">定义常量，如果一个变量被 const 修饰，那么它的值就不能再被改变</td></tr><tr><td style="text-align:left">continue</td><td style="text-align:left">结束当前循环，开始下一轮循环</td></tr><tr><td style="text-align:left">default</td><td style="text-align:left">开关语句中的&quot;其它&quot;分支</td></tr><tr><td style="text-align:left">do</td><td style="text-align:left">循环语句的循环体</td></tr><tr><td style="text-align:left">double</td><td style="text-align:left">声明双精度浮点型变量或函数返回值类型</td></tr><tr><td style="text-align:left">else</td><td style="text-align:left">条件语句否定分支（与 if 连用）</td></tr><tr><td style="text-align:left">enum</td><td style="text-align:left">声明枚举类型</td></tr><tr><td style="text-align:left">extern</td><td style="text-align:left">声明变量或函数是在其它文件或本文件的其他位置定义</td></tr><tr><td style="text-align:left">float</td><td style="text-align:left">声明浮点型变量或函数返回值类型</td></tr><tr><td style="text-align:left">for</td><td style="text-align:left">一种循环语句</td></tr><tr><td style="text-align:left">goto</td><td style="text-align:left">无条件跳转语句</td></tr><tr><td style="text-align:left">if</td><td style="text-align:left">条件语句</td></tr><tr><td style="text-align:left">int</td><td style="text-align:left">声明整型变量或函数</td></tr><tr><td style="text-align:left">long</td><td style="text-align:left">声明长整型变量或函数返回值类型</td></tr><tr><td style="text-align:left">register</td><td style="text-align:left">声明寄存器变量</td></tr><tr><td style="text-align:left">return</td><td style="text-align:left">子程序返回语句（可以带参数，也可不带参数）</td></tr><tr><td style="text-align:left">short</td><td style="text-align:left">声明短整型变量或函数</td></tr><tr><td style="text-align:left">signed</td><td style="text-align:left">声明有符号类型变量或函数</td></tr><tr><td style="text-align:left">sizeof</td><td style="text-align:left">计算数据类型或变量长度（即所占字节数）</td></tr><tr><td style="text-align:left">static</td><td style="text-align:left">声明静态变量</td></tr><tr><td style="text-align:left">struct</td><td style="text-align:left">声明结构体类型</td></tr><tr><td style="text-align:left">switch</td><td style="text-align:left">用于开关语句</td></tr><tr><td style="text-align:left">typedef</td><td style="text-align:left">用以给数据类型取别名</td></tr><tr><td style="text-align:left">unsigned</td><td style="text-align:left">声明无符号类型变量或函数</td></tr><tr><td style="text-align:left">union</td><td style="text-align:left">声明共用体类型</td></tr><tr><td style="text-align:left">void</td><td style="text-align:left">声明函数无返回值或无参数，声明无类型指针</td></tr><tr><td style="text-align:left">volatile</td><td style="text-align:left">说明变量在程序执行中可被隐含地改变</td></tr><tr><td style="text-align:left">while</td><td style="text-align:left">循环语句的循环条件</td></tr></tbody></table><h3 id="C-中的空格"><a class="header-anchor" href="#C-中的空格">¶</a>C 中的空格</h3><p>只包含空格的行，被称为空白行，可能带有注释，C 编译器会完全忽略它。</p><p>在 C 中，空格用于描述空白符、制表符、换行符和注释。空格分隔语句的各个部分，让编译器能识别语句中的某个元素（比如 int）在哪里结束，下一个元素在哪里开始。因此，在下面的语句中：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> age;</span><br></pre></td></tr></table></figure><p>在这里，int 和 age 之间必须至少有一个空格字符（通常是一个空白符），这样编译器才能够区分它们。另一方面，在下面的语句中：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">fruit = apples + oranges;   <span class="comment">// 获取水果的总数</span></span><br></pre></td></tr></table></figure><blockquote><p>fruit 和 =，或者 = 和 apples 之间的空格字符不是必需的，但是为了增强<strong>可读性</strong>，您可以根据需要适当增加一些空格。</p></blockquote><h3 id="C-数据类型"><a class="header-anchor" href="#C-数据类型">¶</a>C 数据类型</h3><p>在 C 语言中，数据类型指的是用于声明不同类型的变量或函数的一个广泛的系统。变量的类型决定了变量存储占用的空间，以及如何解释存储的位模式。</p><p>C 中的类型可分为以下几种：</p><table><thead><tr><th style="text-align:left">序号</th><th style="text-align:left">类型与描述</th></tr></thead><tbody><tr><td style="text-align:left">1</td><td style="text-align:left"><strong>基本类型：</strong> 它们是算术类型，包括两种类型：整数类型和浮点类型。</td></tr><tr><td style="text-align:left">2</td><td style="text-align:left"><strong>枚举类型：</strong> 它们也是算术类型，被用来定义在程序中只能赋予其一定的离散整数值的变量。</td></tr><tr><td style="text-align:left">3</td><td style="text-align:left"><strong>void 类型：</strong> 类型说明符 <em>void</em> 表明没有可用的值。</td></tr><tr><td style="text-align:left">4</td><td style="text-align:left"><strong>派生类型：</strong> 它们包括：指针类型、数组类型、结构类型、共用体类型和函数类型。</td></tr></tbody></table><p>数组类型和结构类型统称为聚合类型。函数的类型指的是函数返回值的类型。</p><h4 id="整数类型"><a class="header-anchor" href="#整数类型">¶</a>整数类型</h4><table><thead><tr><th style="text-align:left">类型</th><th style="text-align:left">存储大小</th><th style="text-align:left">值范围</th></tr></thead><tbody><tr><td style="text-align:left">char</td><td style="text-align:left">1 字节</td><td style="text-align:left">-128 到 127 或 0 到 255</td></tr><tr><td style="text-align:left">unsigned char</td><td style="text-align:left">1 字节</td><td style="text-align:left">0 到 255</td></tr><tr><td style="text-align:left">signed char</td><td style="text-align:left">1 字节</td><td style="text-align:left">-128 到 127</td></tr><tr><td style="text-align:left">int</td><td style="text-align:left">2 或 4 字节</td><td style="text-align:left">-32,768 到 32,767 或 -2,147,483,648 到 2,147,483,647</td></tr><tr><td style="text-align:left">unsigned int</td><td style="text-align:left">2 或 4 字节</td><td style="text-align:left">0 到 65,535 或 0 到 4,294,967,295</td></tr><tr><td style="text-align:left">short</td><td style="text-align:left">2 字节</td><td style="text-align:left">-32,768 到 32,767</td></tr><tr><td style="text-align:left">unsigned short</td><td style="text-align:left">2 字节</td><td style="text-align:left">0 到 65,535</td></tr><tr><td style="text-align:left">long</td><td style="text-align:left">4 字节</td><td style="text-align:left">-2,147,483,648 到 2,147,483,647</td></tr><tr><td style="text-align:left">unsigned long</td><td style="text-align:left">4 字节</td><td style="text-align:left">0 到 4,294,967,295</td></tr></tbody></table><p>为了得到某个类型或某个变量在特定平台上的准确大小，可以使用 <strong>sizeof</strong> 运算符。表达式 <em>sizeof(type)</em> 得到对象或类型的存储字节大小。</p><h4 id="浮点类型"><a class="header-anchor" href="#浮点类型">¶</a>浮点类型</h4><p>下表列出了关于标准浮点类型的存储大小、值范围和精度的细节：</p><table><thead><tr><th style="text-align:left">类型</th><th style="text-align:left">存储大小</th><th style="text-align:left">值范围</th><th style="text-align:left">精度</th></tr></thead><tbody><tr><td style="text-align:left">float</td><td style="text-align:left">4 字节</td><td style="text-align:left">1.2E-38 到 3.4E+38</td><td style="text-align:left">6 位小数</td></tr><tr><td style="text-align:left">double</td><td style="text-align:left">8 字节</td><td style="text-align:left">2.3E-308 到 1.7E+308</td><td style="text-align:left">15 位小数</td></tr><tr><td style="text-align:left">long double</td><td style="text-align:left">16 字节</td><td style="text-align:left">3.4E-4932 到 1.1E+4932</td><td style="text-align:left">19 位小数</td></tr></tbody></table><p>头文件 float.h 定义了宏，在程序中可以使用这些值和其他有关实数二进制表示的细节。</p><h4 id="void-类型"><a class="header-anchor" href="#void-类型">¶</a>void 类型</h4><p>void 类型指定没有可用的值。它通常用于以下三种情况下：</p><table><thead><tr><th style="text-align:left">序号</th><th style="text-align:left">类型与描述</th></tr></thead><tbody><tr><td style="text-align:left">1</td><td style="text-align:left"><strong>函数返回为空</strong> C 中有各种函数都不返回值，或者您可以说它们返回空。不返回值的函数的返回类型为空。例如 <strong>void exit (int status);</strong></td></tr><tr><td style="text-align:left">2</td><td style="text-align:left"><strong>函数参数为空</strong> C 中有各种函数不接受任何参数。不带参数的函数可以接受一个 void。例如 <strong>int rand(void);</strong></td></tr><tr><td style="text-align:left">3</td><td style="text-align:left"><strong>指针指向 void</strong> 类型为 void * 的指针代表对象的地址，而不是类型。例如，内存分配函数 <strong>void *malloc( size_t size );</strong> 返回指向 void 的指针，可以转换为任何数据类型。</td></tr></tbody></table><h1>C 变量</h1><p>变量其实只不过是程序可操作的存储区的名称。C 中每个变量都有特定的类型，类型决定了变量存储的大小和布局，该范围内的值都可以存储在内存中，运算符可应用于变量上。</p><p>变量的名称可以由字母、数字和下划线字符组成。它必须以字母或下划线开头。大写字母和小写字母是不同的，因为 C 是大小写<font color='red'><strong>敏感</strong></font>的。</p><table><thead><tr><th style="text-align:left">类型</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left">char</td><td style="text-align:left">通常是一个字节（八位）。这是一个整数类型。</td></tr><tr><td style="text-align:left">int</td><td style="text-align:left">对机器而言，整数的最自然的大小。</td></tr><tr><td style="text-align:left">float</td><td style="text-align:left">单精度浮点值。单精度是这样的格式，1位符号，8位指数，23位小数。<img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200909111147.png" alt="img"></td></tr><tr><td style="text-align:left">double</td><td style="text-align:left">双精度浮点值。双精度是1位符号，11位指数，52位小数。<img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200909111135.png" alt="img"></td></tr><tr><td style="text-align:left">void</td><td style="text-align:left">表示类型的缺失。</td></tr></tbody></table><p>C 语言也允许定义各种其他类型的变量，比如枚举、指针、数组、结构、共用体等等.</p><h2 id="C-中的变量定义"><a class="header-anchor" href="#C-中的变量定义">¶</a>C 中的变量定义</h2><p>变量定义就是告诉编译器在何处创建变量的存储，以及如何创建变量的存储。变量定义指定一个数据类型，并包含了该类型的一个或多个变量的列表，如下所示：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">type variable_list;</span><br></pre></td></tr></table></figure><p>在这里，<strong>type</strong> 必须是一个有效的 C 数据类型，可以是 char、w_char、int、float、double 或任何用户自定义的对象，<strong>variable_list</strong> 可以由一个或多个标识符名称组成，多个标识符之间用逗号分隔。</p><p>变量可以在声明的时候被初始化（指定一个初始值）。初始化器由一个等号，后跟一个常量表达式组成。</p><p>不带初始化的定义：带有静态存储持续时间的变量会被隐式初始化为 <strong>NULL</strong>（所有字节的值都是 0），其他所有变量的初始值是未定义的。</p><h2 id="C-中的变量声明"><a class="header-anchor" href="#C-中的变量声明">¶</a>C 中的变量声明</h2><p>变量声明向编译器保证变量以指定的类型和名称存在，这样编译器在不需要知道变量完整细节的情况下也能继续进一步的编译。变量声明只在编译时有它的意义，在程序连接时编译器需要实际的变量声明。</p><p>变量的声明有两种情况：</p><ul><li>1、一种是需要建立存储空间的。例如：int a 在声明的时候就已经建立了存储空间。</li><li>2、另一种是不需要建立存储空间的，通过使用extern关键字声明变量名而不定义它。 例如：extern int a 其中变量 a 可以在别的文件中定义的。</li><li>除非有extern关键字，否则都是变量的定义。</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//变量在头部就已经被声明，但是定义与初始化在主函数内</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="comment">// 函数外定义变量 x 和 y</span></span><br><span class="line"><span class="keyword">int</span> x;</span><br><span class="line"><span class="keyword">int</span> y;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">addtwonum</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 函数内声明变量 x 和 y 为外部变量</span></span><br><span class="line">    <span class="keyword">extern</span> <span class="keyword">int</span> x;</span><br><span class="line">    <span class="keyword">extern</span> <span class="keyword">int</span> y;</span><br><span class="line">    <span class="comment">// 给外部变量（全局变量）x 和 y 赋值</span></span><br><span class="line">    x = <span class="number">1</span>;</span><br><span class="line">    y = <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">return</span> x+y;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> result;</span><br><span class="line">    <span class="comment">// 调用函数 addtwonum</span></span><br><span class="line">    result = addtwonum();</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;result 为: %d&quot;</span>,result);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">result 为: <span class="number">3</span></span><br></pre></td></tr></table></figure><p>如果需要在一个源文件中引用另外一个源文件中定义的变量，我们只需在引用的文件中将变量加上 extern 关键字的声明即可。</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="comment">/*外部变量声明*/</span></span><br><span class="line"><span class="keyword">extern</span> <span class="keyword">int</span> x ;</span><br><span class="line"><span class="keyword">extern</span> <span class="keyword">int</span> y ;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">addtwonum</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x+y;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line">  </span><br><span class="line"><span class="comment">/*定义两个全局变量*/</span></span><br><span class="line"><span class="keyword">int</span> x=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> y=<span class="number">2</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">addtwonum</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> result;</span><br><span class="line">    result = addtwonum();</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;result 为: %d\n&quot;</span>,result);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="C-中的左值（Lvalues）和右值（Rvalues）"><a class="header-anchor" href="#C-中的左值（Lvalues）和右值（Rvalues）">¶</a>C 中的左值（Lvalues）和右值（Rvalues）</h2><p>C 中有两种类型的表达式：</p><ol><li><strong>左值（lvalue）：<strong>指向</strong>内存位置</strong>的表达式被称为左值（lvalue）表达式。左值可以出现在赋值号的左边或右边。</li><li><strong>右值（rvalue）：<strong>术语右值（rvalue）指的是存储在内存中某些地址的</strong>数值</strong>。右值是不能对其进行赋值的表达式，也就是说，右值可以出现在赋值号的右边，但不能出现在赋值号的左边。</li></ol><p>变量是左值，因此可以出现在赋值号的左边。数值型的字面值是右值，因此不能被赋值，不能出现在赋值号的左边。</p><h1>C 常量</h1><p>常量是固定值，在程序执行期间不会改变。这些固定的值，又叫做<strong>字面量</strong>。</p><p>常量可以是任何的基本数据类型，比如整数常量、浮点常量、字符常量，或字符串字面值，也有枚举常量。</p><p><strong>常量</strong>就像是常规的变量，只不过常量的值在定义后不能进行修改。</p><h2 id="整数常量"><a class="header-anchor" href="#整数常量">¶</a>整数常量</h2><p>整数常量可以是十进制、八进制或十六进制的常量。前缀指定基数：0x 或 0X 表示十六进制，0 表示八进制，不带前缀则默认表示十进制。</p><p>整数常量也可以带一个后缀，后缀是 U 和 L 的组合，U 表示无符号整数（unsigned），L 表示长整数（long）。后缀可以是大写，也可以是小写，U 和 L 的顺序任意。</p><h2 id="浮点常量"><a class="header-anchor" href="#浮点常量">¶</a>浮点常量</h2><p>浮点常量由整数部分、小数点、小数部分和指数部分组成。您可以使用小数形式或者指数形式来表示浮点常量。</p><p>当使用小数形式表示时，必须包含整数部分、小数部分，或同时包含两者。当使用指数形式表示时， 必须包含小数点、指数，或同时包含两者。带符号的指数是用 e 或 E 引入的。</p><h2 id="字符常量"><a class="header-anchor" href="#字符常量">¶</a>字符常量</h2><p>字符常量是括在单引号中，例如，‘x’ 可以存储在 <strong>char</strong> 类型的简单变量中。</p><p>字符常量可以是一个普通的字符（例如 ‘x’）、一个转义序列（例如 ‘\t’），或一个通用的字符（例如 ‘\u02C0’）。</p><p>在 C 中，有一些特定的字符，当它们前面有反斜杠时，它们就具有特殊的含义，被用来表示如换行符（\n）或制表符（\t）等。</p><p>下表列出了一些这样的转义序列码：</p><table><thead><tr><th style="text-align:left">转义序列</th><th style="text-align:left">含义</th></tr></thead><tbody><tr><td style="text-align:left">\</td><td style="text-align:left">\ 字符</td></tr><tr><td style="text-align:left">’</td><td style="text-align:left">’ 字符</td></tr><tr><td style="text-align:left">&quot;</td><td style="text-align:left">&quot; 字符</td></tr><tr><td style="text-align:left">?</td><td style="text-align:left">? 字符</td></tr><tr><td style="text-align:left">\a</td><td style="text-align:left">警报铃声</td></tr><tr><td style="text-align:left">\b</td><td style="text-align:left">退格键</td></tr><tr><td style="text-align:left">\f</td><td style="text-align:left">换页符</td></tr><tr><td style="text-align:left">\n</td><td style="text-align:left">换行符</td></tr><tr><td style="text-align:left">\r</td><td style="text-align:left">回车</td></tr><tr><td style="text-align:left">\t</td><td style="text-align:left">水平制表符</td></tr><tr><td style="text-align:left">\v</td><td style="text-align:left">垂直制表符</td></tr><tr><td style="text-align:left">\ooo</td><td style="text-align:left">一到三位的八进制数</td></tr><tr><td style="text-align:left">\xhh . . .</td><td style="text-align:left">一个或多个数字的十六进制数</td></tr></tbody></table><h2 id="字符串常量"><a class="header-anchor" href="#字符串常量">¶</a>字符串常量</h2><p>字符串字面值或常量是括在双引号 “” 中的。一个字符串包含类似于字符常量的字符：普通的字符、转义序列和通用的字符。</p><p>可以使用空格做分隔符，把一个很长的字符串常量进行分行。</p><h2 id="定义常量"><a class="header-anchor" href="#定义常量">¶</a>定义常量</h2><p>在 C 中，有两种简单的定义常量的方式：</p><ol><li>使用 <strong>#define</strong> 预处理器。</li><li>使用 <strong>const</strong> 关键字。</li></ol><h3 id="define-预处理器"><a class="header-anchor" href="#define-预处理器">¶</a>#define 预处理器</h3><p>下面是使用 #define 预处理器定义常量的形式：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> identifier value</span></span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LENGTH 10   </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> WIDTH  5</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> NEWLINE <span class="meta-string">&#x27;\n&#x27;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"> </span><br><span class="line">   <span class="keyword">int</span> area;  </span><br><span class="line">  </span><br><span class="line">   area = LENGTH * WIDTH;</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;value of area : %d&quot;</span>, area);</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, NEWLINE);</span><br><span class="line"> </span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>%c是char类型，输出单个字符</p></blockquote><h3 id="const-关键字"><a class="header-anchor" href="#const-关键字">¶</a>const 关键字</h3><p>可以使用 <strong>const</strong> 前缀声明指定类型的常量，如下所示：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> type variable = value;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="keyword">const</span> <span class="keyword">int</span>  LENGTH = <span class="number">10</span>;</span><br><span class="line">   <span class="keyword">const</span> <span class="keyword">int</span>  WIDTH  = <span class="number">5</span>;</span><br><span class="line">   <span class="keyword">const</span> <span class="keyword">char</span> NEWLINE = <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">   <span class="keyword">int</span> area;  </span><br><span class="line">   </span><br><span class="line">   area = LENGTH * WIDTH;</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;value of area : %d&quot;</span>, area);</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, NEWLINE);</span><br><span class="line"> </span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1>C 存储类</h1><p>存储类定义 C 程序中变量/函数的范围（可见性）和生命周期。这些说明符放置在它们所修饰的类型之前。下面列出 C 程序中可用的存储类：</p><ul><li>auto</li><li>register</li><li>static</li><li>extern</li></ul><h2 id="auto-存储类"><a class="header-anchor" href="#auto-存储类">¶</a>auto 存储类</h2><p><strong>auto</strong> 存储类是所有局部变量<strong>默认</strong>的存储类。</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">   <span class="keyword">int</span> mount;</span><br><span class="line">   <span class="keyword">auto</span> <span class="keyword">int</span> month;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面的实例定义了两个带有<strong>相同</strong>存储类的变量，auto <strong>只能</strong>用在<font color='red'><strong>函数内</strong></font>，即 auto 只能<strong>修饰</strong><font color='red'>局部变量</font>。</p><h2 id="register-存储类"><a class="header-anchor" href="#register-存储类">¶</a>register 存储类</h2><p><strong>register</strong> 存储类用于定义存储在<strong>寄存器</strong>中而<strong>不是 RAM</strong> 中的局部变量。这意味着变量的最大尺寸等于寄存器的大小（通常是一个词），且不能对它应用一元的 ‘&amp;’ 运算符（因为它没有内存位置）。</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">   <span class="keyword">register</span> <span class="keyword">int</span>  miles;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>寄存器只用于需要快速访问的变量，比如计数器。还应注意的是，定义 ‘register’ 并不意味着变量将被存储在寄存器中，它意味着变量可能存储在寄存器中，这取决于硬件和实现的限制。</p><h2 id="static-存储类"><a class="header-anchor" href="#static-存储类">¶</a>static 存储类</h2><p><strong>static</strong> 存储类指示编译器在程序的生命周期内保持局部变量的存在，而不需要在每次它进入和离开作用域时进行创建和销毁。因此，使用 static 修饰<strong>局部变量</strong>可以在函数调用之间保持局部变量的值。<br>static 修饰符也可以应用于<strong>全局变量</strong>。当 static 修饰全局变量时，会使变量的作用域限制在声明它的文件内。<br>全局声明的一个 static 变量或方法可以被任何函数或方法调用，只要这些方法出现在跟 static 变量或方法同一个文件中。</p><p>以下实例演示了 static 修饰全局变量和局部变量的应用：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="comment">/* 函数声明 */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">func1</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> count=<span class="number">10</span>;        <span class="comment">/* 全局变量 - static 是默认的 */</span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">while</span> (count--) &#123;</span><br><span class="line">      func1();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">func1</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">/* &#x27;thingy&#x27; 是 &#x27;func1&#x27; 的局部变量 - 只初始化一次</span></span><br><span class="line"><span class="comment"> * 每次调用函数 &#x27;func1&#x27; &#x27;thingy&#x27; 值不会被重置。</span></span><br><span class="line"><span class="comment"> */</span>                </span><br><span class="line">  <span class="keyword">static</span> <span class="keyword">int</span> thingy=<span class="number">5</span>;</span><br><span class="line">  thingy++;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot; thingy 为 %d ， count 为 %d\n&quot;</span>, thingy, count);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>实例中 count 作为全局变量可以在函数内使用，thingy 使用 static 修饰后，不会在每次调用时重置。</p><h2 id="extern-存储类"><a class="header-anchor" href="#extern-存储类">¶</a>extern 存储类</h2><p><strong>extern</strong> 存储类用于提供一个全局变量的引用，全局变量对所有的程序文件都是可见的。当您使用 <strong>extern</strong> 时，对于无法初始化的变量，会把变量名指向一个之前定义过的存储位置。</p><p>当有多个文件且定义了一个可以在其他文件中使用的全局变量或函数时，可以在其他文件中使用 <em>extern</em> 来得到已定义的变量或函数的引用。可以这么理解，<em>extern</em> 是用来在另一个文件中声明一个全局变量或函数。</p><p>extern 修饰符通常用于当有两个或多个文件共享相同的全局变量或函数的时候，如下所示：</p><p><strong>第一个文件：main.c</strong></p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">int</span> count ;</span><br><span class="line"><span class="function"><span class="keyword">extern</span> <span class="keyword">void</span> <span class="title">write_extern</span><span class="params">()</span></span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   count = <span class="number">5</span>;</span><br><span class="line">   write_extern();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>第二个文件：support.c</strong></p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">extern</span> <span class="keyword">int</span> count;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">write_extern</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;count is %d\n&quot;</span>, count);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在这里，第二个文件中的 <em>extern</em> 关键字用于声明已经在第一个文件 main.c 中定义的 <em>count</em>。</p><p>执行结果</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">count is <span class="number">5</span></span><br></pre></td></tr></table></figure><h1>C 运算符</h1><p>运算符是一种告诉编译器执行特定的数学或逻辑操作的符号。C 语言内置了丰富的运算符，并提供了以下类型的运算符：</p><ul><li>算术运算符</li><li>关系运算符</li><li>逻辑运算符</li><li>位运算符</li><li>赋值运算符</li><li>杂项运算符</li></ul><h2 id="算术运算符"><a class="header-anchor" href="#算术运算符">¶</a>算术运算符</h2><p>下表显示了 C 语言支持的所有算术运算符。假设变量 <strong>A</strong> 的值为 10，变量 <strong>B</strong> 的值为 20，则：</p><table><thead><tr><th style="text-align:left">运算符</th><th style="text-align:left">描述</th><th style="text-align:left">实例</th></tr></thead><tbody><tr><td style="text-align:left">+</td><td style="text-align:left">把两个操作数相加</td><td style="text-align:left">A + B 将得到 30</td></tr><tr><td style="text-align:left">-</td><td style="text-align:left">从第一个操作数中减去第二个操作数</td><td style="text-align:left">A - B 将得到 -10</td></tr><tr><td style="text-align:left">*</td><td style="text-align:left">把两个操作数相乘</td><td style="text-align:left">A * B 将得到 200</td></tr><tr><td style="text-align:left">/</td><td style="text-align:left">分子除以分母</td><td style="text-align:left">B / A 将得到 2</td></tr><tr><td style="text-align:left">%</td><td style="text-align:left">取模运算符，整除后的余数</td><td style="text-align:left">B % A 将得到 0</td></tr><tr><td style="text-align:left">++</td><td style="text-align:left">自增运算符，整数值增加 1</td><td style="text-align:left">A++ 将得到 11</td></tr><tr><td style="text-align:left">–</td><td style="text-align:left">自减运算符，整数值减少 1</td><td style="text-align:left">A-- 将得到 9</td></tr></tbody></table><h3 id="实例"><a class="header-anchor" href="#实例">¶</a>实例</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="keyword">int</span> a = <span class="number">21</span>;</span><br><span class="line">   <span class="keyword">int</span> b = <span class="number">10</span>;</span><br><span class="line">   <span class="keyword">int</span> c ;</span><br><span class="line"> </span><br><span class="line">   c = a + b;</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;Line 1 - c 的值是 %d\n&quot;</span>, c );</span><br><span class="line">   c = a - b;</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;Line 2 - c 的值是 %d\n&quot;</span>, c );</span><br><span class="line">   c = a * b;</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;Line 3 - c 的值是 %d\n&quot;</span>, c );</span><br><span class="line">   c = a / b;</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;Line 4 - c 的值是 %d\n&quot;</span>, c );</span><br><span class="line">   c = a % b;</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;Line 5 - c 的值是 %d\n&quot;</span>, c );</span><br><span class="line">   c = a++;  <span class="comment">// 赋值后再加 1 ，c 为 21，a 为 22</span></span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;Line 6 - c 的值是 %d\n&quot;</span>, c );</span><br><span class="line">   c = a--;  <span class="comment">// 赋值后再减 1 ，c 为 22 ，a 为 21</span></span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;Line 7 - c 的值是 %d\n&quot;</span>, c );</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">Line 1 - c 的值是 31</span><br><span class="line">Line 2 - c 的值是 11</span><br><span class="line">Line 3 - c 的值是 210</span><br><span class="line">Line 4 - c 的值是 2</span><br><span class="line">Line 5 - c 的值是 1</span><br><span class="line">Line 6 - c 的值是 21</span><br><span class="line">Line 7 - c 的值是 22</span><br></pre></td></tr></table></figure><p>以下实例演示了 a++ 与 ++a 的区别：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="keyword">int</span> c;</span><br><span class="line">   <span class="keyword">int</span> a = <span class="number">10</span>;</span><br><span class="line">   c = a++; </span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;先赋值后运算：\n&quot;</span>);</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;Line 1 - c 的值是 %d\n&quot;</span>, c );</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;Line 2 - a 的值是 %d\n&quot;</span>, a );</span><br><span class="line">   a = <span class="number">10</span>;</span><br><span class="line">   c = a--; </span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;Line 3 - c 的值是 %d\n&quot;</span>, c );</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;Line 4 - a 的值是 %d\n&quot;</span>, a );</span><br><span class="line"> </span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;先运算后赋值：\n&quot;</span>);</span><br><span class="line">   a = <span class="number">10</span>;</span><br><span class="line">   c = ++a; </span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;Line 5 - c 的值是 %d\n&quot;</span>, c );</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;Line 6 - a 的值是 %d\n&quot;</span>, a );</span><br><span class="line">   a = <span class="number">10</span>;</span><br><span class="line">   c = --a; </span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;Line 7 - c 的值是 %d\n&quot;</span>, c );</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;Line 8 - a 的值是 %d\n&quot;</span>, a );</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上程序执行输出结果为：</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">先赋值后运算：</span><br><span class="line">Line 1 - c 的值是 10</span><br><span class="line">Line 2 - a 的值是 11</span><br><span class="line">Line 3 - c 的值是 10</span><br><span class="line">Line 4 - a 的值是 9</span><br><span class="line">先运算后赋值：</span><br><span class="line">Line 5 - c 的值是 11</span><br><span class="line">Line 6 - a 的值是 11</span><br><span class="line">Line 7 - c 的值是 9</span><br><span class="line">Line 8 - a 的值是 9</span><br></pre></td></tr></table></figure><h2 id="关系运算符"><a class="header-anchor" href="#关系运算符">¶</a>关系运算符</h2><p>下表显示了 C 语言支持的所有关系运算符。假设变量 <strong>A</strong> 的值为 10，变量 <strong>B</strong> 的值为 20，则：</p><table><thead><tr><th style="text-align:left">运算符</th><th style="text-align:left">描述</th><th style="text-align:left">实例</th></tr></thead><tbody><tr><td style="text-align:left">==</td><td style="text-align:left">检查两个操作数的值是否相等，如果相等则条件为真。</td><td style="text-align:left">(A == B) 为假。</td></tr><tr><td style="text-align:left">!=</td><td style="text-align:left">检查两个操作数的值是否相等，如果不相等则条件为真。</td><td style="text-align:left">(A != B) 为真。</td></tr><tr><td style="text-align:left">&gt;</td><td style="text-align:left">检查左操作数的值是否大于右操作数的值，如果是则条件为真。</td><td style="text-align:left">(A &gt; B) 为假。</td></tr><tr><td style="text-align:left">&lt;</td><td style="text-align:left">检查左操作数的值是否小于右操作数的值，如果是则条件为真。</td><td style="text-align:left">(A &lt; B) 为真。</td></tr><tr><td style="text-align:left">&gt;=</td><td style="text-align:left">检查左操作数的值是否大于或等于右操作数的值，如果是则条件为真。</td><td style="text-align:left">(A &gt;= B) 为假。</td></tr><tr><td style="text-align:left">&lt;=</td><td style="text-align:left">检查左操作数的值是否小于或等于右操作数的值，如果是则条件为真。</td><td style="text-align:left">(A &lt;= B) 为真。</td></tr></tbody></table><h3 id="实例-v2"><a class="header-anchor" href="#实例-v2">¶</a>实例</h3><p>看下面的实例，了解 C 语言中所有可用的关系运算符：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="keyword">int</span> a = <span class="number">21</span>;</span><br><span class="line">   <span class="keyword">int</span> b = <span class="number">10</span>;</span><br><span class="line">   <span class="keyword">int</span> c ;</span><br><span class="line"> </span><br><span class="line">   <span class="keyword">if</span>( a == b )</span><br><span class="line">   &#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;Line 1 - a 等于 b\n&quot;</span> );</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">else</span></span><br><span class="line">   &#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;Line 1 - a 不等于 b\n&quot;</span> );</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">if</span> ( a &lt; b )</span><br><span class="line">   &#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;Line 2 - a 小于 b\n&quot;</span> );</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">else</span></span><br><span class="line">   &#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;Line 2 - a 不小于 b\n&quot;</span> );</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">if</span> ( a &gt; b )</span><br><span class="line">   &#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;Line 3 - a 大于 b\n&quot;</span> );</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">else</span></span><br><span class="line">   &#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;Line 3 - a 不大于 b\n&quot;</span> );</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="comment">/* 改变 a 和 b 的值 */</span></span><br><span class="line">   a = <span class="number">5</span>;</span><br><span class="line">   b = <span class="number">20</span>;</span><br><span class="line">   <span class="keyword">if</span> ( a &lt;= b )</span><br><span class="line">   &#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;Line 4 - a 小于或等于 b\n&quot;</span> );</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">if</span> ( b &gt;= a )</span><br><span class="line">   &#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;Line 5 - b 大于或等于 a\n&quot;</span> );</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">Line 1 - a 不等于 b</span><br><span class="line">Line 2 - a 不小于 b</span><br><span class="line">Line 3 - a 大于 b</span><br><span class="line">Line 4 - a 小于或等于 b</span><br><span class="line">Line 5 - b 大于或等于 a</span><br></pre></td></tr></table></figure><h2 id="逻辑运算符"><a class="header-anchor" href="#逻辑运算符">¶</a>逻辑运算符</h2><p>下表显示了 C 语言支持的所有关系逻辑运算符。假设变量 <strong>A</strong> 的值为 1，变量 <strong>B</strong> 的值为 0，则：</p><table><thead><tr><th style="text-align:left">运算符</th><th style="text-align:left">描述</th><th style="text-align:left">实例</th></tr></thead><tbody><tr><td style="text-align:left">&amp;&amp;</td><td style="text-align:left">称为逻辑与运算符。如果两个操作数都非零，则条件为真。</td><td style="text-align:left">(A &amp;&amp; B) 为假。</td></tr><tr><td style="text-align:left">||</td><td style="text-align:left">称为逻辑或运算符。如果两个操作数中有任意一个非零，则条件为真。</td><td style="text-align:left">(A || B) 为真。</td></tr><tr><td style="text-align:left">!</td><td style="text-align:left">称为逻辑非运算符。用来逆转操作数的逻辑状态。如果条件为真则逻辑非运算符将使其为假。</td><td style="text-align:left">!(A &amp;&amp; B) 为真。</td></tr></tbody></table><h3 id="实例-v3"><a class="header-anchor" href="#实例-v3">¶</a>实例</h3><p>看下面的实例，了解 C 语言中所有可用的关系运算符：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="keyword">int</span> a = <span class="number">5</span>;</span><br><span class="line">   <span class="keyword">int</span> b = <span class="number">20</span>;</span><br><span class="line">   <span class="keyword">int</span> c ;</span><br><span class="line"> </span><br><span class="line">   <span class="keyword">if</span> ( a &amp;&amp; b )</span><br><span class="line">   &#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;Line 1 - 条件为真\n&quot;</span> );</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">if</span> ( a || b )</span><br><span class="line">   &#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;Line 2 - 条件为真\n&quot;</span> );</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="comment">/* 改变 a 和 b 的值 */</span></span><br><span class="line">   a = <span class="number">0</span>;</span><br><span class="line">   b = <span class="number">10</span>;</span><br><span class="line">   <span class="keyword">if</span> ( a &amp;&amp; b )</span><br><span class="line">   &#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;Line 3 - 条件为真\n&quot;</span> );</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">else</span></span><br><span class="line">   &#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;Line 3 - 条件为假\n&quot;</span> );</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">if</span> ( !(a &amp;&amp; b) )</span><br><span class="line">   &#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;Line 4 - 条件为真\n&quot;</span> );</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">Line 1 - 条件为真</span><br><span class="line">Line 2 - 条件为真</span><br><span class="line">Line 3 - 条件为假</span><br><span class="line">Line 4 - 条件为真</span><br></pre></td></tr></table></figure><h2 id="位运算符"><a class="header-anchor" href="#位运算符">¶</a>位运算符</h2><p>位运算符作用于位，并逐位执行操作。&amp;、 | 和 ^ 的真值表如下所示：</p><table><thead><tr><th style="text-align:left">p</th><th style="text-align:left">q</th><th style="text-align:left">p &amp; q</th><th style="text-align:left">p | q</th><th style="text-align:left">p ^ q</th></tr></thead><tbody><tr><td style="text-align:left">0</td><td style="text-align:left">0</td><td style="text-align:left">0</td><td style="text-align:left">0</td><td style="text-align:left">0</td></tr><tr><td style="text-align:left">0</td><td style="text-align:left">1</td><td style="text-align:left">0</td><td style="text-align:left">1</td><td style="text-align:left">1</td></tr><tr><td style="text-align:left">1</td><td style="text-align:left">1</td><td style="text-align:left">1</td><td style="text-align:left">1</td><td style="text-align:left">0</td></tr><tr><td style="text-align:left">1</td><td style="text-align:left">0</td><td style="text-align:left">0</td><td style="text-align:left">1</td><td style="text-align:left">1</td></tr></tbody></table><blockquote><p>“^”:<strong>按位异或</strong></p></blockquote><p>下表显示了 C 语言支持的位运算符。假设变量 <strong>A</strong> 的值为 60，变量 <strong>B</strong> 的值为 13，则：</p><table><thead><tr><th style="text-align:left">运算符</th><th style="text-align:left">描述</th><th style="text-align:left">实例</th></tr></thead><tbody><tr><td style="text-align:left">&amp;</td><td style="text-align:left">按位与操作，按二进制位进行&quot;与&quot;运算。运算规则：<code>0&amp;0=0;    0&amp;1=0;     1&amp;0=0;      1&amp;1=1;</code></td><td style="text-align:left">(A &amp; B) 将得到 12，即为 0000 1100</td></tr><tr><td style="text-align:left">|</td><td style="text-align:left">按位或运算符，按二进制位进行&quot;或&quot;运算。运算规则：<code>0|0=0;    0|1=1;    1|0=1;     1|1=1;</code></td><td style="text-align:left">(A | B) 将得到 61，即为 0011 1101</td></tr><tr><td style="text-align:left">^</td><td style="text-align:left">异或运算符，按二进制位进行&quot;异或&quot;运算。运算规则：<code>0^0=0;    0^1=1;    1^0=1;   1^1=0;</code></td><td style="text-align:left">(A ^ B) 将得到 49，即为 0011 0001</td></tr><tr><td style="text-align:left">~</td><td style="text-align:left">取反运算符，按二进制位进行&quot;取反&quot;运算。运算规则：<code>~1=0;    ~0=1;</code></td><td style="text-align:left">(~A ) 将得到 -61，即为 1100 0011，一个有符号二进制数的补码形式。</td></tr><tr><td style="text-align:left">&lt;&lt;</td><td style="text-align:left">二进制左移运算符。将一个运算对象的各二进制位全部左移若干位（左边的二进制位丢弃，右边补0）。</td><td style="text-align:left">A &lt;&lt; 2 将得到 240，即为 1111 0000</td></tr><tr><td style="text-align:left">&gt;&gt;</td><td style="text-align:left">二进制右移运算符。将一个数的各二进制位全部右移若干位，正数左补0，负数左补1，右边丢弃。</td><td style="text-align:left">A &gt;&gt; 2 将得到 15，即为 0000 1111</td></tr></tbody></table><h3 id="实例-v4"><a class="header-anchor" href="#实例-v4">¶</a>实例</h3><p>看下面的实例，了解 C 语言中所有可用的位运算符：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"> </span><br><span class="line">   <span class="keyword">unsigned</span> <span class="keyword">int</span> a = <span class="number">60</span>;    <span class="comment">/* 60 = 0011 1100 */</span>  </span><br><span class="line">   <span class="keyword">unsigned</span> <span class="keyword">int</span> b = <span class="number">13</span>;    <span class="comment">/* 13 = 0000 1101 */</span></span><br><span class="line">   <span class="keyword">int</span> c = <span class="number">0</span>;           </span><br><span class="line"> </span><br><span class="line">   c = a &amp; b;       <span class="comment">/* 12 = 0000 1100 */</span> </span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;Line 1 - c 的值是 %d\n&quot;</span>, c );</span><br><span class="line"> </span><br><span class="line">   c = a | b;       <span class="comment">/* 61 = 0011 1101 */</span></span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;Line 2 - c 的值是 %d\n&quot;</span>, c );</span><br><span class="line"> </span><br><span class="line">   c = a ^ b;       <span class="comment">/* 49 = 0011 0001 */</span></span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;Line 3 - c 的值是 %d\n&quot;</span>, c );</span><br><span class="line"> </span><br><span class="line">   c = ~a;          <span class="comment">/*-61 = 1100 0011 */</span></span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;Line 4 - c 的值是 %d\n&quot;</span>, c );</span><br><span class="line"> </span><br><span class="line">   c = a &lt;&lt; <span class="number">2</span>;     <span class="comment">/* 240 = 1111 0000 */</span></span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;Line 5 - c 的值是 %d\n&quot;</span>, c );</span><br><span class="line"> </span><br><span class="line">   c = a &gt;&gt; <span class="number">2</span>;     <span class="comment">/* 15 = 0000 1111 */</span></span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;Line 6 - c 的值是 %d\n&quot;</span>, c );</span><br></pre></td></tr></table></figure><p>结果：</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">Line 1 - c 的值是 12</span><br><span class="line">Line 2 - c 的值是 61</span><br><span class="line">Line 3 - c 的值是 49</span><br><span class="line">Line 4 - c 的值是 -61</span><br><span class="line">Line 5 - c 的值是 240</span><br><span class="line">Line 6 - c 的值是 15</span><br></pre></td></tr></table></figure><h2 id="赋值运算符"><a class="header-anchor" href="#赋值运算符">¶</a>赋值运算符</h2><p>下表列出了 C 语言支持的赋值运算符：</p><table><thead><tr><th style="text-align:left">运算符</th><th style="text-align:left">描述</th><th style="text-align:left">实例</th></tr></thead><tbody><tr><td style="text-align:left">=</td><td style="text-align:left">简单的赋值运算符，把右边操作数的值赋给左边操作数</td><td style="text-align:left">C = A + B 将把 A + B 的值赋给 C</td></tr><tr><td style="text-align:left">+=</td><td style="text-align:left">加且赋值运算符，把右边操作数加上左边操作数的结果赋值给左边操作数</td><td style="text-align:left">C += A 相当于 C = C + A</td></tr><tr><td style="text-align:left">-=</td><td style="text-align:left">减且赋值运算符，把左边操作数减去右边操作数的结果赋值给左边操作数</td><td style="text-align:left">C -= A 相当于 C = C - A</td></tr><tr><td style="text-align:left">*=</td><td style="text-align:left">乘且赋值运算符，把右边操作数乘以左边操作数的结果赋值给左边操作数</td><td style="text-align:left">C *= A 相当于 C = C * A</td></tr><tr><td style="text-align:left">/=</td><td style="text-align:left">除且赋值运算符，把左边操作数除以右边操作数的结果赋值给左边操作数</td><td style="text-align:left">C /= A 相当于 C = C / A</td></tr><tr><td style="text-align:left">%=</td><td style="text-align:left">求模且赋值运算符，求两个操作数的模赋值给左边操作数</td><td style="text-align:left">C %= A 相当于 C = C % A</td></tr><tr><td style="text-align:left">&lt;&lt;=</td><td style="text-align:left">左移且赋值运算符</td><td style="text-align:left">C &lt;&lt;= 2 等同于 C = C &lt;&lt; 2</td></tr><tr><td style="text-align:left">&gt;&gt;=</td><td style="text-align:left">右移且赋值运算符</td><td style="text-align:left">C &gt;&gt;= 2 等同于 C = C &gt;&gt; 2</td></tr><tr><td style="text-align:left">&amp;=</td><td style="text-align:left">按位与且赋值运算符</td><td style="text-align:left">C &amp;= 2 等同于 C = C &amp; 2</td></tr><tr><td style="text-align:left">^=</td><td style="text-align:left">按位异或且赋值运算符</td><td style="text-align:left">C ^= 2 等同于 C = C ^ 2</td></tr><tr><td style="text-align:left">|=</td><td style="text-align:left">按位或且赋值运算符</td><td style="text-align:left">C |= 2 等同于 C = C | 2</td></tr></tbody></table><blockquote><p>&quot;&gt;&gt;(右移)&quot;按二进制形式把所有的数字向右移动对应位移位数，低位移出(舍弃)，高位的空位补符号位，即正数补零，负数补1。</p></blockquote><h3 id="实例-v5"><a class="header-anchor" href="#实例-v5">¶</a>实例</h3><p>请看下面的实例，了解 C 语言中所有可用的赋值运算符：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="keyword">int</span> a = <span class="number">21</span>;</span><br><span class="line">   <span class="keyword">int</span> c ;</span><br><span class="line"> </span><br><span class="line">   c =  a;</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;Line 1 - =  运算符实例，c 的值 = %d\n&quot;</span>, c );</span><br><span class="line"> </span><br><span class="line">   c +=  a;</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;Line 2 - += 运算符实例，c 的值 = %d\n&quot;</span>, c );</span><br><span class="line"> </span><br><span class="line">   c -=  a;</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;Line 3 - -= 运算符实例，c 的值 = %d\n&quot;</span>, c );</span><br><span class="line"> </span><br><span class="line">   c *=  a;</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;Line 4 - *= 运算符实例，c 的值 = %d\n&quot;</span>, c );</span><br><span class="line"> </span><br><span class="line">   c /=  a;</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;Line 5 - /= 运算符实例，c 的值 = %d\n&quot;</span>, c );</span><br><span class="line"> </span><br><span class="line">   c  = <span class="number">200</span>;</span><br><span class="line">   c %=  a;</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;Line 6 - %%= 运算符实例，c 的值 = %d\n&quot;</span>, c );</span><br><span class="line"> </span><br><span class="line">   c &lt;&lt;=  <span class="number">2</span>;</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;Line 7 - &lt;&lt;= 运算符实例，c 的值 = %d\n&quot;</span>, c );</span><br><span class="line"> </span><br><span class="line">   c &gt;&gt;=  <span class="number">2</span>;</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;Line 8 - &gt;&gt;= 运算符实例，c 的值 = %d\n&quot;</span>, c );</span><br><span class="line"> </span><br><span class="line">   c &amp;=  <span class="number">2</span>;</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;Line 9 - &amp;= 运算符实例，c 的值 = %d\n&quot;</span>, c );</span><br><span class="line"> </span><br><span class="line">   c ^=  <span class="number">2</span>;</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;Line 10 - ^= 运算符实例，c 的值 = %d\n&quot;</span>, c );</span><br><span class="line"> </span><br><span class="line">   c |=  <span class="number">2</span>;</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;Line 11 - |= 运算符实例，c 的值 = %d\n&quot;</span>, c );</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">Line 1 - =  运算符实例，c 的值 = 21</span><br><span class="line">Line 2 - += 运算符实例，c 的值 = 42</span><br><span class="line">Line 3 - -= 运算符实例，c 的值 = 21</span><br><span class="line">Line 4 - <span class="emphasis">*= 运算符实例，c 的值 = 441</span></span><br><span class="line"><span class="emphasis">Line 5 - /= 运算符实例，c 的值 = 21</span></span><br><span class="line"><span class="emphasis">Line 6 - %= 运算符实例，c 的值 = 11</span></span><br><span class="line"><span class="emphasis">Line 7 - <span class="xml"><span class="tag">&lt;&lt;= <span class="string">运算符实例，c</span> 的值 = <span class="string">44</span></span></span></span></span><br><span class="line"><span class="emphasis"><span class="xml">Line 8 - &gt;</span>&gt;= 运算符实例，c 的值 = 11</span></span><br><span class="line"><span class="emphasis">Line 9 - &amp;= 运算符实例，c 的值 = 2</span></span><br><span class="line"><span class="emphasis">Line 10 - ^= 运算符实例，c 的值 = 0</span></span><br><span class="line"><span class="emphasis">Line 11 - |= 运算符实例，c 的值 = 2</span></span><br></pre></td></tr></table></figure><h2 id="杂项运算符-↦-sizeof-三元"><a class="header-anchor" href="#杂项运算符-↦-sizeof-三元">¶</a>杂项运算符 ↦ sizeof &amp; 三元</h2><p>下表列出了 C 语言支持的其他一些重要的运算符，包括 <strong>sizeof</strong> 和 <strong>? :</strong></p><table><thead><tr><th style="text-align:left">运算符</th><th style="text-align:left">描述</th><th style="text-align:left">实例</th></tr></thead><tbody><tr><td style="text-align:left">sizeof()</td><td style="text-align:left">返回变量的大小。</td><td style="text-align:left">sizeof(a) 将返回 4，其中 a 是整数。</td></tr><tr><td style="text-align:left">&amp;</td><td style="text-align:left">返回变量的地址。</td><td style="text-align:left">&amp;a; 将给出变量的实际地址。</td></tr><tr><td style="text-align:left">*</td><td style="text-align:left">指向一个变量。</td><td style="text-align:left">*a; 将指向一个变量。</td></tr><tr><td style="text-align:left">? :</td><td style="text-align:left">条件表达式</td><td style="text-align:left">如果条件为真 ? 则值为 X : 否则值为 Y</td></tr></tbody></table><h3 id="实例-v6"><a class="header-anchor" href="#实例-v6">¶</a>实例</h3><p>请看下面的实例，了解 C 语言中所有可用的杂项运算符：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="keyword">int</span> a = <span class="number">4</span>;</span><br><span class="line">   <span class="keyword">short</span> b;</span><br><span class="line">   <span class="keyword">double</span> c;</span><br><span class="line">   <span class="keyword">int</span>* ptr;</span><br><span class="line"> </span><br><span class="line">   <span class="comment">/* sizeof 运算符实例 */</span></span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;Line 1 - 变量 a 的大小 = %lu\n&quot;</span>, <span class="keyword">sizeof</span>(a) );</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;Line 2 - 变量 b 的大小 = %lu\n&quot;</span>, <span class="keyword">sizeof</span>(b) );</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;Line 3 - 变量 c 的大小 = %lu\n&quot;</span>, <span class="keyword">sizeof</span>(c) );</span><br><span class="line"> </span><br><span class="line">   <span class="comment">/* &amp; 和 * 运算符实例 */</span></span><br><span class="line">   ptr = &amp;a;    <span class="comment">/* &#x27;ptr&#x27; 现在包含 &#x27;a&#x27; 的地址 */</span></span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;a 的值是 %d\n&quot;</span>, a);</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;*ptr 是 %d\n&quot;</span>, *ptr);</span><br><span class="line"> </span><br><span class="line">   <span class="comment">/* 三元运算符实例 */</span></span><br><span class="line">   a = <span class="number">10</span>;</span><br><span class="line">   b = (a == <span class="number">1</span>) ? <span class="number">20</span>: <span class="number">30</span>;</span><br><span class="line">   <span class="built_in">printf</span>( <span class="string">&quot;b 的值是 %d\n&quot;</span>, b );</span><br><span class="line"> </span><br><span class="line">   b = (a == <span class="number">10</span>) ? <span class="number">20</span>: <span class="number">30</span>;</span><br><span class="line">   <span class="built_in">printf</span>( <span class="string">&quot;b 的值是 %d\n&quot;</span>, b );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">Line 1 - 变量 a 的大小 = 4</span><br><span class="line">Line 2 - 变量 b 的大小 = 2</span><br><span class="line">Line 3 - 变量 c 的大小 = 8</span><br><span class="line">a 的值是 4</span><br><span class="line"><span class="emphasis">*ptr 是 4</span></span><br><span class="line"><span class="emphasis">b 的值是 30</span></span><br><span class="line"><span class="emphasis">b 的值是 20</span></span><br></pre></td></tr></table></figure><h2 id="C-中的运算符优先级"><a class="header-anchor" href="#C-中的运算符优先级">¶</a>C 中的运算符优先级</h2><p>下表将按运算符优先级从高到低列出各个运算符，具有较高优先级的运算符出现在表格的上面，具有较低优先级的运算符出现在表格的下面。</p><table><thead><tr><th style="text-align:left">类别</th><th style="text-align:left">运算符</th><th style="text-align:left">结合性</th></tr></thead><tbody><tr><td style="text-align:left">后缀</td><td style="text-align:left">() [] -&gt; . ++ - -</td><td style="text-align:left">从左到右</td></tr><tr><td style="text-align:left">一元</td><td style="text-align:left">+ - ! ~ ++ - - (type)* &amp; sizeof</td><td style="text-align:left">从右到左</td></tr><tr><td style="text-align:left">乘除</td><td style="text-align:left">* / %</td><td style="text-align:left">从左到右</td></tr><tr><td style="text-align:left">加减</td><td style="text-align:left">+ -</td><td style="text-align:left">从左到右</td></tr><tr><td style="text-align:left">移位</td><td style="text-align:left">&lt;&lt; &gt;&gt;</td><td style="text-align:left">从左到右</td></tr><tr><td style="text-align:left">关系</td><td style="text-align:left">&lt; &lt;= &gt; &gt;=</td><td style="text-align:left">从左到右</td></tr><tr><td style="text-align:left">相等</td><td style="text-align:left">== !=</td><td style="text-align:left">从左到右</td></tr><tr><td style="text-align:left">位与 AND</td><td style="text-align:left">&amp;</td><td style="text-align:left">从左到右</td></tr><tr><td style="text-align:left">位异或 XOR</td><td style="text-align:left">^</td><td style="text-align:left">从左到右</td></tr><tr><td style="text-align:left">位或 OR</td><td style="text-align:left">|</td><td style="text-align:left">从左到右</td></tr><tr><td style="text-align:left">逻辑与 AND</td><td style="text-align:left">&amp;&amp;</td><td style="text-align:left">从左到右</td></tr><tr><td style="text-align:left">逻辑或 OR</td><td style="text-align:left">||</td><td style="text-align:left">从左到右</td></tr><tr><td style="text-align:left">条件</td><td style="text-align:left">?:</td><td style="text-align:left">从右到左</td></tr><tr><td style="text-align:left">赋值</td><td style="text-align:left">= += -= *= /= %=&gt;&gt;= &lt;&lt;= &amp;= ^= |=</td><td style="text-align:left">从右到左</td></tr><tr><td style="text-align:left">逗号</td><td style="text-align:left">,</td><td style="text-align:left">从左到右</td></tr></tbody></table><h3 id="实例-v7"><a class="header-anchor" href="#实例-v7">¶</a>实例</h3><p>请看下面的实例，了解 C 语言中运算符的优先级：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line">main()</span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">int</span> a = <span class="number">20</span>;</span><br><span class="line">   <span class="keyword">int</span> b = <span class="number">10</span>;</span><br><span class="line">   <span class="keyword">int</span> c = <span class="number">15</span>;</span><br><span class="line">   <span class="keyword">int</span> d = <span class="number">5</span>;</span><br><span class="line">   <span class="keyword">int</span> e;</span><br><span class="line"> </span><br><span class="line">   e = (a + b) * c / d;      <span class="comment">// ( 30 * 15 ) / 5</span></span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;(a + b) * c / d 的值是 %d\n&quot;</span>,  e );</span><br><span class="line"> </span><br><span class="line">   e = ((a + b) * c) / d;    <span class="comment">// (30 * 15 ) / 5</span></span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;((a + b) * c) / d 的值是 %d\n&quot;</span> ,  e );</span><br><span class="line"> </span><br><span class="line">   e = (a + b) * (c / d);   <span class="comment">// (30) * (15/5)</span></span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;(a + b) * (c / d) 的值是 %d\n&quot;</span>,  e );</span><br><span class="line"> </span><br><span class="line">   e = a + (b * c) / d;     <span class="comment">//  20 + (150/5)</span></span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;a + (b * c) / d 的值是 %d\n&quot;</span> ,  e );</span><br><span class="line">  </span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">(a + b) <span class="emphasis">* c / d 的值是 90</span></span><br><span class="line"><span class="emphasis">((a + b) *</span> c) / d 的值是 90</span><br><span class="line">(a + b) <span class="emphasis">* (c / d) 的值是 90</span></span><br><span class="line"><span class="emphasis">a + (b *</span> c) / d 的值是 50</span><br></pre></td></tr></table></figure><h1>C 判断</h1><p>判断结构要求程序员指定一个或多个要评估或测试的条件，以及条件为真时要执行的语句（必需的）和条件为假时要执行的语句（可选的）。</p><p>C 语言把任何<strong>非零</strong>和<strong>非空</strong>的值假定为 <strong>true</strong>，把<strong>零</strong>或 <strong>null</strong> 假定为 <strong>false</strong>。</p><h2 id="判断语句"><a class="header-anchor" href="#判断语句">¶</a>判断语句</h2><table><thead><tr><th style="text-align:left">语句</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left">if 语句</td><td style="text-align:left">一个 <strong>if 语句</strong> 由一个布尔表达式后跟一个或多个语句组成。</td></tr><tr><td style="text-align:left">if…else语句</td><td style="text-align:left">一个 <strong>if 语句</strong> 后可跟一个可选的 <strong>else 语句</strong>，else 语句在布尔表达式为假时执行。</td></tr><tr><td style="text-align:left">嵌套 if 语句</td><td style="text-align:left">您可以在一个 <strong>if</strong> 或 <strong>else if</strong> 语句内使用另一个 <strong>if</strong> 或 <strong>else if</strong> 语句。</td></tr><tr><td style="text-align:left">switch 语句</td><td style="text-align:left">一个 <strong>switch</strong> 语句允许测试一个变量等于多个值时的情况。</td></tr><tr><td style="text-align:left">嵌套 switch 语句</td><td style="text-align:left">您可以在一个 <strong>switch</strong> 语句内使用另一个 <strong>switch</strong> 语句。</td></tr></tbody></table><h3 id="if-语句"><a class="header-anchor" href="#if-语句">¶</a>if 语句</h3><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">if(boolean<span class="emphasis">_expression)</span></span><br><span class="line"><span class="emphasis">&#123;</span></span><br><span class="line"><span class="emphasis">   /* 如果布尔表达式为真将执行的语句 */</span></span><br><span class="line"><span class="emphasis">&#125;</span></span><br></pre></td></tr></table></figure><p>如果布尔表达式为 <strong>true</strong>，则 if 语句内的代码块将被执行。如果布尔表达式为 <strong>false</strong>，则 if 语句结束后的第一组代码（闭括号后）将被执行。</p><p>C 语言把任何<strong>非零</strong>和<strong>非空</strong>的值假定为 <strong>true</strong>，把<strong>零</strong>或 <strong>null</strong> 假定为 <strong>false</strong>。</p><h3 id="if…else语句"><a class="header-anchor" href="#if…else语句">¶</a>if…else语句</h3><p>一个 <strong>if 语句</strong> 后可跟一个可选的 <strong>else 语句</strong>，else 语句在布尔表达式为 false 时执行。</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">if(boolean<span class="emphasis">_expression)</span></span><br><span class="line"><span class="emphasis">&#123;</span></span><br><span class="line"><span class="emphasis">   /* 如果布尔表达式为真将执行的语句 */</span></span><br><span class="line"><span class="emphasis">&#125;</span></span><br><span class="line"><span class="emphasis">else</span></span><br><span class="line"><span class="emphasis">&#123;</span></span><br><span class="line"><span class="emphasis">   /* 如果布尔表达式为假将执行的语句 */</span></span><br><span class="line"><span class="emphasis">&#125;</span></span><br></pre></td></tr></table></figure><p>一个 <strong>if</strong> 语句后可跟一个可选的 <strong>else if…else</strong> 语句，这可用于测试多种条件。</p><p>当使用 if…else if…else 语句时，以下几点需要注意：</p><ul><li>一个 if 后可跟零个或一个 else，else 必须在所有 else if 之后。</li><li>一个 if 后可跟零个或多个 else if，else if 必须在 else 之前。</li><li>一旦某个 else if 匹配成功，其他的 else if 或 else 将不会被测试。</li></ul><h3 id="嵌套-if-语句"><a class="header-anchor" href="#嵌套-if-语句">¶</a>嵌套 if 语句</h3><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">if( boolean<span class="emphasis">_expression 1)</span></span><br><span class="line"><span class="emphasis">&#123;</span></span><br><span class="line"><span class="emphasis">   /* 当布尔表达式 1 为真时执行 */</span></span><br><span class="line"><span class="emphasis">   if(boolean_</span>expression 2)</span><br><span class="line">   &#123;</span><br><span class="line"><span class="code">      /* 当布尔表达式 2 为真时执行 */</span></span><br><span class="line"><span class="code">   &#125;</span></span><br><span class="line"><span class="code">&#125;</span></span><br></pre></td></tr></table></figure><h3 id="switch-语句"><a class="header-anchor" href="#switch-语句">¶</a>switch 语句</h3><p>一个 <strong>switch</strong> 语句允许测试一个变量等于多个值时的情况。每个值称为一个 case，且被测试的变量会对每个 <strong>switch case</strong> 进行检查。</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">switch(expression)&#123;</span><br><span class="line"><span class="code">    case constant-expression  :</span></span><br><span class="line"><span class="code">       statement(s);</span></span><br><span class="line"><span class="code">       break; /* 可选的 */</span></span><br><span class="line"><span class="code">    case constant-expression  :</span></span><br><span class="line"><span class="code">       statement(s);</span></span><br><span class="line"><span class="code">       break; /* 可选的 */</span></span><br><span class="line"><span class="code">  </span></span><br><span class="line"><span class="code">    /* 您可以有任意数量的 case 语句 */</span></span><br><span class="line"><span class="code">    default : /* 可选的 */</span></span><br><span class="line"><span class="code">       statement(s);</span></span><br><span class="line"><span class="code">&#125;</span></span><br></pre></td></tr></table></figure><p><strong>switch</strong> 语句必须遵循下面的规则：</p><ul><li><strong>switch</strong> 语句中的 <strong>expression</strong> 是一个常量表达式，必须是一个整型或枚举类型。</li><li>在一个 switch 中可以有任意数量的 case 语句。每个 case 后跟一个要比较的值和一个冒号。</li><li>case 的 <strong>constant-expression</strong> 必须与 switch 中的变量具有相同的数据类型，且必须是一个常量或字面量。</li><li>当被测试的变量等于 case 中的常量时，case 后跟的语句将被执行，直到遇到 <strong>break</strong> 语句为止。</li><li>当遇到 <strong>break</strong> 语句时，switch 终止，控制流将跳转到 switch 语句后的下一行。</li><li>不是每一个 case 都需要包含 <strong>break</strong>。如果 case 语句不包含 <strong>break</strong>，控制流将会 <em>继续</em> 后续的 case，直到遇到 break 为止。</li><li>一个 <strong>switch</strong> 语句可以有一个可选的 <strong>default</strong> case，出现在 switch 的结尾。default case 可用于在上面所有 case 都不为真时执行一个任务。default case 中的 <strong>break</strong> 语句不是必需的。</li></ul><h3 id="嵌套-switch-语句"><a class="header-anchor" href="#嵌套-switch-语句">¶</a>嵌套 switch 语句</h3><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">switch(ch1) &#123;</span><br><span class="line">   case &#x27;A&#x27;: </span><br><span class="line"><span class="code">      printf(&quot;这个 A 是外部 switch 的一部分&quot; );</span></span><br><span class="line"><span class="code">      switch(ch2) &#123;</span></span><br><span class="line"><span class="code">         case &#x27;A&#x27;:</span></span><br><span class="line"><span class="code">            printf(&quot;这个 A 是内部 switch 的一部分&quot; );</span></span><br><span class="line"><span class="code">            break;</span></span><br><span class="line"><span class="code">         case &#x27;B&#x27;: /* 内部 B case 代码 */</span></span><br><span class="line"><span class="code">      &#125;</span></span><br><span class="line"><span class="code">      break;</span></span><br><span class="line"><span class="code">   case &#x27;B&#x27;: /* 外部 B case 代码 */</span></span><br><span class="line"><span class="code">&#125;</span></span><br></pre></td></tr></table></figure><h2 id="运算符-三元运算符"><a class="header-anchor" href="#运算符-三元运算符">¶</a>? : 运算符(三元运算符)</h2><p><strong>条件运算符 ? :</strong>，可以用来替代 <strong>if…else</strong> 语句。它的一般形式如下：</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">Exp1 ? Exp2 : Exp3;</span><br></pre></td></tr></table></figure><blockquote><p>其中，Exp1、Exp2 和 Exp3 是表达式。请注意，冒号的使用和位置。</p></blockquote><p>? 表达式的值是由 Exp1 决定的。如果 Exp1 为真，则计算 Exp2 的值，结果即为整个 ? 表达式的值。如果 Exp1 为假，则计算 Exp3 的值，结果即为整个 ? 表达式的值。</p><h3 id="实例-v8"><a class="header-anchor" href="#实例-v8">¶</a>实例</h3><p>以下实例通过输入一个数字来判断它是否为奇数或偶数</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> num;</span><br><span class="line"> </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;输入一个数字 : &quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;num);</span><br><span class="line"> </span><br><span class="line">    (num%<span class="number">2</span>==<span class="number">0</span>)?<span class="built_in">printf</span>(<span class="string">&quot;偶数&quot;</span>):<span class="built_in">printf</span>(<span class="string">&quot;奇数&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1>C 循环</h1><p>有的时候，我们可能需要多次执行同一块代码。一般情况下，语句是按顺序执行的：函数中的第一个语句先执行，接着是第二个语句，依此类推。</p><p>编程语言提供了更为复杂执行路径的多种控制结构。</p><p>循环语句允许我们多次执行一个语句或语句组。</p><h2 id="循环类型"><a class="header-anchor" href="#循环类型">¶</a>循环类型</h2><table><thead><tr><th style="text-align:left">循环类型</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left">while 循环</td><td style="text-align:left">当给定条件为真时，重复语句或语句组。它会在执行循环主体之前测试条件。</td></tr><tr><td style="text-align:left">for 循环</td><td style="text-align:left">多次执行一个语句序列，简化管理循环变量的代码。</td></tr><tr><td style="text-align:left">do…while 循环</td><td style="text-align:left">除了它是在循环主体结尾测试条件外，其他与 while 语句类似。</td></tr><tr><td style="text-align:left">嵌套循环</td><td style="text-align:left">可以在 while、for 或 do…while 循环内使用一个或多个循环。</td></tr></tbody></table><h3 id="while-循环"><a class="header-anchor" href="#while-循环">¶</a>while 循环</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">while</span>(condition)</span><br><span class="line">&#123;</span><br><span class="line">   statement(s);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在这里，<strong>statement(s)</strong> 可以是一个单独的语句，也可以是几个语句组成的代码块。</p><p><strong>condition</strong> 可以是任意的表达式，当为任意非零值时都为 true。当条件为 true 时执行循环。 当条件为 false 时，退出循环，程序流将继续执行紧接着循环的下一条语句。</p><p><em>while</em> 循环的关键点是循环可能一次都不会执行。当条件为 false 时，会跳过循环主体，直接执行紧接着 while 循环的下一条语句。</p><h3 id="for-循环"><a class="header-anchor" href="#for-循环">¶</a>for 循环</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> ( init; condition; increment )</span><br><span class="line">&#123;</span><br><span class="line">   statement(s);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>下面是 for 循环的控制流：</p><ol><li><strong>init</strong> 会首先被执行，且只会执行一次。这一步允许您声明并初始化任何循环控制变量。您也可以不在这里写任何语句，只要有一个分号出现即可。</li><li>接下来，会判断 <strong>condition</strong>。如果为真，则执行循环主体。如果为假，则不执行循环主体，且控制流会跳转到紧接着 for 循环的下一条语句。</li><li>在执行完 for 循环主体后，控制流会跳回上面的 <strong>increment</strong> 语句。该语句允许您更新循环控制变量。该语句可以留空，只要在条件后有一个分号出现即可。</li><li>条件再次被判断。如果为真，则执行循环，这个过程会不断重复（循环主体，然后增加步值，再然后重新判断条件）。在条件变为假时，for 循环终止。</li></ol><h3 id="do…while-循环"><a class="header-anchor" href="#do…while-循环">¶</a><strong>do…while</strong> 循环</h3><p>不像 <strong>for</strong> 和 <strong>while</strong> 循环，它们是在循环头部测试循环条件。在 C 语言中，<strong>do…while</strong> 循环是在循环的尾部检查它的条件。</p><p><strong>do…while</strong> 循环与 while 循环类似，但是 do…while 循环会确保至少执行一次循环。</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line">   statement(s);</span><br><span class="line"></span><br><span class="line">&#125;<span class="keyword">while</span>( condition );</span><br></pre></td></tr></table></figure><p>请注意，条件表达式出现在循环的尾部，所以循环中的 statement(s) 会在条件被测试之前至少执行一次。</p><p>如果条件为真，控制流会跳转回上面的 do，然后重新执行循环中的 statement(s)。这个过程会不断重复，直到给定条件变为假为止。</p><h3 id="嵌套循环"><a class="header-anchor" href="#嵌套循环">¶</a>嵌套循环</h3><p>C 语言中 <strong>嵌套 for 循环</strong> 语句的语法：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (initialization; condition; increment/decrement)</span><br><span class="line">&#123;</span><br><span class="line">    statement(s);</span><br><span class="line">    <span class="keyword">for</span> (initialization; condition; increment/decrement)</span><br><span class="line">    &#123;</span><br><span class="line">        statement(s);</span><br><span class="line">        ... ... ...</span><br><span class="line">    &#125;</span><br><span class="line">    ... ... ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>流程图：</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200910164012.png" alt=""></p><p>C 语言中 <strong>嵌套 while 循环</strong> 语句的语法：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">while</span> (condition1)</span><br><span class="line">&#123;</span><br><span class="line">    statement(s);</span><br><span class="line">    <span class="keyword">while</span> (condition2)</span><br><span class="line">    &#123;</span><br><span class="line">        statement(s);</span><br><span class="line">        ... ... ...</span><br><span class="line">    &#125;</span><br><span class="line">    ... ... ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>流程图：</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200910164059.png" alt=""></p><p>C 语言中 <strong>嵌套 do…while 循环</strong> 语句的语法：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line">    statement(s);</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">    &#123;</span><br><span class="line">        statement(s);</span><br><span class="line">        ... ... ...</span><br><span class="line">    &#125;<span class="keyword">while</span> (condition2);</span><br><span class="line">    ... ... ...</span><br><span class="line">&#125;<span class="keyword">while</span> (condition1);</span><br></pre></td></tr></table></figure><p>流程图：</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200910171229.png" alt=""></p><p>关于嵌套循环有一点值得注意，您可以在任何类型的循环内嵌套其他任何类型的循环。比如，一个 for 循环可以嵌套在一个 while 循环内，反之亦然。</p><h3 id="实例-v9"><a class="header-anchor" href="#实例-v9">¶</a>实例</h3><h4 id="for-循环-v2"><a class="header-anchor" href="#for-循环-v2">¶</a>for 循环</h4><p>下面的程序使用了一个嵌套的 for 循环来查找 2 到 100 中的质数：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="comment">/* 局部变量定义 */</span></span><br><span class="line">   <span class="keyword">int</span> i, j;</span><br><span class="line">   </span><br><span class="line">   <span class="keyword">for</span>(i=<span class="number">2</span>; i&lt;<span class="number">100</span>; i++) &#123;</span><br><span class="line">      <span class="keyword">for</span>(j=<span class="number">2</span>; j &lt;= (i/j); j++)</span><br><span class="line">        <span class="keyword">if</span>(!(i%j)) <span class="keyword">break</span>; <span class="comment">// 如果找到，则不是质数</span></span><br><span class="line">      <span class="keyword">if</span>(j &gt; (i/j)) <span class="built_in">printf</span>(<span class="string">&quot;%d 是质数\n&quot;</span>, i);</span><br><span class="line">   &#125;</span><br><span class="line"> </span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//结果</span></span><br><span class="line"><span class="number">2</span> 是质数</span><br><span class="line"><span class="number">3</span> 是质数</span><br><span class="line"><span class="number">5</span> 是质数</span><br><span class="line"><span class="number">7</span> 是质数</span><br><span class="line"><span class="number">11</span> 是质数</span><br><span class="line"><span class="number">13</span> 是质数</span><br><span class="line"><span class="number">17</span> 是质数</span><br><span class="line"><span class="number">19</span> 是质数</span><br><span class="line"><span class="number">23</span> 是质数</span><br><span class="line"><span class="number">29</span> 是质数</span><br><span class="line"><span class="number">31</span> 是质数</span><br><span class="line"><span class="number">37</span> 是质数</span><br><span class="line"><span class="number">41</span> 是质数</span><br><span class="line"><span class="number">43</span> 是质数</span><br><span class="line"><span class="number">47</span> 是质数</span><br><span class="line"><span class="number">53</span> 是质数</span><br><span class="line"><span class="number">59</span> 是质数</span><br><span class="line"><span class="number">61</span> 是质数</span><br><span class="line"><span class="number">67</span> 是质数</span><br><span class="line"><span class="number">71</span> 是质数</span><br><span class="line"><span class="number">73</span> 是质数</span><br><span class="line"><span class="number">79</span> 是质数</span><br><span class="line"><span class="number">83</span> 是质数</span><br><span class="line"><span class="number">89</span> 是质数</span><br><span class="line"><span class="number">97</span> 是质数</span><br></pre></td></tr></table></figure><h4 id="while-嵌套实例"><a class="header-anchor" href="#while-嵌套实例">¶</a>while 嵌套实例</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i=<span class="number">1</span>,j;</span><br><span class="line">    <span class="keyword">while</span> (i &lt;= <span class="number">5</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        j=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (j &lt;= i )</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,j);</span><br><span class="line">            j++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">1</span> <span class="number">2</span></span><br><span class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">3</span></span><br><span class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span></span><br><span class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span></span><br></pre></td></tr></table></figure><h4 id="do-while-嵌套实例"><a class="header-anchor" href="#do-while-嵌套实例">¶</a>do-while 嵌套实例</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i=<span class="number">1</span>,j;</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">    &#123;</span><br><span class="line">        j=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">do</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">            j++;</span><br><span class="line">        &#125;<span class="keyword">while</span>(j &lt;= i);</span><br><span class="line">        i++;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;<span class="keyword">while</span>(i &lt;= <span class="number">5</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">*</span><br><span class="line">**</span><br><span class="line">***</span><br><span class="line">****</span><br><span class="line">*****</span><br></pre></td></tr></table></figure><h2 id="循环控制语句"><a class="header-anchor" href="#循环控制语句">¶</a>循环控制语句</h2><p>循环控制语句改变代码的执行顺序。通过它可以实现代码的跳转。</p><table><thead><tr><th style="text-align:left">控制语句</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left">break 语句</td><td style="text-align:left">终止<strong>循环</strong>或 <strong>switch</strong> 语句，程序流将继续执行紧接着循环或 switch 的下一条语句。</td></tr><tr><td style="text-align:left">continue 语句</td><td style="text-align:left">告诉一个循环体立刻停止本次循环迭代，重新开始下次循环迭代。</td></tr><tr><td style="text-align:left">goto 语句</td><td style="text-align:left">将控制转移到被标记的语句。但是不建议在程序中使用 goto 语句。</td></tr></tbody></table><h3 id="break-语句"><a class="header-anchor" href="#break-语句">¶</a>break 语句</h3><p>C 语言中 <strong>break</strong> 语句有以下两种用法：</p><ol><li>当 <strong>break</strong> 语句出现在一个循环内时，循环会立即终止，且程序流将继续执行紧接着循环的下一条语句。</li><li>它可用于终止 <strong>switch</strong> 语句中的一个 case。</li></ol><p>如果使用的是嵌套循环（即一个循环内嵌套另一个循环），break 语句会停止执行最内层的循环，然后开始执行该块之后的下一行代码。</p><h3 id="continue-语句"><a class="header-anchor" href="#continue-语句">¶</a>continue 语句</h3><p>C 语言中的 <strong>continue</strong> 语句有点像 <strong>break</strong> 语句。但它不是强制终止，continue 会跳过当前循环中的代码，强迫开始下一次循环。</p><p>对于 <strong>for</strong> 循环，<strong>continue</strong> 语句执行后自增语句仍然会执行。对于 <strong>while</strong> 和 <strong>do…while</strong> 循环，<strong>continue</strong> 语句重新执行条件判断语句。</p><h3 id="goto-语句"><a class="header-anchor" href="#goto-语句">¶</a>goto 语句</h3><p>C 语言中的 <strong>goto</strong> 语句允许把控制无条件转移到同一函数内的被标记的语句。</p><blockquote><p>**注意：**在任何编程语言中，都不建议使用 goto 语句。因为它使得程序的控制流难以跟踪，使程序难以理解和难以修改。任何使用 goto 语句的程序可以改写成不需要使用 goto 语句的写法。</p></blockquote><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">goto</span> label;</span><br><span class="line">..</span><br><span class="line">.</span><br><span class="line">label: statement;</span><br></pre></td></tr></table></figure><p>在这里，<strong>label</strong> 可以是任何除 C 关键字以外的纯文本，它可以设置在 C 程序中 <strong>goto</strong> 语句的前面或者后面。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200910171220.png" alt=""></p><h1>C 函数</h1><p>函数是一组一起执行一个任务的语句。每个 C 程序都至少有一个函数，即主函数 <strong>main()</strong> ，所有简单的程序都可以定义其他额外的函数。</p><p>您可以把代码划分到不同的函数中。如何划分代码到不同的函数中是由您来决定的，但在逻辑上，划分通常是根据每个函数执行一个特定的任务来进行的。</p><p>函数<strong>声明</strong>告诉编译器函数的名称、返回类型和参数。函数<strong>定义</strong>提供了函数的实际主体。</p><p>C 标准库提供了大量的程序可以调用的内置函数。例如，函数 <strong>strcat()</strong> 用来连接两个字符串，函数 <strong>memcpy()</strong> 用来复制内存到另一个位置。</p><p>函数还有很多叫法，比如方法、子例程或程序，等等。</p><h2 id="定义函数"><a class="header-anchor" href="#定义函数">¶</a>定义函数</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function">return_type <span class="title">function_name</span><span class="params">( parameter <span class="built_in">list</span> )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   body of the function</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在 C 语言中，函数由一个函数头和一个函数主体组成。下面列出一个函数的所有组成部分：</p><ul><li>**返回类型：**一个函数可以返回一个值。<strong>return_type</strong> 是函数返回的值的数据类型。有些函数执行所需的操作而不返回值，在这种情况下，return_type 是关键字 <strong>void</strong>。</li><li>**函数名称：**这是函数的实际名称。函数名和参数列表一起构成了函数签名。</li><li>**参数：**参数就像是占位符。当函数被调用时，您向参数传递一个值，这个值被称为实际参数。参数列表包括函数参数的类型、顺序、数量。参数是可选的，也就是说，函数可能不包含参数。</li><li>**函数主体：**函数主体包含一组定义函数执行任务的语句。</li></ul><h3 id="实例-v10"><a class="header-anchor" href="#实例-v10">¶</a>实例</h3><p>以下是 <strong>max()</strong> 函数的源代码。该函数有两个参数 num1 和 num2，会返回这两个数中较大的那个数：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 函数返回两个数中较大的那个数 */</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">max</span><span class="params">(<span class="keyword">int</span> num1, <span class="keyword">int</span> num2)</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="comment">/* 局部变量声明 */</span></span><br><span class="line">   <span class="keyword">int</span> result;</span><br><span class="line"> </span><br><span class="line">   <span class="keyword">if</span> (num1 &gt; num2)</span><br><span class="line">      result = num1;</span><br><span class="line">   <span class="keyword">else</span></span><br><span class="line">      result = num2;</span><br><span class="line"> </span><br><span class="line">   <span class="keyword">return</span> result; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="函数声明"><a class="header-anchor" href="#函数声明">¶</a>函数声明</h2><p>函数<strong>声明</strong>会告诉编译器函数名称及如何调用函数。函数的实际主体可以单独定义。</p><p>函数声明包括以下几个部分：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function">return_type <span class="title">function_name</span><span class="params">( parameter <span class="built_in">list</span> )</span></span>;</span><br></pre></td></tr></table></figure><p>针对上面定义的函数 max()，以下是函数声明：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">max</span><span class="params">(<span class="keyword">int</span> num1, <span class="keyword">int</span> num2)</span></span>;</span><br></pre></td></tr></table></figure><p>在函数声明中，参数的名称并不重要，只有参数的类型是必需的，因此下面也是有效的声明：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">max</span><span class="params">(<span class="keyword">int</span>, <span class="keyword">int</span>)</span></span>;</span><br></pre></td></tr></table></figure><p>当在一个源文件中定义函数且在另一个文件中调用函数时，函数声明是必需的。在这种情况下，您应该在调用函数的文件顶部声明函数。</p><h2 id="调用函数"><a class="header-anchor" href="#调用函数">¶</a>调用函数</h2><p>创建 C 函数时，会定义函数做什么，然后通过调用函数来完成已定义的任务。</p><p>当程序调用函数时，程序控制权会转移给被调用的函数。被调用的函数执行已定义的任务，当函数的返回语句被执行时，或到达函数的结束括号时，会把程序控制权交还给主程序。</p><p>调用函数时，传递所需参数，如果函数返回一个值，则可以存储返回值。例如：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="comment">/* 函数声明 */</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">max</span><span class="params">(<span class="keyword">int</span> num1, <span class="keyword">int</span> num2)</span></span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="comment">/* 局部变量定义 */</span></span><br><span class="line">   <span class="keyword">int</span> a = <span class="number">100</span>;</span><br><span class="line">   <span class="keyword">int</span> b = <span class="number">200</span>;</span><br><span class="line">   <span class="keyword">int</span> ret;</span><br><span class="line"> </span><br><span class="line">   <span class="comment">/* 调用函数来获取最大值 */</span></span><br><span class="line">   ret = max(a, b);</span><br><span class="line"> </span><br><span class="line">   <span class="built_in">printf</span>( <span class="string">&quot;Max value is : %d\n&quot;</span>, ret );</span><br><span class="line"> </span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/* 函数返回两个数中较大的那个数 */</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">max</span><span class="params">(<span class="keyword">int</span> num1, <span class="keyword">int</span> num2)</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="comment">/* 局部变量声明 */</span></span><br><span class="line">   <span class="keyword">int</span> result;</span><br><span class="line"> </span><br><span class="line">   <span class="keyword">if</span> (num1 &gt; num2)</span><br><span class="line">      result = num1;</span><br><span class="line">   <span class="keyword">else</span></span><br><span class="line">      result = num2;</span><br><span class="line"> </span><br><span class="line">   <span class="keyword">return</span> result; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>把 max() 函数和 main() 函数放一块，编译源代码。当运行最后的可执行文件时，会产生下列结果：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">Max value is : <span class="number">200</span></span><br></pre></td></tr></table></figure><h2 id="函数参数"><a class="header-anchor" href="#函数参数">¶</a>函数参数</h2><p>如果函数要使用参数，则必须声明接受参数值的变量。这些变量称为函数的<strong>形式参数</strong>。</p><p>形式参数就像函数内的其他局部变量，在进入函数时被创建，退出函数时被销毁。</p><p>当调用函数时，有两种向函数传递参数的方式：</p><table><thead><tr><th style="text-align:left">调用类型</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left">传值调用</td><td style="text-align:left">该方法把参数的实际值复制给函数的形式参数。在这种情况下，修改函数内的形式参数不会影响实际参数。</td></tr><tr><td style="text-align:left">引用调用</td><td style="text-align:left">通过指针传递方式，形参为指向实参地址的指针，当对形参的指向操作时，就相当于对实参本身进行的操作。</td></tr></tbody></table><h3 id="传值方式调用函数"><a class="header-anchor" href="#传值方式调用函数">¶</a>传值方式调用函数</h3><p>向函数传递参数的<strong>传值调用</strong>方法，把参数的实际值复制给函数的形式参数。在这种情况下，修改函数内的形式参数不会影响实际参数。</p><p>默认情况下，C 语言使用<em>传值调用</em>方法来传递参数。一般来说，这意味着函数内的代码不会改变用于调用函数的实际参数。函数 <strong>swap()</strong> 定义如下：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 函数定义 */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">swap</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="keyword">int</span> temp;</span><br><span class="line"></span><br><span class="line">   temp = x; <span class="comment">/* 保存 x 的值 */</span></span><br><span class="line">   x = y;    <span class="comment">/* 把 y 赋值给 x */</span></span><br><span class="line">   y = temp; <span class="comment">/* 把 temp 赋值给 y */</span></span><br><span class="line">  </span><br><span class="line">   <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过传递实际参数来调用函数 <strong>swap()</strong>：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="comment">/* 函数声明 */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">swap</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="comment">/* 局部变量定义 */</span></span><br><span class="line">   <span class="keyword">int</span> a = <span class="number">100</span>;</span><br><span class="line">   <span class="keyword">int</span> b = <span class="number">200</span>;</span><br><span class="line"> </span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;交换前，a 的值： %d\n&quot;</span>, a );</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;交换前，b 的值： %d\n&quot;</span>, b );</span><br><span class="line"> </span><br><span class="line">   <span class="comment">/* 调用函数来交换值 */</span></span><br><span class="line">   swap(a, b);</span><br><span class="line"> </span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;交换后，a 的值： %d\n&quot;</span>, a );</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;交换后，b 的值： %d\n&quot;</span>, b );</span><br><span class="line"> </span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">交换前，a 的值： <span class="number">100</span></span><br><span class="line">交换前，b 的值： <span class="number">200</span></span><br><span class="line">交换后，a 的值： <span class="number">100</span></span><br><span class="line">交换后，b 的值： <span class="number">200</span></span><br></pre></td></tr></table></figure><blockquote><p>上面的实例表明了，虽然在函数内改变了 a 和 b 的值，但是实际上 a 和 b 的值没有发生变化。</p></blockquote><h3 id="引用方式调用函数"><a class="header-anchor" href="#引用方式调用函数">¶</a>引用方式调用函数</h3><p>通过引用传递方式，形参为指向实参地址的指针，当对形参的指向操作时，就相当于对实参本身进行的操作。</p><p>传递指针可以让多个函数访问指针所引用的对象，而不用把对象声明为全局可访问。</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 函数定义 */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">swap</span><span class="params">(<span class="keyword">int</span> *x, <span class="keyword">int</span> *y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="keyword">int</span> temp;</span><br><span class="line">   temp = *x;    <span class="comment">/* 保存地址 x 的值 */</span></span><br><span class="line">   *x = *y;      <span class="comment">/* 把 y 赋值给 x */</span></span><br><span class="line">   *y = temp;    <span class="comment">/* 把 temp 赋值给 y */</span></span><br><span class="line">  </span><br><span class="line">   <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过引用传值来调用函数 <strong>swap()</strong>：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="comment">/* 函数声明 */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">swap</span><span class="params">(<span class="keyword">int</span> *x, <span class="keyword">int</span> *y)</span></span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="comment">/* 局部变量定义 */</span></span><br><span class="line">   <span class="keyword">int</span> a = <span class="number">100</span>;</span><br><span class="line">   <span class="keyword">int</span> b = <span class="number">200</span>;</span><br><span class="line"> </span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;交换前，a 的值： %d\n&quot;</span>, a );</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;交换前，b 的值： %d\n&quot;</span>, b );</span><br><span class="line"> </span><br><span class="line">   <span class="comment">/* 调用函数来交换值</span></span><br><span class="line"><span class="comment">    * &amp;a 表示指向 a 的指针，即变量 a 的地址</span></span><br><span class="line"><span class="comment">    * &amp;b 表示指向 b 的指针，即变量 b 的地址</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">   swap(&amp;a, &amp;b);</span><br><span class="line"> </span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;交换后，a 的值： %d\n&quot;</span>, a );</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;交换后，b 的值： %d\n&quot;</span>, b );</span><br><span class="line"> </span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">交换前，a 的值： <span class="number">100</span></span><br><span class="line">交换前，b 的值： <span class="number">200</span></span><br><span class="line">交换后，a 的值： <span class="number">200</span></span><br><span class="line">交换后，b 的值： <span class="number">100</span></span><br></pre></td></tr></table></figure><blockquote><p>上面的实例表明了，与传值调用不同，引用调用在函数内改变了 a 和 b 的值，实际上也改变了函数外 a 和 b 的值。</p></blockquote><h1>C 作用域规则</h1><p>任何一种编程中，作用域是程序中定义的变量所存在的区域，超过该区域变量就不能被访问。C 语言中有三个地方可以声明变量：</p><ol><li>在函数或块内部的<strong>局部</strong>变量</li><li>在所有函数外部的<strong>全局</strong>变量</li><li>在<strong>形式</strong>参数的函数参数定义中</li></ol><h2 id="局部变量"><a class="header-anchor" href="#局部变量">¶</a>局部变量</h2><p>在某个函数或块的内部声明的变量称为局部变量。它们只能被该函数或该代码块内部的语句使用。局部变量在函数外部是不可知的。下面是使用局部变量的实例。在这里，所有的变量 a、b 和 c 是 main() 函数的局部变量。</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="comment">/* 局部变量声明 */</span></span><br><span class="line">  <span class="keyword">int</span> a, b;</span><br><span class="line">  <span class="keyword">int</span> c;</span><br><span class="line"> </span><br><span class="line">  <span class="comment">/* 实际初始化 */</span></span><br><span class="line">  a = <span class="number">10</span>;</span><br><span class="line">  b = <span class="number">20</span>;</span><br><span class="line">  c = a + b;</span><br><span class="line"> </span><br><span class="line">  <span class="built_in">printf</span> (<span class="string">&quot;value of a = %d, b = %d and c = %d\n&quot;</span>, a, b, c);</span><br><span class="line"> </span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="全局变量"><a class="header-anchor" href="#全局变量">¶</a>全局变量</h2><p>全局变量是定义在函数外部，通常是在程序的顶部。全局变量在整个程序生命周期内都是有效的，在任意的函数内部能访问全局变量。</p><p>全局变量可以被任何函数访问。也就是说，全局变量在声明后整个程序中都是可用的。下面是使用全局变量和局部变量的实例：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="comment">/* 全局变量声明 */</span></span><br><span class="line"><span class="keyword">int</span> g;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="comment">/* 局部变量声明 */</span></span><br><span class="line">  <span class="keyword">int</span> a, b;</span><br><span class="line"> </span><br><span class="line">  <span class="comment">/* 实际初始化 */</span></span><br><span class="line">  a = <span class="number">10</span>;</span><br><span class="line">  b = <span class="number">20</span>;</span><br><span class="line">  g = a + b;</span><br><span class="line"> </span><br><span class="line">  <span class="built_in">printf</span> (<span class="string">&quot;value of a = %d, b = %d and g = %d\n&quot;</span>, a, b, g);</span><br><span class="line"> </span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在程序中，局部变量和全局变量的名称可以相同，但是在函数内，如果两个名字相同，会使用局部变量值，全局变量不会被使用。下面是一个实例：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="comment">/* 全局变量声明 */</span></span><br><span class="line"><span class="keyword">int</span> g = <span class="number">20</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="comment">/* 局部变量声明 */</span></span><br><span class="line">  <span class="keyword">int</span> g = <span class="number">10</span>;</span><br><span class="line"> </span><br><span class="line">  <span class="built_in">printf</span> (<span class="string">&quot;value of g = %d\n&quot;</span>,  g);</span><br><span class="line"> </span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="形式参数"><a class="header-anchor" href="#形式参数">¶</a>形式参数</h2><p>函数的参数，形式参数，被当作该函数内的局部变量，如果与全局变量同名它们会优先使用。下面是一个实例：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="comment">/* 全局变量声明 */</span></span><br><span class="line"><span class="keyword">int</span> a = <span class="number">20</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="comment">/* 在主函数中的局部变量声明 */</span></span><br><span class="line">  <span class="keyword">int</span> a = <span class="number">10</span>;</span><br><span class="line">  <span class="keyword">int</span> b = <span class="number">20</span>;</span><br><span class="line">  <span class="keyword">int</span> c = <span class="number">0</span>;</span><br><span class="line">  <span class="function"><span class="keyword">int</span> <span class="title">sum</span><span class="params">(<span class="keyword">int</span>, <span class="keyword">int</span>)</span></span>;</span><br><span class="line"> </span><br><span class="line">  <span class="built_in">printf</span> (<span class="string">&quot;value of a in main() = %d\n&quot;</span>,  a);</span><br><span class="line">  c = sum( a, b);</span><br><span class="line">  <span class="built_in">printf</span> (<span class="string">&quot;value of c in main() = %d\n&quot;</span>,  c);</span><br><span class="line"> </span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/* 添加两个整数的函数 */</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">sum</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span> (<span class="string">&quot;value of a in sum() = %d\n&quot;</span>,  a);</span><br><span class="line">    <span class="built_in">printf</span> (<span class="string">&quot;value of b in sum() = %d\n&quot;</span>,  b);</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">return</span> a + b;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function">value of a in <span class="title">main</span><span class="params">()</span> </span>= <span class="number">10</span></span><br><span class="line"><span class="function">value of a in <span class="title">sum</span><span class="params">()</span> </span>= <span class="number">10</span></span><br><span class="line"><span class="function">value of b in <span class="title">sum</span><span class="params">()</span> </span>= <span class="number">20</span></span><br><span class="line"><span class="function">value of c in <span class="title">main</span><span class="params">()</span> </span>= <span class="number">30</span></span><br></pre></td></tr></table></figure><blockquote><p><strong>全局变量与局部变量在内存中的区别</strong>：</p></blockquote><blockquote><ul><li>全局变量保存在内存的全局存储区中，占用静态的存储单元；</li><li>局部变量保存在栈中，只有在所在函数被调用时才动态地为变量分配存储单元。</li></ul></blockquote><h2 id="初始化局部变量和全局变量"><a class="header-anchor" href="#初始化局部变量和全局变量">¶</a>初始化局部变量和全局变量</h2><p>当局部变量被定义时，系统不会对其初始化，您必须自行对其初始化。定义全局变量时，系统会自动对其初始化，如下所示：</p><table><thead><tr><th style="text-align:left">数据类型</th><th style="text-align:left">初始化默认值</th></tr></thead><tbody><tr><td style="text-align:left">int</td><td style="text-align:left">0</td></tr><tr><td style="text-align:left">char</td><td style="text-align:left">‘\0’</td></tr><tr><td style="text-align:left">float</td><td style="text-align:left">0</td></tr><tr><td style="text-align:left">double</td><td style="text-align:left">0</td></tr><tr><td style="text-align:left">pointer</td><td style="text-align:left">NULL</td></tr></tbody></table><p>正确地初始化变量是一个良好的编程习惯，否则有时候程序可能会产生意想不到的结果，因为未初始化的变量会导致一些在内存位置中已经可用的垃圾值。</p><h1>C 数组</h1><p>C 语言支持<strong>数组</strong>数据结构，它可以存储一个固定大小的相同类型元素的顺序集合。数组是用来存储一系列数据，但它往往被认为是一系列相同类型的变量。</p><p>数组的声明并不是声明一个个单独的变量，比如 number0、number1、…、number99，而是声明一个数组变量，比如 numbers，然后使用 numbers[0]、numbers[1]、…、numbers[99] 来代表一个个单独的变量。数组中的特定元素可以通过索引访问。</p><p>所有的数组都是由连续的内存位置组成。最低的地址对应第一个元素，最高的地址对应最后一个元素。<img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200913162129.jpg" alt="C 中的数组"></p><h2 id="声明数组"><a class="header-anchor" href="#声明数组">¶</a>声明数组</h2><p>在 C 中要声明一个数组，需要指定元素的类型和元素的数量，如下所示：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">type arrayName [ arraySize ];</span><br></pre></td></tr></table></figure><p>这叫做一维数组。<strong>arraySize</strong> 必须是一个大于零的整数常量，<strong>type</strong> 可以是任意有效的 C 数据类型。例如，要声明一个类型为 double 的包含 10 个元素的数组 <strong>balance</strong>，声明语句如下：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">double</span> balance[<span class="number">10</span>];</span><br></pre></td></tr></table></figure><p>现在 <em>balance</em> 是一个可用的数组，可以容纳 10 个类型为 double 的数字。</p><h2 id="初始化数组"><a class="header-anchor" href="#初始化数组">¶</a>初始化数组</h2><p>在 C 中，可以逐个初始化数组，也可以使用一个初始化语句，如下所示：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">double</span> balance[<span class="number">5</span>] = &#123;<span class="number">1000.0</span>, <span class="number">2.0</span>, <span class="number">3.4</span>, <span class="number">7.0</span>, <span class="number">50.0</span>&#125;;</span><br></pre></td></tr></table></figure><p>大括号 { } 之间的值的数目不能大于我们在数组声明时在方括号 [ ] 中指定的元素数目。</p><p>如果您省略掉了数组的大小，数组的大小则为初始化时元素的个数。因此，如果：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">double</span> balance[] = &#123;<span class="number">1000.0</span>, <span class="number">2.0</span>, <span class="number">3.4</span>, <span class="number">7.0</span>, <span class="number">50.0</span>&#125;;</span><br></pre></td></tr></table></figure><p>将创建一个数组，它与前一个实例中所创建的数组是完全相同的。下面是一个为数组中某个元素赋值的实例:</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">balance[<span class="number">4</span>] = <span class="number">50.0</span>;</span><br></pre></td></tr></table></figure><p>上述的语句把数组中第五个元素的值赋为 50.0。所有的数组都是以 0 作为它们第一个元素的索引，也被称为基索引，数组的最后一个索引是数组的总大小减去 1。以下是上面所讨论的数组的的图形表示：<img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200914213845.jpg" alt="数组表示"></p><h2 id="访问数组元素"><a class="header-anchor" href="#访问数组元素">¶</a>访问数组元素</h2><p>数组元素可以通过数组名称加索引进行访问。元素的索引是放在方括号内，跟在数组名称的后边。例如：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">double</span> salary = balance[<span class="number">9</span>];</span><br></pre></td></tr></table></figure><p>上面的语句将把数组中第 10 个元素的值赋给 salary 变量。下面的实例使用了上述的三个概念，即，声明数组、数组赋值、访问数组：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="keyword">int</span> n[ <span class="number">10</span> ]; <span class="comment">/* n 是一个包含 10 个整数的数组 */</span></span><br><span class="line">   <span class="keyword">int</span> i,j;</span><br><span class="line"> </span><br><span class="line">   <span class="comment">/* 初始化数组元素 */</span>         </span><br><span class="line">   <span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++ )</span><br><span class="line">   &#123;</span><br><span class="line">      n[ i ] = i + <span class="number">100</span>; <span class="comment">/* 设置元素 i 为 i + 100 */</span></span><br><span class="line">   &#125;</span><br><span class="line">   </span><br><span class="line">   <span class="comment">/* 输出数组中每个元素的值 */</span></span><br><span class="line">   <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; <span class="number">10</span>; j++ )</span><br><span class="line">   &#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;Element[%d] = %d\n&quot;</span>, j, n[j] );</span><br><span class="line">   &#125;</span><br><span class="line"> </span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">Element[<span class="number">0</span>] = <span class="number">100</span></span><br><span class="line">Element[<span class="number">1</span>] = <span class="number">101</span></span><br><span class="line">Element[<span class="number">2</span>] = <span class="number">102</span></span><br><span class="line">Element[<span class="number">3</span>] = <span class="number">103</span></span><br><span class="line">Element[<span class="number">4</span>] = <span class="number">104</span></span><br><span class="line">Element[<span class="number">5</span>] = <span class="number">105</span></span><br><span class="line">Element[<span class="number">6</span>] = <span class="number">106</span></span><br><span class="line">Element[<span class="number">7</span>] = <span class="number">107</span></span><br><span class="line">Element[<span class="number">8</span>] = <span class="number">108</span></span><br><span class="line">Element[<span class="number">9</span>] = <span class="number">109</span></span><br></pre></td></tr></table></figure><h2 id="C-中数组详解"><a class="header-anchor" href="#C-中数组详解">¶</a>C 中数组详解</h2><table><thead><tr><th style="text-align:left">概念</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left">多维数组</td><td style="text-align:left">C 支持多维数组。多维数组最简单的形式是二维数组。</td></tr><tr><td style="text-align:left">传递数组给函数</td><td style="text-align:left">您可以通过指定不带索引的数组名称来给函数传递一个指向数组的指针。</td></tr><tr><td style="text-align:left">从函数返回数组</td><td style="text-align:left">C 允许从函数返回数组。</td></tr><tr><td style="text-align:left">指向数组的指针</td><td style="text-align:left">可以通过指定不带索引的数组名称来生成一个指向数组中第一个元素的指针。</td></tr></tbody></table><h3 id="多维数组"><a class="header-anchor" href="#多维数组">¶</a>多维数组</h3><p>多维数组声明的一般形式如下：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">type name[size1][size2]...[sizeN];</span><br></pre></td></tr></table></figure><p>例如，下面的声明创建了一个三维 5 . 10 . 4 整型数组：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> threedim[<span class="number">5</span>][<span class="number">10</span>][<span class="number">4</span>];</span><br></pre></td></tr></table></figure><h4 id="二维数组"><a class="header-anchor" href="#二维数组">¶</a>二维数组</h4><p>多维数组最简单的形式是二维数组。一个二维数组，在本质上，是一个一维数组的列表。声明一个 x 行 y 列的二维整型数组，形式如下：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">type arrayName [ x ][ y ];</span><br></pre></td></tr></table></figure><p>其中，<strong>type</strong> 可以是任意有效的 C 数据类型，<strong>arrayName</strong> 是一个有效的 C 标识符。一个二维数组可以被认为是一个带有 x 行和 y 列的表格。下面是一个二维数组，包含 3 行和 4 列：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> x[<span class="number">3</span>][<span class="number">4</span>];</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200914214340.jpg" alt=""></p><p>因此，数组中的每个元素是使用形式为 a[ i , j ] 的元素名称来标识的，其中 a 是数组名称，i 和 j 是唯一标识 a 中每个元素的下标。</p><h4 id="初始化二维数组"><a class="header-anchor" href="#初始化二维数组">¶</a>初始化二维数组</h4><p>多维数组可以通过在括号内为每行指定值来进行初始化。下面是一个带有 3 行 4 列的数组。</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> a[<span class="number">3</span>][<span class="number">4</span>] = &#123;  </span><br><span class="line"> &#123;<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125; ,   <span class="comment">/*  初始化索引号为 0 的行 */</span></span><br><span class="line"> &#123;<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>&#125; ,   <span class="comment">/*  初始化索引号为 1 的行 */</span></span><br><span class="line"> &#123;<span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>&#125;   <span class="comment">/*  初始化索引号为 2 的行 */</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>内部嵌套的括号是可选的，下面的初始化与上面是等同的：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> a[<span class="number">3</span>][<span class="number">4</span>] = &#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">11</span>&#125;;</span><br></pre></td></tr></table></figure><h4 id="访问二维数组元素"><a class="header-anchor" href="#访问二维数组元素">¶</a>访问二维数组元素</h4><p>二维数组中的元素是通过使用下标（即数组的行索引和列索引）来访问的。例如：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> val = a[<span class="number">2</span>][<span class="number">3</span>];</span><br></pre></td></tr></table></figure><p>上面的语句将获取数组中第 3 行第 4 个元素。可以通过上面的示意图来进行验证。来看看下面的程序，将使用嵌套循环来处理二维数组：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="comment">/* 一个带有 5 行 2 列的数组 */</span></span><br><span class="line">   <span class="keyword">int</span> a[<span class="number">5</span>][<span class="number">2</span>] = &#123; &#123;<span class="number">0</span>,<span class="number">0</span>&#125;, &#123;<span class="number">1</span>,<span class="number">2</span>&#125;, &#123;<span class="number">2</span>,<span class="number">4</span>&#125;, &#123;<span class="number">3</span>,<span class="number">6</span>&#125;,&#123;<span class="number">4</span>,<span class="number">8</span>&#125;&#125;;</span><br><span class="line">   <span class="keyword">int</span> i, j;</span><br><span class="line"> </span><br><span class="line">   <span class="comment">/* 输出数组中每个元素的值 */</span></span><br><span class="line">   <span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++ )</span><br><span class="line">   &#123;</span><br><span class="line">      <span class="keyword">for</span> ( j = <span class="number">0</span>; j &lt; <span class="number">2</span>; j++ )</span><br><span class="line">      &#123;</span><br><span class="line">         <span class="built_in">printf</span>(<span class="string">&quot;a[%d][%d] = %d\n&quot;</span>, i,j, a[i][j] );</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">a[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">0</span></span><br><span class="line">a[<span class="number">0</span>][<span class="number">1</span>] = <span class="number">0</span></span><br><span class="line">a[<span class="number">1</span>][<span class="number">0</span>] = <span class="number">1</span></span><br><span class="line">a[<span class="number">1</span>][<span class="number">1</span>] = <span class="number">2</span></span><br><span class="line">a[<span class="number">2</span>][<span class="number">0</span>] = <span class="number">2</span></span><br><span class="line">a[<span class="number">2</span>][<span class="number">1</span>] = <span class="number">4</span></span><br><span class="line">a[<span class="number">3</span>][<span class="number">0</span>] = <span class="number">3</span></span><br><span class="line">a[<span class="number">3</span>][<span class="number">1</span>] = <span class="number">6</span></span><br><span class="line">a[<span class="number">4</span>][<span class="number">0</span>] = <span class="number">4</span></span><br><span class="line">a[<span class="number">4</span>][<span class="number">1</span>] = <span class="number">8</span></span><br></pre></td></tr></table></figure><h3 id="传递数组给函数"><a class="header-anchor" href="#传递数组给函数">¶</a>传递数组给函数</h3><p>如果想要在函数中传递一个一维数组作为参数，必须以下面三种方式来声明函数形式参数，这三种声明方式的结果是一样的，因为每种方式都会告诉编译器将要接收一个整型指针。同样地，也可以传递一个多维数组作为形式参数。</p><h4 id="方式-1"><a class="header-anchor" href="#方式-1">¶</a>方式 1</h4><p>形式参数是一个指针:</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">myFunction</span><span class="params">(<span class="keyword">int</span> *param)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="方式-2"><a class="header-anchor" href="#方式-2">¶</a>方式 2</h4><p>形式参数是一个已定义大小的数组：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">myFunction</span><span class="params">(<span class="keyword">int</span> param[<span class="number">10</span>])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="方式-3"><a class="header-anchor" href="#方式-3">¶</a>方式 3</h4><p>形式参数是一个未定义大小的数组：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">myFunction</span><span class="params">(<span class="keyword">int</span> param[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="实例-v11"><a class="header-anchor" href="#实例-v11">¶</a>实例</h4><p>来看下面这个函数，它把数组作为参数，同时还传递了另一个参数，根据所传的参数，会返回数组中各元素的平均值：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">getAverage</span><span class="params">(<span class="keyword">int</span> arr[], <span class="keyword">int</span> size)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span>    i;</span><br><span class="line">  <span class="keyword">double</span> avg;</span><br><span class="line">  <span class="keyword">double</span> sum;</span><br><span class="line"> </span><br><span class="line">  <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; size; ++i)</span><br><span class="line">  &#123;</span><br><span class="line">    sum += arr[i];</span><br><span class="line">  &#125;</span><br><span class="line"> </span><br><span class="line">  avg = sum / size;</span><br><span class="line"> </span><br><span class="line">  <span class="keyword">return</span> avg;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>调用上面的函数，如下所示：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="comment">/* 函数声明 */</span></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">getAverage</span><span class="params">(<span class="keyword">int</span> arr[], <span class="keyword">int</span> size)</span></span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="comment">/* 带有 5 个元素的整型数组 */</span></span><br><span class="line">   <span class="keyword">int</span> balance[<span class="number">5</span>] = &#123;<span class="number">1000</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">17</span>, <span class="number">50</span>&#125;;</span><br><span class="line">   <span class="keyword">double</span> avg;</span><br><span class="line"> </span><br><span class="line">   <span class="comment">/* 传递一个指向数组的指针作为参数 */</span></span><br><span class="line">   avg = getAverage( balance, <span class="number">5</span> ) ;</span><br><span class="line"> </span><br><span class="line">   <span class="comment">/* 输出返回值 */</span></span><br><span class="line">   <span class="built_in">printf</span>( <span class="string">&quot;平均值是： %f &quot;</span>, avg );</span><br><span class="line">    </span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">getAverage</span><span class="params">(<span class="keyword">int</span> arr[], <span class="keyword">int</span> size)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span>    i;</span><br><span class="line">  <span class="keyword">double</span> avg;</span><br><span class="line">  <span class="keyword">double</span> sum=<span class="number">0</span>;</span><br><span class="line"> </span><br><span class="line">  <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; size; ++i)</span><br><span class="line">  &#123;</span><br><span class="line">    sum += arr[i];</span><br><span class="line">  &#125;</span><br><span class="line"> </span><br><span class="line">  avg = sum / size;</span><br><span class="line"> </span><br><span class="line">  <span class="keyword">return</span> avg;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">平均值是： <span class="number">214.400000</span></span><br></pre></td></tr></table></figure><h3 id="从函数返回数组"><a class="header-anchor" href="#从函数返回数组">¶</a>从函数返回数组</h3><p>C 语言不允许返回一个完整的数组作为函数的参数。但是，可以通过指定不带索引的数组名来返回一个指向数组的指针。</p><p>如果想要从函数返回一个一维数组，必须声明一个返回指针的函数，如下：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> * <span class="title">myFunction</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>另外，C 不支持在函数外返回局部变量的地址，除非定义局部变量为 <strong>static</strong> 变量。</p><p>来看下面的函数，它会生成 10 个随机数，并使用数组来返回它们，具体如下：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;time.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="comment">/* 要生成和返回随机数的函数 */</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> * <span class="title">getRandom</span><span class="params">( )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">static</span> <span class="keyword">int</span>  r[<span class="number">10</span>];</span><br><span class="line">  <span class="keyword">int</span> i;</span><br><span class="line"> </span><br><span class="line">  <span class="comment">/* 设置种子 */</span></span><br><span class="line">  srand( (<span class="keyword">unsigned</span>)time( <span class="literal">NULL</span> ) );</span><br><span class="line">  <span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt; <span class="number">10</span>; ++i)</span><br><span class="line">  &#123;</span><br><span class="line">     r[i] = rand();</span><br><span class="line">     <span class="built_in">printf</span>( <span class="string">&quot;r[%d] = %d\n&quot;</span>, i, r[i]);</span><br><span class="line"> </span><br><span class="line">  &#125;</span><br><span class="line"> </span><br><span class="line">  <span class="keyword">return</span> r;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/* 要调用上面定义函数的主函数 */</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="comment">/* 一个指向整数的指针 */</span></span><br><span class="line">   <span class="keyword">int</span> *p;</span><br><span class="line">   <span class="keyword">int</span> i;</span><br><span class="line"> </span><br><span class="line">   p = getRandom();</span><br><span class="line">   <span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++ )</span><br><span class="line">   &#123;</span><br><span class="line">       <span class="built_in">printf</span>( <span class="string">&quot;*(p + %d) : %d\n&quot;</span>, i, *(p + i));</span><br><span class="line">   &#125;</span><br><span class="line"> </span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">r[<span class="number">0</span>] = <span class="number">313959809</span></span><br><span class="line">r[<span class="number">1</span>] = <span class="number">1759055877</span></span><br><span class="line">r[<span class="number">2</span>] = <span class="number">1113101911</span></span><br><span class="line">r[<span class="number">3</span>] = <span class="number">2133832223</span></span><br><span class="line">r[<span class="number">4</span>] = <span class="number">2073354073</span></span><br><span class="line">r[<span class="number">5</span>] = <span class="number">167288147</span></span><br><span class="line">r[<span class="number">6</span>] = <span class="number">1827471542</span></span><br><span class="line">r[<span class="number">7</span>] = <span class="number">834791014</span></span><br><span class="line">r[<span class="number">8</span>] = <span class="number">1901409888</span></span><br><span class="line">r[<span class="number">9</span>] = <span class="number">1990469526</span></span><br><span class="line">*(p + <span class="number">0</span>) : <span class="number">313959809</span></span><br><span class="line">*(p + <span class="number">1</span>) : <span class="number">1759055877</span></span><br><span class="line">*(p + <span class="number">2</span>) : <span class="number">1113101911</span></span><br><span class="line">*(p + <span class="number">3</span>) : <span class="number">2133832223</span></span><br><span class="line">*(p + <span class="number">4</span>) : <span class="number">2073354073</span></span><br><span class="line">*(p + <span class="number">5</span>) : <span class="number">167288147</span></span><br><span class="line">*(p + <span class="number">6</span>) : <span class="number">1827471542</span></span><br><span class="line">*(p + <span class="number">7</span>) : <span class="number">834791014</span></span><br><span class="line">*(p + <span class="number">8</span>) : <span class="number">1901409888</span></span><br><span class="line">*(p + <span class="number">9</span>) : <span class="number">1990469526</span></span><br></pre></td></tr></table></figure><h3 id="指向数组的指针"><a class="header-anchor" href="#指向数组的指针">¶</a>指向数组的指针</h3><p>数组名是一个指向数组中第一个元素的常量指针。因此，在下面的声明中：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">double</span> balance[<span class="number">50</span>];</span><br></pre></td></tr></table></figure><p><strong>balance</strong> 是一个指向 &amp;balance[0] 的指针，即数组 balance 的第一个元素的地址。因此，下面的程序片段把 <strong>p</strong> 赋值为 <strong>balance</strong> 的第一个元素的地址：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">double</span> *p;</span><br><span class="line"><span class="keyword">double</span> balance[<span class="number">10</span>];</span><br><span class="line"></span><br><span class="line">p = balance;</span><br></pre></td></tr></table></figure><p>使用数组名作为常量指针是合法的，反之亦然。因此，*(balance + 4) 是一种访问 balance[4] 数据的合法方式。</p><p>一旦把第一个元素的地址存储在 p 中，就可以使用 <em>p、</em>(p+1)、*(p+2) 等来访问数组元素。下面的实例演示了上面讨论到的这些概念：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="comment">/* 带有 5 个元素的整型数组 */</span></span><br><span class="line">   <span class="keyword">double</span> balance[<span class="number">5</span>] = &#123;<span class="number">1000.0</span>, <span class="number">2.0</span>, <span class="number">3.4</span>, <span class="number">17.0</span>, <span class="number">50.0</span>&#125;;</span><br><span class="line">   <span class="keyword">double</span> *p;</span><br><span class="line">   <span class="keyword">int</span> i;</span><br><span class="line"> </span><br><span class="line">   p = balance;</span><br><span class="line"> </span><br><span class="line">   <span class="comment">/* 输出数组中每个元素的值 */</span></span><br><span class="line">   <span class="built_in">printf</span>( <span class="string">&quot;使用指针的数组值\n&quot;</span>);</span><br><span class="line">   <span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++ )</span><br><span class="line">   &#123;</span><br><span class="line">       <span class="built_in">printf</span>(<span class="string">&quot;*(p + %d) : %f\n&quot;</span>,  i, *(p + i) );</span><br><span class="line">   &#125;</span><br><span class="line"> </span><br><span class="line">   <span class="built_in">printf</span>( <span class="string">&quot;使用 balance 作为地址的数组值\n&quot;</span>);</span><br><span class="line">   <span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++ )</span><br><span class="line">   &#123;</span><br><span class="line">       <span class="built_in">printf</span>(<span class="string">&quot;*(balance + %d) : %f\n&quot;</span>,  i, *(balance + i) );</span><br><span class="line">   &#125;</span><br><span class="line"> </span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">使用指针的数组值</span><br><span class="line">*(p + <span class="number">0</span>) : <span class="number">1000.000000</span></span><br><span class="line">*(p + <span class="number">1</span>) : <span class="number">2.000000</span></span><br><span class="line">*(p + <span class="number">2</span>) : <span class="number">3.400000</span></span><br><span class="line">*(p + <span class="number">3</span>) : <span class="number">17.000000</span></span><br><span class="line">*(p + <span class="number">4</span>) : <span class="number">50.000000</span></span><br><span class="line">使用 balance 作为地址的数组值</span><br><span class="line">*(balance + <span class="number">0</span>) : <span class="number">1000.000000</span></span><br><span class="line">*(balance + <span class="number">1</span>) : <span class="number">2.000000</span></span><br><span class="line">*(balance + <span class="number">2</span>) : <span class="number">3.400000</span></span><br><span class="line">*(balance + <span class="number">3</span>) : <span class="number">17.000000</span></span><br><span class="line">*(balance + <span class="number">4</span>) : <span class="number">50.000000</span></span><br></pre></td></tr></table></figure><blockquote><p>在上面的实例中，p 是一个指向 double 型的指针，这意味着它可以存储一个 double 类型的变量。一旦有了 p 中的地址，*<strong>p</strong> 将给出存储在 p 中相应地址的值，正如上面实例中所演示的。</p></blockquote><h1>C enum(枚举)</h1><p>枚举是 C 语言中的一种基本数据类型，它可以让数据更简洁，更易读。</p><p>枚举语法定义格式为：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">enum</span>　枚举名　&#123;枚举元素<span class="number">1</span>,枚举元素<span class="number">2</span>,……&#125;;</span><br></pre></td></tr></table></figure><p>举个例子，比如：一星期有 7 天，如果不用枚举，我们需要使用 #define 来为每个整数定义一个别名：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MON  1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> TUE  2</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> WED  3</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> THU  4</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> FRI  5</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SAT  6</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SUN  7</span></span><br></pre></td></tr></table></figure><p>使用枚举的方式：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">enum</span> DAY</span><br><span class="line">&#123;</span><br><span class="line">      MON=<span class="number">1</span>, TUE, WED, THU, FRI, SAT, SUN</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><blockquote><p>**注意：**第一个枚举成员的默认值为整型的 0，后续枚举成员的值在前一个成员上加 1。我们在这个实例中把第一个枚举成员的值定义为 1，第二个就为 2，以此类推。</p></blockquote><p><em>可以在定义枚举类型时改变枚举元素的值：</em></p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">enum</span> season &#123;spring, summer=<span class="number">3</span>, autumn, winter&#125;;</span><br></pre></td></tr></table></figure><p><em>没有指定值的枚举元素，其值为前一元素加 1。也就说 spring 的值为 0，summer 的值为 3，autumn 的值为 4，winter 的值为 5</em></p><h2 id="枚举变量的定义"><a class="header-anchor" href="#枚举变量的定义">¶</a>枚举变量的定义</h2><p>前面只是声明了枚举类型，接下来看看如何定义枚举变量。</p><p>可以通过以下三种方式来定义枚举变量</p><p><strong>1、先定义枚举类型，再定义枚举变量</strong></p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">enum</span> DAY</span><br><span class="line">&#123;</span><br><span class="line">      MON=<span class="number">1</span>, TUE, WED, THU, FRI, SAT, SUN</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">enum</span> DAY day;</span><br></pre></td></tr></table></figure><p><strong>2、定义枚举类型的同时定义枚举变量</strong></p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">enum</span> DAY</span><br><span class="line">&#123;</span><br><span class="line">      MON=<span class="number">1</span>, TUE, WED, THU, FRI, SAT, SUN</span><br><span class="line">&#125; day;</span><br></pre></td></tr></table></figure><p><strong>3、省略枚举名称，直接定义枚举变量</strong></p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">enum</span></span><br><span class="line">&#123;</span><br><span class="line">      MON=<span class="number">1</span>, TUE, WED, THU, FRI, SAT, SUN</span><br><span class="line">&#125; day;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">enum</span> DAY</span><br><span class="line">&#123;</span><br><span class="line">      MON=<span class="number">1</span>, TUE, WED, THU, FRI, SAT, SUN</span><br><span class="line">&#125;;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">enum</span> DAY day;</span><br><span class="line">    day = WED;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,day);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上实例输出结果为：3</p><p>在C 语言中，枚举类型是被当做 int 或者 unsigned int 类型来处理的，所以按照 C 语言规范是没有办法遍历枚举类型的。</p><p>不过在一些特殊的情况下，枚举类型必须连续是可以实现有条件的遍历。</p><p>以下实例使用 for 来遍历枚举的元素：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">enum</span> DAY</span><br><span class="line">&#123;</span><br><span class="line">      MON=<span class="number">1</span>, TUE, WED, THU, FRI, SAT, SUN</span><br><span class="line">&#125; day;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 遍历枚举元素</span></span><br><span class="line">    <span class="keyword">for</span> (day = MON; day &lt;= SUN; day++) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;枚举元素：%d \n&quot;</span>, day);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以下枚举类型<strong>不连续</strong>，这种枚举无法遍历。</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">enum</span></span><br><span class="line">&#123;</span><br><span class="line">    ENUM_0,</span><br><span class="line">    ENUM_10 = <span class="number">10</span>,</span><br><span class="line">    ENUM_11</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>枚举在 switch 中的使用：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">enum</span> color &#123; red=<span class="number">1</span>, green, blue &#125;;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">enum</span>  color favorite_color;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/* 用户输入数字来选择颜色 */</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入你喜欢的颜色: (1. red, 2. green, 3. blue): &quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%u&quot;</span>, &amp;favorite_color);</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/* 输出结果 */</span></span><br><span class="line">    <span class="keyword">switch</span> (favorite_color)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">case</span> red:</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;你喜欢的颜色是红色&quot;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> green:</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;你喜欢的颜色是绿色&quot;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> blue:</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;你喜欢的颜色是蓝色&quot;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;你没有选择你喜欢的颜色&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上实例输出结果为：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">请输入你喜欢的颜色: (<span class="number">1.</span> red, <span class="number">2.</span> green, <span class="number">3.</span> blue): <span class="number">1</span></span><br><span class="line">你喜欢的颜色是红色</span><br></pre></td></tr></table></figure><h2 id="将整数转换为枚举"><a class="header-anchor" href="#将整数转换为枚举">¶</a>将整数转换为枚举</h2><p>以下实例将整数转换为枚举：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">enum</span> day</span><br><span class="line">    &#123;</span><br><span class="line">        saturday,</span><br><span class="line">        sunday,</span><br><span class="line">        monday,</span><br><span class="line">        tuesday,</span><br><span class="line">        wednesday,</span><br><span class="line">        thursday,</span><br><span class="line">        friday</span><br><span class="line">    &#125; workday;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">int</span> a = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">enum</span> day weekend;</span><br><span class="line">    weekend = ( <span class="keyword">enum</span> day ) a;  <span class="comment">//类型转换</span></span><br><span class="line">    <span class="comment">//weekend = a; //错误</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;weekend:%d&quot;</span>,weekend);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上实例输出结果为：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">weekend:<span class="number">1</span></span><br></pre></td></tr></table></figure><h1>C 指针</h1><p>每一个变量都有一个内存位置，每一个内存位置都定义了可使用连字号（&amp;）运算符访问的地址，它表示了在内存中的一个地址。请看下面的实例，它将输出定义的变量地址：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="keyword">int</span>  var1;</span><br><span class="line">   <span class="keyword">char</span> var2[<span class="number">10</span>];</span><br><span class="line"> </span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;var1 变量的地址： %p\n&quot;</span>, &amp;var1  );</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;var2 变量的地址： %p\n&quot;</span>, &amp;var2  );</span><br><span class="line"> </span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">var1 变量的地址： <span class="number">0x7fff5cc109d4</span></span><br><span class="line">var2 变量的地址： <span class="number">0x7fff5cc109de</span></span><br></pre></td></tr></table></figure><h2 id="什么是指针？"><a class="header-anchor" href="#什么是指针？">¶</a>什么是指针？</h2><p><strong>指针</strong>是一个变量，其值为另一个变量的地址，即，内存位置的直接地址。就像其他变量或常量一样，必须在使用指针存储其他变量地址之前，对其进行声明。指针变量声明的一般形式为：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">type *var-name;</span><br></pre></td></tr></table></figure><p>在这里，<strong>type</strong> 是指针的基类型，它必须是一个有效的 C 数据类型，<strong>var-name</strong> 是指针变量的名称。用来声明指针的星号 * 与乘法中使用的星号是相同的。但是，在这个语句中，星号是用来指定一个变量是指针。以下是有效的指针声明：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span>    *ip;    <span class="comment">/* 一个整型的指针 */</span></span><br><span class="line"><span class="keyword">double</span> *dp;    <span class="comment">/* 一个 double 型的指针 */</span></span><br><span class="line"><span class="keyword">float</span>  *fp;    <span class="comment">/* 一个浮点型的指针 */</span></span><br><span class="line"><span class="keyword">char</span>   *ch;     <span class="comment">/* 一个字符型的指针 */</span></span><br></pre></td></tr></table></figure><p>所有实际数据类型，不管是整型、浮点型、字符型，还是其他的数据类型，对应指针的值的类型都是一样的，都是一个代表内存地址的长的十六进制数。</p><p>不同数据类型的指针之间唯一的不同是，指针所指向的变量或常量的数据类型不同。</p><h2 id="如何使用指针？"><a class="header-anchor" href="#如何使用指针？">¶</a>如何使用指针？</h2><p>使用指针时会频繁进行以下几个操作：定义一个指针变量、把变量地址赋值给指针、访问指针变量中可用地址的值。这些是通过使用一元运算符 ***** 来返回位于操作数所指定地址的变量的值。下面的实例涉及到了这些操作：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="keyword">int</span>  var = <span class="number">20</span>;   <span class="comment">/* 实际变量的声明 */</span></span><br><span class="line">   <span class="keyword">int</span>  *ip;        <span class="comment">/* 指针变量的声明 */</span></span><br><span class="line"> </span><br><span class="line">   ip = &amp;var;  <span class="comment">/* 在指针变量中存储 var 的地址 */</span></span><br><span class="line"> </span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;Address of var variable: %p\n&quot;</span>, &amp;var  );</span><br><span class="line"> </span><br><span class="line">   <span class="comment">/* 在指针变量中存储的地址 */</span></span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;Address stored in ip variable: %p\n&quot;</span>, ip );</span><br><span class="line"> </span><br><span class="line">   <span class="comment">/* 使用指针访问值 */</span></span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;Value of *ip variable: %d\n&quot;</span>, *ip );</span><br><span class="line"> </span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">Address of var variable: bffd8b3c</span><br><span class="line">Address stored in ip variable: bffd8b3c</span><br><span class="line">Value of *ip variable: <span class="number">20</span></span><br></pre></td></tr></table></figure><blockquote><p>%p是用来打印地址值的</p></blockquote><h2 id="C-中的-NULL-指针"><a class="header-anchor" href="#C-中的-NULL-指针">¶</a>C 中的 NULL 指针</h2><p>在变量声明的时候，如果没有确切的地址可以赋值，为指针变量赋一个 NULL 值是一个良好的编程习惯。赋为 NULL 值的指针被称为<strong>空</strong>指针。</p><p>NULL 指针是一个定义在标准库中的值为零的常量。请看下面的程序：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="keyword">int</span>  *ptr = <span class="literal">NULL</span>;</span><br><span class="line"> </span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;ptr 的地址是 %p\n&quot;</span>, ptr  );</span><br><span class="line"> </span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">ptr 的地址是 <span class="number">0x0</span></span><br></pre></td></tr></table></figure><p>在大多数的操作系统上，程序不允许访问地址为 0 的内存，因为该内存是操作系统保留的。然而，内存地址 0 有特别重要的意义，它表明该指针不指向一个可访问的内存位置。但按照惯例，如果指针包含空值（零值），则假定它不指向任何东西。</p><p>如需检查一个空指针，您可以使用 if 语句，如下所示：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(ptr)     <span class="comment">/* 如果 p 非空，则完成 */</span></span><br><span class="line"><span class="keyword">if</span>(!ptr)    <span class="comment">/* 如果 p 为空，则完成 */</span></span><br></pre></td></tr></table></figure><h2 id="C-指针详解"><a class="header-anchor" href="#C-指针详解">¶</a>C 指针详解</h2><p>在 C 中，有很多指针相关的概念，这些概念都很简单，但是都很重要。下面列出了 C 程序员必须清楚的一些与指针相关的重要概念：</p><table><thead><tr><th style="text-align:left">概念</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left">指针的算术运算</td><td style="text-align:left">可以对指针进行四种算术运算：++、–、+、-</td></tr><tr><td style="text-align:left">指针数组</td><td style="text-align:left">可以定义用来存储指针的数组。</td></tr><tr><td style="text-align:left">指向指针的指针</td><td style="text-align:left">C 允许指向指针的指针。</td></tr><tr><td style="text-align:left">传递指针给函数</td><td style="text-align:left">通过引用或地址传递参数，使传递的参数在调用函数中被改变。</td></tr><tr><td style="text-align:left">从函数返回指针</td><td style="text-align:left">C 允许函数返回指针到局部变量、静态变量和动态内存分配。</td></tr></tbody></table><h3 id="指针的算术运算"><a class="header-anchor" href="#指针的算术运算">¶</a>指针的算术运算</h3><p>C 指针是一个用数值表示的地址。因此，您可以对指针执行算术运算。可以对指针进行四种算术运算：++、–、+、-。</p><p>假设 <strong>ptr</strong> 是一个指向地址 1000 的整型指针，是一个 32 位的整数，让我们对该指针执行下列的算术运算：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">ptr++</span><br></pre></td></tr></table></figure><p>在执行完上述的运算之后，<strong>ptr</strong> 将指向位置 1004，因为 ptr 每增加一次，它都将指向下一个整数位置，即当前位置往后移 4 字节。这个运算会在不影响内存位置中实际值的情况下，移动指针到下一个内存位置。如果 <strong>ptr</strong> 指向一个地址为 1000 的字符，上面的运算会导致指针指向位置 1001，因为下一个字符位置是在 1001。</p><ul><li>指针的每一次递增，它其实会指向下一个元素的存储单元。</li><li>指针的每一次递减，它都会指向前一个元素的存储单元。</li><li>指针在递增和递减时跳跃的字节数取决于指针所指向变量数据类型长度，比如 int 就是 4 个字节。</li></ul><h4 id="递增一个指针"><a class="header-anchor" href="#递增一个指针">¶</a>递增一个指针</h4><p>在程序中使用指针代替数组，因为变量指针可以递增，而数组不能递增，数组可以看成一个指针常量。下面的程序递增变量指针，以便顺序访问数组中的每一个元素：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAX = <span class="number">3</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="keyword">int</span>  var[] = &#123;<span class="number">10</span>, <span class="number">100</span>, <span class="number">200</span>&#125;;</span><br><span class="line">   <span class="keyword">int</span>  i, *ptr;</span><br><span class="line"> </span><br><span class="line">   <span class="comment">/* 指针中的数组地址 */</span></span><br><span class="line">   ptr = var;</span><br><span class="line">   <span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt; MAX; i++)</span><br><span class="line">   &#123;</span><br><span class="line"> </span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;存储地址：var[%d] = %x\n&quot;</span>, i, ptr );</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;存储值：var[%d] = %d\n&quot;</span>, i, *ptr );</span><br><span class="line"> </span><br><span class="line">      <span class="comment">/* 移动到下一个位置 */</span></span><br><span class="line">      ptr++;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">存储地址：var[<span class="number">0</span>] = bf882b30</span><br><span class="line">存储值：var[<span class="number">0</span>] = <span class="number">10</span></span><br><span class="line">存储地址：of var[<span class="number">1</span>] = bf882b34</span><br><span class="line">存储值： var[<span class="number">1</span>] = <span class="number">100</span></span><br><span class="line">存储地址：of var[<span class="number">2</span>] = bf882b38</span><br><span class="line">存储值：var[<span class="number">2</span>] = <span class="number">200</span></span><br></pre></td></tr></table></figure><h4 id="递减一个指针"><a class="header-anchor" href="#递减一个指针">¶</a>递减一个指针</h4><p>同样地，对指针进行递减运算，即把值减去其数据类型的字节数，如下所示：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAX = <span class="number">3</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="keyword">int</span>  var[] = &#123;<span class="number">10</span>, <span class="number">100</span>, <span class="number">200</span>&#125;;</span><br><span class="line">   <span class="keyword">int</span>  i, *ptr;</span><br><span class="line"> </span><br><span class="line">   <span class="comment">/* 指针中最后一个元素的地址 */</span></span><br><span class="line">   ptr = &amp;var[MAX<span class="number">-1</span>];</span><br><span class="line">   <span class="keyword">for</span> ( i = MAX; i &gt; <span class="number">0</span>; i--)</span><br><span class="line">   &#123;</span><br><span class="line"> </span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;存储地址：var[%d] = %x\n&quot;</span>, i<span class="number">-1</span>, ptr );</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;存储值：var[%d] = %d\n&quot;</span>, i<span class="number">-1</span>, *ptr );</span><br><span class="line"> </span><br><span class="line">      <span class="comment">/* 移动到下一个位置 */</span></span><br><span class="line">      ptr--;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">存储地址：var[<span class="number">2</span>] = <span class="number">518</span>a0ae4</span><br><span class="line">存储值：var[<span class="number">2</span>] = <span class="number">200</span></span><br><span class="line">存储地址：var[<span class="number">1</span>] = <span class="number">518</span>a0ae0</span><br><span class="line">存储值：var[<span class="number">1</span>] = <span class="number">100</span></span><br><span class="line">存储地址：var[<span class="number">0</span>] = <span class="number">518</span>a0adc</span><br><span class="line">存储值：var[<span class="number">0</span>] = <span class="number">10</span></span><br></pre></td></tr></table></figure><h4 id="指针的比较"><a class="header-anchor" href="#指针的比较">¶</a>指针的比较</h4><p>指针可以用关系运算符进行比较，如 ==、&lt; 和 &gt;。如果 p1 和 p2 指向两个相关的变量，比如同一个数组中的不同元素，则可对 p1 和 p2 进行大小比较。</p><p>下面的程序修改了上面的实例，只要变量指针所指向的地址小于或等于数组的最后一个元素的地址 &amp;var[MAX - 1]，则把变量指针进行递增：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAX = <span class="number">3</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="keyword">int</span>  var[] = &#123;<span class="number">10</span>, <span class="number">100</span>, <span class="number">200</span>&#125;;</span><br><span class="line">   <span class="keyword">int</span>  i, *ptr;</span><br><span class="line"> </span><br><span class="line">   <span class="comment">/* 指针中第一个元素的地址 */</span></span><br><span class="line">   ptr = var;</span><br><span class="line">   i = <span class="number">0</span>;</span><br><span class="line">   <span class="keyword">while</span> ( ptr &lt;= &amp;var[MAX - <span class="number">1</span>] )</span><br><span class="line">   &#123;</span><br><span class="line"> </span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;Address of var[%d] = %p\n&quot;</span>, i, ptr );</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;Value of var[%d] = %d\n&quot;</span>, i, *ptr );</span><br><span class="line"> </span><br><span class="line">      <span class="comment">/* 指向上一个位置 */</span></span><br><span class="line">      ptr++;</span><br><span class="line">      i++;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">Address of var[<span class="number">0</span>] = bfdbcb20</span><br><span class="line">Value of var[<span class="number">0</span>] = <span class="number">10</span></span><br><span class="line">Address of var[<span class="number">1</span>] = bfdbcb24</span><br><span class="line">Value of var[<span class="number">1</span>] = <span class="number">100</span></span><br><span class="line">Address of var[<span class="number">2</span>] = bfdbcb28</span><br><span class="line">Value of var[<span class="number">2</span>] = <span class="number">200</span></span><br></pre></td></tr></table></figure><h3 id="指针数组"><a class="header-anchor" href="#指针数组">¶</a>指针数组</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAX = <span class="number">3</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="keyword">int</span>  var[] = &#123;<span class="number">10</span>, <span class="number">100</span>, <span class="number">200</span>&#125;;</span><br><span class="line">   <span class="keyword">int</span> i;</span><br><span class="line"> </span><br><span class="line">   <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; MAX; i++)</span><br><span class="line">   &#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;Value of var[%d] = %d\n&quot;</span>, i, var[i] );</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">Value of var[<span class="number">0</span>] = <span class="number">10</span></span><br><span class="line">Value of var[<span class="number">1</span>] = <span class="number">100</span></span><br><span class="line">Value of var[<span class="number">2</span>] = <span class="number">200</span></span><br></pre></td></tr></table></figure><p>可能有一种情况，想要让数组存储指向 int 或 char 或其他数据类型的指针。下面是一个指向整数的指针数组的声明：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> *ptr[MAX];</span><br></pre></td></tr></table></figure><p>在这里，把 <strong>ptr</strong> 声明为一个数组，由 MAX 个整数指针组成。因此，ptr 中的每个元素，都是一个指向 int 值的指针。下面的实例用到了三个整数，它们将存储在一个指针数组中，如下所示：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAX = <span class="number">3</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="keyword">int</span>  var[] = &#123;<span class="number">10</span>, <span class="number">100</span>, <span class="number">200</span>&#125;;</span><br><span class="line">   <span class="keyword">int</span> i, *ptr[MAX];</span><br><span class="line"> </span><br><span class="line">   <span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt; MAX; i++)</span><br><span class="line">   &#123;</span><br><span class="line">      ptr[i] = &amp;var[i]; <span class="comment">/* 赋值为整数的地址 */</span></span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt; MAX; i++)</span><br><span class="line">   &#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;Value of var[%d] = %d\n&quot;</span>, i, *ptr[i] );</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">Value of var[<span class="number">0</span>] = <span class="number">10</span></span><br><span class="line">Value of var[<span class="number">1</span>] = <span class="number">100</span></span><br><span class="line">Value of var[<span class="number">2</span>] = <span class="number">200</span></span><br></pre></td></tr></table></figure><p>也可以用一个指向字符的指针数组来存储一个字符串列表，如下：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAX = <span class="number">4</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="keyword">const</span> <span class="keyword">char</span> *names[] = &#123;</span><br><span class="line">                   <span class="string">&quot;Zara Ali&quot;</span>,</span><br><span class="line">                   <span class="string">&quot;Hina Ali&quot;</span>,</span><br><span class="line">                   <span class="string">&quot;Nuha Ali&quot;</span>,</span><br><span class="line">                   <span class="string">&quot;Sara Ali&quot;</span>,</span><br><span class="line">   &#125;;</span><br><span class="line">   <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line"> </span><br><span class="line">   <span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt; MAX; i++)</span><br><span class="line">   &#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;Value of names[%d] = %s\n&quot;</span>, i, names[i] );</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">Value of names[<span class="number">0</span>] = Zara Ali</span><br><span class="line">Value of names[<span class="number">1</span>] = Hina Ali</span><br><span class="line">Value of names[<span class="number">2</span>] = Nuha Ali</span><br><span class="line">Value of names[<span class="number">3</span>] = Sara Ali</span><br></pre></td></tr></table></figure><h3 id="指向指针的指针"><a class="header-anchor" href="#指向指针的指针">¶</a>指向指针的指针</h3><p>指向指针的指针是一种多级间接寻址的形式，或者说是一个指针链。通常，一个指针包含一个变量的地址。当我们定义一个指向指针的指针时，第一个指针包含了第二个指针的地址，第二个指针指向包含实际值的位置。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200915165900.jpg" alt="C 中指向指针的指针"></p><p>一个指向指针的指针变量必须如下声明，即在变量名前放置两个星号。例如，下面声明了一个指向 int 类型指针的指针：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> **var;</span><br></pre></td></tr></table></figure><p>当一个目标值被一个指针间接指向到另一个指针时，访问这个值需要使用两个星号运算符，如下面实例所示：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="keyword">int</span>  var;</span><br><span class="line">   <span class="keyword">int</span>  *ptr;</span><br><span class="line">   <span class="keyword">int</span>  **pptr;</span><br><span class="line"></span><br><span class="line">   var = <span class="number">3000</span>;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/* 获取 var 的地址 */</span></span><br><span class="line">   ptr = &amp;var;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/* 使用运算符 &amp; 获取 ptr 的地址 */</span></span><br><span class="line">   pptr = &amp;ptr;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/* 使用 pptr 获取值 */</span></span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;Value of var = %d\n&quot;</span>, var );</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;Value available at *ptr = %d\n&quot;</span>, *ptr );</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;Value available at **pptr = %d\n&quot;</span>, **pptr);</span><br><span class="line"></span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">Value of var = <span class="number">3000</span></span><br><span class="line">Value available at *ptr = <span class="number">3000</span></span><br><span class="line">Value available at **pptr = <span class="number">3000</span></span><br></pre></td></tr></table></figure><h3 id="传递指针给函数"><a class="header-anchor" href="#传递指针给函数">¶</a>传递指针给函数</h3><p>只需要简单地声明函数参数为指针类型即可。</p><p>下面的实例中，传递一个无符号的 long 型指针给函数，并在函数内改变这个值：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;time.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getSeconds</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">long</span> *par)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="keyword">unsigned</span> <span class="keyword">long</span> sec;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   getSeconds( &amp;sec );</span><br><span class="line"></span><br><span class="line">   <span class="comment">/* 输出实际值 */</span></span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;Number of seconds: %ld\n&quot;</span>, sec );</span><br><span class="line"></span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getSeconds</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">long</span> *par)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="comment">/* 获取当前的秒数 */</span></span><br><span class="line">   *par = time( <span class="literal">NULL</span> );</span><br><span class="line">   <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">Number of seconds :<span class="number">1294450468</span></span><br></pre></td></tr></table></figure><p>能接受指针作为参数的函数，也能接受数组作为参数，如下所示：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="comment">/* 函数声明 */</span></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">getAverage</span><span class="params">(<span class="keyword">int</span> *arr, <span class="keyword">int</span> size)</span></span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="comment">/* 带有 5 个元素的整型数组  */</span></span><br><span class="line">   <span class="keyword">int</span> balance[<span class="number">5</span>] = &#123;<span class="number">1000</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">17</span>, <span class="number">50</span>&#125;;</span><br><span class="line">   <span class="keyword">double</span> avg;</span><br><span class="line"> </span><br><span class="line">   <span class="comment">/* 传递一个指向数组的指针作为参数 */</span></span><br><span class="line">   avg = getAverage( balance, <span class="number">5</span> ) ;</span><br><span class="line"> </span><br><span class="line">   <span class="comment">/* 输出返回值  */</span></span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;Average value is: %f\n&quot;</span>, avg );</span><br><span class="line">   </span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">getAverage</span><span class="params">(<span class="keyword">int</span> *arr, <span class="keyword">int</span> size)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span>    i, sum = <span class="number">0</span>;      </span><br><span class="line">  <span class="keyword">double</span> avg;          </span><br><span class="line"> </span><br><span class="line">  <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; size; ++i)</span><br><span class="line">  &#123;</span><br><span class="line">    sum += arr[i];</span><br><span class="line">  &#125;</span><br><span class="line"> </span><br><span class="line">  avg = (<span class="keyword">double</span>)sum / size;</span><br><span class="line"> </span><br><span class="line">  <span class="keyword">return</span> avg;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">Average value is: <span class="number">214.40000</span></span><br></pre></td></tr></table></figure><h3 id="从函数返回指针"><a class="header-anchor" href="#从函数返回指针">¶</a>从函数返回指针</h3><p>C 允许从函数返回指针。为了做到这点，必须声明一个返回指针的函数，如下所示：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> * <span class="title">myFunction</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>另外，C 语言不支持在调用函数时返回局部变量的地址，除非定义局部变量为 <strong>static</strong> 变量。</p><p>现在，来看下面的函数，它会生成 10 个随机数，并使用表示指针的数组名（即第一个数组元素的地址）来返回它们，具体如下：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;time.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt; </span></span></span><br><span class="line"> </span><br><span class="line"><span class="comment">/* 要生成和返回随机数的函数 */</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> * <span class="title">getRandom</span><span class="params">( )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="keyword">static</span> <span class="keyword">int</span>  r[<span class="number">10</span>];</span><br><span class="line">   <span class="keyword">int</span> i;</span><br><span class="line"> </span><br><span class="line">   <span class="comment">/* 设置种子 */</span></span><br><span class="line">   srand( (<span class="keyword">unsigned</span>)time( <span class="literal">NULL</span> ) );</span><br><span class="line">   <span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt; <span class="number">10</span>; ++i)</span><br><span class="line">   &#123;</span><br><span class="line">      r[i] = rand();</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, r[i] );</span><br><span class="line">   &#125;</span><br><span class="line"> </span><br><span class="line">   <span class="keyword">return</span> r;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/* 要调用上面定义函数的主函数 */</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="comment">/* 一个指向整数的指针 */</span></span><br><span class="line">   <span class="keyword">int</span> *p;</span><br><span class="line">   <span class="keyword">int</span> i;</span><br><span class="line"> </span><br><span class="line">   p = getRandom();</span><br><span class="line">   <span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++ )</span><br><span class="line">   &#123;</span><br><span class="line">       <span class="built_in">printf</span>(<span class="string">&quot;*(p + [%d]) : %d\n&quot;</span>, i, *(p + i) );</span><br><span class="line">   &#125;</span><br><span class="line"> </span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="number">1523198053</span></span><br><span class="line"><span class="number">1187214107</span></span><br><span class="line"><span class="number">1108300978</span></span><br><span class="line"><span class="number">430494959</span></span><br><span class="line"><span class="number">1421301276</span></span><br><span class="line"><span class="number">930971084</span></span><br><span class="line"><span class="number">123250484</span></span><br><span class="line"><span class="number">106932140</span></span><br><span class="line"><span class="number">1604461820</span></span><br><span class="line"><span class="number">149169022</span></span><br><span class="line">*(p + [<span class="number">0</span>]) : <span class="number">1523198053</span></span><br><span class="line">*(p + [<span class="number">1</span>]) : <span class="number">1187214107</span></span><br><span class="line">*(p + [<span class="number">2</span>]) : <span class="number">1108300978</span></span><br><span class="line">*(p + [<span class="number">3</span>]) : <span class="number">430494959</span></span><br><span class="line">*(p + [<span class="number">4</span>]) : <span class="number">1421301276</span></span><br><span class="line">*(p + [<span class="number">5</span>]) : <span class="number">930971084</span></span><br><span class="line">*(p + [<span class="number">6</span>]) : <span class="number">123250484</span></span><br><span class="line">*(p + [<span class="number">7</span>]) : <span class="number">106932140</span></span><br><span class="line">*(p + [<span class="number">8</span>]) : <span class="number">1604461820</span></span><br><span class="line">*(p + [<span class="number">9</span>]) : <span class="number">149169022</span></span><br></pre></td></tr></table></figure><h1>C 函数指针与回调函数</h1><h2 id="函数指针"><a class="header-anchor" href="#函数指针">¶</a>函数指针</h2><p>函数指针是指向函数的指针变量。</p><p>通常我们说的指针变量是指向一个整型、字符型或数组等变量，而函数指针是指向函数。</p><p>函数指针可以像一般函数一样，用于调用函数、传递参数。</p><p>函数指针变量的声明：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">typedef</span> <span class="title">int</span> <span class="params">(*fun_ptr)</span><span class="params">(<span class="keyword">int</span>,<span class="keyword">int</span>)</span></span>; <span class="comment">// 声明一个指向同样参数、返回值的函数指针类型</span></span><br></pre></td></tr></table></figure><h3 id="实例-v12"><a class="header-anchor" href="#实例-v12">¶</a>实例</h3><p>以下实例声明了函数指针变量 p，指向函数 max：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">max</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x &gt; y ? x : y;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">/* p 是函数指针 */</span></span><br><span class="line">    <span class="keyword">int</span> (* p)(<span class="keyword">int</span>, <span class="keyword">int</span>) = &amp; max; <span class="comment">// &amp;可以省略</span></span><br><span class="line">    <span class="keyword">int</span> a, b, c, d;</span><br><span class="line"> </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入三个数字:&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d %d&quot;</span>, &amp; a, &amp; b, &amp; c);</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/* 与直接调用函数等价，d = max(max(a, b), c) */</span></span><br><span class="line">    d = p(p(a, b), c); </span><br><span class="line"> </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;最大的数字是: %d\n&quot;</span>, d);</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编译执行，输出结果如下：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">请输入三个数字:<span class="number">1</span> <span class="number">2</span> <span class="number">3</span></span><br><span class="line">最大的数字是: <span class="number">3</span></span><br></pre></td></tr></table></figure><h2 id="回调函数"><a class="header-anchor" href="#回调函数">¶</a>回调函数</h2><h3 id="函数指针作为某个函数的参数"><a class="header-anchor" href="#函数指针作为某个函数的参数">¶</a>函数指针作为某个函数的参数</h3><p>函数指针变量可以作为某个函数的参数来使用的，回调函数就是一个通过函数指针调用的函数。</p><p>简单讲：回调函数是由别人的函数执行时调用你实现的函数。</p><blockquote><p>例子：<em>你到一个商店买东西，刚好你要的东西没有货，于是你在店员那里留下了你的电话，过了几天店里有货了，店员就打了你的电话，然后你接到电话后就到店里去取了货。在这个例子里，你的电话号码就叫回调函数，你把电话留给店员就叫登记回调函数，店里后来有货了叫做触发了回调关联的事件，店员给你打电话叫做调用回调函数，你到店里去取货叫做响应回调事件。</em></p></blockquote><h3 id="实例-v13"><a class="header-anchor" href="#实例-v13">¶</a>实例</h3><p>实例中 populate_array 函数定义了三个参数，其中第三个参数是函数的指针，通过该函数来设置数组的值。</p><p>实例中我们定义了回调函数 getNextRandomValue，它返回一个随机值，它作为一个函数指针传递给 populate_array 函数。</p><p>populate_array 将调用 10 次回调函数，并将回调函数的返回值赋值给数组。</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="comment">// 回调函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">populate_array</span><span class="params">(<span class="keyword">int</span> *<span class="built_in">array</span>, <span class="keyword">size_t</span> arraySize, <span class="keyword">int</span> (*getNextValue)(<span class="keyword">void</span>))</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">size_t</span> i=<span class="number">0</span>; i&lt;arraySize; i++)</span><br><span class="line">        <span class="built_in">array</span>[i] = getNextValue();</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">// 获取随机值</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getNextRandomValue</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> rand();</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> myarray[<span class="number">10</span>];</span><br><span class="line">    <span class="comment">/* getNextRandomValue 不能加括号，否则无法编译，因为加上括号之后相当于传入此参数时传入了 int , 而不是函数指针*/</span></span><br><span class="line">    populate_array(myarray, <span class="number">10</span>, getNextRandomValue);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, myarray[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编译执行，输出结果如下：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="number">16807</span> <span class="number">282475249</span> <span class="number">1622650073</span> <span class="number">984943658</span> <span class="number">1144108930</span> <span class="number">470211272</span> <span class="number">101027544</span> <span class="number">1457850878</span> <span class="number">1458777923</span> <span class="number">2007237709</span></span><br></pre></td></tr></table></figure><h1>C 字符串</h1><p>在 C 语言中，字符串实际上是使用 <strong>null</strong> 字符 ‘\0’ 终止的一维字符数组。因此，一个以 null 结尾的字符串，包含了组成字符串的字符。</p><p>下面的声明和初始化创建了一个 “Hello” 字符串。由于在数组的末尾存储了空字符，所以字符数组的大小比单词 “Hello” 的字符数多一个。</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">char</span> greeting[<span class="number">6</span>] = &#123;<span class="string">&#x27;H&#x27;</span>, <span class="string">&#x27;e&#x27;</span>, <span class="string">&#x27;l&#x27;</span>, <span class="string">&#x27;l&#x27;</span>, <span class="string">&#x27;o&#x27;</span>, <span class="string">&#x27;\0&#x27;</span>&#125;;</span><br></pre></td></tr></table></figure><p>依据数组初始化规则，您可以把上面的语句写成以下语句：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">char</span> greeting[] = <span class="string">&quot;Hello&quot;</span>;</span><br></pre></td></tr></table></figure><p>以下是 C/C++ 中定义的字符串的内存表示：</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200915171750.jpg" alt="C/C++ 中的字符串表示"></p><p>其实，不需要把 <em>null</em> 字符放在字符串常量的末尾。C 编译器会在初始化数组时，自动把 ‘\0’ 放在字符串的末尾。让我们尝试输出上面的字符串：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="keyword">char</span> greeting[<span class="number">6</span>] = &#123;<span class="string">&#x27;H&#x27;</span>, <span class="string">&#x27;e&#x27;</span>, <span class="string">&#x27;l&#x27;</span>, <span class="string">&#x27;l&#x27;</span>, <span class="string">&#x27;o&#x27;</span>, <span class="string">&#x27;\0&#x27;</span>&#125;;</span><br><span class="line"> </span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;Greeting message: %s\n&quot;</span>, greeting );</span><br><span class="line"> </span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">Greeting message: Hello</span><br></pre></td></tr></table></figure><p>C 中有大量操作字符串的函数</p><table><thead><tr><th style="text-align:left">序号</th><th style="text-align:left">函数 &amp; 目的</th></tr></thead><tbody><tr><td style="text-align:left">1</td><td style="text-align:left"><strong>strcpy(s1, s2);</strong> 复制字符串 s2 到字符串 s1。</td></tr><tr><td style="text-align:left">2</td><td style="text-align:left"><strong>strcat(s1, s2);</strong> 连接字符串 s2 到字符串 s1 的末尾。</td></tr><tr><td style="text-align:left">3</td><td style="text-align:left"><strong>strlen(s1);</strong> 返回字符串 s1 的长度。</td></tr><tr><td style="text-align:left">4</td><td style="text-align:left"><strong>strcmp(s1, s2);</strong> 如果 s1 和 s2 是相同的，则返回 0；如果 s1&lt;s2 则返回小于 0；如果 s1&gt;s2 则返回大于 0。</td></tr><tr><td style="text-align:left">5</td><td style="text-align:left"><strong>strchr(s1, ch);</strong> 返回一个指针，指向字符串 s1 中字符 ch 的第一次出现的位置。</td></tr><tr><td style="text-align:left">6</td><td style="text-align:left"><strong>strstr(s1, s2);</strong> 返回一个指针，指向字符串 s1 中字符串 s2 的第一次出现的位置。</td></tr></tbody></table><p>下面的实例使用了上述的一些函数：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="keyword">char</span> str1[<span class="number">12</span>] = <span class="string">&quot;Hello&quot;</span>;</span><br><span class="line">   <span class="keyword">char</span> str2[<span class="number">12</span>] = <span class="string">&quot;World&quot;</span>;</span><br><span class="line">   <span class="keyword">char</span> str3[<span class="number">12</span>];</span><br><span class="line">   <span class="keyword">int</span>  len ;</span><br><span class="line"> </span><br><span class="line">   <span class="comment">/* 复制 str1 到 str3 */</span></span><br><span class="line">   <span class="built_in">strcpy</span>(str3, str1);</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;strcpy( str3, str1) :  %s\n&quot;</span>, str3 );</span><br><span class="line"> </span><br><span class="line">   <span class="comment">/* 连接 str1 和 str2 */</span></span><br><span class="line">   <span class="built_in">strcat</span>( str1, str2);</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;strcat( str1, str2):   %s\n&quot;</span>, str1 );</span><br><span class="line"> </span><br><span class="line">   <span class="comment">/* 连接后，str1 的总长度 */</span></span><br><span class="line">   len = <span class="built_in">strlen</span>(str1);</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;strlen(str1) :  %d\n&quot;</span>, len );</span><br><span class="line"> </span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="built_in">strcpy</span>( str3, str1) :  Hello</span><br><span class="line"><span class="built_in">strcat</span>( str1, str2):   HelloWorld</span><br><span class="line"><span class="built_in">strlen</span>(str1) :  <span class="number">10</span></span><br></pre></td></tr></table></figure><h1>C 结构体</h1><p>C 数组允许定义可存储相同类型数据项的变量，<strong>结构</strong>是 C 编程中另一种用户自定义的可用的数据类型，它允许您存储不同类型的数据项。</p><p>结构用于表示一条记录，假设您想要跟踪图书馆中书本的动态，您可能需要跟踪每本书的下列属性：</p><ul><li>Title</li><li>Author</li><li>Subject</li><li>Book ID</li></ul><h2 id="定义结构"><a class="header-anchor" href="#定义结构">¶</a>定义结构</h2><p>为了定义结构，您必须使用 <strong>struct</strong> 语句。struct 语句定义了一个包含多个成员的新的数据类型，struct 语句的格式如下：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">tag</span> &#123;</span> </span><br><span class="line">    member-<span class="built_in">list</span></span><br><span class="line">    member-<span class="built_in">list</span> </span><br><span class="line">    member-<span class="built_in">list</span>  </span><br><span class="line">    ...</span><br><span class="line">&#125; variable-<span class="built_in">list</span> ;</span><br></pre></td></tr></table></figure><p><strong>tag</strong> 是结构体标签。</p><p><strong>member-list</strong> 是标准的变量定义，比如 int i; 或者 float f，或者其他有效的变量定义。</p><p><strong>variable-list</strong> 结构变量，定义在结构的末尾，最后一个分号之前，您可以指定一个或多个结构变量。下面是声明 Book 结构的方式：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Books</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">   <span class="keyword">char</span>  title[<span class="number">50</span>];</span><br><span class="line">   <span class="keyword">char</span>  author[<span class="number">50</span>];</span><br><span class="line">   <span class="keyword">char</span>  subject[<span class="number">100</span>];</span><br><span class="line">   <span class="keyword">int</span>   book_id;</span><br><span class="line">&#125; book;</span><br></pre></td></tr></table></figure><p>在一般情况下，<strong>tag、member-list、variable-list</strong> 这 3 部分至少要出现 2 个。以下为实例：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//此声明声明了拥有3个成员的结构体，分别为整型的a，字符型的b和双精度的c</span></span><br><span class="line"><span class="comment">//同时又声明了结构体变量s1</span></span><br><span class="line"><span class="comment">//这个结构体并没有标明其标签</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> </span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> a;</span><br><span class="line">    <span class="keyword">char</span> b;</span><br><span class="line">    <span class="keyword">double</span> c;</span><br><span class="line">&#125; s1;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//此声明声明了拥有3个成员的结构体，分别为整型的a，字符型的b和双精度的c</span></span><br><span class="line"><span class="comment">//结构体的标签被命名为SIMPLE,没有声明变量</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">SIMPLE</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> a;</span><br><span class="line">    <span class="keyword">char</span> b;</span><br><span class="line">    <span class="keyword">double</span> c;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//用SIMPLE标签的结构体，另外声明了变量t1、t2、t3</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">SIMPLE</span> <span class="title">t1</span>, <span class="title">t2</span>[20], *<span class="title">t3</span>;</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">//也可以用typedef创建新类型</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> a;</span><br><span class="line">    <span class="keyword">char</span> b;</span><br><span class="line">    <span class="keyword">double</span> c; </span><br><span class="line">&#125; Simple2;</span><br><span class="line"><span class="comment">//现在可以用Simple2作为类型声明新的结构体变量</span></span><br><span class="line">Simple2 u1, u2[<span class="number">20</span>], *u3;</span><br></pre></td></tr></table></figure><p>在上面的声明中，第一个和第二声明被编译器当作两个完全不同的类型，即使他们的成员列表是一样的，如果令 t3=&amp;s1，则是非法的。</p><p>结构体的成员可以包含其他结构体，也可以包含指向自己结构体类型的指针，而通常这种指针的应用是为了实现一些更高级的数据结构如链表和树等。</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//此结构体的声明包含了其他的结构体</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">COMPLEX</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">char</span> <span class="built_in">string</span>[<span class="number">100</span>];</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">SIMPLE</span> <span class="title">a</span>;</span></span><br><span class="line">&#125;;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//此结构体的声明包含了指向自己类型的指针</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">NODE</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">char</span> <span class="built_in">string</span>[<span class="number">100</span>];</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">NODE</span> *<span class="title">next_node</span>;</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>如果两个结构体互相包含，则需要对其中一个结构体进行不完整声明，如下所示：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">B</span>;</span>    <span class="comment">//对结构体B进行不完整声明</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">//结构体A中包含指向结构体B的指针</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">A</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">B</span> *<span class="title">partner</span>;</span></span><br><span class="line">    <span class="comment">//other members;</span></span><br><span class="line">&#125;;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//结构体B中包含指向结构体A的指针，在A声明完后，B也随之进行声明</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">B</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">A</span> *<span class="title">partner</span>;</span></span><br><span class="line">    <span class="comment">//other members;</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="结构体变量的初始化"><a class="header-anchor" href="#结构体变量的初始化">¶</a>结构体变量的初始化</h2><p>和其它类型变量一样，对结构体变量可以在定义时指定初始值。</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Books</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">   <span class="keyword">char</span>  title[<span class="number">50</span>];</span><br><span class="line">   <span class="keyword">char</span>  author[<span class="number">50</span>];</span><br><span class="line">   <span class="keyword">char</span>  subject[<span class="number">100</span>];</span><br><span class="line">   <span class="keyword">int</span>   book_id;</span><br><span class="line">&#125; book = &#123;<span class="string">&quot;C 语言&quot;</span>, <span class="string">&quot;RUNOOB&quot;</span>, <span class="string">&quot;编程语言&quot;</span>, <span class="number">123456</span>&#125;;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;title : %s\nauthor: %s\nsubject: %s\nbook_id: %d\n&quot;</span>, book.title, book.author, book.subject, book.book_id);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>执行输出结果为：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">title : C 语言</span><br><span class="line">author: RUNOOB</span><br><span class="line">subject: 编程语言</span><br><span class="line">book_id: <span class="number">123456</span></span><br></pre></td></tr></table></figure><h2 id="访问结构成员"><a class="header-anchor" href="#访问结构成员">¶</a>访问结构成员</h2><p>为了访问结构的成员，我们使用<strong>成员访问运算符（.）</strong>。成员访问运算符是结构变量名称和我们要访问的结构成员之间的一个句号。您可以使用 <strong>struct</strong> 关键字来定义结构类型的变量。下面的实例演示了结构的用法：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Books</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">   <span class="keyword">char</span>  title[<span class="number">50</span>];</span><br><span class="line">   <span class="keyword">char</span>  author[<span class="number">50</span>];</span><br><span class="line">   <span class="keyword">char</span>  subject[<span class="number">100</span>];</span><br><span class="line">   <span class="keyword">int</span>   book_id;</span><br><span class="line">&#125;;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">( )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="class"><span class="keyword">struct</span> <span class="title">Books</span> <span class="title">Book1</span>;</span>        <span class="comment">/* 声明 Book1，类型为 Books */</span></span><br><span class="line">   <span class="class"><span class="keyword">struct</span> <span class="title">Books</span> <span class="title">Book2</span>;</span>        <span class="comment">/* 声明 Book2，类型为 Books */</span></span><br><span class="line"> </span><br><span class="line">   <span class="comment">/* Book1 详述 */</span></span><br><span class="line">   <span class="built_in">strcpy</span>( Book1.title, <span class="string">&quot;C Programming&quot;</span>);</span><br><span class="line">   <span class="built_in">strcpy</span>( Book1.author, <span class="string">&quot;Nuha Ali&quot;</span>); </span><br><span class="line">   <span class="built_in">strcpy</span>( Book1.subject, <span class="string">&quot;C Programming Tutorial&quot;</span>);</span><br><span class="line">   Book1.book_id = <span class="number">6495407</span>;</span><br><span class="line"> </span><br><span class="line">   <span class="comment">/* Book2 详述 */</span></span><br><span class="line">   <span class="built_in">strcpy</span>( Book2.title, <span class="string">&quot;Telecom Billing&quot;</span>);</span><br><span class="line">   <span class="built_in">strcpy</span>( Book2.author, <span class="string">&quot;Zara Ali&quot;</span>);</span><br><span class="line">   <span class="built_in">strcpy</span>( Book2.subject, <span class="string">&quot;Telecom Billing Tutorial&quot;</span>);</span><br><span class="line">   Book2.book_id = <span class="number">6495700</span>;</span><br><span class="line"> </span><br><span class="line">   <span class="comment">/* 输出 Book1 信息 */</span></span><br><span class="line">   <span class="built_in">printf</span>( <span class="string">&quot;Book 1 title : %s\n&quot;</span>, Book1.title);</span><br><span class="line">   <span class="built_in">printf</span>( <span class="string">&quot;Book 1 author : %s\n&quot;</span>, Book1.author);</span><br><span class="line">   <span class="built_in">printf</span>( <span class="string">&quot;Book 1 subject : %s\n&quot;</span>, Book1.subject);</span><br><span class="line">   <span class="built_in">printf</span>( <span class="string">&quot;Book 1 book_id : %d\n&quot;</span>, Book1.book_id);</span><br><span class="line"> </span><br><span class="line">   <span class="comment">/* 输出 Book2 信息 */</span></span><br><span class="line">   <span class="built_in">printf</span>( <span class="string">&quot;Book 2 title : %s\n&quot;</span>, Book2.title);</span><br><span class="line">   <span class="built_in">printf</span>( <span class="string">&quot;Book 2 author : %s\n&quot;</span>, Book2.author);</span><br><span class="line">   <span class="built_in">printf</span>( <span class="string">&quot;Book 2 subject : %s\n&quot;</span>, Book2.subject);</span><br><span class="line">   <span class="built_in">printf</span>( <span class="string">&quot;Book 2 book_id : %d\n&quot;</span>, Book2.book_id);</span><br><span class="line"> </span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">Book <span class="number">1</span> title : C Programming</span><br><span class="line">Book <span class="number">1</span> author : Nuha Ali</span><br><span class="line">Book <span class="number">1</span> subject : C Programming Tutorial</span><br><span class="line">Book <span class="number">1</span> book_id : <span class="number">6495407</span></span><br><span class="line">Book <span class="number">2</span> title : Telecom Billing</span><br><span class="line">Book <span class="number">2</span> author : Zara Ali</span><br><span class="line">Book <span class="number">2</span> subject : Telecom Billing Tutorial</span><br><span class="line">Book <span class="number">2</span> book_id : <span class="number">6495700</span></span><br></pre></td></tr></table></figure><h2 id="结构作为函数参数"><a class="header-anchor" href="#结构作为函数参数">¶</a>结构作为函数参数</h2><p>可以把结构作为函数参数，传参方式与其他类型的变量或指针类似。可以使用上面实例中的方式来访问结构变量：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Books</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">   <span class="keyword">char</span>  title[<span class="number">50</span>];</span><br><span class="line">   <span class="keyword">char</span>  author[<span class="number">50</span>];</span><br><span class="line">   <span class="keyword">char</span>  subject[<span class="number">100</span>];</span><br><span class="line">   <span class="keyword">int</span>   book_id;</span><br><span class="line">&#125;;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/* 函数声明 */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">printBook</span><span class="params">( struct Books book )</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">( )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="class"><span class="keyword">struct</span> <span class="title">Books</span> <span class="title">Book1</span>;</span>        <span class="comment">/* 声明 Book1，类型为 Books */</span></span><br><span class="line">   <span class="class"><span class="keyword">struct</span> <span class="title">Books</span> <span class="title">Book2</span>;</span>        <span class="comment">/* 声明 Book2，类型为 Books */</span></span><br><span class="line"> </span><br><span class="line">   <span class="comment">/* Book1 详述 */</span></span><br><span class="line">   <span class="built_in">strcpy</span>( Book1.title, <span class="string">&quot;C Programming&quot;</span>);</span><br><span class="line">   <span class="built_in">strcpy</span>( Book1.author, <span class="string">&quot;Nuha Ali&quot;</span>); </span><br><span class="line">   <span class="built_in">strcpy</span>( Book1.subject, <span class="string">&quot;C Programming Tutorial&quot;</span>);</span><br><span class="line">   Book1.book_id = <span class="number">6495407</span>;</span><br><span class="line"> </span><br><span class="line">   <span class="comment">/* Book2 详述 */</span></span><br><span class="line">   <span class="built_in">strcpy</span>( Book2.title, <span class="string">&quot;Telecom Billing&quot;</span>);</span><br><span class="line">   <span class="built_in">strcpy</span>( Book2.author, <span class="string">&quot;Zara Ali&quot;</span>);</span><br><span class="line">   <span class="built_in">strcpy</span>( Book2.subject, <span class="string">&quot;Telecom Billing Tutorial&quot;</span>);</span><br><span class="line">   Book2.book_id = <span class="number">6495700</span>;</span><br><span class="line"> </span><br><span class="line">   <span class="comment">/* 输出 Book1 信息 */</span></span><br><span class="line">   printBook( Book1 );</span><br><span class="line"> </span><br><span class="line">   <span class="comment">/* 输出 Book2 信息 */</span></span><br><span class="line">   printBook( Book2 );</span><br><span class="line"> </span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">printBook</span><span class="params">( struct Books book )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="built_in">printf</span>( <span class="string">&quot;Book title : %s\n&quot;</span>, book.title);</span><br><span class="line">   <span class="built_in">printf</span>( <span class="string">&quot;Book author : %s\n&quot;</span>, book.author);</span><br><span class="line">   <span class="built_in">printf</span>( <span class="string">&quot;Book subject : %s\n&quot;</span>, book.subject);</span><br><span class="line">   <span class="built_in">printf</span>( <span class="string">&quot;Book book_id : %d\n&quot;</span>, book.book_id);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Book title : C Programming</span><br><span class="line">Book author : Nuha Ali</span><br><span class="line">Book subject : C Programming Tutorial</span><br><span class="line">Book book_id : 6495407</span><br><span class="line">Book title : Telecom Billing</span><br><span class="line">Book author : Zara Ali</span><br><span class="line">Book subject : Telecom Billing Tutorial</span><br><span class="line">Book book_id : 6495700</span><br></pre></td></tr></table></figure><h2 id="指向结构的指针"><a class="header-anchor" href="#指向结构的指针">¶</a>指向结构的指针</h2><p>可以定义指向结构的指针，方式与定义指向其他类型变量的指针相似，如下所示：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Books</span> *<span class="title">struct_pointer</span>;</span></span><br></pre></td></tr></table></figure><p>现在，可以在上述定义的指针变量中存储结构变量的地址。为了查找结构变量的地址，请把 &amp; 运算符放在结构名称的前面，如下所示：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">struct_pointer = &amp;Book1;</span><br></pre></td></tr></table></figure><p>为了使用指向该结构的指针访问结构的成员，必须使用 -&gt; 运算符，如下所示：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">struct_pointer-&gt;title;</span><br></pre></td></tr></table></figure><p>让我们使用结构指针来重写上面的实例，这将有助于您理解结构指针的概念：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Books</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">   <span class="keyword">char</span>  title[<span class="number">50</span>];</span><br><span class="line">   <span class="keyword">char</span>  author[<span class="number">50</span>];</span><br><span class="line">   <span class="keyword">char</span>  subject[<span class="number">100</span>];</span><br><span class="line">   <span class="keyword">int</span>   book_id;</span><br><span class="line">&#125;;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/* 函数声明 */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">printBook</span><span class="params">( struct Books *book )</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">( )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="class"><span class="keyword">struct</span> <span class="title">Books</span> <span class="title">Book1</span>;</span>        <span class="comment">/* 声明 Book1，类型为 Books */</span></span><br><span class="line">   <span class="class"><span class="keyword">struct</span> <span class="title">Books</span> <span class="title">Book2</span>;</span>        <span class="comment">/* 声明 Book2，类型为 Books */</span></span><br><span class="line"> </span><br><span class="line">   <span class="comment">/* Book1 详述 */</span></span><br><span class="line">   <span class="built_in">strcpy</span>( Book1.title, <span class="string">&quot;C Programming&quot;</span>);</span><br><span class="line">   <span class="built_in">strcpy</span>( Book1.author, <span class="string">&quot;Nuha Ali&quot;</span>); </span><br><span class="line">   <span class="built_in">strcpy</span>( Book1.subject, <span class="string">&quot;C Programming Tutorial&quot;</span>);</span><br><span class="line">   Book1.book_id = <span class="number">6495407</span>;</span><br><span class="line"> </span><br><span class="line">   <span class="comment">/* Book2 详述 */</span></span><br><span class="line">   <span class="built_in">strcpy</span>( Book2.title, <span class="string">&quot;Telecom Billing&quot;</span>);</span><br><span class="line">   <span class="built_in">strcpy</span>( Book2.author, <span class="string">&quot;Zara Ali&quot;</span>);</span><br><span class="line">   <span class="built_in">strcpy</span>( Book2.subject, <span class="string">&quot;Telecom Billing Tutorial&quot;</span>);</span><br><span class="line">   Book2.book_id = <span class="number">6495700</span>;</span><br><span class="line"> </span><br><span class="line">   <span class="comment">/* 通过传 Book1 的地址来输出 Book1 信息 */</span></span><br><span class="line">   printBook( &amp;Book1 );</span><br><span class="line"> </span><br><span class="line">   <span class="comment">/* 通过传 Book2 的地址来输出 Book2 信息 */</span></span><br><span class="line">   printBook( &amp;Book2 );</span><br><span class="line"> </span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">printBook</span><span class="params">( struct Books *book )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="built_in">printf</span>( <span class="string">&quot;Book title : %s\n&quot;</span>, book-&gt;title);</span><br><span class="line">   <span class="built_in">printf</span>( <span class="string">&quot;Book author : %s\n&quot;</span>, book-&gt;author);</span><br><span class="line">   <span class="built_in">printf</span>( <span class="string">&quot;Book subject : %s\n&quot;</span>, book-&gt;subject);</span><br><span class="line">   <span class="built_in">printf</span>( <span class="string">&quot;Book book_id : %d\n&quot;</span>, book-&gt;book_id);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">Book title : C Programming</span><br><span class="line">Book author : Nuha Ali</span><br><span class="line">Book subject : C Programming Tutorial</span><br><span class="line">Book book_id : <span class="number">6495407</span></span><br><span class="line">Book title : Telecom Billing</span><br><span class="line">Book author : Zara Ali</span><br><span class="line">Book subject : Telecom Billing Tutorial</span><br><span class="line">Book book_id : <span class="number">6495700</span></span><br></pre></td></tr></table></figure><h2 id="位域"><a class="header-anchor" href="#位域">¶</a>位域</h2><p>有些信息在存储时，并不需要占用一个完整的字节，而只需占几个或一个二进制位。例如在存放一个开关量时，只有 0 和 1 两种状态，用 1 位二进位即可。为了节省存储空间，并使处理简便，C 语言又提供了一种数据结构，称为&quot;位域&quot;或&quot;位段&quot;。</p><p>所谓&quot;位域&quot;是把一个字节中的二进位划分为几个不同的区域，并说明每个区域的位数。每个域有一个域名，允许在程序中按域名进行操作。这样就可以把几个不同的对象用一个字节的二进制位域来表示。</p><p>典型的实例：</p><ul><li>用 1 位二进位存放一个开关量时，只有 0 和 1 两种状态。</li><li>读取外部文件格式——可以读取非标准的文件格式。例如：9 位的整数。</li></ul><h3 id="位域的定义和位域变量的说明"><a class="header-anchor" href="#位域的定义和位域变量的说明">¶</a>位域的定义和位域变量的说明</h3><p>位域定义与结构定义相仿，其形式为：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> 位域结构名 </span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"></span><br><span class="line"> 位域列表</span><br><span class="line"></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>其中位域列表的形式为：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">类型说明符 位域名: 位域长度 </span><br></pre></td></tr></table></figure><p>例如：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">bs</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> a:<span class="number">8</span>;</span><br><span class="line">    <span class="keyword">int</span> b:<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">int</span> c:<span class="number">6</span>;</span><br><span class="line">&#125;data;</span><br></pre></td></tr></table></figure><blockquote><p>说明 data 为 bs 变量，共占两个字节。其中位域 a 占 8 位，位域 b 占 2 位，位域 c 占 6 位。</p></blockquote><p>再来看一个实例：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">packed_struct</span> &#123;</span></span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">int</span> f1:<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">int</span> f2:<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">int</span> f3:<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">int</span> f4:<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">int</span> type:<span class="number">4</span>;</span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">int</span> my_int:<span class="number">9</span>;</span><br><span class="line">&#125; pack;</span><br></pre></td></tr></table></figure><blockquote><p>在这里，packed_struct 包含了 6 个成员：四个 1 位的标识符 f1…f4、一个 4 位的 type 和一个 9 位的 my_int。</p></blockquote><p><strong>对于位域的定义尚有以下几点说明：</strong></p><ul><li><p>一个位域存储在同一个字节中，如一个字节所剩空间不够存放另一位域时，则会从下一单元起存放该位域。也可以有意使某位域从下一单元开始。例如：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">bs</span>&#123;</span></span><br><span class="line">    <span class="keyword">unsigned</span> a:<span class="number">4</span>;</span><br><span class="line">    <span class="keyword">unsigned</span>  :<span class="number">4</span>;    <span class="comment">/* 空域 */</span></span><br><span class="line">    <span class="keyword">unsigned</span> b:<span class="number">4</span>;    <span class="comment">/* 从下一单元开始存放 */</span></span><br><span class="line">    <span class="keyword">unsigned</span> c:<span class="number">4</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在这个位域定义中，a 占第一字节的 4 位，后 4 位填 0 表示不使用，b 从第二字节开始，占用 4 位，c 占用 4 位。</p></li><li><p>由于位域不允许跨两个字节，因此位域的长度不能大于一个字节的长度，也就是说不能超过8位二进位。如果最大长度大于计算机的整数字长，一些编译器可能会允许域的内存重叠，另外一些编译器可能会把大于一个域的部分存储在下一个字中。</p></li><li><p>位域可以是无名位域，这时它只用来作填充或调整位置。无名的位域是不能使用的。例如：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">k</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> a:<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span>  :<span class="number">2</span>;    <span class="comment">/* 该 2 位不能使用 */</span></span><br><span class="line">    <span class="keyword">int</span> b:<span class="number">3</span>;</span><br><span class="line">    <span class="keyword">int</span> c:<span class="number">2</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li></ul><blockquote><p>从以上分析可以看出，位域在本质上就是一种结构类型，不过其成员是按二进位分配的。</p></blockquote><h3 id="位域的使用"><a class="header-anchor" href="#位域的使用">¶</a>位域的使用</h3><p>位域的使用和结构成员的使用相同，其一般形式为：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">位域变量名.位域名</span><br><span class="line">位域变量名-&gt;位域名</span><br></pre></td></tr></table></figure><p>位域允许用各种格式输出。</p><p>请看下面的实例：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">main()&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">bs</span>&#123;</span></span><br><span class="line">        <span class="keyword">unsigned</span> a:<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">unsigned</span> b:<span class="number">3</span>;</span><br><span class="line">        <span class="keyword">unsigned</span> c:<span class="number">4</span>;</span><br><span class="line">    &#125; bit,*pbit;</span><br><span class="line">    bit.a=<span class="number">1</span>;    <span class="comment">/* 给位域赋值（应注意赋值不能超过该位域的允许范围） */</span></span><br><span class="line">    bit.b=<span class="number">7</span>;    <span class="comment">/* 给位域赋值（应注意赋值不能超过该位域的允许范围） */</span></span><br><span class="line">    bit.c=<span class="number">15</span>;    <span class="comment">/* 给位域赋值（应注意赋值不能超过该位域的允许范围） */</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d,%d,%d\n&quot;</span>,bit.a,bit.b,bit.c);    <span class="comment">/* 以整型量格式输出三个域的内容 */</span></span><br><span class="line">    pbit=&amp;bit;    <span class="comment">/* 把位域变量 bit 的地址送给指针变量 pbit */</span></span><br><span class="line">    pbit-&gt;a=<span class="number">0</span>;    <span class="comment">/* 用指针方式给位域 a 重新赋值，赋为 0 */</span></span><br><span class="line">    pbit-&gt;b&amp;=<span class="number">3</span>;    <span class="comment">/* 使用了复合的位运算符 &quot;&amp;=&quot;，相当于：pbit-&gt;b=pbit-&gt;b&amp;3，位域 b 中原有值为 7，与 3 作按位与运算的结果为 3（111&amp;011=011，十进制值为 3） */</span></span><br><span class="line">    pbit-&gt;c|=<span class="number">1</span>;    <span class="comment">/* 使用了复合位运算符&quot;|=&quot;，相当于：pbit-&gt;c=pbit-&gt;c|1，其结果为 15 */</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d,%d,%d\n&quot;</span>,pbit-&gt;a,pbit-&gt;b,pbit-&gt;c);    <span class="comment">/* 用指针方式输出了这三个域的值 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>上例程序中定义了位域结构 bs，三个位域为 a、b、c。说明了 bs 类型的变量 bit 和指向 bs 类型的指针变量 pbit。这表示位域也是可以使用指针的。</p></blockquote><h1>C 共用体</h1><p><strong>共用体</strong>是一种特殊的数据类型，允许在相同的内存位置存储不同的数据类型。可以定义一个带有多成员的共用体，但是任何时候只能有一个成员带有值。共用体提供了一种使用相同的内存位置的有效方式。</p><h2 id="定义共用体"><a class="header-anchor" href="#定义共用体">¶</a>定义共用体</h2><p>为了定义共用体，您必须使用 <strong>union</strong> 语句，方式与定义结构类似。union 语句定义了一个新的数据类型，带有多个成员。union 语句的格式如下：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">union</span> [<span class="keyword">union</span> tag]</span><br><span class="line">&#123;</span><br><span class="line">   member definition;</span><br><span class="line">   member definition;</span><br><span class="line">   ...</span><br><span class="line">   member definition;</span><br><span class="line">&#125; [one <span class="keyword">or</span> more <span class="keyword">union</span> variables];</span><br></pre></td></tr></table></figure><p><strong>union tag</strong> 是可选的，每个 member definition 是标准的变量定义，比如 int i; 或者 float f; 或者其他有效的变量定义。在共用体定义的末尾，最后一个分号之前，您可以指定一个或多个共用体变量，这是可选的。下面定义一个名为 Data 的共用体类型，有三个成员 i、f 和 str：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">union</span> Data</span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">int</span> i;</span><br><span class="line">   <span class="keyword">float</span> f;</span><br><span class="line">   <span class="keyword">char</span>  str[<span class="number">20</span>];</span><br><span class="line">&#125; data;</span><br></pre></td></tr></table></figure><p>现在，<strong>Data</strong> 类型的变量可以存储一个整数、一个浮点数，或者一个字符串。这意味着一个变量（相同的内存位置）可以存储多个多种类型的数据。您可以根据需要在一个共用体内使用任何内置的或者用户自定义的数据类型。</p><p>共用体占用的内存应足够存储共用体中最大的成员。例如，在上面的实例中，Data 将占用 20 个字节的内存空间，因为在各个成员中，字符串所占用的空间是最大的。下面的实例将显示上面的共用体占用的总内存大小：</p><div class='tip success'><p>由于data占用最大的字节数是char str[20]占用20个字节<p></div><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">union</span> Data</span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">int</span> i;</span><br><span class="line">   <span class="keyword">float</span> f;</span><br><span class="line">   <span class="keyword">char</span>  str[<span class="number">20</span>];</span><br><span class="line">&#125;;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">( )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="keyword">union</span> Data data;        </span><br><span class="line"> </span><br><span class="line">   <span class="built_in">printf</span>( <span class="string">&quot;Memory size occupied by data : %d\n&quot;</span>, <span class="keyword">sizeof</span>(data));</span><br><span class="line"> </span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">Memory size occupied by data : <span class="number">20</span></span><br></pre></td></tr></table></figure><h2 id="访问共用体成员"><a class="header-anchor" href="#访问共用体成员">¶</a>访问共用体成员</h2><p>为了访问共用体的成员，我们使用<strong>成员访问运算符（.）</strong>。成员访问运算符是共用体变量名称和我们要访问的共用体成员之间的一个句号。您可以使用 <strong>union</strong> 关键字来定义共用体类型的变量。下面的实例演示了共用体的用法：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">union</span> Data</span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">int</span> i;</span><br><span class="line">   <span class="keyword">float</span> f;</span><br><span class="line">   <span class="keyword">char</span>  str[<span class="number">20</span>];</span><br><span class="line">&#125;;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">( )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="keyword">union</span> Data data;        </span><br><span class="line"> </span><br><span class="line">   data.i = <span class="number">10</span>;</span><br><span class="line">   data.f = <span class="number">220.5</span>;</span><br><span class="line">   <span class="built_in">strcpy</span>( data.str, <span class="string">&quot;C Programming&quot;</span>);</span><br><span class="line"> </span><br><span class="line">   <span class="built_in">printf</span>( <span class="string">&quot;data.i : %d\n&quot;</span>, data.i);</span><br><span class="line">   <span class="built_in">printf</span>( <span class="string">&quot;data.f : %f\n&quot;</span>, data.f);</span><br><span class="line">   <span class="built_in">printf</span>( <span class="string">&quot;data.str : %s\n&quot;</span>, data.str);</span><br><span class="line"> </span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">data.i : <span class="number">1917853763</span></span><br><span class="line">data.f : <span class="number">4122360580327794860452759994368.000000</span></span><br><span class="line">data.str : C Programming</span><br></pre></td></tr></table></figure><p>在这里，可以看到共用体的 <strong>i</strong> 和 <strong>f</strong> 成员的值有损坏，因为最后赋给变量的值占用了内存位置，这也是 <strong>str</strong> 成员能够完好输出的原因。现在让我们再来看一个相同的实例，这次在同一时间只使用一个变量，这也演示了使用共用体的主要目的:</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">union</span> Data</span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">int</span> i;</span><br><span class="line">   <span class="keyword">float</span> f;</span><br><span class="line">   <span class="keyword">char</span>  str[<span class="number">20</span>];</span><br><span class="line">&#125;;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">( )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="keyword">union</span> Data data;        </span><br><span class="line"> </span><br><span class="line">   data.i = <span class="number">10</span>;</span><br><span class="line">   <span class="built_in">printf</span>( <span class="string">&quot;data.i : %d\n&quot;</span>, data.i);</span><br><span class="line">   </span><br><span class="line">   data.f = <span class="number">220.5</span>;</span><br><span class="line">   <span class="built_in">printf</span>( <span class="string">&quot;data.f : %f\n&quot;</span>, data.f);</span><br><span class="line">   <span class="comment">//strcpy是字符串复制，接受两个参数,一个是被复制字符串,另一个新字符串</span></span><br><span class="line">   <span class="built_in">strcpy</span>( data.str, <span class="string">&quot;C Programming&quot;</span>);</span><br><span class="line">   <span class="built_in">printf</span>( <span class="string">&quot;data.str : %s\n&quot;</span>, data.str);</span><br><span class="line"> </span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">data.i : <span class="number">10</span></span><br><span class="line">data.f : <span class="number">220.500000</span></span><br><span class="line">data.str : C Programming</span><br></pre></td></tr></table></figure><blockquote><p>在这里，所有的成员都能完好输出，因为同一时间只用到一个成员。</p></blockquote><h1>C 位域</h1><p>如果程序的结构中包含多个开关量，只有 TRUE/FALSE 变量，如下：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">int</span> widthValidated;</span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">int</span> heightValidated;</span><br><span class="line">&#125; status;</span><br></pre></td></tr></table></figure><p>这种结构需要 8 字节的内存空间，但在实际上，在每个变量中，我们只存储 0 或 1。在这种情况下，C 语言提供了一种更好的利用内存空间的方式。如果您在结构内使用这样的变量，可以定义变量的宽度来告诉编译器，将只使用这些字节。例如，上面的结构可以重写成：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">int</span> widthValidated : <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">int</span> heightValidated : <span class="number">1</span>;</span><br><span class="line">&#125; status;</span><br></pre></td></tr></table></figure><p>现在，上面的结构中，status 变量将占用 4 个字节的内存空间，但是只有 2 位被用来存储值。如果您用了 32 个变量，每一个变量宽度为 1 位，那么 status 结构将使用 4 个字节，但只要您再多用一个变量，如果使用了 33 个变量，那么它将分配内存的下一段来存储第 33 个变量，这个时候就开始使用 8 个字节。让我们看看下面的实例来理解这个概念：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="comment">/* 定义简单的结构 */</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">int</span> widthValidated;</span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">int</span> heightValidated;</span><br><span class="line">&#125; status1;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/* 定义位域结构 */</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">int</span> widthValidated : <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">int</span> heightValidated : <span class="number">1</span>;</span><br><span class="line">&#125; status2;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">( )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="built_in">printf</span>( <span class="string">&quot;Memory size occupied by status1 : %d\n&quot;</span>, <span class="keyword">sizeof</span>(status1));</span><br><span class="line">   <span class="built_in">printf</span>( <span class="string">&quot;Memory size occupied by status2 : %d\n&quot;</span>, <span class="keyword">sizeof</span>(status2));</span><br><span class="line"> </span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">Memory size occupied by status1 : <span class="number">8</span></span><br><span class="line">Memory size occupied by status2 : <span class="number">4</span></span><br></pre></td></tr></table></figure><h2 id="位域声明"><a class="header-anchor" href="#位域声明">¶</a>位域声明</h2><p>在结构内声明位域的形式如下：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  type [member_name] : width ;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>下面是有关位域中变量元素的描述：</p><table><thead><tr><th style="text-align:left">元素</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left">type</td><td style="text-align:left">只能为 int(整型)，unsigned int(无符号整型)，signed int(有符号整型) 三种类型，决定了如何解释位域的值。</td></tr><tr><td style="text-align:left">member_name</td><td style="text-align:left">位域的名称。</td></tr><tr><td style="text-align:left">width</td><td style="text-align:left">位域中位的数量。宽度必须小于或等于指定类型的位宽度。</td></tr></tbody></table><p>带有预定义宽度的变量被称为<strong>位域</strong>。位域可以存储多于 1 位的数，例如，需要一个变量来存储从 0 到 7 的值，您可以定义一个宽度为 3 位的位域，如下：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">int</span> age : <span class="number">3</span>;</span><br><span class="line">&#125; Age;</span><br></pre></td></tr></table></figure><p>上面的结构定义指示 C 编译器，age 变量将只使用 3 位来存储这个值，如果试图使用超过 3 位，则无法完成。让我们来看下面的实例：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">int</span> age : <span class="number">3</span>;</span><br><span class="line">&#125; Age;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">( )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   Age.age = <span class="number">4</span>;</span><br><span class="line">   <span class="built_in">printf</span>( <span class="string">&quot;Sizeof( Age ) : %d\n&quot;</span>, <span class="keyword">sizeof</span>(Age) );</span><br><span class="line">   <span class="built_in">printf</span>( <span class="string">&quot;Age.age : %d\n&quot;</span>, Age.age );</span><br><span class="line"> </span><br><span class="line">   Age.age = <span class="number">7</span>;</span><br><span class="line">   <span class="built_in">printf</span>( <span class="string">&quot;Age.age : %d\n&quot;</span>, Age.age );</span><br><span class="line"> </span><br><span class="line">   Age.age = <span class="number">8</span>; <span class="comment">// 二进制表示为 1000 有四位，超出</span></span><br><span class="line">   <span class="built_in">printf</span>( <span class="string">&quot;Age.age : %d\n&quot;</span>, Age.age );</span><br><span class="line"> </span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译时，它会带有警告，当上面的代码被执行时，它会产生下列结果：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">Sizeof( Age ) : <span class="number">4</span></span><br><span class="line">Age.age : <span class="number">4</span></span><br><span class="line">Age.age : <span class="number">7</span></span><br><span class="line">Age.age : <span class="number">0</span></span><br></pre></td></tr></table></figure><h1>C typedef</h1><p>C 语言提供了 <strong>typedef</strong> 关键字，您可以使用它来为类型取一个新的名字。下面的实例为单字节数字定义了一个术语 <strong>BYTE</strong>：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> BYTE;</span><br></pre></td></tr></table></figure><p>在这个类型定义之后，标识符 BYTE 可作为类型 <strong>unsigned char</strong> 的缩写，例如：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">BYTE  b1, b2;</span><br></pre></td></tr></table></figure><p>按照惯例，定义时会大写字母，以便提醒用户类型名称是一个象征性的缩写，但也可以使用小写字母，如下：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> byte;</span><br></pre></td></tr></table></figure><p>也可以使用 <strong>typedef</strong> 来为用户自定义的数据类型取一个新的名字。例如，可以对结构体使用 typedef 来定义一个新的数据类型名字，然后使用这个新的数据类型来直接定义结构变量，如下：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">Books</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">   <span class="keyword">char</span>  title[<span class="number">50</span>];</span><br><span class="line">   <span class="keyword">char</span>  author[<span class="number">50</span>];</span><br><span class="line">   <span class="keyword">char</span>  subject[<span class="number">100</span>];</span><br><span class="line">   <span class="keyword">int</span>   book_id;</span><br><span class="line">&#125; Book;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">( )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   Book book;</span><br><span class="line"> </span><br><span class="line">   <span class="built_in">strcpy</span>( book.title, <span class="string">&quot;C 教程&quot;</span>);</span><br><span class="line">   <span class="built_in">strcpy</span>( book.author, <span class="string">&quot;Runoob&quot;</span>); </span><br><span class="line">   <span class="built_in">strcpy</span>( book.subject, <span class="string">&quot;编程语言&quot;</span>);</span><br><span class="line">   book.book_id = <span class="number">12345</span>;</span><br><span class="line"> </span><br><span class="line">   <span class="built_in">printf</span>( <span class="string">&quot;书标题 : %s\n&quot;</span>, book.title);</span><br><span class="line">   <span class="built_in">printf</span>( <span class="string">&quot;书作者 : %s\n&quot;</span>, book.author);</span><br><span class="line">   <span class="built_in">printf</span>( <span class="string">&quot;书类目 : %s\n&quot;</span>, book.subject);</span><br><span class="line">   <span class="built_in">printf</span>( <span class="string">&quot;书 ID : %d\n&quot;</span>, book.book_id);</span><br><span class="line"> </span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">书标题 : C 教程</span><br><span class="line">书作者 : Runoob</span><br><span class="line">书类目 : 编程语言</span><br><span class="line">书 ID : <span class="number">12345</span></span><br></pre></td></tr></table></figure><h2 id="typedef-vs-define"><a class="header-anchor" href="#typedef-vs-define">¶</a>typedef vs #define</h2><p><strong>#define</strong> 是 C 指令，用于为各种数据类型定义别名，与 <strong>typedef</strong> 类似，但是它们有以下几点不同：</p><ul><li><strong>typedef</strong> 仅限于为类型定义符号名称，<strong>#define</strong> 不仅可以为类型定义别名，也能为数值定义别名，比如您可以定义 1 为 ONE。</li><li><strong>typedef</strong> 是由编译器执行解释的，<strong>#define</strong> 语句是由预编译器进行处理的。</li></ul><p>下面是 #define 的最简单的用法：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> TRUE  1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> FALSE 0</span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">( )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="built_in">printf</span>( <span class="string">&quot;TRUE 的值: %d\n&quot;</span>, TRUE);</span><br><span class="line">   <span class="built_in">printf</span>( <span class="string">&quot;FALSE 的值: %d\n&quot;</span>, FALSE);</span><br><span class="line"> </span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">TRUE 的值: <span class="number">1</span></span><br><span class="line">FALSE 的值: <span class="number">0</span></span><br></pre></td></tr></table></figure><h1>C 输入 &amp; 输出</h1><p>当我们提到<strong>输入</strong>时，这意味着要向程序填充一些数据。输入可以是以文件的形式或从命令行中进行。C 语言提供了一系列内置的函数来读取给定的输入，并根据需要填充到程序中。</p><p>当我们提到<strong>输出</strong>时，这意味着要在屏幕上、打印机上或任意文件中显示一些数据。C 语言提供了一系列内置的函数来输出数据到计算机屏幕上和保存数据到文本文件或二进制文件中。</p><h2 id="标准文件"><a class="header-anchor" href="#标准文件">¶</a>标准文件</h2><p>C 语言把所有的设备都当作文件。所以设备（比如显示器）被处理的方式与文件相同。以下三个文件会在程序执行时自动打开，以便访问键盘和屏幕。</p><table><thead><tr><th style="text-align:left">标准文件</th><th style="text-align:left">文件指针</th><th style="text-align:left">设备</th></tr></thead><tbody><tr><td style="text-align:left">标准输入</td><td style="text-align:left">stdin</td><td style="text-align:left">键盘</td></tr><tr><td style="text-align:left">标准输出</td><td style="text-align:left">stdout</td><td style="text-align:left">屏幕</td></tr><tr><td style="text-align:left">标准错误</td><td style="text-align:left">stderr</td><td style="text-align:left">您的屏幕</td></tr></tbody></table><p>文件指针是访问文件的方式，本节将讲解如何从屏幕读取值以及如何把结果输出到屏幕上。</p><p>C 语言中的 I/O (输入/输出) 通常使用 printf() 和 scanf() 两个函数。</p><p>scanf() 函数用于从标准输入（键盘）读取并格式化， printf() 函数发送格式化输出到标准输出（屏幕）。</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;      // 执行 printf() 函数需要该库</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;菜鸟教程&quot;</span>);  <span class="comment">//显示引号中的内容</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编译以上程序，输出结果为：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">菜鸟教程</span><br></pre></td></tr></table></figure><p><strong>实例解析：</strong></p><ul><li>所有的 C 语言程序都需要包含 <strong>main()</strong> 函数。 代码从 <strong>main()</strong> 函数开始执行。</li><li><strong>printf()</strong> 用于格式化输出到屏幕。<strong>printf()</strong> 函数在 <strong>“stdio.h”</strong> 头文件中声明。</li><li><strong>stdio.h</strong> 是一个头文件 (标准输入输出头文件) and <strong>#include</strong> 是一个预处理命令，用来引入头文件。 当编译器遇到 <strong>printf()</strong> 函数时，如果没有找到 <strong>stdio.h</strong> 头文件，会发生编译错误。</li><li><strong>return 0;</strong> 语句用于表示退出程序。</li></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> testInteger = <span class="number">5</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Number = %d&quot;</span>, testInteger);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编译以上程序，输出结果为：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Number &#x3D; 5</span><br></pre></td></tr></table></figure><p>在 printf() 函数的引号中使用 “%d” (整型) 来匹配整型变量 testInteger 并输出到屏幕。</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">float</span> f;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Enter a number: &quot;</span>);</span><br><span class="line">    <span class="comment">// %f 匹配浮点型数据</span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%f&quot;</span>,&amp;f);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Value = %f&quot;</span>, f);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="getchar-putchar-函数"><a class="header-anchor" href="#getchar-putchar-函数">¶</a>getchar() &amp; putchar() 函数</h2><p><strong>int getchar(void)</strong> 函数从屏幕读取下一个可用的字符，并把它返回为一个整数。这个函数在同一个时间内只会读取一个单一的字符。可以在循环内使用这个方法，以便从屏幕上读取多个字符。</p><p><strong>int putchar(int c)</strong> 函数把字符输出到屏幕上，并返回相同的字符。这个函数在同一个时间内只会输出一个单一的字符。可以在循环内使用这个方法，以便在屏幕上输出多个字符。</p><p>请看下面的实例：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">( )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="keyword">int</span> c;</span><br><span class="line"> </span><br><span class="line">   <span class="built_in">printf</span>( <span class="string">&quot;Enter a value :&quot;</span>);</span><br><span class="line">   c = getchar( );</span><br><span class="line"> </span><br><span class="line">   <span class="built_in">printf</span>( <span class="string">&quot;\nYou entered: &quot;</span>);</span><br><span class="line">   <span class="built_in">putchar</span>( c );</span><br><span class="line">   <span class="built_in">printf</span>( <span class="string">&quot;\n&quot;</span>);</span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会等待您输入一些文本，当您输入一个文本并按下回车键时，程序会继续并只会读取一个单一的字符，显示如下：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">$./a.out</span><br><span class="line">Enter a value :runoob</span><br><span class="line"></span><br><span class="line">You entered: r</span><br></pre></td></tr></table></figure><h2 id="gets-puts-函数"><a class="header-anchor" href="#gets-puts-函数">¶</a>gets() &amp; puts() 函数</h2><p><strong>char *gets(char *s)</strong> 函数从 <strong>stdin</strong> 读取一行到 <strong>s</strong> 所指向的缓冲区，直到一个终止符或 EOF。</p><p><strong>int puts(const char *s)</strong> 函数把字符串 s 和一个尾随的换行符写入到 <strong>stdout</strong>。</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">( )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="keyword">char</span> str[<span class="number">100</span>];</span><br><span class="line"> </span><br><span class="line">   <span class="built_in">printf</span>( <span class="string">&quot;Enter a value :&quot;</span>);</span><br><span class="line">   gets( str );</span><br><span class="line"> </span><br><span class="line">   <span class="built_in">printf</span>( <span class="string">&quot;\nYou entered: &quot;</span>);</span><br><span class="line">   <span class="built_in">puts</span>( str );</span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会等待您输入一些文本，当输入一个文本并按下回车键时，程序会继续并读取一整行直到该行结束，显示如下：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">$./a.out</span><br><span class="line">Enter a value :runoob</span><br><span class="line"></span><br><span class="line">You entered: runoob</span><br></pre></td></tr></table></figure><h2 id="scanf-和-printf-函数"><a class="header-anchor" href="#scanf-和-printf-函数">¶</a>scanf() 和 printf() 函数</h2><p><strong>int scanf(const char *format, …)</strong> 函数从标准输入流 <strong>stdin</strong> 读取输入，并根据提供的 <strong>format</strong> 来浏览输入。</p><p><strong>int printf(const char *format, …)</strong> 函数把输出写入到标准输出流 <strong>stdout</strong> ，并根据提供的格式产生输出。</p><p><strong>format</strong> 可以是一个简单的常量字符串，但是您可以分别指定 %s、%d、%c、%f 等来输出或读取字符串、整数、字符或浮点数。还有许多其他可用的格式选项，可以根据需要使用。如需了解完整的细节，可以查看这些函数的参考手册。现在让我们通过下面这个简单的实例来加深理解：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">( )</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line">   <span class="keyword">char</span> str[<span class="number">100</span>];</span><br><span class="line">   <span class="keyword">int</span> i;</span><br><span class="line"> </span><br><span class="line">   <span class="built_in">printf</span>( <span class="string">&quot;Enter a value :&quot;</span>);</span><br><span class="line">   <span class="built_in">scanf</span>(<span class="string">&quot;%s %d&quot;</span>, str, &amp;i);</span><br><span class="line"> </span><br><span class="line">   <span class="built_in">printf</span>( <span class="string">&quot;\nYou entered: %s %d &quot;</span>, str, i);</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会等待输入一些文本，当您输入一个文本并按下回车键时，程序会继续并读取输入，显示如下：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$.&#x2F;a.out</span><br><span class="line">Enter a value :runoob 123</span><br><span class="line"></span><br><span class="line">You entered: runoob 123 </span><br></pre></td></tr></table></figure><blockquote><p>在这里，应当指出的是，scanf() 期待输入的格式与给出的 %s 和 %d 相同，这意味着您必须提供有效的输入，比如 “string integer”，如果提供的是 “string string” 或 “integer integer”，它会被认为是错误的输入。另外，在读取字符串时，只要遇到一个空格，scanf() 就会停止读取，所以 “this is test” 对 scanf() 来说是三个字符串。</p></blockquote><h1>C 文件读写</h1><h2 id="打开文件"><a class="header-anchor" href="#打开文件">¶</a>打开文件</h2><p>可以使用 <strong>fopen( )</strong> 函数来创建一个新的文件或者打开一个已有的文件，这个调用会初始化类型 <strong>FILE</strong> 的一个对象，类型 <strong>FILE</strong> 包含了所有用来控制流的必要的信息。下面是这个函数调用的原型：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function">FILE *<span class="title">fopen</span><span class="params">( <span class="keyword">const</span> <span class="keyword">char</span> * filename, <span class="keyword">const</span> <span class="keyword">char</span> * mode )</span></span>;</span><br></pre></td></tr></table></figure><p>在这里，<strong>filename</strong> 是字符串，用来命名文件，访问模式 <strong>mode</strong> 的值可以是下列值中的一个：</p><table><thead><tr><th style="text-align:left">模式</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left">r</td><td style="text-align:left">打开一个已有的文本文件，允许读取文件。</td></tr><tr><td style="text-align:left">w</td><td style="text-align:left">打开一个文本文件，允许写入文件。如果文件不存在，则会创建一个新文件。在这里，您的程序会从文件的开头写入内容。如果文件存在，则该会被截断为零长度，重新写入。</td></tr><tr><td style="text-align:left">a</td><td style="text-align:left">打开一个文本文件，以追加模式写入文件。如果文件不存在，则会创建一个新文件。在这里，您的程序会在已有的文件内容中追加内容。</td></tr><tr><td style="text-align:left">r+</td><td style="text-align:left">打开一个文本文件，允许读写文件。</td></tr><tr><td style="text-align:left">w+</td><td style="text-align:left">打开一个文本文件，允许读写文件。如果文件已存在，则文件会被截断为零长度，如果文件不存在，则会创建一个新文件。</td></tr><tr><td style="text-align:left">a+</td><td style="text-align:left">打开一个文本文件，允许读写文件。如果文件不存在，则会创建一个新文件。读取会从文件的开头开始，写入则只能是追加模式。</td></tr></tbody></table><p>如果处理的是二进制文件，则需使用下面的访问模式来取代上面的访问模式：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&quot;rb&quot;, &quot;wb&quot;, &quot;ab&quot;, &quot;rb+&quot;, &quot;r+b&quot;, &quot;wb+&quot;, &quot;w+b&quot;, &quot;ab+&quot;, &quot;a+b&quot;</span><br></pre></td></tr></table></figure><h2 id="关闭文件"><a class="header-anchor" href="#关闭文件">¶</a>关闭文件</h2><p>为了关闭文件，请使用 fclose( ) 函数。函数的原型如下：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">int fclose( FILE *fp );</span><br></pre></td></tr></table></figure><p>如果成功关闭文件，<strong>fclose( )</strong> 函数返回零，如果关闭文件时发生错误，函数返回 <strong>EOF</strong>。这个函数实际上，会清空缓冲区中的数据，关闭文件，并释放用于该文件的所有内存。EOF 是一个定义在头文件 <strong>stdio.h</strong> 中的常量。</p><p>C 标准库提供了各种函数来按字符或者以固定长度字符串的形式读写文件。</p><h2 id="写入文件"><a class="header-anchor" href="#写入文件">¶</a>写入文件</h2><p>下面是把字符写入到流中的最简单的函数：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">fputc</span><span class="params">( <span class="keyword">int</span> c, FILE *fp )</span></span>;</span><br></pre></td></tr></table></figure><p>函数 <strong>fputc()</strong> 把参数 c 的字符值写入到 fp 所指向的输出流中。如果写入成功，它会返回写入的字符，如果发生错误，则会返回 <strong>EOF</strong>。您可以使用下面的函数来把一个以 null 结尾的字符串写入到流中：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">fputs</span><span class="params">( <span class="keyword">const</span> <span class="keyword">char</span> *s, FILE *fp )</span></span>;</span><br></pre></td></tr></table></figure><p>函数 <strong>fputs()</strong> 把字符串 <strong>s</strong> 写入到 fp 所指向的输出流中。如果写入成功，它会返回一个非负值，如果发生错误，则会返回 <strong>EOF</strong>。您也可以使用 <strong>int fprintf(FILE *fp,const char *format, …)</strong> 函数来写把一个字符串写入到文件中。尝试下面的实例：</p><blockquote><p>**注意：**请确保您有可用的 <strong>tmp</strong> 目录，如果不存在该目录，则需要在您的计算机上先创建该目录。</p><p><strong>/tmp</strong> 一般是 Linux 系统上的临时目录，如果你在 Windows 系统上运行，则需要修改为本地环境中已存在的目录，例如: <strong>C:\tmp</strong>、<strong>D:\tmp</strong>等。</p></blockquote><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   FILE *fp = <span class="literal">NULL</span>;</span><br><span class="line"> </span><br><span class="line">   fp = fopen(<span class="string">&quot;/tmp/test.txt&quot;</span>, <span class="string">&quot;w+&quot;</span>);</span><br><span class="line">   <span class="built_in">fprintf</span>(fp, <span class="string">&quot;This is testing for fprintf...\n&quot;</span>);</span><br><span class="line">   <span class="built_in">fputs</span>(<span class="string">&quot;This is testing for fputs...\n&quot;</span>, fp);</span><br><span class="line">   fclose(fp);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会在 /tmp 目录中创建一个新的文件 <strong>test.txt</strong>，并使用两个不同的函数写入两行。接下来让我们来读取这个文件。</p><h2 id="读取文件"><a class="header-anchor" href="#读取文件">¶</a>读取文件</h2><p>下面是从文件读取单个字符的最简单的函数：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">fgetc</span><span class="params">( FILE * fp )</span></span>;</span><br></pre></td></tr></table></figure><p><strong>fgetc()</strong> 函数从 fp 所指向的输入文件中读取一个字符。返回值是读取的字符，如果发生错误则返回 <strong>EOF</strong>。下面的函数允许您从流中读取一个字符串：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">fgets</span><span class="params">( <span class="keyword">char</span> *buf, <span class="keyword">int</span> n, FILE *fp )</span></span>;</span><br></pre></td></tr></table></figure><p>函数 <strong>fgets()</strong> 从 fp 所指向的输入流中读取 n - 1 个字符。它会把读取的字符串复制到缓冲区 <strong>buf</strong>，并在最后追加一个 <strong>null</strong> 字符来终止字符串。</p><p>如果这个函数在读取最后一个字符之前就遇到一个换行符 ‘\n’ 或文件的末尾 EOF，则只会返回读取到的字符，包括换行符。您也可以使用 <strong>int fscanf(FILE *fp, const char *format, …)</strong> 函数来从文件中读取字符串，但是在遇到第一个空格和换行符时，它会停止读取。</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   FILE *fp = <span class="literal">NULL</span>;</span><br><span class="line">   <span class="keyword">char</span> buff[<span class="number">255</span>];</span><br><span class="line"> </span><br><span class="line">   fp = fopen(<span class="string">&quot;/tmp/test.txt&quot;</span>, <span class="string">&quot;r&quot;</span>);</span><br><span class="line">   <span class="built_in">fscanf</span>(fp, <span class="string">&quot;%s&quot;</span>, buff);</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;1: %s\n&quot;</span>, buff );</span><br><span class="line"> </span><br><span class="line">   fgets(buff, <span class="number">255</span>, (FILE*)fp);</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;2: %s\n&quot;</span>, buff );</span><br><span class="line">   </span><br><span class="line">   fgets(buff, <span class="number">255</span>, (FILE*)fp);</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;3: %s\n&quot;</span>, buff );</span><br><span class="line">   fclose(fp);</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会读取上一部分创建的文件，产生下列结果：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1: This</span><br><span class="line">2: is testing for fprintf...</span><br><span class="line"></span><br><span class="line">3: This is testing for fputs...</span><br></pre></td></tr></table></figure><p>首先，<strong>fscanf()</strong> 方法只读取了 <strong>This</strong>，因为它在后边遇到了一个空格。其次，调用 <strong>fgets()</strong> 读取剩余的部分，直到行尾。最后，调用 <strong>fgets()</strong> 完整地读取第二行。</p><h2 id="二进制-I-O-函数"><a class="header-anchor" href="#二进制-I-O-函数">¶</a>二进制 I/O 函数</h2><p>下面两个函数用于二进制输入和输出：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">size_t</span> <span class="title">fread</span><span class="params">(<span class="keyword">void</span> *ptr, <span class="keyword">size_t</span> size_of_elements, </span></span></span><br><span class="line"><span class="function"><span class="params">             <span class="keyword">size_t</span> number_of_elements, FILE *a_file)</span></span>;</span><br><span class="line">              </span><br><span class="line"><span class="function"><span class="keyword">size_t</span> <span class="title">fwrite</span><span class="params">(<span class="keyword">const</span> <span class="keyword">void</span> *ptr, <span class="keyword">size_t</span> size_of_elements, </span></span></span><br><span class="line"><span class="function"><span class="params">             <span class="keyword">size_t</span> number_of_elements, FILE *a_file)</span></span>;</span><br></pre></td></tr></table></figure><blockquote><p>这两个函数都是用于存储块的读写 - 通常是数组或结构体。</p></blockquote><h1>C 预处理器</h1><p><strong>C 预处理器</strong>不是编译器的组成部分，但是它是编译过程中一个单独的步骤。简言之，C 预处理器只不过是一个文本替换工具而已，它们会指示编译器在实际编译之前完成所需的预处理。我们将把 C 预处理器（C Preprocessor）简写为 CPP。</p><p>所有的预处理器命令都是以井号（#）开头。它必须是第一个非空字符，为了增强可读性，预处理器指令应从第一列开始。下面列出了所有重要的预处理器指令：</p><table><thead><tr><th style="text-align:left">指令</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left">#define</td><td style="text-align:left">定义宏</td></tr><tr><td style="text-align:left">#include</td><td style="text-align:left">包含一个源代码文件</td></tr><tr><td style="text-align:left">#undef</td><td style="text-align:left">取消已定义的宏</td></tr><tr><td style="text-align:left">#ifdef</td><td style="text-align:left">如果宏已经定义，则返回真</td></tr><tr><td style="text-align:left">#ifndef</td><td style="text-align:left">如果宏没有定义，则返回真</td></tr><tr><td style="text-align:left">#if</td><td style="text-align:left">如果给定条件为真，则编译下面代码</td></tr><tr><td style="text-align:left">#else</td><td style="text-align:left">#if 的替代方案</td></tr><tr><td style="text-align:left">#elif</td><td style="text-align:left">如果前面的 #if 给定条件不为真，当前条件为真，则编译下面代码</td></tr><tr><td style="text-align:left">#endif</td><td style="text-align:left">结束一个 #if……#else 条件编译块</td></tr><tr><td style="text-align:left">#error</td><td style="text-align:left">当遇到标准错误时，输出错误消息</td></tr><tr><td style="text-align:left">#pragma</td><td style="text-align:left">使用标准化方法，向编译器发布特殊的命令到编译器中</td></tr></tbody></table><h2 id="预处理器实例"><a class="header-anchor" href="#预处理器实例">¶</a>预处理器实例</h2><p>分析下面的实例来理解不同的指令。</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX_ARRAY_LENGTH 20</span></span><br></pre></td></tr></table></figure><p>这个指令告诉 CPP 把所有的 MAX_ARRAY_LENGTH 替换为 20。使用 <em>#define</em> 定义常量来增强可读性。</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;myheader.h&quot;</span></span></span><br></pre></td></tr></table></figure><p>这些指令告诉 CPP 从<strong>系统库</strong>中获取 stdio.h，并添加文本到当前的源文件中。下一行告诉 CPP 从本地目录中获取 <strong>myheader.h</strong>，并添加内容到当前的源文件中。</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">undef</span>  FILE_SIZE</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE_SIZE 42</span></span><br></pre></td></tr></table></figure><p>这个指令告诉 CPP 取消已定义的 FILE_SIZE，并定义它为 42。</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> MESSAGE</span></span><br><span class="line">   <span class="meta">#<span class="meta-keyword">define</span> MESSAGE <span class="meta-string">&quot;You wish!&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure><p>这个指令告诉 CPP 只有当 MESSAGE 未定义时，才定义 MESSAGE。</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> DEBUG</span></span><br><span class="line">   <span class="comment">/* Your debugging statements here */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure><p>这个指令告诉 CPP 如果定义了 DEBUG，则执行处理语句。在编译时，如果您向 gcc 编译器传递了 <em>-DDEBUG</em> 开关量，这个指令就非常有用。它定义了 DEBUG，您可以在编译期间随时开启或关闭调试。</p><h2 id="预定义宏"><a class="header-anchor" href="#预定义宏">¶</a>预定义宏</h2><p>ANSI C 定义了许多宏。在编程中您可以使用这些宏，但是不能直接修改这些预定义的宏。</p><table><thead><tr><th style="text-align:left">宏</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left"><strong>DATE</strong></td><td style="text-align:left">当前日期，一个以 “MMM DD YYYY” 格式表示的字符常量。</td></tr><tr><td style="text-align:left"><strong>TIME</strong></td><td style="text-align:left">当前时间，一个以 “HH:MM:SS” 格式表示的字符常量。</td></tr><tr><td style="text-align:left"><strong>FILE</strong></td><td style="text-align:left">这会包含当前文件名，一个字符串常量。</td></tr><tr><td style="text-align:left"><strong>LINE</strong></td><td style="text-align:left">这会包含当前行号，一个十进制常量。</td></tr><tr><td style="text-align:left"><strong>STDC</strong></td><td style="text-align:left">当编译器以 ANSI 标准编译时，则定义为 1。</td></tr></tbody></table><p>让我们来尝试下面的实例：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line">main()</span><br><span class="line">&#123;</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;File :%s\n&quot;</span>, __FILE__ );</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;Date :%s\n&quot;</span>, __DATE__ );</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;Time :%s\n&quot;</span>, __TIME__ );</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;Line :%d\n&quot;</span>, __LINE__ );</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;ANSI :%d\n&quot;</span>, __STDC__ );</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码（在文件 <strong>test.c</strong> 中）被编译和执行时，它会产生下列结果：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">File :test.c</span><br><span class="line">Date :Jun <span class="number">2</span> <span class="number">2012</span></span><br><span class="line">Time :<span class="number">03</span>:<span class="number">36</span>:<span class="number">24</span></span><br><span class="line">Line :<span class="number">8</span></span><br><span class="line">ANSI :<span class="number">1</span></span><br></pre></td></tr></table></figure><h2 id="预处理器运算符"><a class="header-anchor" href="#预处理器运算符">¶</a>预处理器运算符</h2><p>C 预处理器提供了下列的运算符来帮助您创建宏：</p><h5 id="宏延续运算符（-）"><a class="header-anchor" href="#宏延续运算符（-）">¶</a>宏延续运算符（\）</h5><p>一个宏通常写在一个单行上。但是如果宏太长，一个单行容纳不下，则使用宏延续运算符（\）。例如：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span>  message_for(a, b)  \</span></span><br><span class="line">    <span class="built_in">printf</span>(#a <span class="string">&quot; and &quot;</span> #b <span class="string">&quot;: We love you!\n&quot;</span>)</span><br></pre></td></tr></table></figure><h5 id="字符串常量化运算符（-）"><a class="header-anchor" href="#字符串常量化运算符（-）">¶</a>字符串常量化运算符（#）</h5><p>在宏定义中，当需要把一个宏的参数转换为字符串常量时，则使用字符串常量化运算符（#）。在宏中使用的该运算符有一个特定的参数或参数列表。例如：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>  message_for(a, b)  \</span></span><br><span class="line">    <span class="built_in">printf</span>(#a <span class="string">&quot; and &quot;</span> #b <span class="string">&quot;: We love you!\n&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   message_for(Carole, Debra);</span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">Carole <span class="keyword">and</span> Debra: We love you!</span><br></pre></td></tr></table></figure><h5 id="标记粘贴运算符（-）"><a class="header-anchor" href="#标记粘贴运算符（-）">¶</a>标记粘贴运算符（##）</h5><p>宏定义内的标记粘贴运算符（##）会合并两个参数。它允许在宏定义中两个独立的标记被合并为一个标记。例如：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> tokenpaster(n) printf (<span class="meta-string">&quot;token&quot;</span> #n <span class="meta-string">&quot; = %d&quot;</span>, token##n)</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="keyword">int</span> token34 = <span class="number">40</span>;</span><br><span class="line">   </span><br><span class="line">   tokenpaster(<span class="number">34</span>);</span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">token34 = <span class="number">40</span></span><br></pre></td></tr></table></figure><p>这是怎么发生的，因为这个实例会从编译器产生下列的实际输出：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="built_in">printf</span> (<span class="string">&quot;token34 = %d&quot;</span>, token34);</span><br></pre></td></tr></table></figure><p>这个实例演示了 token##n 会连接到 token34 中，在这里，我们使用了<strong>字符串常量化运算符（#）<strong>和</strong>标记粘贴运算符（##）</strong>。</p><h5 id="defined-运算符"><a class="header-anchor" href="#defined-运算符">¶</a>defined() 运算符</h5><p>预处理器 <strong>defined</strong> 运算符是用在常量表达式中的，用来确定一个标识符是否已经使用 #define 定义过。如果指定的标识符已定义，则值为真（非零）。如果指定的标识符未定义，则值为假（零）。下面的实例演示了 defined() 运算符的用法：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> !defined (MESSAGE)</span></span><br><span class="line">   <span class="meta">#<span class="meta-keyword">define</span> MESSAGE <span class="meta-string">&quot;You wish!&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;Here is the message: %s\n&quot;</span>, MESSAGE);  </span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">Here is the message: You wish!</span><br></pre></td></tr></table></figure><h2 id="参数化的宏"><a class="header-anchor" href="#参数化的宏">¶</a>参数化的宏</h2><p>CPP 一个强大的功能是可以使用参数化的宏来模拟函数。例如，下面的代码是计算一个数的平方：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">square</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">   <span class="keyword">return</span> x * x;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们可以使用宏重写上面的代码，如下：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> square(x) ((x) * (x))</span></span><br></pre></td></tr></table></figure><p>在使用带有参数的宏之前，必须使用 <strong>#define</strong> 指令定义。参数列表是括在圆括号内，且必须紧跟在宏名称的后边。宏名称和左圆括号之间不允许有空格。例如：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX(x,y) ((x) &gt; (y) ? (x) : (y))</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;Max between 20 and 10 is %d\n&quot;</span>, MAX(<span class="number">10</span>, <span class="number">20</span>));  </span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">Max between <span class="number">20</span> <span class="keyword">and</span> <span class="number">10</span> is <span class="number">20</span></span><br></pre></td></tr></table></figure><h1>C 头文件</h1><p>头文件是扩展名为 <strong>.h</strong> 的文件，包含了 C 函数声明和宏定义，被多个源文件中引用共享。有两种类型的头文件：程序员编写的头文件和编译器自带的头文件。</p><p>在程序中要使用头文件，需要使用 C 预处理指令 <strong>#include</strong> 来引用它。前面我们已经看过 <strong>stdio.h</strong> 头文件，它是编译器自带的头文件。</p><p>引用头文件相当于复制头文件的内容，但是我们不会直接在源文件中复制头文件的内容，因为这么做很容易出错，特别在程序是由多个源文件组成的时候。</p><p>A simple practice in C 或 C++ 程序中，建议把所有的常量、宏、系统全局变量和函数原型写在头文件中，在需要的时候随时引用这些头文件。</p><h2 id="引用头文件的语法"><a class="header-anchor" href="#引用头文件的语法">¶</a>引用头文件的语法</h2><p>使用预处理指令 <strong>#include</strong> 可以引用用户和系统头文件。它的形式有以下两种：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;file&gt;</span></span></span><br></pre></td></tr></table></figure><p>这种形式用于引用系统头文件。它在系统目录的标准列表中搜索名为 file 的文件。在编译源代码时，您可以通过 -I 选项把目录前置在该列表前。</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;file&quot;</span></span></span><br></pre></td></tr></table></figure><p>这种形式用于引用用户头文件。它在包含当前文件的目录中搜索名为 file 的文件。在编译源代码时，您可以通过 -I 选项把目录前置在该列表前。</p><h2 id="引用头文件的操作"><a class="header-anchor" href="#引用头文件的操作">¶</a>引用头文件的操作</h2><p><strong>#include</strong> 指令会指示 C 预处理器浏览指定的文件作为输入。预处理器的输出包含了已经生成的输出，被引用文件生成的输出以及 <strong>#include</strong> 指令之后的文本输出。例如，如果您有一个头文件 header.h，如下：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">test</span> <span class="params">(<span class="keyword">void</span>)</span></span>;</span><br></pre></td></tr></table></figure><p>和一个使用了头文件的主程序 <em>program.c</em>，如下：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> x;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;header.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="built_in">puts</span> (test ());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编译器会看到如下的代码信息：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> x;</span><br><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">test</span> <span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="built_in">puts</span> (test ());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="只引用一次头文件"><a class="header-anchor" href="#只引用一次头文件">¶</a>只引用一次头文件</h2><p>如果一个头文件被引用两次，编译器会处理两次头文件的内容，这将产生错误。为了防止这种情况，标准的做法是把文件的整个内容放在条件编译语句中，如下：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> HEADER_FILE</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> HEADER_FILE</span></span><br><span class="line"></span><br><span class="line">the entire header file file</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure><p>这种结构就是通常所说的包装器 <strong>#ifndef</strong>。当再次引用头文件时，条件为假，因为 HEADER_FILE 已定义。此时，预处理器会跳过文件的整个内容，编译器会忽略它。</p><h2 id="有条件引用"><a class="header-anchor" href="#有条件引用">¶</a>有条件引用</h2><p>有时需要从多个不同的头文件中选择一个引用到程序中。例如，需要指定在不同的操作系统上使用的配置参数。您可以通过一系列条件来实现这点，如下：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">if</span> SYSTEM_1</span></span><br><span class="line">   <span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&quot;system_1.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">elif</span> SYSTEM_2</span></span><br><span class="line">   <span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&quot;system_2.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">elif</span> SYSTEM_3</span></span><br><span class="line">   ...</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure><p>但是如果头文件比较多的时候，这么做是很不妥当的，预处理器使用宏来定义头文件的名称。这就是所谓的<strong>有条件引用</strong>。它不是用头文件的名称作为 <strong>#include</strong> 的直接参数，您只需要使用宏名称代替即可：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SYSTEM_H <span class="meta-string">&quot;system_1.h&quot;</span></span></span><br><span class="line">...</span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> SYSTEM_H</span></span><br></pre></td></tr></table></figure><p>SYSTEM_H 会扩展，预处理器会查找 system_1.h，就像 <strong>#include</strong> 最初编写的那样。SYSTEM_H 可通过 -D 选项被您的 Makefile 定义。</p><h1>C 强制类型转换</h1><p>强制类型转换是把变量从一种类型转换为另一种数据类型。例如，如果您想存储一个 long 类型的值到一个简单的整型中，您需要把 long 类型强制转换为 int 类型。您可以使用<strong>强制类型转换运算符</strong>来把值显式地从一种类型转换为另一种类型，如下所示：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">(type_name) expression</span><br></pre></td></tr></table></figure><p>请看下面的实例，使用强制类型转换运算符把一个整数变量除以另一个整数变量，得到一个浮点数：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="keyword">int</span> sum = <span class="number">17</span>, count = <span class="number">5</span>;</span><br><span class="line">   <span class="keyword">double</span> mean;</span><br><span class="line"> </span><br><span class="line">   mean = (<span class="keyword">double</span>) sum / count;</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;Value of mean : %f\n&quot;</span>, mean );</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Value of mean : 3.400000</span><br></pre></td></tr></table></figure><p>这里要注意的是强制类型转换运算符的优先级大于除法，因此 <strong>sum</strong> 的值首先被转换为 <strong>double</strong> 型，然后除以 count，得到一个类型为 double 的值。</p><p>类型转换可以是隐式的，由编译器自动执行，也可以是显式的，通过使用<strong>强制类型转换运算符</strong>来指定。在编程时，有需要类型转换的时候都用上强制类型转换运算符，是一种良好的编程习惯。</p><h2 id="整数提升"><a class="header-anchor" href="#整数提升">¶</a>整数提升</h2><p>整数提升是指把小于 <strong>int</strong> 或 <strong>unsigned int</strong> 的整数类型转换为 <strong>int</strong> 或 <strong>unsigned int</strong> 的过程。请看下面的实例，在 int 中添加一个字符：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="keyword">int</span>  i = <span class="number">17</span>;</span><br><span class="line">   <span class="keyword">char</span> c = <span class="string">&#x27;c&#x27;</span>; <span class="comment">/* ascii 值是 99 */</span></span><br><span class="line">   <span class="keyword">int</span> sum;</span><br><span class="line"> </span><br><span class="line">   sum = i + c;</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;Value of sum : %d\n&quot;</span>, sum );</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Value of sum : 116</span><br></pre></td></tr></table></figure><p>在这里，sum 的值为 116，因为编译器进行了整数提升，在执行实际加法运算时，把 ‘c’ 的值转换为对应的 ascii 值。</p><h2 id="常用的算术转换"><a class="header-anchor" href="#常用的算术转换">¶</a>常用的算术转换</h2><p><strong>常用的算术转换</strong>是隐式地把值强制转换为相同的类型。编译器首先执行<strong>整数提升</strong>，如果操作数类型不同，则它们会被转换为下列层次中出现的最高层次的类型：</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200916210142.png" alt="Usual Arithmetic Conversion"></p><p>常用的算术转换不适用于赋值运算符、逻辑运算符 &amp;&amp; 和 ||。让我们看看下面的实例来理解这个概念：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="keyword">int</span>  i = <span class="number">17</span>;</span><br><span class="line">   <span class="keyword">char</span> c = <span class="string">&#x27;c&#x27;</span>; <span class="comment">/* ascii 值是 99 */</span></span><br><span class="line">   <span class="keyword">float</span> sum;</span><br><span class="line"> </span><br><span class="line">   sum = i + c;</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;Value of sum : %f\n&quot;</span>, sum );</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Value of sum : 116.000000</span><br></pre></td></tr></table></figure><blockquote><p>在这里，c 首先被转换为整数，但是由于最后的值是 float 型的，所以会应用常用的算术转换，编译器会把 i 和 c 转换为浮点型，并把它们相加得到一个浮点数。</p></blockquote><h1>C 错误处理</h1><p>C 语言不提供对错误处理的直接支持，但是作为一种系统编程语言，它以返回值的形式允许您访问底层数据。在发生错误时，大多数的 C 或 UNIX 函数调用返回 1 或 NULL，同时会设置一个错误代码 <strong>errno</strong>，该错误代码是全局变量，表示在函数调用期间发生了错误。您可以在 errno.h 头文件中找到各种各样的错误代码。</p><p>所以，C 程序员可以通过检查返回值，然后根据返回值决定采取哪种适当的动作。开发人员应该在程序初始化时，把 errno 设置为 0，这是一种良好的编程习惯。0 值表示程序中没有错误。</p><h2 id="errno、perror-和-strerror"><a class="header-anchor" href="#errno、perror-和-strerror">¶</a>errno、perror() 和 strerror()</h2><p>C 语言提供了 <strong>perror()</strong> 和 <strong>strerror()</strong> 函数来显示与 <strong>errno</strong> 相关的文本消息。</p><ul><li><strong>perror()</strong> 函数显示您传给它的字符串，后跟一个冒号、一个空格和当前 errno 值的文本表示形式。</li><li><strong>strerror()</strong> 函数，返回一个指针，指针指向当前 errno 值的文本表示形式。</li></ul><p>让我们来模拟一种错误情况，尝试打开一个不存在的文件。可以使用多种方式来输出错误消息，在这里我们使用函数来演示用法。另外有一点需要注意，应该使用 <strong>stderr</strong> 文件流来输出所有的错误。</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;errno.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">extern</span> <span class="keyword">int</span> errno ;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   FILE * pf;</span><br><span class="line">   <span class="keyword">int</span> errnum;</span><br><span class="line">   pf = fopen (<span class="string">&quot;unexist.txt&quot;</span>, <span class="string">&quot;rb&quot;</span>);</span><br><span class="line">   <span class="keyword">if</span> (pf == <span class="literal">NULL</span>)</span><br><span class="line">   &#123;</span><br><span class="line">      errnum = errno;</span><br><span class="line">      <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;错误号: %d\n&quot;</span>, errno);</span><br><span class="line">      perror(<span class="string">&quot;通过 perror 输出错误&quot;</span>);</span><br><span class="line">      <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;打开文件错误: %s\n&quot;</span>, strerror( errnum ));</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">else</span></span><br><span class="line">   &#123;</span><br><span class="line">      fclose (pf);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">错误号: <span class="number">2</span></span><br><span class="line">通过 perror 输出错误: No such file <span class="keyword">or</span> directory</span><br><span class="line">打开文件错误: No such file <span class="keyword">or</span> directory</span><br></pre></td></tr></table></figure><h2 id="被零除的错误"><a class="header-anchor" href="#被零除的错误">¶</a>被零除的错误</h2><p>在进行除法运算时，如果不检查除数是否为零，则会导致一个运行时错误。</p><p>为了避免这种情况发生，下面的代码在进行除法运算前会先检查除数是否为零：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line">main()</span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">int</span> dividend = <span class="number">20</span>;</span><br><span class="line">   <span class="keyword">int</span> divisor = <span class="number">0</span>;</span><br><span class="line">   <span class="keyword">int</span> quotient;</span><br><span class="line"> </span><br><span class="line">   <span class="keyword">if</span>( divisor == <span class="number">0</span>)&#123;</span><br><span class="line">      <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;除数为 0 退出运行...\n&quot;</span>);</span><br><span class="line">      <span class="built_in">exit</span>(<span class="number">-1</span>);</span><br><span class="line">   &#125;</span><br><span class="line">   quotient = dividend / divisor;</span><br><span class="line">   <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;quotient 变量的值为 : %d\n&quot;</span>, quotient );</span><br><span class="line"> </span><br><span class="line">   <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">除数为 0 退出运行...</span><br></pre></td></tr></table></figure><h2 id="程序退出状态"><a class="header-anchor" href="#程序退出状态">¶</a>程序退出状态</h2><p>通常情况下，程序成功执行完一个操作正常退出的时候会带有值 EXIT_SUCCESS。在这里，EXIT_SUCCESS 是宏，它被定义为 0。</p><p>如果程序中存在一种错误情况，当您退出程序时，会带有状态值 EXIT_FAILURE，被定义为 -1。所以，上面的程序可以写成：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line">main()</span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">int</span> dividend = <span class="number">20</span>;</span><br><span class="line">   <span class="keyword">int</span> divisor = <span class="number">5</span>;</span><br><span class="line">   <span class="keyword">int</span> quotient;</span><br><span class="line"> </span><br><span class="line">   <span class="keyword">if</span>( divisor == <span class="number">0</span>)&#123;</span><br><span class="line">      <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;除数为 0 退出运行...\n&quot;</span>);</span><br><span class="line">      <span class="built_in">exit</span>(EXIT_FAILURE);</span><br><span class="line">   &#125;</span><br><span class="line">   quotient = dividend / divisor;</span><br><span class="line">   <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;quotient 变量的值为: %d\n&quot;</span>, quotient );</span><br><span class="line"> </span><br><span class="line">   <span class="built_in">exit</span>(EXIT_SUCCESS);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">quotient 变量的值为 : <span class="number">4</span></span><br></pre></td></tr></table></figure><h1>C 递归</h1><p>递归指的是在函数的定义中使用函数自身的方法。</p><blockquote><p>举个例子：<br>从前有座山，山里有座庙，庙里有个老和尚，正在给小和尚讲故事呢！故事是什么呢？“从前有座山，山里有座庙，庙里有个老和尚，正在给小和尚讲故事呢！故事是什么呢？‘从前有座山，山里有座庙，庙里有个老和尚，正在给小和尚讲故事呢！故事是什么呢？……’”</p></blockquote><p>语法格式如下：</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">void recursion()</span><br><span class="line">&#123;</span><br><span class="line">   statements;</span><br><span class="line">   ... ... ...</span><br><span class="line">   recursion(); /<span class="emphasis">* 函数调用自身 *</span>/</span><br><span class="line">   ... ... ...</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">   recursion();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>流程图：</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200916210456.png" alt="img"></p><p>C 语言支持递归，即一个函数可以调用其自身。但在使用递归时，程序员需要注意定义一个从函数退出的条件，否则会进入死循环。</p><p>递归函数在解决许多数学问题上起了至关重要的作用，比如计算一个数的阶乘、生成斐波那契数列，等等。</p><h2 id="数的阶乘"><a class="header-anchor" href="#数的阶乘">¶</a>数的阶乘</h2><p>下面的实例使用递归函数计算一个给定的数的阶乘：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">factorial</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">int</span> i)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="keyword">if</span>(i &lt;= <span class="number">1</span>)</span><br><span class="line">   &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">return</span> i * factorial(i - <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span>  <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">15</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d 的阶乘为 %f\n&quot;</span>, i, factorial(i));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">15 的阶乘为 1307674368000.000000</span><br></pre></td></tr></table></figure><h2 id="斐波那契数列"><a class="header-anchor" href="#斐波那契数列">¶</a>斐波那契数列</h2><p>下面的实例使用递归函数生成一个给定的数的斐波那契数列：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">fibonaci</span><span class="params">(<span class="keyword">int</span> i)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="keyword">if</span>(i == <span class="number">0</span>)</span><br><span class="line">   &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">if</span>(i == <span class="number">1</span>)</span><br><span class="line">   &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">return</span> fibonaci(i<span class="number">-1</span>) + fibonaci(i<span class="number">-2</span>);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span>  <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">       <span class="built_in">printf</span>(<span class="string">&quot;%d\t\n&quot;</span>, fibonaci(i));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="number">0</span>    </span><br><span class="line"><span class="number">1</span>    </span><br><span class="line"><span class="number">1</span>    </span><br><span class="line"><span class="number">2</span>    </span><br><span class="line"><span class="number">3</span>    </span><br><span class="line"><span class="number">5</span>    </span><br><span class="line"><span class="number">8</span>    </span><br><span class="line"><span class="number">13</span>    </span><br><span class="line"><span class="number">21</span>    </span><br><span class="line"><span class="number">34</span></span><br></pre></td></tr></table></figure><h1>C 可变参数</h1><p>有时，可能会碰到这样的情况，希望函数带有可变数量的参数，而不是预定义数量的参数。C 语言为这种情况提供了一个解决方案，它允许定义一个函数，能根据具体的需求接受可变数量的参数。下面的实例演示了这种函数的定义。</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">func</span><span class="params">(<span class="keyword">int</span>, ... )</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   .</span><br><span class="line">   .</span><br><span class="line">   .</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   func(<span class="number">2</span>, <span class="number">2</span>, <span class="number">3</span>);</span><br><span class="line">   func(<span class="number">3</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>请注意，函数 <strong>func()</strong> 最后一个参数写成省略号，即三个点号（<strong>…</strong>），省略号之前的那个参数是 <strong>int</strong>，代表了要传递的可变参数的总数。为了使用这个功能，您需要使用 <strong>stdarg.h</strong> 头文件，该文件提供了实现可变参数功能的函数和宏。具体步骤如下：</p><ul><li>定义一个函数，最后一个参数为省略号，省略号前面可以设置自定义参数。</li><li>在函数定义中创建一个 <strong>va_list</strong> 类型变量，该类型是在 stdarg.h 头文件中定义的。</li><li>使用 <strong>int</strong> 参数和 <strong>va_start</strong> 宏来初始化 <strong>va_list</strong> 变量为一个参数列表。宏 va_start 是在 stdarg.h 头文件中定义的。</li><li>使用 <strong>va_arg</strong> 宏和 <strong>va_list</strong> 变量来访问参数列表中的每个项。</li><li>使用宏 <strong>va_end</strong> 来清理赋予 <strong>va_list</strong> 变量的内存。</li></ul><p>现在让我们按照上面的步骤，来编写一个带有可变数量参数的函数，并返回它们的平均值：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdarg.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">average</span><span class="params">(<span class="keyword">int</span> num,...)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"> </span><br><span class="line">    va_list valist;</span><br><span class="line">    <span class="keyword">double</span> sum = <span class="number">0.0</span>;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/* 为 num 个参数初始化 valist */</span></span><br><span class="line">    va_start(valist, num);</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/* 访问所有赋给 valist 的参数 */</span></span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; num; i++)</span><br><span class="line">    &#123;</span><br><span class="line">       sum += va_arg(valist, <span class="keyword">int</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/* 清理为 valist 保留的内存 */</span></span><br><span class="line">    va_end(valist);</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">return</span> sum/num;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;Average of 2, 3, 4, 5 = %f\n&quot;</span>, average(<span class="number">4</span>, <span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>));</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;Average of 5, 10, 15 = %f\n&quot;</span>, average(<span class="number">3</span>, <span class="number">5</span>,<span class="number">10</span>,<span class="number">15</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果。应该指出的是，函数 <strong>average()</strong> 被调用两次，每次第一个参数都是表示被传的可变参数的总数。省略号被用来传递可变数量的参数。</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">Average of <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span> = <span class="number">3.500000</span></span><br><span class="line">Average of <span class="number">5</span>, <span class="number">10</span>, <span class="number">15</span> = <span class="number">10.000000</span></span><br></pre></td></tr></table></figure><h1>C 内存管理</h1><p>C 语言为内存的分配和管理提供了几个函数。这些函数可以在 <strong>&lt;stdlib.h&gt;</strong> 头文件中找到。</p><table><thead><tr><th style="text-align:left">序号</th><th style="text-align:left">函数和描述</th></tr></thead><tbody><tr><td style="text-align:left">1</td><td style="text-align:left"><strong>void *calloc(int num, int size);</strong> 在内存中动态地分配 num 个长度为 size 的连续空间，并将每一个字节都初始化为 0。所以它的结果是分配了 num*size 个字节长度的内存空间，并且每个字节的值都是0。</td></tr><tr><td style="text-align:left">2</td><td style="text-align:left"><strong>void free(void *address);</strong> 该函数释放 address 所指向的内存块,释放的是动态分配的内存空间。</td></tr><tr><td style="text-align:left">3</td><td style="text-align:left"><strong>void *malloc(int num);</strong> 在堆区分配一块指定大小的内存空间，用来存放数据。这块内存空间在函数执行完成后不会被初始化，它们的值是未知的。</td></tr><tr><td style="text-align:left">4</td><td style="text-align:left"><strong>void *realloc(void *address, int newsize);</strong> 该函数重新分配内存，把内存扩展到 <strong>newsize</strong>。</td></tr></tbody></table><p>**注意：**void * 类型表示未确定类型的指针。C、C++ 规定 void * 类型可以通过类型转换强制转换为任何其它类型的指针。</p><h2 id="动态分配内存"><a class="header-anchor" href="#动态分配内存">¶</a>动态分配内存</h2><p>编程时，如果预先知道数组的大小，那么定义数组时就比较容易。例如，一个存储人名的数组，它最多容纳 100 个字符，所以您可以定义数组，如下所示：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">char</span> name[<span class="number">100</span>];</span><br></pre></td></tr></table></figure><p>但是，如果预先不知道需要存储的文本长度，例如想存储有关一个主题的详细描述。在这里，需要定义一个指针，该指针指向未定义所需内存大小的字符，后续再根据需求来分配内存，如下所示：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="keyword">char</span> name[<span class="number">100</span>];</span><br><span class="line">   <span class="keyword">char</span> *description;</span><br><span class="line"> </span><br><span class="line">   <span class="built_in">strcpy</span>(name, <span class="string">&quot;Zara Ali&quot;</span>);</span><br><span class="line"> </span><br><span class="line">   <span class="comment">/* 动态分配内存 */</span></span><br><span class="line">   description = (<span class="keyword">char</span> *)<span class="built_in">malloc</span>( <span class="number">200</span> * <span class="keyword">sizeof</span>(<span class="keyword">char</span>) );</span><br><span class="line">   <span class="keyword">if</span>( description == <span class="literal">NULL</span> )</span><br><span class="line">   &#123;</span><br><span class="line">      <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;Error - unable to allocate required memory\n&quot;</span>);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">else</span></span><br><span class="line">   &#123;</span><br><span class="line">      <span class="built_in">strcpy</span>( description, <span class="string">&quot;Zara ali a DPS student in class 10th&quot;</span>);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;Name = %s\n&quot;</span>, name );</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;Description: %s\n&quot;</span>, description );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">Name = Zara Ali</span><br><span class="line">Description: Zara ali a DPS student in class <span class="number">10</span>th</span><br></pre></td></tr></table></figure><p>上面的程序也可以使用 <strong>calloc()</strong> 来编写，只需要把 malloc 替换为 calloc 即可，如下所示：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="built_in">calloc</span>(<span class="number">200</span>, <span class="keyword">sizeof</span>(<span class="keyword">char</span>));</span><br></pre></td></tr></table></figure><p>当动态分配内存时，有完全控制权，可以传递任何大小的值。而那些预先定义了大小的数组，一旦定义则无法改变大小。</p><h2 id="重新调整内存的大小和释放内存"><a class="header-anchor" href="#重新调整内存的大小和释放内存">¶</a>重新调整内存的大小和释放内存</h2><p>当程序退出时，操作系统会自动释放所有分配给程序的内存，但是，建议您在不需要内存时，都应该调用函数 <strong>free()</strong> 来释放内存。</p><p>或者，可以通过调用函数 <strong>realloc()</strong> 来增加或减少已分配的内存块的大小。让我们使用 realloc() 和 free() 函数，再次查看上面的实例：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="keyword">char</span> name[<span class="number">100</span>];</span><br><span class="line">   <span class="keyword">char</span> *description;</span><br><span class="line"> </span><br><span class="line">   <span class="built_in">strcpy</span>(name, <span class="string">&quot;Zara Ali&quot;</span>);</span><br><span class="line"> </span><br><span class="line">   <span class="comment">/* 动态分配内存 */</span></span><br><span class="line">   description = (<span class="keyword">char</span> *)<span class="built_in">malloc</span>( <span class="number">30</span> * <span class="keyword">sizeof</span>(<span class="keyword">char</span>) );</span><br><span class="line">   <span class="keyword">if</span>( description == <span class="literal">NULL</span> )</span><br><span class="line">   &#123;</span><br><span class="line">      <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;Error - unable to allocate required memory\n&quot;</span>);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">else</span></span><br><span class="line">   &#123;</span><br><span class="line">      <span class="built_in">strcpy</span>( description, <span class="string">&quot;Zara ali a DPS student.&quot;</span>);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="comment">/* 假设您想要存储更大的描述信息 */</span></span><br><span class="line">   description = (<span class="keyword">char</span> *) <span class="built_in">realloc</span>( description, <span class="number">100</span> * <span class="keyword">sizeof</span>(<span class="keyword">char</span>) );</span><br><span class="line">   <span class="keyword">if</span>( description == <span class="literal">NULL</span> )</span><br><span class="line">   &#123;</span><br><span class="line">      <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;Error - unable to allocate required memory\n&quot;</span>);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">else</span></span><br><span class="line">   &#123;</span><br><span class="line">      <span class="built_in">strcat</span>( description, <span class="string">&quot;She is in class 10th&quot;</span>);</span><br><span class="line">   &#125;</span><br><span class="line">   </span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;Name = %s\n&quot;</span>, name );</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;Description: %s\n&quot;</span>, description );</span><br><span class="line"> </span><br><span class="line">   <span class="comment">/* 使用 free() 函数释放内存 */</span></span><br><span class="line">   <span class="built_in">free</span>(description);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">Name = Zara Ali</span><br><span class="line">Description: Zara ali a DPS student.She is in class <span class="number">10</span>th</span><br></pre></td></tr></table></figure><p>可以尝试一下不重新分配额外的内存，strcat() 函数会生成一个错误，因为存储 description 时可用的内存不足。</p><h1>C 命令行参数</h1><p>执行程序时，可以从命令行传值给 C 程序。这些值被称为<strong>命令行参数</strong>，它们对程序很重要，特别是当您想从外部控制程序，而不是在代码内对这些值进行硬编码时，就显得尤为重要了。</p><p>命令行参数是使用 main() 函数参数来处理的，其中，<strong>argc</strong> 是指传入参数的个数，<strong>argv[]</strong> 是一个指针数组，指向传递给程序的每个参数。下面是一个简单的实例，检查命令行是否有提供参数，并根据参数执行相应的动作：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">( <span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[] )</span>  </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="keyword">if</span>( argc == <span class="number">2</span> )</span><br><span class="line">   &#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;The argument supplied is %s\n&quot;</span>, argv[<span class="number">1</span>]);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">else</span> <span class="keyword">if</span>( argc &gt; <span class="number">2</span> )</span><br><span class="line">   &#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;Too many arguments supplied.\n&quot;</span>);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">else</span></span><br><span class="line">   &#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;One argument expected.\n&quot;</span>);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用一个参数，编译并执行上面的代码，它会产生下列结果：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">$./a.out testing</span><br><span class="line">The argument supplied is testing</span><br></pre></td></tr></table></figure><p>使用两个参数，编译并执行上面的代码，它会产生下列结果：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">$./a.out testing1 testing2</span><br><span class="line">Too many arguments supplied.</span><br></pre></td></tr></table></figure><p>不传任何参数，编译并执行上面的代码，它会产生下列结果：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">$./a.out</span><br><span class="line">One argument expected</span><br></pre></td></tr></table></figure><p>应当指出的是，<strong>argv[0]</strong> 存储程序的名称，<strong>argv[1]</strong> 是一个指向第一个命令行参数的指针，*argv[n] 是最后一个参数。如果没有提供任何参数，argc 将为 1，否则，如果传递了一个参数，<strong>argc</strong> 将被设置为 2。</p><p>多个命令行参数之间用空格分隔，但是如果参数本身带有空格，那么传递参数的时候应把参数放置在双引号 “” 或单引号 ‘’ 内部。让我们重新编写上面的实例，有一个空间，那么你可以通过这样的观点，把它们放在双引号或单引号&quot;&quot;&quot;&quot;。让我们重新编写上面的实例，向程序传递一个放置在双引号内部的命令行参数：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">( <span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[] )</span>  </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;Program name %s\n&quot;</span>, argv[<span class="number">0</span>]);</span><br><span class="line"> </span><br><span class="line">   <span class="keyword">if</span>( argc == <span class="number">2</span> )</span><br><span class="line">   &#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;The argument supplied is %s\n&quot;</span>, argv[<span class="number">1</span>]);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">else</span> <span class="keyword">if</span>( argc &gt; <span class="number">2</span> )</span><br><span class="line">   &#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;Too many arguments supplied.\n&quot;</span>);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">else</span></span><br><span class="line">   &#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;One argument expected.\n&quot;</span>);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用一个用空格分隔的简单参数，参数括在双引号中，编译并执行上面的代码，它会产生下列结果：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">$./a.out <span class="string">&quot;testing1 testing2&quot;</span></span><br><span class="line"></span><br><span class="line">Progranm name ./a.out</span><br><span class="line">The argument supplied is testing1 testing2</span><br></pre></td></tr></table></figure><h1>C 排序算法</h1><h3 id="冒泡排序"><a class="header-anchor" href="#冒泡排序">¶</a>冒泡排序</h3><p>冒泡排序（英语：Bubble Sort）是一种简单的排序算法。它重复地走访过要排序的数列，一次比较两个元素，如果他们的顺序（如从大到小、首字母从A到Z）错误就把他们交换过来。</p><p>过程演示:</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200916211627.gif" alt="img"></p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bubble_sort</span><span class="params">(<span class="keyword">int</span> arr[], <span class="keyword">int</span> len)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i, j, temp;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; len - <span class="number">1</span>; i++)</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; len - <span class="number">1</span> - i; j++)</span><br><span class="line">            <span class="keyword">if</span> (arr[j] &gt; arr[j + <span class="number">1</span>]) &#123;</span><br><span class="line">                temp = arr[j];</span><br><span class="line">                arr[j] = arr[j + <span class="number">1</span>];</span><br><span class="line">                arr[j + <span class="number">1</span>] = temp;</span><br><span class="line">            &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> arr[] = &#123; <span class="number">22</span>, <span class="number">34</span>, <span class="number">3</span>, <span class="number">32</span>, <span class="number">82</span>, <span class="number">55</span>, <span class="number">89</span>, <span class="number">50</span>, <span class="number">37</span>, <span class="number">5</span>, <span class="number">64</span>, <span class="number">35</span>, <span class="number">9</span>, <span class="number">70</span> &#125;;</span><br><span class="line">    <span class="keyword">int</span> len = (<span class="keyword">int</span>) <span class="keyword">sizeof</span>(arr) / <span class="keyword">sizeof</span>(*arr);</span><br><span class="line">    bubble_sort(arr, len);</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, arr[i]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="选择排序"><a class="header-anchor" href="#选择排序">¶</a>选择排序</h3><p>选择排序（Selection sort）是一种简单直观的排序算法。它的工作原理如下。首先在未排序序列中找到最小（大）元素，存放到排序序列的起始位置，然后，再从剩余未排序元素中继续寻找最小（大）元素，然后放到已排序序列的末尾。以此类推，直到所有元素均排序完毕。</p><p>过程演示：</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200916211934.gif" alt="img"></p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200916211942.gif" alt="img"></p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">swap</span><span class="params">(<span class="keyword">int</span> *a,<span class="keyword">int</span> *b)</span> <span class="comment">//交換兩個變數</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> temp = *a;</span><br><span class="line">    *a = *b;</span><br><span class="line">    *b = temp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">selection_sort</span><span class="params">(<span class="keyword">int</span> arr[], <span class="keyword">int</span> len)</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i,j;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span> ; i &lt; len - <span class="number">1</span> ; i++) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> min = i;</span><br><span class="line">        <span class="keyword">for</span> (j = i + <span class="number">1</span>; j &lt; len; j++)     <span class="comment">//走訪未排序的元素</span></span><br><span class="line">            <span class="keyword">if</span> (arr[j] &lt; arr[min])    <span class="comment">//找到目前最小值</span></span><br><span class="line">                min = j;    <span class="comment">//紀錄最小值</span></span><br><span class="line">           swap(&amp;arr[min], &amp;arr[i]);    <span class="comment">//做交換</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="插入排序"><a class="header-anchor" href="#插入排序">¶</a>插入排序</h3><p>插入排序（英语：Insertion Sort）是一种简单直观的排序算法。它的工作原理是通过构建有序序列，对于未排序数据，在已排序序列中从后向前扫描，找到相应位置并插入。插入排序在实现上，通常采用in-place排序（即只需用到 {\displaystyle O(1)} {\displaystyle O(1)}的额外空间的排序），因而在从后向前扫描过程中，需要反复把已排序元素逐步向后</p><p>挪位，为最新元素提供插入空间。</p><p>过程演示：</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200916212129.gif" alt="img"></p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">insertion_sort</span><span class="params">(<span class="keyword">int</span> arr[], <span class="keyword">int</span> len)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i,j,temp;</span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">1</span>;i&lt;len;i++)&#123;</span><br><span class="line">            temp = arr[i];</span><br><span class="line">            <span class="keyword">for</span> (j=i;j&gt;<span class="number">0</span> &amp;&amp; arr[j<span class="number">-1</span>]&gt;temp;j--)</span><br><span class="line">                    arr[j] = arr[j<span class="number">-1</span>];</span><br><span class="line">            arr[j] = temp;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="希尔排序"><a class="header-anchor" href="#希尔排序">¶</a>希尔排序</h3><p>希尔排序，也称递减增量排序算法，是插入排序的一种更高效的改进版本。希尔排序是非稳定排序算法。</p><p>希尔排序是基于插入排序的以下两点性质而提出改进方法的：</p><ul><li>插入排序在对几乎已经排好序的数据操作时，效率高，即可以达到线性排序的效率</li><li>但插入排序一般来说是低效的，因为插入排序每次只能将数据移动一位</li></ul><p>过程演示：</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200916212044.gif" alt="img"></p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">shell_sort</span><span class="params">(<span class="keyword">int</span> arr[], <span class="keyword">int</span> len)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> gap, i, j;</span><br><span class="line">    <span class="keyword">int</span> temp;</span><br><span class="line">    <span class="keyword">for</span> (gap = len &gt;&gt; <span class="number">1</span>; gap &gt; <span class="number">0</span>; gap = gap &gt;&gt; <span class="number">1</span>)</span><br><span class="line">        <span class="keyword">for</span> (i = gap; i &lt; len; i++) &#123;</span><br><span class="line">            temp = arr[i];</span><br><span class="line">            <span class="keyword">for</span> (j = i - gap; j &gt;= <span class="number">0</span> &amp;&amp; arr[j] &gt; temp; j -= gap)</span><br><span class="line">                arr[j + gap] = arr[j];</span><br><span class="line">            arr[j + gap] = temp;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="归并排序"><a class="header-anchor" href="#归并排序">¶</a>归并排序</h3><p>把数据分为两段，从两段中逐个选最小的元素移入新数据段的末尾。</p><p>可从上到下或从下到上进行。</p><p>过程演示：</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200916212112.gif" alt="img"></p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200916212119.gif" alt="img"></p><h4 id="迭代法"><a class="header-anchor" href="#迭代法">¶</a>迭代法</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">min</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x &lt; y ? x : y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">merge_sort</span><span class="params">(<span class="keyword">int</span> arr[], <span class="keyword">int</span> len)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span>* a = arr;</span><br><span class="line">    <span class="keyword">int</span>* b = (<span class="keyword">int</span>*) <span class="built_in">malloc</span>(len * <span class="keyword">sizeof</span>(<span class="keyword">int</span>));</span><br><span class="line">    <span class="keyword">int</span> seg, start;</span><br><span class="line">    <span class="keyword">for</span> (seg = <span class="number">1</span>; seg &lt; len; seg += seg) &#123;</span><br><span class="line">        <span class="keyword">for</span> (start = <span class="number">0</span>; start &lt; len; start += seg + seg) &#123;</span><br><span class="line">            <span class="keyword">int</span> low = start, mid = min(start + seg, len), high = min(start + seg + seg, len);</span><br><span class="line">            <span class="keyword">int</span> k = low;</span><br><span class="line">            <span class="keyword">int</span> start1 = low, end1 = mid;</span><br><span class="line">            <span class="keyword">int</span> start2 = mid, end2 = high;</span><br><span class="line">            <span class="keyword">while</span> (start1 &lt; end1 &amp;&amp; start2 &lt; end2)</span><br><span class="line">                b[k++] = a[start1] &lt; a[start2] ? a[start1++] : a[start2++];</span><br><span class="line">            <span class="keyword">while</span> (start1 &lt; end1)</span><br><span class="line">                b[k++] = a[start1++];</span><br><span class="line">            <span class="keyword">while</span> (start2 &lt; end2)</span><br><span class="line">                b[k++] = a[start2++];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span>* temp = a;</span><br><span class="line">        a = b;</span><br><span class="line">        b = temp;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (a != arr) &#123;</span><br><span class="line">        <span class="keyword">int</span> i;</span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">            b[i] = a[i];</span><br><span class="line">        b = a;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">free</span>(b);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="递归法"><a class="header-anchor" href="#递归法">¶</a>递归法</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">merge_sort_recursive</span><span class="params">(<span class="keyword">int</span> arr[], <span class="keyword">int</span> reg[], <span class="keyword">int</span> start, <span class="keyword">int</span> end)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (start &gt;= end)</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">int</span> len = end - start, mid = (len &gt;&gt; <span class="number">1</span>) + start;</span><br><span class="line">    <span class="keyword">int</span> start1 = start, end1 = mid;</span><br><span class="line">    <span class="keyword">int</span> start2 = mid + <span class="number">1</span>, end2 = end;</span><br><span class="line">    merge_sort_recursive(arr, reg, start1, end1);</span><br><span class="line">    merge_sort_recursive(arr, reg, start2, end2);</span><br><span class="line">    <span class="keyword">int</span> k = start;</span><br><span class="line">    <span class="keyword">while</span> (start1 &lt;= end1 &amp;&amp; start2 &lt;= end2)</span><br><span class="line">        reg[k++] = arr[start1] &lt; arr[start2] ? arr[start1++] : arr[start2++];</span><br><span class="line">    <span class="keyword">while</span> (start1 &lt;= end1)</span><br><span class="line">        reg[k++] = arr[start1++];</span><br><span class="line">    <span class="keyword">while</span> (start2 &lt;= end2)</span><br><span class="line">        reg[k++] = arr[start2++];</span><br><span class="line">    <span class="keyword">for</span> (k = start; k &lt;= end; k++)</span><br><span class="line">        arr[k] = reg[k];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">merge_sort</span><span class="params">(<span class="keyword">int</span> arr[], <span class="keyword">const</span> <span class="keyword">int</span> len)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> reg[len];</span><br><span class="line">    merge_sort_recursive(arr, reg, <span class="number">0</span>, len - <span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="快速排序"><a class="header-anchor" href="#快速排序">¶</a>快速排序</h3><p>在区间中随机挑选一个元素作基准，将小于基准的元素放在基准之前，大于基准的元素放在基准之后，再分别对小数区与大数区进行排序。</p><p>过程演示：</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200916213114.gif" alt="img"></p><h4 id="迭代法-v2"><a class="header-anchor" href="#迭代法-v2">¶</a>迭代法</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> _<span class="title">Range</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> start, end;</span><br><span class="line">&#125; Range;</span><br><span class="line"><span class="function">Range <span class="title">new_Range</span><span class="params">(<span class="keyword">int</span> s, <span class="keyword">int</span> e)</span> </span>&#123;</span><br><span class="line">    Range r;</span><br><span class="line">    r.start = s;</span><br><span class="line">    r.end = e;</span><br><span class="line">    <span class="keyword">return</span> r;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">swap</span><span class="params">(<span class="keyword">int</span> *x, <span class="keyword">int</span> *y)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t = *x;</span><br><span class="line">    *x = *y;</span><br><span class="line">    *y = t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">quick_sort</span><span class="params">(<span class="keyword">int</span> arr[], <span class="keyword">const</span> <span class="keyword">int</span> len)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (len &lt;= <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span>; <span class="comment">// 避免len等於負值時引發段錯誤（Segment Fault）</span></span><br><span class="line">    <span class="comment">// r[]模擬列表,p為數量,r[p++]為push,r[--p]為pop且取得元素</span></span><br><span class="line">    Range r[len];</span><br><span class="line">    <span class="keyword">int</span> p = <span class="number">0</span>;</span><br><span class="line">    r[p++] = new_Range(<span class="number">0</span>, len - <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">while</span> (p) &#123;</span><br><span class="line">        Range range = r[--p];</span><br><span class="line">        <span class="keyword">if</span> (range.start &gt;= range.end)</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">int</span> mid = arr[(range.start + range.end) / <span class="number">2</span>]; <span class="comment">// 選取中間點為基準點</span></span><br><span class="line">        <span class="keyword">int</span> left = range.start, right = range.end;</span><br><span class="line">        <span class="keyword">do</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">while</span> (arr[left] &lt; mid) ++left;   <span class="comment">// 檢測基準點左側是否符合要求</span></span><br><span class="line">            <span class="keyword">while</span> (arr[right] &gt; mid) --right; <span class="comment">//檢測基準點右側是否符合要求</span></span><br><span class="line"> </span><br><span class="line">            <span class="keyword">if</span> (left &lt;= right)</span><br><span class="line">            &#123;</span><br><span class="line">                swap(&amp;arr[left],&amp;arr[right]);</span><br><span class="line">                left++;right--;               <span class="comment">// 移動指針以繼續</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">while</span> (left &lt;= right);</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">if</span> (range.start &lt; right) r[p++] = new_Range(range.start, right);</span><br><span class="line">        <span class="keyword">if</span> (range.end &gt; left) r[p++] = new_Range(left, range.end);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="递归法-v2"><a class="header-anchor" href="#递归法-v2">¶</a>递归法</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">swap</span><span class="params">(<span class="keyword">int</span> *x, <span class="keyword">int</span> *y)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t = *x;</span><br><span class="line">    *x = *y;</span><br><span class="line">    *y = t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">quick_sort_recursive</span><span class="params">(<span class="keyword">int</span> arr[], <span class="keyword">int</span> start, <span class="keyword">int</span> end)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (start &gt;= end)</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">int</span> mid = arr[end];</span><br><span class="line">    <span class="keyword">int</span> left = start, right = end - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (left &lt; right) &#123;</span><br><span class="line">        <span class="keyword">while</span> (arr[left] &lt; mid &amp;&amp; left &lt; right)</span><br><span class="line">            left++;</span><br><span class="line">        <span class="keyword">while</span> (arr[right] &gt;= mid &amp;&amp; left &lt; right)</span><br><span class="line">            right--;</span><br><span class="line">        swap(&amp;arr[left], &amp;arr[right]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (arr[left] &gt;= arr[end])</span><br><span class="line">        swap(&amp;arr[left], &amp;arr[end]);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        left++;</span><br><span class="line">    <span class="keyword">if</span> (left)</span><br><span class="line">        quick_sort_recursive(arr, start, left - <span class="number">1</span>);</span><br><span class="line">    quick_sort_recursive(arr, left + <span class="number">1</span>, end);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">quick_sort</span><span class="params">(<span class="keyword">int</span> arr[], <span class="keyword">int</span> len)</span> </span>&#123;</span><br><span class="line">    quick_sort_recursive(arr, <span class="number">0</span>, len - <span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; class=&quot;aplayer-secondary-script-marker&quot;&gt;&lt;/script&gt;&lt;h1&gt;引言&lt;/h1&gt;
&lt;p&gt;基于VS2019版，编写练习代码，基础中的基础。通过菜鸟教程上的知识学习。&lt;/p&gt;
&lt;h1&gt;C语言基本&lt;/h1&gt;
&lt;h2 id=&quot;基本语法&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#基本语法&quot;&gt;¶&lt;/a&gt;基本语法&lt;/h2&gt;
&lt;h3 id=&quot;标识符&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#标识符&quot;&gt;¶&lt;/a&gt;标识符&lt;/h3&gt;
&lt;p&gt;C 标识符是用来标识变量、函数，或任何其他用户自定义项目的名称。一个标识符以字母 A-Z 或 a-z 或下划线 _ 开始，后跟零个或多个字母、下划线和数字（0-9）。&lt;/p&gt;
&lt;p&gt;C 标识符内不允许出现标点字符，比如 @、$ 和 %。C 是&lt;strong&gt;区分大小写&lt;/strong&gt;的编程语言。因此，在 C 中，&lt;em&gt;Manpower&lt;/em&gt; 和 &lt;em&gt;manpower&lt;/em&gt; 是两个不同的标识符。下面列出几个有效的标识符：&lt;/p&gt;
&lt;figure class=&quot;highlight markdown&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mohd       zara    abc   move&lt;span class=&quot;emphasis&quot;&gt;_name  a_&lt;/span&gt;123&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;myname50   &lt;span class=&quot;emphasis&quot;&gt;_temp   j     a23b9      retVal&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;关键字&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#关键字&quot;&gt;¶&lt;/a&gt;关键字&lt;/h3&gt;</summary>
    
    
    
    <category term="C" scheme="http://stardust14.com/categories/C/"/>
    
    
    <category term="C" scheme="http://stardust14.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>MATLAB语言</title>
    <link href="http://stardust14.com/2020/08/13/MATLAB%E8%AF%AD%E8%A8%80/"/>
    <id>http://stardust14.com/2020/08/13/MATLAB%E8%AF%AD%E8%A8%80/</id>
    <published>2020-08-13T08:31:45.000Z</published>
    <updated>2020-08-30T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1>引言</h1><p>MATLAB语言的主要功能：</p><ul><li>数值计算</li><li>符号计算</li><li>图形绘制</li><li>程序流程控制</li><li>工具箱</li></ul><p>MATLAB的优势:</p><ul><li>不需要过多了解各种数值计算方法的具体细节和计算公式，<br>也不需要繁琐的底层编程。</li><li>可以专注于实际问题的分析和设计，大大地提高:工作效率和<br>质量，为科学研究与工程应用提供重要手段。</li></ul><h1>MATLAB基础知识</h1><h2 id="数值类型"><a class="header-anchor" href="#数值类型">¶</a>数值类型</h2><p>数值数据类型的分类</p><ul><li>整型</li><li>浮点型</li><li>复数型</li></ul><h3 id="整型"><a class="header-anchor" href="#整型">¶</a>整型</h3><ul><li><p>无符号整数:无符号8位整数、无符号16位整数、无符号32位整数、无符号64位整数。</p></li><li><p>带符号整数:带符号8位整数、带符号16位整数、带符号32位整数、带符号64位整数。</p></li><li><p>无符号8位整数数据范围: 000000001111111 (0~2^8-1) 。</p></li><li><p>带符号8位整数数据范围: 10000000-111111 ( -2<sup>7~2</sup>7-1)。</p></li></ul><blockquote><p>最前面符号位0表示正数，1表示负数</p><p>无符号整数最大为255，带符号为最大为127，最小为-128</p></blockquote><p>MATLAB提供了数据类型转换函数来实现数据类型的转换,例如，uint8函数将数值数据转换为无符号8位整数，int8函数将数值数据转换为带符号8位整数。</p><h3 id="浮点型"><a class="header-anchor" href="#浮点型">¶</a>浮点型</h3><p>浮点型数据分为单精度型和双精度类型，单精度型实数在内存中占用4个字节，而双精度型实数在内存中占用8个字节，所以双精度型的数据精度更高。</p><ul><li>single函数: 将其他类型的数据转换为单精度型。</li><li>double函数: 将其他类型的数据转换为双精度型。</li></ul><blockquote><p>默认使用双精度型</p></blockquote><h3 id="复型"><a class="header-anchor" href="#复型">¶</a>复型</h3><p>复型数据包括实部和虚部两个部分，实部和虚部默认为双精度型，虚数单位用i或i来表示。</p><h3 id="数值数据的输出格式"><a class="header-anchor" href="#数值数据的输出格式">¶</a>数值数据的输出格式</h3><p>format命令的格式: format 格式符</p><blockquote><p>format命令只影响数据输出格式，而不影响数据的计算和存储。</p></blockquote><h3 id="常用数学函数"><a class="header-anchor" href="#常用数学函数">¶</a>常用数学函数</h3><h4 id="函数的调用格式为"><a class="header-anchor" href="#函数的调用格式为">¶</a>函数的调用格式为:</h4><p><strong>函数名(函数自变量的值)</strong><br>函数的自变量规定为矩阵变量，当然也可以是标量，标量本身是矩阵的一种特例。<br>函数在运算时是将函数逐项作用于矩阵的每个元素上，所以最后运算的结果就是一个与自变量同型的矩阵。</p><p>example：</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; A = [<span class="number">4</span>,<span class="number">2</span>;<span class="number">3</span>,<span class="number">6</span>]</span><br><span class="line"></span><br><span class="line">A =</span><br><span class="line"></span><br><span class="line">     <span class="number">4</span>     <span class="number">2</span></span><br><span class="line">     <span class="number">3</span>     <span class="number">6</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; B = <span class="built_in">exp</span>(A)</span><br><span class="line"></span><br><span class="line">B =</span><br><span class="line"></span><br><span class="line">   <span class="number">54.5982</span>    <span class="number">7.3891</span></span><br><span class="line">   <span class="number">20.0855</span>  <span class="number">403.4288</span></span><br></pre></td></tr></table></figure><blockquote><p>调用exp函数（自然指数）</p></blockquote><h4 id="常用函数的应用"><a class="header-anchor" href="#常用函数的应用">¶</a>常用函数的应用</h4><p>①三角函数有以弧度为单位的函数和以角度为单位的函数,如果是以角度为单位的函数就在函数名后面加“d”，以示区别。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; <span class="built_in">sin</span>(<span class="built_in">pi</span>/<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">     <span class="number">1</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; <span class="built_in">sind</span>(<span class="number">90</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">     <span class="number">1</span></span><br></pre></td></tr></table></figure><p>②abs函数可以求实数的绝对值、复数的模、字符串的ASCII码值。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; <span class="built_in">abs</span>(<span class="number">-4</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">     <span class="number">4</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; <span class="built_in">abs</span>(<span class="number">3</span>+<span class="number">4</span><span class="built_in">i</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">     <span class="number">5</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; <span class="built_in">abs</span>(<span class="string">&#x27;a&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">    <span class="number">97</span></span><br></pre></td></tr></table></figure><p>③用于取整的函数有fix、floor、 ceil、 round。</p><ul><li>round函数按照四舍五入的规则取整。</li><li>ceil函数是向.上取整，取大于等于这个数的第一 个整数。</li><li>floor函数是向下取整，取小于等于这个数的第一个整数。</li><li>fix函数是固定取靠近0的那个整数,即舍去小数取整。</li></ul><blockquote><p>ceil=roundup,floor=rounddown</p><p>floor和fix区别在于负数</p></blockquote><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; <span class="built_in">round</span>(<span class="number">4.7</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">     <span class="number">5</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; <span class="built_in">ceil</span>(<span class="number">-3.8</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">    <span class="number">-3</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; <span class="built_in">fix</span>(<span class="number">-3.2</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">    <span class="number">-3</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; <span class="built_in">floor</span>(<span class="number">3.6</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">     <span class="number">3</span></span><br></pre></td></tr></table></figure><p>④函数应用举例。</p><ul><li><p>分别求一个三位正整数的个位数字、十位数字和百位数字。</p><p>​一个三位正整数除以10的余数就是该数的个位数字。<br>一个三位正整数除以10取整后就去掉了这个数的个位数字，将新得  到的数再除以10取余数，余数就是新得到的数的个位数字，也就是原数的十位数字。<br>​    一个三位正整数除以100取整后就去掉了这个数的个位数字和十位  数字，得到百位数字。</p></li></ul><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; m=<span class="number">468</span>;</span><br><span class="line"></span><br><span class="line">&gt;&gt; m1=<span class="built_in">rem</span>(m,<span class="number">10</span>)</span><br><span class="line"></span><br><span class="line">m1 =</span><br><span class="line"></span><br><span class="line">     <span class="number">8</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; m2=<span class="built_in">rem</span>(<span class="built_in">fix</span>(m/<span class="number">10</span>),<span class="number">10</span>)</span><br><span class="line"></span><br><span class="line">m2 =</span><br><span class="line"></span><br><span class="line">     <span class="number">6</span></span><br><span class="line">&gt;&gt; m3=<span class="built_in">fix</span>(m/<span class="number">100</span>)</span><br><span class="line"></span><br><span class="line">m3 =</span><br><span class="line"></span><br><span class="line">     <span class="number">4</span></span><br></pre></td></tr></table></figure><blockquote><p>rem函数和mod函数分别是取余和取模函数</p></blockquote><ul><li>求[1,100]区间的所有素数。</li></ul><p>​            MATLAB提供了一个判断n是否素数的函数isprime(n),当n是素数时返回1，否则返回0。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; x=<span class="number">1</span>:<span class="number">100</span>;</span><br><span class="line">&gt;&gt; k = <span class="built_in">isprime</span>(x);</span><br><span class="line">&gt;&gt; k1 = <span class="built_in">find</span>(k);</span><br><span class="line">&gt;&gt; p = x(k1)</span><br><span class="line"></span><br><span class="line">p =</span><br><span class="line"></span><br><span class="line">  <span class="number">1</span> 至 <span class="number">10</span> 列</span><br><span class="line"></span><br><span class="line">     <span class="number">2</span>     <span class="number">3</span>     <span class="number">5</span>     <span class="number">7</span>    <span class="number">11</span>    <span class="number">13</span>    <span class="number">17</span>    <span class="number">19</span>    <span class="number">23</span>    <span class="number">29</span></span><br><span class="line"></span><br><span class="line">  <span class="number">11</span> 至 <span class="number">20</span> 列</span><br><span class="line"></span><br><span class="line">    <span class="number">31</span>    <span class="number">37</span>    <span class="number">41</span>    <span class="number">43</span>    <span class="number">47</span>    <span class="number">53</span>    <span class="number">59</span>    <span class="number">61</span>    <span class="number">67</span>    <span class="number">71</span></span><br><span class="line"></span><br><span class="line">  <span class="number">21</span> 至 <span class="number">25</span> 列</span><br><span class="line"></span><br><span class="line">    <span class="number">73</span>    <span class="number">79</span>    <span class="number">83</span>    <span class="number">89</span>    <span class="number">97</span></span><br></pre></td></tr></table></figure><blockquote><p>调用isprime函数，查找元素是否为素数，是为1，否为0（逻辑0，1）</p><p>find函数：查询非零元素的位置和值</p></blockquote><h2 id="变量及其操作"><a class="header-anchor" href="#变量及其操作">¶</a>变量及其操作</h2><h3 id="变量与赋值语句"><a class="header-anchor" href="#变量与赋值语句">¶</a>变量与赋值语句</h3><ul><li>变量本质上讲是内存单元的一个抽象。</li><li>在MATLAB中，变量名是以字母开头，后接字母、数字或下画线的字符序列,最多63个字符。</li></ul><p><strong>注意</strong>：</p><ul><li>变量名区分字母的大小写。</li><li>标准函数名以及命令名必须用小写字母。</li></ul><p><strong>赋值语句两种格式:</strong></p><ul><li>变量=表达式</li><li>表达式</li></ul><p><strong>example</strong>计算表达式</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mn>5</mn><mi mathvariant="normal">十</mi><mi>c</mi><mi>o</mi><mi>s</mi><mn>47</mn><mi mathvariant="normal">°</mi><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mo stretchy="false">(</mo><mn>1</mn><mo>+</mo><mi mathvariant="normal">∣</mi><mi>x</mi><mo>−</mo><mi>y</mi><mi mathvariant="normal">∣</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(5十cos47°)/(1+|x-y|)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">5</span><span class="mord cjk_fallback">十</span><span class="mord mathdefault">c</span><span class="mord mathdefault">o</span><span class="mord mathdefault">s</span><span class="mord">4</span><span class="mord">7</span><span class="mord">°</span><span class="mclose">)</span><span class="mord">/</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mord">∣</span><span class="mclose">)</span></span></span></span></span></p><p>的值，并将结果赋给变量z，然后显示计算结果。其中，</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mo>=</mo><msqrt><mn>7</mn></msqrt><mo>−</mo><mn>2</mn><mi>i</mi></mrow><annotation encoding="application/x-tex">x=\sqrt{7}-2i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.04em;vertical-align:-0.08390500000000001em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.956095em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord">7</span></span></span><span style="top:-2.916095em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.08390500000000001em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord mathdefault">i</span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>y</mi><mo>=</mo><msup><mi>e</mi><mo stretchy="false">(</mo></msup><mi>π</mi><mi mathvariant="normal">/</mi><mn>2</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">y=e^(\pi/2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.188em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mopen mtight">(</span></span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.03588em;">π</span><span class="mord">/</span><span class="mord">2</span><span class="mclose">)</span></span></span></span></span></p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; x=<span class="built_in">sqrt</span>(<span class="number">7</span>)<span class="number">-2</span><span class="built_in">i</span>;</span><br><span class="line">&gt;&gt; y=<span class="built_in">exp</span>(<span class="built_in">pi</span>/<span class="number">2</span>);</span><br><span class="line">&gt;&gt; z=(<span class="number">5</span>+<span class="built_in">cosd</span>(<span class="number">47</span>))/(<span class="number">1</span>+<span class="built_in">abs</span>(x-y))</span><br><span class="line"></span><br><span class="line">z =</span><br><span class="line"></span><br><span class="line">    <span class="number">1.4395</span></span><br></pre></td></tr></table></figure><h3 id="预定义变量"><a class="header-anchor" href="#预定义变量">¶</a>预定义变量</h3><p>预定义变量是由系统本身定义的变量。</p><ul><li>ans是默认赋值变量</li><li>i和j代表虚数单位</li><li>pi代表圆周率</li><li>NaN代表非数</li></ul><h3 id="变量的管理"><a class="header-anchor" href="#变量的管理">¶</a>变量的管理</h3><h4 id="内存变量的删除与修改"><a class="header-anchor" href="#内存变量的删除与修改">¶</a>内存变量的删除与修改</h4><p>who命令与whos命令</p><p>1.who：who给出的列表只能按变量名的字母顺序排列。</p><p>2.whos：whos给出的列表可以按变量名的字母顺序排列，也可以按尺寸、所占字节数等顺序排列。</p><h4 id="内存变量文件"><a class="header-anchor" href="#内存变量文件">¶</a>内存变量文件</h4><p>用于保存MATLAB工作区变量的文件叫做内存变量文件，其扩展名为.mat，也叫MAT文件。</p><ul><li>save命令:创建内存变量文件。</li><li>load命令:装入内存变量文件。</li></ul><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; save mydata a X</span><br><span class="line">&gt;&gt; load mydata</span><br></pre></td></tr></table></figure><h2 id="矩阵的表示"><a class="header-anchor" href="#矩阵的表示">¶</a>矩阵的表示</h2><h3 id="矩阵的建立"><a class="header-anchor" href="#矩阵的建立">¶</a>矩阵的建立</h3><p>(1)利用直接输入法建立矩阵:将矩阵的元素用<font color=red>中括号</font>括起来，按矩阵行的顺序输入各元素，同- -行的各元素之间用<font color=red>逗号或空格</font>分隔，不同行的元素之间用<font color=red>分号</font>分隔。</p><p>(2)利用已建好的矩阵建立更大的矩阵:一个大矩阵可以由已经建立好的小矩阵拼接而成。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; A = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>;<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>;<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>];</span><br><span class="line">&gt;&gt; B = [<span class="number">-1</span>,<span class="number">-2</span>,<span class="number">-3</span>;<span class="number">-4</span>,<span class="number">-5</span>,<span class="number">-6</span>;<span class="number">-7</span>,<span class="number">-8</span>,<span class="number">-9</span>];</span><br><span class="line">&gt;&gt; C = [A,B;B,A]</span><br><span class="line"></span><br><span class="line">C =</span><br><span class="line"></span><br><span class="line">     <span class="number">1</span>     <span class="number">2</span>     <span class="number">3</span>    <span class="number">-1</span>    <span class="number">-2</span>    <span class="number">-3</span></span><br><span class="line">     <span class="number">4</span>     <span class="number">5</span>     <span class="number">6</span>    <span class="number">-4</span>    <span class="number">-5</span>    <span class="number">-6</span></span><br><span class="line">     <span class="number">7</span>     <span class="number">8</span>     <span class="number">9</span>    <span class="number">-7</span>    <span class="number">-8</span>    <span class="number">-9</span></span><br><span class="line">    <span class="number">-1</span>    <span class="number">-2</span>    <span class="number">-3</span>     <span class="number">1</span>     <span class="number">2</span>     <span class="number">3</span></span><br><span class="line">    <span class="number">-4</span>    <span class="number">-5</span>    <span class="number">-6</span>     <span class="number">4</span>     <span class="number">5</span>     <span class="number">6</span></span><br><span class="line">    <span class="number">-7</span>    <span class="number">-8</span>    <span class="number">-9</span>     <span class="number">7</span>     <span class="number">8</span>     <span class="number">9</span></span><br></pre></td></tr></table></figure><p>可以用实部矩阵和虚部矩阵构成复数矩阵。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; B = [<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>;<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>];</span><br><span class="line">&gt;&gt; C = [<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>;<span class="number">9</span>,<span class="number">10</span>,<span class="number">11</span>];</span><br><span class="line">&gt;&gt; A = B + <span class="built_in">i</span>*C</span><br><span class="line"></span><br><span class="line">A =</span><br><span class="line"></span><br><span class="line">   <span class="number">4.0000</span> + <span class="number">6.0000</span><span class="built_in">i</span>   <span class="number">5.0000</span> + <span class="number">7.0000</span><span class="built_in">i</span>   <span class="number">6.0000</span> + <span class="number">8.0000</span><span class="built_in">i</span></span><br><span class="line">   <span class="number">7.0000</span> + <span class="number">9.0000</span><span class="built_in">i</span>   <span class="number">8.0000</span> +<span class="number">10.0000</span><span class="built_in">i</span>   <span class="number">9.0000</span> +<span class="number">11.0000</span><span class="built_in">i</span></span><br></pre></td></tr></table></figure><h3 id="冒号表达式"><a class="header-anchor" href="#冒号表达式">¶</a>冒号表达式</h3><p><strong>格式</strong>:             e1 :e2:e3         初始值:步长:终止值</p><blockquote><p>省略步长e2，则步长为1。<br>例如，t=0:5 与t=0:1:5等价。</p></blockquote><p><strong>linspace函数</strong>:                linspace(a,b,n)        第一个元素:最后一个元素:元素总数</p><blockquote><p>当n省略时，自动产生100个元素</p></blockquote><h3 id="结构矩阵和单元矩阵"><a class="header-anchor" href="#结构矩阵和单元矩阵">¶</a>结构矩阵和单元矩阵</h3><h4 id="结构矩阵"><a class="header-anchor" href="#结构矩阵">¶</a>结构矩阵</h4><p>​           <strong>格式为:</strong><br>​                         结构矩阵元素成员名=表达式</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; a(<span class="number">1</span>).x1=<span class="number">10</span>; a(<span class="number">1</span>).x2=<span class="string">&#x27;liu&#x27;</span>; a(<span class="number">1</span>).x3=[<span class="number">1</span> <span class="number">1</span>,<span class="number">21</span>;<span class="number">34</span>,<span class="number">78</span>];</span><br><span class="line">&gt;&gt; a(<span class="number">2</span>).x1=<span class="number">12</span>; a(<span class="number">2</span>).x2=<span class="string">&#x27;wang&#x27;</span>; a(<span class="number">2</span>).x3=[<span class="number">34</span>,<span class="number">191</span>;<span class="number">27</span>,<span class="number">578</span>];</span><br><span class="line">&gt;&gt; a(<span class="number">3</span>).x1=<span class="number">14</span>; a(<span class="number">3</span>).x2=<span class="string">&#x27;cai&#x27;</span>; a(<span class="number">3</span>).x3=[<span class="number">13</span>,<span class="number">890</span>;<span class="number">67</span>,<span class="number">231</span>];</span><br></pre></td></tr></table></figure><h4 id="单元矩阵"><a class="header-anchor" href="#单元矩阵">¶</a>单元矩阵</h4><p>建立单元矩阵和一般矩阵相似，直接输入就可以了，只是单元矩阵元素用大括号括起来。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; b= &#123;<span class="number">10</span>,<span class="string">&#x27;liu&#x27;</span>,[<span class="number">11</span>,<span class="number">21</span>;<span class="number">34</span>,<span class="number">78</span>];<span class="number">12</span>,<span class="string">&#x27;wang&#x27;</span>,[<span class="number">34</span>,<span class="number">191</span>;<span class="number">27</span>,<span class="number">5781</span>];...</span><br><span class="line"><span class="number">14</span>,<span class="string">&#x27;cai&#x27;</span>,[<span class="number">13</span>,<span class="number">890</span>;<span class="number">67</span>,<span class="number">231</span>]&#125;</span><br><span class="line"></span><br><span class="line">b = </span><br><span class="line"></span><br><span class="line">    [<span class="number">10</span>]    <span class="string">&#x27;liu&#x27;</span>     [<span class="number">2</span>x2 double]</span><br><span class="line">    [<span class="number">12</span>]    <span class="string">&#x27;wang&#x27;</span>    [<span class="number">2</span>x2 double]</span><br><span class="line">    [<span class="number">14</span>]    <span class="string">&#x27;cai&#x27;</span>     [<span class="number">2</span>x2 double]</span><br></pre></td></tr></table></figure><h2 id="矩阵元素的引用"><a class="header-anchor" href="#矩阵元素的引用">¶</a>矩阵元素的引用</h2><h3 id="矩阵元素的引用方式"><a class="header-anchor" href="#矩阵元素的引用方式">¶</a>矩阵元素的引用方式</h3><h4 id="通过下标来弓-用矩阵的元素"><a class="header-anchor" href="#通过下标来弓-用矩阵的元素">¶</a>通过下标来弓|用矩阵的元素</h4><p>​        A(3,2)表示A矩阵第3行第2列的元素。</p><h4 id="通过序号来引用"><a class="header-anchor" href="#通过序号来引用">¶</a>通过序号来引用</h4><ul><li>在MATLAB中， 矩阵元素按列存储，即首先存储矩阵的第一列元素，然后存储第二列元素，.，一-直到矩阵的最后一列元素。</li><li>矩阵元素的序号就是矩阵元素在内存中的排列顺序。</li></ul><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; A = [<span class="number">1</span> <span class="number">2</span> <span class="number">3</span>;<span class="number">4</span> <span class="number">5</span> <span class="number">6</span>]</span><br><span class="line"></span><br><span class="line">A =</span><br><span class="line"></span><br><span class="line">     <span class="number">1</span>     <span class="number">2</span>     <span class="number">3</span></span><br><span class="line">     <span class="number">4</span>     <span class="number">5</span>     <span class="number">6</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; A(<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">     <span class="number">2</span></span><br></pre></td></tr></table></figure><blockquote><p>序号与下标是一一对应的，以mX n矩阵A为例，矩阵元素A(i,j)的序号为(j-1)*m+i。</p></blockquote><p>矩阵元素的序号与下标可以利用sub2ind和ind2sub函数实现相互转换。<br><font color=red>sub2ind函数</font>:将矩阵中指定元素的行、列下标转换成存储的序号。调用格式为:<br>D=sub2ind(S,I,J)</p><blockquote><p>S:行数和列数组成的向量<br>I:转换矩阵元素的行下标<br>J:转换矩阵元素的列下标</p></blockquote><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; A = [<span class="number">1</span> <span class="number">2</span> <span class="number">3</span>;<span class="number">4</span> <span class="number">5</span> <span class="number">6</span>]</span><br><span class="line"></span><br><span class="line">A =</span><br><span class="line"></span><br><span class="line">     <span class="number">1</span>     <span class="number">2</span>     <span class="number">3</span></span><br><span class="line">     <span class="number">4</span>     <span class="number">5</span>     <span class="number">6</span></span><br><span class="line">&gt;&gt; D = <span class="built_in">sub2ind</span>(<span class="built_in">size</span>(A),[<span class="number">1</span>,<span class="number">2</span>;<span class="number">2</span>,<span class="number">2</span>],[<span class="number">1</span>,<span class="number">1</span>;<span class="number">3</span>,<span class="number">2</span>])</span><br><span class="line"></span><br><span class="line">D =</span><br><span class="line"></span><br><span class="line">     <span class="number">1</span>     <span class="number">2</span></span><br><span class="line">     <span class="number">6</span>     <span class="number">4</span></span><br></pre></td></tr></table></figure><p><font color=red>ind2sub函数</font>:将把矩阵元素的序号转换成对应的下标，其调用格式为:<br>[I,J]=ind2sub(S,D)</p><blockquote><p>S:行数和列数组成的向量<br>D:序号<br>I:行下标<br>J:列下标</p></blockquote><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; [I,J]=<span class="built_in">ind2sub</span>([<span class="number">3</span>,<span class="number">3</span>],[<span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>])</span><br><span class="line"></span><br><span class="line">I =</span><br><span class="line"></span><br><span class="line">     <span class="number">1</span>     <span class="number">3</span>     <span class="number">2</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">J =</span><br><span class="line"></span><br><span class="line">     <span class="number">1</span>     <span class="number">1</span>     <span class="number">2</span></span><br></pre></td></tr></table></figure><h3 id="利用冒号表达式获得子矩阵"><a class="header-anchor" href="#利用冒号表达式获得子矩阵">¶</a>利用冒号表达式获得子矩阵</h3><p>子矩阵是指由矩阵中的一部分元素构成的矩阵。</p><table><thead><tr><th>写法</th><th>含义</th></tr></thead><tbody><tr><td><code>A(i;:)</code></td><td>第i行的全部元素</td></tr><tr><td><code>A(:j)</code></td><td>第j列的全部元素</td></tr><tr><td><code>A(i:i+m,k:k+m)</code></td><td>第i<sub>i+m行内且在第k</sub>k+m列中的所有元素</td></tr><tr><td><code>A(i:i+m;:)</code></td><td>第i~i+m行的全部元素</td></tr></tbody></table><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; A=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>;<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>;<span class="number">11</span>,<span class="number">12</span>,<span class="number">13</span>,<span class="number">14</span>,<span class="number">15</span>]</span><br><span class="line"></span><br><span class="line">A =</span><br><span class="line"></span><br><span class="line">     <span class="number">1</span>     <span class="number">2</span>     <span class="number">3</span>     <span class="number">4</span>     <span class="number">5</span></span><br><span class="line">     <span class="number">6</span>     <span class="number">7</span>     <span class="number">8</span>     <span class="number">9</span>    <span class="number">10</span></span><br><span class="line">    <span class="number">11</span>    <span class="number">12</span>    <span class="number">13</span>    <span class="number">14</span>    <span class="number">15</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; A(<span class="number">1</span>:<span class="number">2</span>,:)</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">     <span class="number">1</span>     <span class="number">2</span>     <span class="number">3</span>     <span class="number">4</span>     <span class="number">5</span></span><br><span class="line">     <span class="number">6</span>     <span class="number">7</span>     <span class="number">8</span>     <span class="number">9</span>    <span class="number">10</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; A(<span class="number">2</span>:<span class="number">3</span>,<span class="number">1</span>:<span class="number">2</span>:<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">     <span class="number">6</span>     <span class="number">8</span>    <span class="number">10</span></span><br><span class="line">    <span class="number">11</span>    <span class="number">13</span>    <span class="number">15</span></span><br><span class="line">&gt;&gt; A(<span class="keyword">end</span>,:)</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">    <span class="number">11</span>    <span class="number">12</span>    <span class="number">13</span>    <span class="number">14</span>    <span class="number">15</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; A([<span class="number">1</span>,<span class="number">3</span>],<span class="number">3</span>:<span class="keyword">end</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">     <span class="number">3</span>     <span class="number">4</span>     <span class="number">5</span></span><br><span class="line">    <span class="number">13</span>    <span class="number">14</span>    <span class="number">15</span></span><br></pre></td></tr></table></figure><h3 id="利用空矩阵删除矩阵的元素"><a class="header-anchor" href="#利用空矩阵删除矩阵的元素">¶</a>利用空矩阵删除矩阵的元素</h3><p>空矩阵是指没有任何元素的矩阵。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; A=[<span class="number">1</span> ,<span class="number">2</span>,<span class="number">3</span>,<span class="number">0</span>,<span class="number">0</span>;<span class="number">7</span>,<span class="number">0</span>,<span class="number">9</span>,<span class="number">2</span>,<span class="number">6</span>;<span class="number">1</span>,<span class="number">4</span>,<span class="number">-1</span>,<span class="number">1</span>,<span class="number">8</span>]</span><br><span class="line"></span><br><span class="line">A =</span><br><span class="line"></span><br><span class="line">     <span class="number">1</span>     <span class="number">2</span>     <span class="number">3</span>     <span class="number">0</span>     <span class="number">0</span></span><br><span class="line">     <span class="number">7</span>     <span class="number">0</span>     <span class="number">9</span>     <span class="number">2</span>     <span class="number">6</span></span><br><span class="line">     <span class="number">1</span>     <span class="number">4</span>    <span class="number">-1</span>     <span class="number">1</span>     <span class="number">8</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; A(:,[<span class="number">2</span>,<span class="number">4</span>])=[]</span><br><span class="line"></span><br><span class="line">A =</span><br><span class="line"></span><br><span class="line">     <span class="number">1</span>     <span class="number">3</span>     <span class="number">0</span></span><br><span class="line">     <span class="number">7</span>     <span class="number">9</span>     <span class="number">6</span></span><br><span class="line">     <span class="number">1</span>    <span class="number">-1</span>     <span class="number">8</span></span><br></pre></td></tr></table></figure><h3 id="改变矩阵的形状"><a class="header-anchor" href="#改变矩阵的形状">¶</a>改变矩阵的形状</h3><p><font color=red>reshape(A,m,n)</font>:在矩阵总元素保持不变的前提下，将矩阵A重新排成m X n的二维矩阵。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; x=[<span class="number">23</span>,<span class="number">45</span>,<span class="number">65</span>,<span class="number">34</span>,<span class="number">65</span>,<span class="number">34</span>,<span class="number">98</span>,<span class="number">45</span>,<span class="number">78</span>,<span class="number">65</span>,<span class="number">43</span>,<span class="number">76</span>];</span><br><span class="line">&gt;&gt; y=<span class="built_in">reshape</span>(x,<span class="number">3</span>,<span class="number">4</span>)</span><br><span class="line"></span><br><span class="line">y =</span><br><span class="line"></span><br><span class="line">    <span class="number">23</span>    <span class="number">34</span>    <span class="number">98</span>    <span class="number">65</span></span><br><span class="line">    <span class="number">45</span>    <span class="number">65</span>    <span class="number">45</span>    <span class="number">43</span></span><br><span class="line">    <span class="number">65</span>    <span class="number">34</span>    <span class="number">78</span>    <span class="number">76</span></span><br></pre></td></tr></table></figure><p>A(😃 :将矩阵A的每一列元素堆叠起来， 成为一个列向量。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; A =[<span class="number">-45</span>,<span class="number">65</span>,<span class="number">71</span>;<span class="number">27</span>,<span class="number">35</span>,<span class="number">91</span>]</span><br><span class="line"></span><br><span class="line">A =</span><br><span class="line"></span><br><span class="line">   <span class="number">-45</span>    <span class="number">65</span>    <span class="number">71</span></span><br><span class="line">    <span class="number">27</span>    <span class="number">35</span>    <span class="number">91</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; B=A(:)</span><br><span class="line"></span><br><span class="line">B =</span><br><span class="line"></span><br><span class="line">   <span class="number">-45</span></span><br><span class="line">    <span class="number">27</span></span><br><span class="line">    <span class="number">65</span></span><br><span class="line">    <span class="number">35</span></span><br><span class="line">    <span class="number">71</span></span><br><span class="line">    <span class="number">91</span></span><br></pre></td></tr></table></figure><blockquote><p>A(:)等价于reshape(A,6,1)。</p></blockquote><h2 id="基本运算"><a class="header-anchor" href="#基本运算">¶</a>基本运算</h2><ul><li>算术运算</li><li>关系运算</li><li>逻辑运算</li></ul><h3 id="算术运算"><a class="header-anchor" href="#算术运算">¶</a>算术运算</h3><h4 id="基本算术运算"><a class="header-anchor" href="#基本算术运算">¶</a>基本算术运算</h4><p>基本算术运算符: + (加)、- (减)、*(乘)、/(右除)、(左除)、(乘方)。</p><ul><li>MATLAB的算术运算是在<strong>矩阵意义</strong>下进行的。</li><li>单个数据的算术运算只是<strong>矩阵运算</strong>的一种特例。</li></ul><p>加减运算</p><ul><li>若两矩阵同型，则运算时两矩阵的相应元素相加减。</li><li>若两矩阵不同型，则MATLAB将给出错误信息。</li><li>一个标量也可以和矩阵进行加减运算，这时把标量和矩阵的每一个元素进行加减运算。</li></ul><p>乘法运算</p><ul><li>矩阵A和B进行乘法运算，要求A的列数与B的行数相等，此时则称A、B矩阵是可乘的，或称A和B两矩阵维数和大小相容。</li><li>如果两者的维数或大小不相容，则将给出错误信息，提示用户两个矩阵是不可乘的。</li></ul><p>除法运算</p><ul><li>在MATLAB中，有两种矩阵除法运算:右除/和左除\。</li><li>如果A矩阵是非奇异方阵，则B/A等效于<code>B*inv(A)</code>，A\B等效于<code>inv(A)*B</code>。</li></ul><blockquote><p>非奇异矩阵就是可逆矩阵</p></blockquote><p>对于矩阵来说，右除和左除表示两种不同的除数矩阵和被除数矩阵关系。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; A=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>;<span class="number">4</span>,<span class="number">2</span>,<span class="number">6</span>;<span class="number">7</span>,<span class="number">4</span>,<span class="number">9</span>]; </span><br><span class="line">&gt;&gt; B=[<span class="number">4</span>,<span class="number">3</span>,<span class="number">2</span>;<span class="number">7</span> ,<span class="number">5</span>,<span class="number">1</span>;<span class="number">12</span>,<span class="number">7</span>,<span class="number">92</span>];</span><br><span class="line">&gt;&gt; C1=B/A</span><br><span class="line"></span><br><span class="line">C1 =</span><br><span class="line"></span><br><span class="line">   <span class="number">-0.1667</span>   <span class="number">-3.3333</span>    <span class="number">2.5000</span></span><br><span class="line">   <span class="number">-0.8333</span>   <span class="number">-7.6667</span>    <span class="number">5.5000</span></span><br><span class="line">   <span class="number">12.8333</span>   <span class="number">63.6667</span>  <span class="number">-36.5000</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; C2=A\B</span><br><span class="line"></span><br><span class="line">C2 =</span><br><span class="line"></span><br><span class="line">    <span class="number">0.5000</span>   <span class="number">-0.5000</span>   <span class="number">44.5000</span></span><br><span class="line">    <span class="number">1.0000</span>    <span class="number">0.0000</span>   <span class="number">46.0000</span></span><br><span class="line">    <span class="number">0.5000</span>    <span class="number">1.1667</span>  <span class="number">-44.8333</span></span><br></pre></td></tr></table></figure><p>乘方运算</p><ul><li>一个矩阵的乘方运算可以表示成Ax，要求A为方阵，x为标量。</li></ul><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; A=[<span class="number">1</span> ,<span class="number">2</span>,<span class="number">3</span>;<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>;<span class="number">7</span>,<span class="number">8</span>,<span class="number">0</span>];</span><br><span class="line">&gt;&gt; A^<span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">    <span class="number">30</span>    <span class="number">36</span>    <span class="number">15</span></span><br><span class="line">    <span class="number">66</span>    <span class="number">81</span>    <span class="number">42</span></span><br><span class="line">    <span class="number">39</span>    <span class="number">54</span>    <span class="number">69</span></span><br></pre></td></tr></table></figure><h4 id="点运算"><a class="header-anchor" href="#点运算">¶</a>点运算</h4><ul><li>点运算符:.*、./、.\和.^。</li><li>两矩阵进行点运算是指它们的对应元素进行相关运算，要求两矩阵同型。</li></ul><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; A=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>;<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>;<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>];</span><br><span class="line">&gt;&gt; B=[<span class="number">-1</span>,<span class="number">0</span>,<span class="number">1</span>;<span class="number">1</span>,<span class="number">-1</span>,<span class="number">0</span>;<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>];</span><br><span class="line">&gt;&gt; C=A.*B</span><br><span class="line"></span><br><span class="line">C =</span><br><span class="line"></span><br><span class="line">    <span class="number">-1</span>     <span class="number">0</span>     <span class="number">3</span></span><br><span class="line">     <span class="number">4</span>    <span class="number">-5</span>     <span class="number">0</span></span><br><span class="line">     <span class="number">0</span>     <span class="number">8</span>     <span class="number">9</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; D=A*B</span><br><span class="line"></span><br><span class="line">D =</span><br><span class="line"></span><br><span class="line">     <span class="number">1</span>     <span class="number">1</span>     <span class="number">4</span></span><br><span class="line">     <span class="number">1</span>     <span class="number">1</span>    <span class="number">10</span></span><br><span class="line">     <span class="number">1</span>     <span class="number">1</span>    <span class="number">16</span></span><br></pre></td></tr></table></figure><p>点运算是MATLAB很有特色的一个运算符，在实际应用中起着很重要的作用，也是许多初学者容易弄混的一个问题。<br>当x=0.1、0.4、0.7、1时，分别求y=sin X cos x的值。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; X=<span class="number">0.1</span>:<span class="number">0.3</span>:<span class="number">1</span>;</span><br><span class="line">&gt;&gt; y=<span class="built_in">cos</span>(x).*<span class="built_in">cos</span>(x)</span><br><span class="line"></span><br><span class="line">y =</span><br><span class="line"></span><br><span class="line">  <span class="number">1</span> 至 <span class="number">6</span> 列</span><br><span class="line"></span><br><span class="line">    <span class="number">0.2839</span>    <span class="number">0.2760</span>    <span class="number">0.3164</span>    <span class="number">0.7201</span>    <span class="number">0.3164</span>    <span class="number">0.7201</span></span><br><span class="line"></span><br><span class="line">  <span class="number">7</span> 至 <span class="number">12</span> 列</span><br><span class="line"></span><br><span class="line">    <span class="number">0.6712</span>    <span class="number">0.2760</span>    <span class="number">0.7358</span>    <span class="number">0.3164</span>    <span class="number">0.3082</span>    <span class="number">0.6795</span></span><br></pre></td></tr></table></figure><h4 id="关系运算"><a class="header-anchor" href="#关系运算">¶</a>关系运算</h4><ul><li>关系运算符: &lt;(小于)、&lt;=(小于或等于)、&gt;(大于)、&gt;=(大于或等于)、==(等于)、 ~=(不等于)。</li><li>当两个比较量是标量时，直接比较两数的大小。若关系成立，关系表达式结果为1,否则为0。</li><li>当参与比较的量是两个同型的矩阵时，比较是对两矩阵相同位置的元素按标量关系运算规则逐个进行，最终的关系运算的结果是一个与原矩阵同型的矩阵，它的元素由0或1组成。</li><li>当参与比较的一个是标量，而另一个 是矩阵时，则把标量与矩阵的每一个元素按标量 关系运算规则逐个比较，最终的关系运算的结果是一个与原矩阵同型的矩阵，它的元素由0或1组成。</li></ul><p>ex:建立3阶方阵A，判断A的元素是否为偶数。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; A =[<span class="number">24</span>,<span class="number">35</span>, <span class="number">13</span>;<span class="number">22</span>,<span class="number">63</span>,<span class="number">23</span>;<span class="number">39</span>,<span class="number">47</span>,<span class="number">80</span>]</span><br><span class="line"></span><br><span class="line">A =</span><br><span class="line"></span><br><span class="line">    <span class="number">24</span>    <span class="number">35</span>    <span class="number">13</span></span><br><span class="line">    <span class="number">22</span>    <span class="number">63</span>    <span class="number">23</span></span><br><span class="line">    <span class="number">39</span>    <span class="number">47</span>    <span class="number">80</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; P=<span class="built_in">rem</span>(A,<span class="number">2</span>)==<span class="number">0</span></span><br><span class="line"></span><br><span class="line">P =</span><br><span class="line"></span><br><span class="line">     <span class="number">1</span>     <span class="number">0</span>     <span class="number">0</span></span><br><span class="line">     <span class="number">1</span>     <span class="number">0</span>     <span class="number">0</span></span><br><span class="line">     <span class="number">0</span>     <span class="number">0</span>     <span class="number">1</span></span><br></pre></td></tr></table></figure><h4 id="逻辑运算"><a class="header-anchor" href="#逻辑运算">¶</a>逻辑运算</h4><p>逻辑运算符: &amp;(与)、 |(或)和~ (非)。<br>设参与逻辑运算的是两个标量a和b，那么运算规则为:</p><ul><li>a&amp;b a、b全为非零时，运算结果为1，否则为0。</li><li>alb a、 b中只要有一个为非零时，运算结果为1。</li><li>~a当a为零时，运算结果为1;当a为非零时，运算结果为0。</li></ul><p>在算术运算、关系运算和逻辑运算中，算术运算的优先级最高，逻辑运算优先级最低，但逻辑非运算是单目运算，它的优先级比双目运算要高。</p><ul><li>若参与逻辑运算的是两个同型矩阵，那么将对矩阵相同位置上的元素按标量规则逐个进行运算，最终运算结果是一个与原矩阵同型的矩阵，其元素由1或0组成。</li><li>若参与逻辑运算的一个是标量，一个是矩阵，那么将在标量与矩阵中的每个元素之间按标量规则逐个进行运算，最终运算结果是一个与原矩阵同型的矩阵，其元素由1或0组成。</li></ul><p>ex:水仙花数是指各位数字的立方之和等于该数本身的三位正整数,求全部水仙花数。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; m = <span class="number">100</span>:<span class="number">999</span>;</span><br><span class="line">&gt;&gt; m1 = <span class="built_in">rem</span>(m,<span class="number">10</span>);</span><br><span class="line">&gt;&gt; m2 = <span class="built_in">rem</span>(<span class="built_in">fix</span>(m/<span class="number">10</span>),<span class="number">10</span>);</span><br><span class="line">&gt;&gt; m3 = <span class="built_in">fix</span>(m/<span class="number">100</span>);</span><br><span class="line">&gt;&gt; k = <span class="built_in">find</span>(m==m1.*m1.*m1+m2.*m2.*m2+m3.*m3.*m3)</span><br><span class="line"></span><br><span class="line">k =</span><br><span class="line"></span><br><span class="line">    <span class="number">54</span>   <span class="number">271</span>   <span class="number">272</span>   <span class="number">308</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; s=m(k)</span><br><span class="line"></span><br><span class="line">s =</span><br><span class="line"></span><br><span class="line">   <span class="number">153</span>   <span class="number">370</span>   <span class="number">371</span>   <span class="number">407</span></span><br></pre></td></tr></table></figure><h2 id="字符串的处理"><a class="header-anchor" href="#字符串的处理">¶</a>字符串的处理</h2><h3 id="字符串的表示"><a class="header-anchor" href="#字符串的表示">¶</a>字符串的表示</h3><p>在MATLAB中，字符串是用<font color="red"><strong>单引号</strong></font>括起来的字符序列。</p><blockquote><p>实际当作一个行向量</p></blockquote><p>若字符串中的字符含有单引号，则该单引号字符要用两个单引号来表示。</p><p>建立多行字符串，形成字符串矩阵。</p><blockquote><p>字符串数要相同</p></blockquote><p>ex:建立一个字符串向量，然后对该向量做如下处理:<br>①取第1~ 5个字符组成的子字符串。<br>②将字符串倒过来重新排列。<br>③将字符串中的小写字母变成相应的大写字母，其余字符不变。<br>④统计字符串中小写字母的个数。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; ch=<span class="string">&#x27;ABc123d4e56Fg9&#x27;</span>;</span><br><span class="line">&gt;&gt; subch=ch(<span class="number">1</span>:<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line">subch =</span><br><span class="line"></span><br><span class="line">ABc12</span><br><span class="line"></span><br><span class="line">&gt;&gt; revch=ch(<span class="keyword">end</span>:<span class="number">-1</span>:<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">revch =</span><br><span class="line"></span><br><span class="line"><span class="number">9</span>gF65e4d321cBA</span><br><span class="line"></span><br><span class="line">&gt;&gt; k=<span class="built_in">find</span>(ch&gt;=<span class="string">&#x27;a&#x27;</span>&amp;ch&lt;=<span class="string">&#x27;z&#x27;</span>)</span><br><span class="line"></span><br><span class="line">k =</span><br><span class="line"></span><br><span class="line">     <span class="number">3</span>     <span class="number">7</span>     <span class="number">9</span>    <span class="number">13</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; ch(k)=ch(k)-(<span class="string">&#x27;a&#x27;</span>-<span class="string">&#x27;A&#x27;</span>)</span><br><span class="line"></span><br><span class="line">ch =</span><br><span class="line"></span><br><span class="line">ABC123D4E56FG9</span><br><span class="line"></span><br><span class="line">&gt;&gt; <span class="built_in">length</span>(k)</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">     <span class="number">4</span></span><br></pre></td></tr></table></figure><blockquote><p>大写字母和小写字母ASCII码相差32</p></blockquote><h3 id="字符串的操作"><a class="header-anchor" href="#字符串的操作">¶</a>字符串的操作</h3><h4 id="字符串的执行"><a class="header-anchor" href="#字符串的执行">¶</a>字符串的执行</h4><p>格式:  eval(s)</p><blockquote><p>s----字符串</p></blockquote><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; t=<span class="built_in">pi</span>;</span><br><span class="line">&gt;&gt; m=<span class="string">&#x27;[t,sin(t),cos(t)]&#x27;</span>;</span><br><span class="line">&gt;&gt; y=eval(m)</span><br><span class="line"></span><br><span class="line">y =</span><br><span class="line"></span><br><span class="line">    <span class="number">3.1416</span>    <span class="number">0.0000</span>   <span class="number">-1.0000</span></span><br></pre></td></tr></table></figure><h4 id="字符串与数值之间的转换"><a class="header-anchor" href="#字符串与数值之间的转换">¶</a>字符串与数值之间的转换</h4><ul><li>abs和double函数都可以用来获 取字符串矩阵所对应的ASCII码数值矩阵。</li><li>char函数可以把ASCI码矩阵转换 为字符串矩阵。</li></ul><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; s1=<span class="string">&#x27;MATLAB&#x27;</span>;</span><br><span class="line">&gt;&gt; a=<span class="built_in">abs</span>(s1)</span><br><span class="line"></span><br><span class="line">a =</span><br><span class="line"></span><br><span class="line">    <span class="number">77</span>    <span class="number">65</span>    <span class="number">84</span>    <span class="number">76</span>    <span class="number">65</span>    <span class="number">66</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; char(a+<span class="number">32</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">matlab</span><br></pre></td></tr></table></figure><h4 id="字符串的比较"><a class="header-anchor" href="#字符串的比较">¶</a>字符串的比较</h4><p>字符串的比较有两种方法:利用关系运算符或字符串比较函数。</p><ul><li>关系运算符比较:两个字符串里的每个字符依次按ASCII值大小逐个进行比较，比较的结果是一个数值向量， 向量中的元素要么是1，要么是0。</li></ul><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; <span class="string">&#x27;www0&#x27;</span>&gt;=<span class="string">&#x27;W123&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">     <span class="number">1</span>     <span class="number">1</span>     <span class="number">1</span>     <span class="number">0</span></span><br></pre></td></tr></table></figure><ul><li><p>字符串比较函数用于判断字符串是否相等，有4种比较方式，函数如下:</p><p>①<code>strcmp(s1,s2)</code>:用来比较字符串s1和s2是否相等，如果相等，返回结果为1,  否则返回0。<br>②<code>strncmp(s 1 ,s2,n)</code>:用来比较两个字符串前n个字符是否相等，如果相等，返回1，否则返回0。<br>③<code>strcmpi(s1,s2)</code>:在忽略字母大小写前提下，比较字符串s1和s2是否相等，如果相等，返回1，否则返回0。<br>④<code>strncmpi(s l,s2,n)</code>:在忽略字符串大小写前提下，比较两个字符串前n个字 符是否相等，如果相等，返回1,否则返回0。</p></li></ul><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; strcmp(<span class="string">&#x27;www0&#x27;</span>,<span class="string">&#x27;w123&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">     <span class="number">0</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; strncmpi(<span class="string">&#x27;Www0&#x27;</span>,<span class="string">&#x27;w123&#x27;</span>,<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">     <span class="number">1</span></span><br></pre></td></tr></table></figure><h4 id="字符串的查找与替换"><a class="header-anchor" href="#字符串的查找与替换">¶</a>字符串的查找与替换</h4><ul><li>findstr(s 1 ,s2):返回短字符串在长字符串中的开始位置。</li><li>strrep(s 1 ,s2,s3):将字符串s1中的所有子字符串s2替换为字符串s3。</li></ul><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; p=findstr(<span class="string">&#x27;This is a test!&#x27;</span>,<span class="string">&#x27;is&#x27;</span>)</span><br><span class="line"></span><br><span class="line">p =</span><br><span class="line"></span><br><span class="line">     <span class="number">3</span>     <span class="number">6</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; p=findstr(<span class="string">&#x27;is&#x27;</span>,<span class="string">&#x27;This is a test!&#x27;</span>)</span><br><span class="line"></span><br><span class="line">p =</span><br><span class="line"></span><br><span class="line">     <span class="number">3</span>     <span class="number">6</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; result=strrep(<span class="string">&#x27;This is a test!&#x27;</span>,<span class="string">&#x27;test&#x27;</span>,<span class="string">&#x27;class&#x27;</span>)</span><br><span class="line"></span><br><span class="line">result =</span><br><span class="line"></span><br><span class="line">This is a class!</span><br></pre></td></tr></table></figure><h1>MATLAB矩阵处理</h1><h2 id="特殊矩阵"><a class="header-anchor" href="#特殊矩阵">¶</a>特殊矩阵</h2><ul><li>通用性的特殊矩阵</li><li>用于专门学科的特殊矩阵</li></ul><h3 id="通用性的特殊矩阵"><a class="header-anchor" href="#通用性的特殊矩阵">¶</a>通用性的特殊矩阵</h3><p><font color="red">zeros函数</font>&gt;:产生全0矩阵，即零矩阵。<br><font color="red">ones函数</font>:产生全1矩阵，即幺矩阵。<br><font color="red">eye函数</font>:产生对角线为1的矩阵。当矩阵是方阵时，得到一个单位矩阵。<br><font color="red">rand函数</font>:产生(0, 1)区间均匀分布的随机矩阵。<br><font color="red">randn函数</font>:产生均值为0，方差为1的标准正态分布随机矩阵。</p><p>zeros函数的调用格式:</p><ul><li>zeros(m): 产生m x m零矩阵。</li><li>zeros(m,n): 产生m x n零矩阵。</li><li>zeros(size(l):产生与矩阵A同样大小的零矩阵。</li></ul><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; A=<span class="built_in">zeros</span>(<span class="number">2</span>,<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line">A =</span><br><span class="line"></span><br><span class="line">     <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span></span><br><span class="line">     <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; <span class="built_in">zeros</span>(<span class="built_in">size</span>(<span class="built_in">reshape</span>(A,<span class="number">3</span>,<span class="number">2</span>)))</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">     <span class="number">0</span>     <span class="number">0</span></span><br><span class="line">     <span class="number">0</span>     <span class="number">0</span></span><br><span class="line">     <span class="number">0</span>     <span class="number">0</span></span><br></pre></td></tr></table></figure><p>ex:首先产生5阶两位随机整数矩阵A，再产生均值为0.6、方差为0.1的5阶<br>正态分布随机矩阵B，最后验证(A+B)l=IA+BI ( I为单位矩阵)。</p><ul><li>rand函数:产生(0，1)开区间均匀分布的随机数x。</li><li>fix(a+(b-a+1)*x):产生[a，b]区间上均匀分布的随机整数。</li><li>randn函数:产生均值为0、方差为1的标准正态分布随机数x。</li><li>μ+σx:得到均值为μ、方差为σ^2的随机数。</li></ul><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; A = <span class="built_in">fix</span>(<span class="number">10</span>+(<span class="number">99</span><span class="number">-10</span>+<span class="number">1</span>)*<span class="built_in">rand</span>(<span class="number">5</span>));</span><br><span class="line">&gt;&gt; B = <span class="number">0.3</span>+<span class="built_in">sqrt</span>(<span class="number">0.1</span>)*<span class="built_in">randn</span>(<span class="number">5</span>);</span><br><span class="line">&gt;&gt; C = <span class="built_in">eye</span>(<span class="number">5</span>);</span><br><span class="line">&gt;&gt; (A+B)*C==C*A+B*C</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">     <span class="number">1</span>     <span class="number">1</span>     <span class="number">1</span>     <span class="number">1</span>     <span class="number">1</span></span><br><span class="line">     <span class="number">1</span>     <span class="number">1</span>     <span class="number">1</span>     <span class="number">1</span>     <span class="number">1</span></span><br><span class="line">     <span class="number">1</span>     <span class="number">1</span>     <span class="number">1</span>     <span class="number">1</span>     <span class="number">1</span></span><br><span class="line">     <span class="number">1</span>     <span class="number">1</span>     <span class="number">1</span>     <span class="number">1</span>     <span class="number">1</span></span><br><span class="line">     <span class="number">1</span>     <span class="number">1</span>     <span class="number">1</span>     <span class="number">1</span>     <span class="number">1</span></span><br></pre></td></tr></table></figure><h3 id="用于专门学科的特殊矩阵"><a class="header-anchor" href="#用于专门学科的特殊矩阵">¶</a>用于专门学科的特殊矩阵</h3><h4 id="魔方矩阵-Magic-Square"><a class="header-anchor" href="#魔方矩阵-Magic-Square">¶</a>魔方矩阵- -Magic Square</h4><ul><li>n阶魔方阵由1,2,3,.,n2共n2个整数组成，且每行、每列以及主、副对角线上各n个元素之和都相等。</li><li>n阶魔方阵每行每列元素的和为(1+2+3+…+ n2)/n=(n+n3)/2。MATLAB函数magic(n)产生一个特定的魔方阵。</li></ul><p>ex:产生8阶魔方阵，求其每行每列元素的和。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; M= <span class="built_in">magic</span>(<span class="number">8</span>);</span><br><span class="line">&gt;&gt; sum(M(<span class="number">1</span>,:))</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">   <span class="number">260</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; sum(M(:,<span class="number">1</span>))</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">   <span class="number">260</span></span><br></pre></td></tr></table></figure><h4 id="范德蒙矩阵"><a class="header-anchor" href="#范德蒙矩阵">¶</a>范德蒙矩阵</h4><p>对于向量V=[V1，V2， .，Vn]，范得蒙矩阵的一般形式为:</p><p><img src="https://raw.githubusercontent.com/stardust14/picture/master/img/20200814111731.png" alt="image-20200814111220760"></p><p>在MATLAB中，函数vander(V)生 成以向量V为基础的范得<br>蒙( Vandermonde )矩阵。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; A = <span class="built_in">vander</span>(<span class="number">1</span>:<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line">A =</span><br><span class="line"></span><br><span class="line">     <span class="number">1</span>     <span class="number">1</span>     <span class="number">1</span>     <span class="number">1</span>     <span class="number">1</span></span><br><span class="line">    <span class="number">16</span>     <span class="number">8</span>     <span class="number">4</span>     <span class="number">2</span>     <span class="number">1</span></span><br><span class="line">    <span class="number">81</span>    <span class="number">27</span>     <span class="number">9</span>     <span class="number">3</span>     <span class="number">1</span></span><br><span class="line">   <span class="number">256</span>    <span class="number">64</span>    <span class="number">16</span>     <span class="number">4</span>     <span class="number">1</span></span><br><span class="line">   <span class="number">625</span>   <span class="number">125</span>    <span class="number">25</span>     <span class="number">5</span>     <span class="number">1</span></span><br></pre></td></tr></table></figure><blockquote><p>范德蒙矩阵常用在各种通信系统的纠错编码中，例如,常用的Reed—Solomon编码即以范德蒙矩阵为基础。</p></blockquote><h4 id="希尔伯特矩阵"><a class="header-anchor" href="#希尔伯特矩阵">¶</a>希尔伯特矩阵</h4><p>n阶希尔伯特( Hilbert)矩阵的一般形式为:</p><p><img src="https://raw.githubusercontent.com/stardust14/picture/master/img/20200814114657.png" alt="image-20200814114655977"></p><blockquote><p>希尔伯特矩阵的元素为H(ij)=1/(i+j-1)。</p></blockquote><p>在MATLAB中，生成n阶希尔伯特矩阵的函数是hilb(n)。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; format <span class="built_in">rat</span></span><br><span class="line">&gt;&gt; H = <span class="built_in">hilb</span>(<span class="number">4</span>)</span><br><span class="line"></span><br><span class="line">H =</span><br><span class="line"></span><br><span class="line">       <span class="number">1</span>              <span class="number">1</span>/<span class="number">2</span>            <span class="number">1</span>/<span class="number">3</span>            <span class="number">1</span>/<span class="number">4</span>     </span><br><span class="line">       <span class="number">1</span>/<span class="number">2</span>            <span class="number">1</span>/<span class="number">3</span>            <span class="number">1</span>/<span class="number">4</span>            <span class="number">1</span>/<span class="number">5</span>     </span><br><span class="line">       <span class="number">1</span>/<span class="number">3</span>            <span class="number">1</span>/<span class="number">4</span>            <span class="number">1</span>/<span class="number">5</span>            <span class="number">1</span>/<span class="number">6</span>     </span><br><span class="line">       <span class="number">1</span>/<span class="number">4</span>            <span class="number">1</span>/<span class="number">5</span>            <span class="number">1</span>/<span class="number">6</span>            <span class="number">1</span>/<span class="number">7</span> </span><br></pre></td></tr></table></figure><blockquote><p>format rat设置输出格式以有理数格式输出</p></blockquote><h4 id="伴随矩阵"><a class="header-anchor" href="#伴随矩阵">¶</a>伴随矩阵</h4><p>设多项式p(x)为<img src="https://raw.githubusercontent.com/stardust14/picture/master/img/20200814115552.png" alt="image-20200814115544687">，则多项式的伴随矩阵是:</p><p><img src="https://raw.githubusercontent.com/stardust14/picture/master/img/20200814115618.png" alt="image-20200814115617125"></p><blockquote><p>p(x)称为A的特征多项式，方程p(x)=0的根称为A的特征值。</p></blockquote><p>MATLAB生成伴随矩阵的函数是compan§，其中p是一个多项式的系数向量，高次幂系数排在前，低次幂系数排在后。</p><p>ex:生成多项式<code>x^3-2*x^2-5*x+6</code>的伴随矩阵 。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; p=[<span class="number">1</span>,<span class="number">-2</span>,<span class="number">-5</span>,<span class="number">6</span>];</span><br><span class="line">&gt;&gt; A=<span class="built_in">compan</span>(p)</span><br><span class="line"></span><br><span class="line">A =</span><br><span class="line"></span><br><span class="line">       <span class="number">2</span>              <span class="number">5</span>             <span class="number">-6</span>       </span><br><span class="line">       <span class="number">1</span>              <span class="number">0</span>              <span class="number">0</span>       </span><br><span class="line">       <span class="number">0</span>              <span class="number">1</span>              <span class="number">0</span>   </span><br></pre></td></tr></table></figure><h4 id="帕斯卡矩阵"><a class="header-anchor" href="#帕斯卡矩阵">¶</a>帕斯卡矩阵</h4><ul><li>根据二项式定理，(x+y)&quot; 展开后的系数随着n的增大组成一个三角形表，这个三角形称为杨辉三角形。</li><li>把二项式系数依次填写在矩阵的左侧对角线上，然后提取左侧的n行n列元素即为n阶帕斯卡( Pascal)矩阵。</li></ul><div class="justified-gallery"><p><img src="https://raw.githubusercontent.com/stardust14/picture/master/img/20200814130618.png" alt="image-20200814120326930"></p>          </div><div class="justified-gallery"><p><img src="https://raw.githubusercontent.com/stardust14/picture/master/img/20200814130624.png" alt="image-20200814120432171"></p>          </div><ul><li>帕斯卡矩阵的第一行元素和第一列元素都为1，其余位置的元素是该元素的左边元素与上面元素相加，即P(ij)=P(ij-1)+P(i-1j),且P(i,1)=1,P(1.j)=1。</li><li>函数pascal(n)生成一个n阶帕斯卡矩阵。</li></ul><p><img src="https://raw.githubusercontent.com/stardust14/picture/master/img/20200814130652.png" alt="image-20200814120723165"></p><p>ex:生成5阶帕斯卡矩阵，验证它的逆矩阵的所有元素也为整数。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; format <span class="built_in">rat</span></span><br><span class="line">&gt;&gt; P=<span class="built_in">pascal</span>(<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line">P =</span><br><span class="line"></span><br><span class="line">       <span class="number">1</span>              <span class="number">1</span>              <span class="number">1</span>              <span class="number">1</span>              <span class="number">1</span>       </span><br><span class="line">       <span class="number">1</span>              <span class="number">2</span>              <span class="number">3</span>              <span class="number">4</span>              <span class="number">5</span>       </span><br><span class="line">       <span class="number">1</span>              <span class="number">3</span>              <span class="number">6</span>             <span class="number">10</span>             <span class="number">15</span>       </span><br><span class="line">       <span class="number">1</span>              <span class="number">4</span>             <span class="number">10</span>             <span class="number">20</span>             <span class="number">35</span>       </span><br><span class="line">       <span class="number">1</span>              <span class="number">5</span>             <span class="number">15</span>             <span class="number">35</span>             <span class="number">70</span>       </span><br><span class="line"></span><br><span class="line"> </span><br><span class="line">&gt;&gt; inv(P)</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">       <span class="number">5</span>            <span class="number">-10</span>             <span class="number">10</span>             <span class="number">-5</span>              <span class="number">1</span>       </span><br><span class="line">     <span class="number">-10</span>             <span class="number">30</span>            <span class="number">-35</span>             <span class="number">19</span>             <span class="number">-4</span>       </span><br><span class="line">      <span class="number">10</span>            <span class="number">-35</span>             <span class="number">46</span>            <span class="number">-27</span>              <span class="number">6</span>       </span><br><span class="line">      <span class="number">-5</span>             <span class="number">19</span>            <span class="number">-27</span>             <span class="number">17</span>             <span class="number">-4</span>       </span><br><span class="line">       <span class="number">1</span>             <span class="number">-4</span>              <span class="number">6</span>             <span class="number">-4</span>              <span class="number">1</span>   </span><br></pre></td></tr></table></figure><h2 id="矩阵变换"><a class="header-anchor" href="#矩阵变换">¶</a>矩阵变换</h2><ul><li>对角阵</li><li>三角阵</li><li>矩阵的转置</li><li>矩阵的旋转</li><li>矩阵的翻转</li></ul><h3 id="对角阵"><a class="header-anchor" href="#对角阵">¶</a>对角阵</h3><ul><li>对角矩阵:只有对角线上有非零元素的矩阵。</li><li>数量矩阵:对角线上的元素相等的对角矩阵。</li><li>单位矩阵:对角线上的元素都为1的对角矩阵。</li></ul><h4 id="提取矩阵的对角线元素"><a class="header-anchor" href="#提取矩阵的对角线元素">¶</a>提取矩阵的对角线元素</h4><ul><li>diag(A): 提取矩阵A主对角线元素，产生一个列向量 。</li><li>diag(A,k): 提取矩阵A第k条对角线的元素，产生一个列向量。</li></ul><p><img src="https://raw.githubusercontent.com/stardust14/picture/master/img/20200814130610.png" alt="image-20200814130607966"></p><blockquote><p>对角线往上为第n条，往下为第（-n）条，主对角线为第0条对角线</p></blockquote><h4 id="构造对角矩阵"><a class="header-anchor" href="#构造对角矩阵">¶</a>构造对角矩阵</h4><ul><li>diag(V): 以向量V为主对角线元素，产生对角矩阵。</li><li>diag(V,k):以向量V为第k条对角线元素，产生对角矩阵。</li></ul><p>ex:例1先建立5x 5矩阵A，然后将A的第一行元素乘以1， 第二行乘以2，····，第五行乘以5。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; A=[<span class="number">7</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">5</span>;<span class="number">3</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">4</span>,<span class="number">1</span>;<span class="number">4</span>,<span class="number">0</span>,<span class="number">3</span>,<span class="number">0</span>,<span class="number">2</span>;<span class="number">1</span>,<span class="number">1</span>,<span class="number">9</span>,<span class="number">2</span>,<span class="number">3</span>;<span class="number">1</span>,<span class="number">8</span>,<span class="number">5</span>,<span class="number">2</span>,<span class="number">9</span>];</span><br><span class="line">&gt;&gt; D=<span class="built_in">diag</span>(<span class="number">1</span>:<span class="number">5</span>);</span><br><span class="line">&gt;&gt; D*A</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">       <span class="number">7</span>              <span class="number">0</span>              <span class="number">1</span>              <span class="number">0</span>              <span class="number">5</span>       </span><br><span class="line">       <span class="number">6</span>             <span class="number">10</span>             <span class="number">14</span>              <span class="number">8</span>              <span class="number">2</span>       </span><br><span class="line">      <span class="number">12</span>              <span class="number">0</span>              <span class="number">9</span>              <span class="number">0</span>              <span class="number">6</span>       </span><br><span class="line">       <span class="number">4</span>              <span class="number">4</span>             <span class="number">36</span>              <span class="number">8</span>             <span class="number">12</span>       </span><br><span class="line">       <span class="number">5</span>             <span class="number">40</span>             <span class="number">25</span>             <span class="number">10</span>             <span class="number">45</span>  </span><br></pre></td></tr></table></figure><blockquote><p>左乘行变换，石乘列变换</p></blockquote><p>think:要将A的各列元素分别乘以对角阵的对角线元素，如何实现?</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; A=[<span class="number">7</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">5</span>;<span class="number">3</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">4</span>,<span class="number">1</span>;<span class="number">4</span>,<span class="number">0</span>,<span class="number">3</span>,<span class="number">0</span>,<span class="number">2</span>;<span class="number">1</span>,<span class="number">1</span>,<span class="number">9</span>,<span class="number">2</span>,<span class="number">3</span>;<span class="number">1</span>,<span class="number">8</span>,<span class="number">5</span>,<span class="number">2</span>,<span class="number">9</span>];</span><br><span class="line">&gt;&gt; D=<span class="built_in">diag</span>(<span class="number">1</span>:<span class="number">5</span>);</span><br><span class="line">&gt;&gt; A*D</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">       <span class="number">7</span>              <span class="number">0</span>              <span class="number">3</span>              <span class="number">0</span>             <span class="number">25</span>       </span><br><span class="line">       <span class="number">3</span>             <span class="number">10</span>             <span class="number">21</span>             <span class="number">16</span>              <span class="number">5</span>       </span><br><span class="line">       <span class="number">4</span>              <span class="number">0</span>              <span class="number">9</span>              <span class="number">0</span>             <span class="number">10</span>       </span><br><span class="line">       <span class="number">1</span>              <span class="number">2</span>             <span class="number">27</span>              <span class="number">8</span>             <span class="number">15</span>       </span><br><span class="line">       <span class="number">1</span>             <span class="number">16</span>             <span class="number">15</span>              <span class="number">8</span>             <span class="number">45</span>       </span><br></pre></td></tr></table></figure><h3 id="三角阵"><a class="header-anchor" href="#三角阵">¶</a>三角阵</h3><ul><li>上三角阵:矩阵的对角线以下的元素全为零的矩阵。</li><li>下三角阵:对角线以上的元素全为零的矩阵。</li></ul><h4 id="上三角矩阵"><a class="header-anchor" href="#上三角矩阵">¶</a>上三角矩阵</h4><ul><li>triu(A): 提取矩阵A的主对角线及以上的元素。</li><li>triulA,k): 提取矩阵A的第k条对角线及以上的元素。</li></ul><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; <span class="built_in">triu</span>(<span class="built_in">ones</span>(<span class="number">4</span>),<span class="number">-1</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">       <span class="number">1</span>              <span class="number">1</span>              <span class="number">1</span>              <span class="number">1</span>       </span><br><span class="line">       <span class="number">1</span>              <span class="number">1</span>              <span class="number">1</span>              <span class="number">1</span>       </span><br><span class="line">       <span class="number">0</span>              <span class="number">1</span>              <span class="number">1</span>              <span class="number">1</span>       </span><br><span class="line">       <span class="number">0</span>              <span class="number">0</span>              <span class="number">1</span>              <span class="number">1</span>  </span><br></pre></td></tr></table></figure><h4 id="下三角矩阵"><a class="header-anchor" href="#下三角矩阵">¶</a>下三角矩阵</h4><p>在MATLAB中，提取矩阵A的下三角矩阵的函数是tril,其用法与triu函数<strong>完全相同</strong>。</p><h3 id="矩阵的转置"><a class="header-anchor" href="#矩阵的转置">¶</a>矩阵的转置</h3><ul><li>转置运算符是小数点后面接单引号(.’)。</li><li>共轭转置，其运算符是单引号(’)，它在转置的基础上还要取每个数的复共轭。</li></ul><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; A = [<span class="number">1</span>,<span class="number">3</span>;<span class="number">3</span>+<span class="number">4</span><span class="built_in">i</span>,<span class="number">1</span><span class="number">-2</span><span class="built_in">i</span>]</span><br><span class="line"></span><br><span class="line">A =</span><br><span class="line"></span><br><span class="line">       <span class="number">1</span>        +    <span class="number">0</span><span class="built_in">i</span>             <span class="number">3</span>        +    <span class="number">0</span><span class="built_in">i</span>      </span><br><span class="line">       <span class="number">3</span>        +    <span class="number">4</span><span class="built_in">i</span>             <span class="number">1</span>        -    <span class="number">2</span><span class="built_in">i</span>      </span><br><span class="line"></span><br><span class="line">&gt;&gt; A.&#x27;</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">       <span class="number">1</span>        +    <span class="number">0</span><span class="built_in">i</span>             <span class="number">3</span>        +    <span class="number">4</span><span class="built_in">i</span>      </span><br><span class="line">       <span class="number">3</span>        +    <span class="number">0</span><span class="built_in">i</span>             <span class="number">1</span>        -    <span class="number">2</span><span class="built_in">i</span>      </span><br><span class="line"></span><br><span class="line">&gt;&gt; A&#x27;</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">       <span class="number">1</span>        +    <span class="number">0</span><span class="built_in">i</span>             <span class="number">3</span>        -    <span class="number">4</span><span class="built_in">i</span>      </span><br><span class="line">       <span class="number">3</span>        +    <span class="number">0</span><span class="built_in">i</span>             <span class="number">1</span>        +    <span class="number">2</span><span class="built_in">i</span>   </span><br></pre></td></tr></table></figure><h3 id="矩阵的旋转"><a class="header-anchor" href="#矩阵的旋转">¶</a>矩阵的旋转</h3><p><strong>rot90(A,k)</strong>:将矩阵A<u><strong>逆时针</strong></u>方向旋转90°的k倍，当k为1时可省略。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; A=[<span class="number">1</span>,<span class="number">3</span>,<span class="number">2</span>;<span class="number">-3</span>,<span class="number">2</span>,<span class="number">1</span>;<span class="number">4</span>,<span class="number">1</span>,<span class="number">2</span>];</span><br><span class="line">&gt;&gt; <span class="built_in">rot90</span>(A)</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">       <span class="number">2</span>              <span class="number">1</span>              <span class="number">2</span>       </span><br><span class="line">       <span class="number">3</span>              <span class="number">2</span>              <span class="number">1</span>       </span><br><span class="line">       <span class="number">1</span>             <span class="number">-3</span>              <span class="number">4</span>       </span><br><span class="line">&gt;&gt; <span class="built_in">rot90</span>(A,<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">       <span class="number">2</span>              <span class="number">1</span>              <span class="number">4</span>       </span><br><span class="line">       <span class="number">1</span>              <span class="number">2</span>             <span class="number">-3</span>       </span><br><span class="line">       <span class="number">2</span>              <span class="number">3</span>              <span class="number">1</span>     </span><br></pre></td></tr></table></figure><h3 id="矩阵的翻转"><a class="header-anchor" href="#矩阵的翻转">¶</a>矩阵的翻转</h3><ul><li>fliplrlA): 对矩阵A实施左右翻转。</li><li>flipud(A): 对矩阵A实施上下翻转。</li></ul><p>ex:验证魔方阵的主对角线、副对角线元素之和相等。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; A=<span class="built_in">magic</span>(<span class="number">5</span>);</span><br><span class="line">&gt;&gt; D1=<span class="built_in">diag</span>(A);</span><br><span class="line">&gt;&gt; sum(D1)</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">      <span class="number">65</span>       </span><br><span class="line"></span><br><span class="line">&gt;&gt; B=<span class="built_in">flipud</span>(A);</span><br><span class="line">&gt;&gt; D2=<span class="built_in">diag</span>(B);</span><br><span class="line">&gt;&gt; sum(D2)</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">      <span class="number">65</span>       </span><br></pre></td></tr></table></figure><h3 id="矩阵的求逆"><a class="header-anchor" href="#矩阵的求逆">¶</a>矩阵的求逆</h3><ul><li>对于一个方阵A，如果存在一个与其同阶的方阵B，使得AB=BA=I (I为单位矩阵)，则称B为A的逆矩阵，当然A也是B的逆矩阵。</li><li>inv(A):求方阵A的逆矩阵。</li></ul><p>ex:用求逆矩阵的方法解线性方程组。</p><p><img src="https://raw.githubusercontent.com/stardust14/picture/master/img/20200814133537.png" alt="image-20200814133535069"></p><p>在线性方程组Ax=b两边各左乘A-1,有<code>A^（-1）*Ax=A^（-1）*b</code>，由于<code>A^(-1)A=1</code>故得<code>x=A^*(-1)b</code>。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; A=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>;<span class="number">1</span>,<span class="number">4</span>,<span class="number">9</span>;<span class="number">1</span>,<span class="number">8</span>,<span class="number">27</span>];</span><br><span class="line">&gt;&gt; b=[<span class="number">5</span>;<span class="number">-2</span>;<span class="number">6</span>];</span><br><span class="line">&gt;&gt; x=inv(A)*b</span><br><span class="line"></span><br><span class="line">x =</span><br><span class="line"></span><br><span class="line">      <span class="number">23</span>       </span><br><span class="line">     <span class="number">-29</span>/<span class="number">2</span>     </span><br><span class="line">      <span class="number">11</span>/<span class="number">3</span>     </span><br><span class="line"></span><br><span class="line">&gt;&gt; x=A\b</span><br><span class="line"></span><br><span class="line">x =</span><br><span class="line"></span><br><span class="line">      <span class="number">23</span>       </span><br><span class="line">     <span class="number">-29</span>/<span class="number">2</span>     </span><br><span class="line">      <span class="number">11</span>/<span class="number">3</span>   </span><br></pre></td></tr></table></figure><h2 id="矩阵求值"><a class="header-anchor" href="#矩阵求值">¶</a>矩阵求值</h2><ul><li>矩阵的行列式值</li><li>矩阵的秩</li><li>矩阵的迹</li><li>矩阵的范数</li><li>矩阵的条件数</li><li>······</li></ul><h3 id="方阵的行列式"><a class="header-anchor" href="#方阵的行列式">¶</a>方阵的行列式</h3><ul><li>把一个方阵看作一个行列式，并对其按行列式的规则求值， 这个值就称为方阵所对应的行列式的值。</li><li>det(A): 求方阵A所对应的行列式的值。</li></ul><p>ex:验证detIA^-1)=1/det/A)。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; format <span class="built_in">rat</span></span><br><span class="line">&gt;&gt; A = [<span class="number">1</span>,<span class="number">3</span>,<span class="number">2</span>;<span class="number">-3</span>,<span class="number">2</span>,<span class="number">1</span>;<span class="number">4</span>,<span class="number">1</span>,<span class="number">2</span>];</span><br><span class="line">&gt;&gt; det(inv(A))</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">       <span class="number">1</span>/<span class="number">11</span>    </span><br><span class="line"></span><br><span class="line">&gt;&gt; <span class="number">1</span>/det(A)</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">       <span class="number">1</span>/<span class="number">11</span>    </span><br></pre></td></tr></table></figure><h3 id="矩阵的秩"><a class="header-anchor" href="#矩阵的秩">¶</a>矩阵的秩</h3><ul><li>矩阵线性无关的行数或列数称为矩阵的秩。</li><li>rank(A): 求矩阵A的秩。</li></ul><p>ex:求3~20阶魔方阵的秩。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> n=<span class="number">3</span>:<span class="number">20</span></span><br><span class="line">    r(n)=rank(<span class="built_in">magic</span>(n));</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">bar(r)</span><br><span class="line">grid on</span><br><span class="line">axis([<span class="number">2</span>,<span class="number">21</span>,<span class="number">0</span>,<span class="number">20</span>])</span><br></pre></td></tr></table></figure><ul><li>奇数阶魔方阵秩为n，即奇数阶魔方阵是满秩矩阵。</li><li>一重偶数阶魔方阵秩为n/2+2 ( n是2的倍数，但非4的倍数)。</li><li>双重偶数阶魔方阵秩均为3 ( 阶数是4的倍数)。</li></ul><p><img src="https://raw.githubusercontent.com/stardust14/picture/master/img/20200814155037.png" alt="image-20200814155035845"></p><blockquote><p>n=3  4  5  6  7  8  9  10  11  12  13  14  15  16  17  18 19 20<br>r=3  3  5  5  7  3  9    7   11  3     13   9   15   3    17  11 19  3</p></blockquote><h3 id="矩阵的迹"><a class="header-anchor" href="#矩阵的迹">¶</a>矩阵的迹</h3><ul><li>矩阵的迹等于矩阵的对角线元素之和，也等于矩阵的特征值之和。</li><li>trace(A): 求矩阵A的迹。</li></ul><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; A = [<span class="number">1</span>,<span class="number">3</span>,<span class="number">2</span>;<span class="number">-3</span>,<span class="number">2</span>,<span class="number">1</span>;<span class="number">4</span> <span class="number">1</span> <span class="number">2</span>];</span><br><span class="line">&gt;&gt; b=trace(A)</span><br><span class="line"></span><br><span class="line">b =</span><br><span class="line"></span><br><span class="line">       <span class="number">5</span>       </span><br><span class="line"></span><br><span class="line">&gt;&gt; t=sum(<span class="built_in">diag</span>(A))</span><br><span class="line"></span><br><span class="line">t =</span><br><span class="line"></span><br><span class="line">       <span class="number">5</span>  </span><br></pre></td></tr></table></figure><h3 id="向量和矩阵的范数"><a class="header-anchor" href="#向量和矩阵的范数">¶</a>向量和矩阵的范数</h3><p>矩阵或向量的范数用来度量矩阵或向量在某种意义下的长度。</p><h4 id="向量的3种常用范数"><a class="header-anchor" href="#向量的3种常用范数">¶</a>向量的3种常用范数</h4><ul><li><p>向量1——范数:向量元素的绝对值之和。</p><p><img src="https://raw.githubusercontent.com/stardust14/picture/master/img/20200814155917.png" alt="image-20200814155915318"></p></li><li><p>向量2——范数:向量元素绝对值的平方和的平方根。</p><p><img src="https://raw.githubusercontent.com/stardust14/picture/master/img/20200814155932.png" alt="image-20200814155931635"></p></li><li><p>向量∞——范数:所有向量元素绝对值中的最大值。</p><p><img src="https://raw.githubusercontent.com/stardust14/picture/master/img/20200814155948.png" alt="image-20200814155947134"></p></li></ul><p>在MATLAB中，求向量范数的函数为:</p><ul><li>norm(V)或norm(V,2): 计算向量V的2——范数。</li><li>norm(V,1): 计算向量V的1——范数。</li><li>norm(V,inf): 计算向量V的∞——范数。</li></ul><p>从属于3种向量范数，矩阵范数计算公式如下。</p><ul><li><p>矩阵A的1——范数:矩阵列元素绝对值之和的最大值。</p><p><img src="https://raw.githubusercontent.com/stardust14/picture/master/img/20200814160554.png" alt="image-20200814160553474"></p></li><li><p>矩阵A的2——范数: A’A矩阵的最大特征值的平方根。</p><p><img src="https://raw.githubusercontent.com/stardust14/picture/master/img/20200814160610.png" alt="image-20200814160608837"></p><blockquote><p>其中λ1为A’A的最大特征值。</p></blockquote></li><li><p>矩阵A的∞——范数:所有矩阵行元素绝对值之和的最大值。</p><p><img src="https://raw.githubusercontent.com/stardust14/picture/master/img/20200814160713.png" alt="image-20200814160711963"></p></li></ul><h4 id="矩阵的范数"><a class="header-anchor" href="#矩阵的范数">¶</a>矩阵的范数</h4><p>MATLAB提供了求3种矩阵范数的函数，其函数调用格式与求向量的范数的函数完全相同。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; x=[<span class="number">2</span> <span class="number">0</span> <span class="number">1</span>;<span class="number">-1</span> <span class="number">1</span> <span class="number">0</span>;<span class="number">-3</span> <span class="number">3</span> <span class="number">0</span>];</span><br><span class="line">&gt;&gt; n=norm(x)</span><br><span class="line"></span><br><span class="line">n =</span><br><span class="line"></span><br><span class="line">    <span class="number">5909</span>/<span class="number">1251</span>  </span><br><span class="line"></span><br><span class="line">&gt;&gt; n=norm(x,<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">n =</span><br><span class="line"></span><br><span class="line">       <span class="number">6</span>     </span><br></pre></td></tr></table></figure><h3 id="矩阵的条件数"><a class="header-anchor" href="#矩阵的条件数">¶</a>矩阵的条件数</h3><ul><li>矩阵A的条件数等于A的范数与A的逆矩阵的范数的乘积。</li><li>条件数越接近于1，矩阵的性能越好，反之，矩阵的性能越差。</li></ul><p>在MATLAB中，计算矩阵A的3种条件数的函数是:</p><ul><li>cond(A,1): 计算A的1——范数下的条件数。</li><li>cond(A)或cond(A,2): 计算A的2——范数下的条件数。</li><li>cond(A,inf): 计算A的∞——范数下的条件数。</li></ul><p>ex:求2~10阶希尔伯特矩阵的条件数。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> n=<span class="number">2</span>:<span class="number">10</span></span><br><span class="line">    c(n)=cond(<span class="built_in">hilb</span>(n));</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">format long</span><br><span class="line">c&#x27;</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">   <span class="number">1.0e+13</span> *</span><br><span class="line"></span><br><span class="line">                   <span class="number">0</span></span><br><span class="line">   <span class="number">0.000000000001928</span></span><br><span class="line">   <span class="number">0.000000000052406</span></span><br><span class="line">   <span class="number">0.000000001551374</span></span><br><span class="line">   <span class="number">0.000000047660725</span></span><br><span class="line">   <span class="number">0.000001495105864</span></span><br><span class="line">   <span class="number">0.000047536735674</span></span><br><span class="line">   <span class="number">0.001525757555589</span></span><br><span class="line">   <span class="number">0.049315409793086</span></span><br><span class="line">   <span class="number">1.602519837209610</span></span><br></pre></td></tr></table></figure><h2 id="矩阵的特征值与特征向量"><a class="header-anchor" href="#矩阵的特征值与特征向量">¶</a>矩阵的特征值与特征向量</h2><h3 id="矩阵特征值的数学定义"><a class="header-anchor" href="#矩阵特征值的数学定义">¶</a>矩阵特征值的数学定义</h3><p>设A是n阶方阵，如果存在常数λ和n维非零列向量x，使得等式Ax= λ x成立，则称λ为A的特征值，是对应特征值λ的特征向量。</p><h3 id="求矩阵的特征值与特征向量"><a class="header-anchor" href="#求矩阵的特征值与特征向量">¶</a>求矩阵的特征值与特征向量</h3><p>函数调用格式有两种:</p><ul><li>E=eig(A) :求矩阵A的全部特征值，构成向量E。</li><li>[X,D]=eig(A) :求矩阵A的全部<strong>特征值</strong>，构成对角阵D,并产生矩阵X，X各列是相应的<strong>特征向量</strong>。</li></ul><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; A=[<span class="number">1</span>,<span class="number">1</span> <span class="number">0</span>;<span class="number">1</span> <span class="number">0</span> <span class="number">5</span>;<span class="number">1</span> <span class="number">10</span> <span class="number">2</span>];</span><br><span class="line">&gt;&gt; [X,D]=eig(A)</span><br><span class="line"></span><br><span class="line">X =</span><br><span class="line"></span><br><span class="line">   <span class="number">0.072196186226992</span>   <span class="number">0.975064063761619</span>   <span class="number">0.088619224195265</span></span><br><span class="line">   <span class="number">0.523368974057523</span>  <span class="number">-0.075013465822402</span>  <span class="number">-0.635606218080313</span></span><br><span class="line">   <span class="number">0.849042182514069</span>  <span class="number">-0.208861321230112</span>   <span class="number">0.766910274178584</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">D =</span><br><span class="line"></span><br><span class="line">   <span class="number">8.249260679947780</span>                   <span class="number">0</span>                   <span class="number">0</span></span><br><span class="line">                   <span class="number">0</span>   <span class="number">0.923068166892526</span>                   <span class="number">0</span></span><br><span class="line">                   <span class="number">0</span>                   <span class="number">0</span>  <span class="number">-6.172328846840312</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; A*X(:,<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">   <span class="number">0.595565160284515</span></span><br><span class="line">   <span class="number">4.317407098797336</span></span><br><span class="line">   <span class="number">7.003970291830360</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; D(<span class="number">1</span>)*X(:,<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">   <span class="number">0.595565160284514</span></span><br><span class="line">   <span class="number">4.317407098797333</span></span><br><span class="line">   <span class="number">7.003970291830354</span></span><br></pre></td></tr></table></figure><p>ex:设</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200819212852.png" alt="image-20200814162922537"></p><p>又设λi为R的特征值，λi为S的特征值，x= ( <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>α</mi><mn>1</mn></mrow><annotation encoding="application/x-tex">\alpha1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mord">1</span></span></span></span>,<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>α</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">\alpha2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mord">2</span></span></span></span>,<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>α</mi><mn>3</mn></mrow><annotation encoding="application/x-tex">\alpha3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mord">3</span></span></span></span>)'是R对应于hi的特征向量，yj= ( β1, βB2) '是S对应于hj的特征向量，试验证:<br>(1) <em>λ</em>i、<em>λ</em>j为A的特征值。<br>(2) pi=  ( <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>α</mi><mn>1</mn></mrow><annotation encoding="application/x-tex">\alpha1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mord">1</span></span></span></span>,<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>α</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">\alpha2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mord">2</span></span></span></span>,<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>α</mi><mn>3</mn></mrow><annotation encoding="application/x-tex">\alpha3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mord">3</span></span></span></span>,0,0) '是A对应于<em>λ</em>i的特征向量，qj= (0,0,0, β1, β2) '是A对应于λj的特征向量。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">R=[<span class="number">-1</span>,<span class="number">2</span>,<span class="number">0</span>;<span class="number">2</span>,<span class="number">-4</span>,<span class="number">1</span>;<span class="number">1</span>,<span class="number">1</span>,<span class="number">-6</span>];</span><br><span class="line">S=[<span class="number">1</span>,<span class="number">2</span>;<span class="number">2</span>,<span class="number">3</span>];</span><br><span class="line">A=[R,<span class="built_in">zeros</span>(<span class="number">3</span>,<span class="number">2</span>);<span class="built_in">zeros</span>(<span class="number">2</span>,<span class="number">3</span>),S];</span><br><span class="line">[X1,d1]=eig(R)</span><br><span class="line">[X2,d2]=eig(S)</span><br><span class="line">[X3,d3]=eig(A)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">X1 =</span><br><span class="line"></span><br><span class="line">   <span class="number">0.855336847706575</span>   <span class="number">0.451748808798346</span>   <span class="number">0.189889692402449</span></span><br><span class="line">   <span class="number">0.470284611344323</span>  <span class="number">-0.839453879712591</span>  <span class="number">-0.511105640718618</span></span><br><span class="line">   <span class="number">0.217327543786097</span>  <span class="number">-0.302059923830942</span>   <span class="number">0.838279743728139</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">d1 =</span><br><span class="line"></span><br><span class="line">   <span class="number">0.099647729675864</span>                   <span class="number">0</span>                   <span class="number">0</span></span><br><span class="line">                   <span class="number">0</span>  <span class="number">-4.716463058067783</span>                   <span class="number">0</span></span><br><span class="line">                   <span class="number">0</span>                   <span class="number">0</span>  <span class="number">-6.383184671608076</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">X2 =</span><br><span class="line"></span><br><span class="line">  <span class="number">-0.850650808352040</span>   <span class="number">0.525731112119133</span></span><br><span class="line">   <span class="number">0.525731112119133</span>   <span class="number">0.850650808352040</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">d2 =</span><br><span class="line"></span><br><span class="line">  <span class="number">-0.236067977499790</span>                   <span class="number">0</span></span><br><span class="line">                   <span class="number">0</span>   <span class="number">4.236067977499790</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">X3 =</span><br><span class="line"></span><br><span class="line">   <span class="number">0.855336847706575</span>   <span class="number">0.451748808798346</span>   <span class="number">0.189889692402449</span>                   <span class="number">0</span>                   <span class="number">0</span></span><br><span class="line">   <span class="number">0.470284611344323</span>  <span class="number">-0.839453879712591</span>  <span class="number">-0.511105640718618</span>                   <span class="number">0</span>                   <span class="number">0</span></span><br><span class="line">   <span class="number">0.217327543786097</span>  <span class="number">-0.302059923830942</span>   <span class="number">0.838279743728139</span>                   <span class="number">0</span>                   <span class="number">0</span></span><br><span class="line">                   <span class="number">0</span>                   <span class="number">0</span>                   <span class="number">0</span>  <span class="number">-0.850650808352040</span>  <span class="number">-0.525731112119133</span></span><br><span class="line">                   <span class="number">0</span>                   <span class="number">0</span>                   <span class="number">0</span>   <span class="number">0.525731112119133</span>  <span class="number">-0.850650808352040</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">d3 =</span><br><span class="line"></span><br><span class="line">   <span class="number">0.099647729675864</span>                   <span class="number">0</span>                   <span class="number">0</span>                   <span class="number">0</span>                   <span class="number">0</span></span><br><span class="line">                   <span class="number">0</span>  <span class="number">-4.716463058067783</span>                   <span class="number">0</span>                   <span class="number">0</span>                   <span class="number">0</span></span><br><span class="line">                   <span class="number">0</span>                   <span class="number">0</span>  <span class="number">-6.383184671608076</span>                   <span class="number">0</span>                   <span class="number">0</span></span><br><span class="line">                   <span class="number">0</span>                   <span class="number">0</span>                   <span class="number">0</span>  <span class="number">-0.236067977499790</span>                   <span class="number">0</span></span><br><span class="line">                   <span class="number">0</span>                   <span class="number">0</span>                   <span class="number">0</span>                   <span class="number">0</span>   <span class="number">4.236067977499790</span></span><br></pre></td></tr></table></figure><h3 id="特征值的几何意义"><a class="header-anchor" href="#特征值的几何意义">¶</a>特征值的几何意义</h3><p><img src="https://raw.githubusercontent.com/stardust14/picture/master/img/20200814170219.png" alt="image-20200814170216676"></p><p>MATLAB提供了一个eigshow函数， 可以演示单位圆.上的向量x和Ax之间的关系，其运行画面如图所示。</p><p><img src="https://raw.githubusercontent.com/stardust14/picture/master/img/20200814170404.png" alt="image-20200814170402647"></p><p>ex:已知大写字母M的各个结点坐标如表所示。</p><table><thead><tr><th>x</th><th>0</th><th>0.5</th><th>0.5</th><th>3</th><th>5.5</th><th>5.5</th><th>6</th><th>6</th><th>3</th><th>0</th></tr></thead><tbody><tr><td>y</td><td>0</td><td>0</td><td>6</td><td>0</td><td>6</td><td>0</td><td>0</td><td>8</td><td>1</td><td>8</td></tr></tbody></table><p>(1)绘制M的图形。<br>(2)设<img src="https://raw.githubusercontent.com/stardust14/picture/master/img/20200814170708.png" alt="image-20200814170706706"> ，用A对M的结点坐标进行变换，并绘制变换后的图形。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">x=[<span class="number">0</span>,<span class="number">0.5</span>,<span class="number">0.5</span>,<span class="number">3</span>,<span class="number">5.5</span>,<span class="number">5.5</span>,<span class="number">6</span>,<span class="number">6</span>,<span class="number">3</span>,<span class="number">0</span>;<span class="number">0</span>,<span class="number">0</span>,<span class="number">6</span>,<span class="number">0</span>,<span class="number">6</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">8</span>,<span class="number">1</span>,<span class="number">8</span>];</span><br><span class="line">A=[<span class="number">1</span>,<span class="number">0.5</span>;<span class="number">0</span>,<span class="number">1</span>];</span><br><span class="line">y=A*x;</span><br><span class="line">subplot(<span class="number">2</span>,<span class="number">2</span>,<span class="number">1</span>);</span><br><span class="line">fill(x(<span class="number">1</span>,:),x(<span class="number">2</span>,:),<span class="string">&#x27;r&#x27;</span>);</span><br><span class="line">subplot(<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>);</span><br><span class="line">fill(y(<span class="number">1</span>,:),y(<span class="number">2</span>,:),<span class="string">&#x27;r&#x27;</span>);</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/stardust14/picture/master/img/20200814170822.png" alt="image-20200814170821221"></p><h2 id="稀疏矩阵"><a class="header-anchor" href="#稀疏矩阵">¶</a>稀疏矩阵</h2><ul><li>矩阵的存储方式</li><li>稀疏存储方式的产生.</li><li>稀疏矩阵的应用实例</li></ul><h3 id="矩阵的存储方式"><a class="header-anchor" href="#矩阵的存储方式">¶</a>矩阵的存储方式</h3><ul><li>完全存储方式</li><li>稀疏存储方式</li></ul><p>稀疏存储方式只存储矩阵的非零元素的值及其位置，即行号和列号。</p><blockquote><p>注意，采用稀疏存储方式时，矩阵元素的存储顺序并没有改变，也是按列的顺序进行存储。</p></blockquote><h3 id="稀疏存储方式的产生"><a class="header-anchor" href="#稀疏存储方式的产生">¶</a>稀疏存储方式的产生</h3><h4 id="完全存储方式与稀疏存储方式之间的转化"><a class="header-anchor" href="#完全存储方式与稀疏存储方式之间的转化">¶</a>完全存储方式与稀疏存储方式之间的转化</h4><ul><li>A=sparse(S): 将矩阵S转化为稀疏存储方式的矩阵A。</li><li>S=ful(A): 将矩阵A转化为完全存储方式的矩阵S。</li></ul><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; A=sparse(<span class="built_in">eye</span>(<span class="number">5</span>))</span><br><span class="line"></span><br><span class="line">A =</span><br><span class="line"></span><br><span class="line">   (<span class="number">1</span>,<span class="number">1</span>)        <span class="number">1</span></span><br><span class="line">   (<span class="number">2</span>,<span class="number">2</span>)        <span class="number">1</span></span><br><span class="line">   (<span class="number">3</span>,<span class="number">3</span>)        <span class="number">1</span></span><br><span class="line">   (<span class="number">4</span>,<span class="number">4</span>)        <span class="number">1</span></span><br><span class="line">   (<span class="number">5</span>,<span class="number">5</span>)        <span class="number">1</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; B=full(A)</span><br><span class="line"></span><br><span class="line">B =</span><br><span class="line"></span><br><span class="line">     <span class="number">1</span>     <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span></span><br><span class="line">     <span class="number">0</span>     <span class="number">1</span>     <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span></span><br><span class="line">     <span class="number">0</span>     <span class="number">0</span>     <span class="number">1</span>     <span class="number">0</span>     <span class="number">0</span></span><br><span class="line">     <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>     <span class="number">1</span>     <span class="number">0</span></span><br><span class="line">     <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>     <span class="number">1</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; whos</span><br><span class="line">  Name      Size            Bytes  Class     Attributes</span><br><span class="line"></span><br><span class="line">  A         <span class="number">5</span>x5               <span class="number">128</span>  double    sparse    </span><br><span class="line">  B         <span class="number">5</span>x5               <span class="number">200</span>  double            </span><br></pre></td></tr></table></figure><blockquote><p>所占的存储空间不一样</p></blockquote><h4 id="直接建立稀疏存储矩阵"><a class="header-anchor" href="#直接建立稀疏存储矩阵">¶</a>直接建立稀疏存储矩阵</h4><p>sparse函数的其他调用格式:</p><ul><li>sparse(m,n):生成一个m x n的所有元素都是零的稀疏矩阵。</li><li>sparse(u,v,S):其中u、v、S是3个等长的向量。S是要建立的稀疏存储矩阵的非零元素，u(i)、 v(i)分别是S(i)的行和列下标。</li></ul><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">A =</span><br><span class="line"></span><br><span class="line">   (<span class="number">2</span>,<span class="number">1</span>)        <span class="number">5</span></span><br><span class="line">   (<span class="number">1</span>,<span class="number">2</span>)        <span class="number">4</span></span><br><span class="line">   (<span class="number">2</span>,<span class="number">4</span>)       <span class="number">-7</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; B=full(A)</span><br><span class="line"></span><br><span class="line">B =</span><br><span class="line"></span><br><span class="line">     <span class="number">0</span>     <span class="number">4</span>     <span class="number">0</span>     <span class="number">0</span></span><br><span class="line">     <span class="number">5</span>     <span class="number">0</span>     <span class="number">0</span>    <span class="number">-7</span></span><br></pre></td></tr></table></figure><p>使用spconvert函数直接建立稀疏存储矩阵，其调用格式为:<br>B=spconvert(A)</p><p>A为一个m x 3或m x 4的矩阵，其每行表示一个非零元素，m是非零元素的个数。</p><p>●Ali,1)表示第i个非零元素所在的行。<br>●Ali,2)表示第i个非零元素所在的列。<br>●Ali,3)表示第i个非零元素值的实部。<br>●A(i,4)表示第i个非零元素值的虚部。<br>若矩阵的全部元素都是实数，则无须第4列。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; A=[<span class="number">2</span> <span class="number">2</span> <span class="number">1</span>;<span class="number">2</span> <span class="number">1</span> <span class="number">-1</span>;<span class="number">2</span> <span class="number">4</span> <span class="number">3</span>]</span><br><span class="line"></span><br><span class="line">A =</span><br><span class="line"></span><br><span class="line">     <span class="number">2</span>     <span class="number">2</span>     <span class="number">1</span></span><br><span class="line">     <span class="number">2</span>     <span class="number">1</span>    <span class="number">-1</span></span><br><span class="line">     <span class="number">2</span>     <span class="number">4</span>     <span class="number">3</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; B=spconvert(A)</span><br><span class="line"></span><br><span class="line">B =</span><br><span class="line"></span><br><span class="line">   (<span class="number">2</span>,<span class="number">1</span>)       <span class="number">-1</span></span><br><span class="line">   (<span class="number">2</span>,<span class="number">2</span>)        <span class="number">1</span></span><br><span class="line">   (<span class="number">2</span>,<span class="number">4</span>)        <span class="number">3</span></span><br></pre></td></tr></table></figure><h4 id="带状稀疏矩阵的稀疏存储"><a class="header-anchor" href="#带状稀疏矩阵的稀疏存储">¶</a>带状稀疏矩阵的稀疏存储</h4><p>稀疏矩阵有两种基本类型:无规则结构的稀疏矩阵与有规则结构的稀疏矩阵。<br><font color="red"><strong>带状稀疏矩阵</strong></font>是指所有非零元素集中在对角线上的矩阵。</p><ul><li>[B,d]=spdiags(A):从带状稀疏矩阵A中提取全部非零对角线元素赋给矩阵B及其这些非零对角线的位置向量d。</li><li>A=spdiags(B,d,m,n):产生带状稀疏矩阵的稀疏存储矩阵A,其中m、n为原带状稀疏矩阵的行数与列数，矩阵B的第i列即为原带状稀疏矩阵的第i条非零对角线，向量d为原带状稀疏矩阵所有非零对角线的位置。</li></ul><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; A=[<span class="number">11</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">12</span>,<span class="number">0</span>,<span class="number">0</span>;<span class="number">0</span>,<span class="number">21</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">22</span>,<span class="number">0</span>;<span class="number">0</span>,<span class="number">0</span>,<span class="number">31</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">32</span>;<span class="number">41</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">42</span>,<span class="number">0</span>,<span class="number">0</span>;<span class="number">0</span>,<span class="number">51</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">52</span>,<span class="number">0</span>];</span><br><span class="line">&gt;&gt; [B,d]=spdiags(A)</span><br><span class="line"></span><br><span class="line">B =</span><br><span class="line"></span><br><span class="line">     <span class="number">0</span>    <span class="number">11</span>    <span class="number">12</span></span><br><span class="line">     <span class="number">0</span>    <span class="number">21</span>    <span class="number">22</span></span><br><span class="line">     <span class="number">0</span>    <span class="number">31</span>    <span class="number">32</span></span><br><span class="line">    <span class="number">41</span>    <span class="number">42</span>     <span class="number">0</span></span><br><span class="line">    <span class="number">51</span>    <span class="number">52</span>     <span class="number">0</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">d =</span><br><span class="line"></span><br><span class="line">    <span class="number">-3</span></span><br><span class="line">     <span class="number">0</span></span><br><span class="line">     <span class="number">3</span></span><br><span class="line">&gt;&gt; A=spdiags(B,d,<span class="number">5</span>,<span class="number">6</span>)</span><br><span class="line"></span><br><span class="line">A =</span><br><span class="line"></span><br><span class="line">   (<span class="number">1</span>,<span class="number">1</span>)       <span class="number">11</span></span><br><span class="line">   (<span class="number">4</span>,<span class="number">1</span>)       <span class="number">41</span></span><br><span class="line">   (<span class="number">2</span>,<span class="number">2</span>)       <span class="number">21</span></span><br><span class="line">   (<span class="number">5</span>,<span class="number">2</span>)       <span class="number">51</span></span><br><span class="line">   (<span class="number">3</span>,<span class="number">3</span>)       <span class="number">31</span></span><br><span class="line">   (<span class="number">1</span>,<span class="number">4</span>)       <span class="number">12</span></span><br><span class="line">   (<span class="number">4</span>,<span class="number">4</span>)       <span class="number">42</span></span><br><span class="line">   (<span class="number">2</span>,<span class="number">5</span>)       <span class="number">22</span></span><br><span class="line">   (<span class="number">5</span>,<span class="number">5</span>)       <span class="number">52</span></span><br><span class="line">   (<span class="number">3</span>,<span class="number">6</span>)       <span class="number">32</span></span><br></pre></td></tr></table></figure><h4 id="单位矩阵的稀疏存储"><a class="header-anchor" href="#单位矩阵的稀疏存储">¶</a>单位矩阵的稀疏存储</h4><p>speye(m,n)返回一个m x n的稀疏存储单位矩阵。</p><h3 id="稀疏矩阵应用举例"><a class="header-anchor" href="#稀疏矩阵应用举例">¶</a>稀疏矩阵应用举例</h3><p>求下列三对角线性方程组的解。</p><p><img src="https://raw.githubusercontent.com/stardust14/picture/master/img/20200814174155.png" alt="image-20200814173453009"></p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; kf1=[<span class="number">1</span>;<span class="number">1</span>;<span class="number">2</span>;<span class="number">1</span>;<span class="number">0</span>];</span><br><span class="line">&gt;&gt; k0=[<span class="number">2</span>;<span class="number">4</span>;<span class="number">6</span>;<span class="number">6</span>;<span class="number">1</span>];</span><br><span class="line">&gt;&gt; k1=[<span class="number">0</span>;<span class="number">3</span>;<span class="number">1</span>;<span class="number">4</span>;<span class="number">2</span>];</span><br><span class="line">&gt;&gt; B=[kf1,k0,k1];</span><br><span class="line">&gt;&gt; d=[<span class="number">-1</span>;<span class="number">0</span>;<span class="number">1</span>];</span><br><span class="line">&gt;&gt; A=spdiags(B,d,<span class="number">5</span>,<span class="number">5</span>);</span><br><span class="line">&gt;&gt; f=[<span class="number">0</span>;<span class="number">3</span>;<span class="number">2</span>;<span class="number">1</span>;<span class="number">5</span>];</span><br><span class="line">&gt;&gt; x=A\f</span><br><span class="line"></span><br><span class="line">x =</span><br><span class="line"></span><br><span class="line">  <span class="number">-0.166666666666667</span></span><br><span class="line">   <span class="number">0.111111111111111</span></span><br><span class="line">   <span class="number">2.722222222222222</span></span><br><span class="line">  <span class="number">-3.611111111111111</span></span><br><span class="line">   <span class="number">8.611111111111111</span></span><br></pre></td></tr></table></figure><h1>MATLAB程序流程控制</h1><h2 id="顺序结构程序"><a class="header-anchor" href="#顺序结构程序">¶</a>顺序结构程序</h2><h3 id="程序和程序设计"><a class="header-anchor" href="#程序和程序设计">¶</a>程序和程序设计</h3><p>什么叫程序?<br>程序是用某种计算机能够理解并且能够执行的语言来描述的解决问题的方法和步骤。</p><p>程序设计的基本步骤：</p><p><img src="https://raw.githubusercontent.com/stardust14/picture/master/img/20200815210426.png" alt="image-20200815210418505"></p><h3 id="程序的三种基本结构"><a class="header-anchor" href="#程序的三种基本结构">¶</a>程序的三种基本结构</h3><ul><li>顺序结构</li><li>选择结构</li><li>循环结构</li></ul><h3 id="脚本文件和函数文件"><a class="header-anchor" href="#脚本文件和函数文件">¶</a>脚本文件和函数文件</h3><ul><li>脚本文件是可以在命令行窗口直接执行的文件，也叫命令文件。</li><li>函数文件是定义一个函数，不能直接执行，而必须以函数调用的方式来调用它。</li></ul><h3 id="文件的建立"><a class="header-anchor" href="#文件的建立">¶</a>文件的建立</h3><ul><li><p>用命令按钮创建文件。</p><p><img src="https://raw.githubusercontent.com/stardust14/picture/master/img/20200815232458.png" alt="image-20200815232456459"></p></li><li><p>用edit命令创建文件。</p></li></ul><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; edit test</span><br></pre></td></tr></table></figure><p>ex:分别建立脚本文件和函数文件,求两个矩阵的乘积。</p><ul><li>建立脚本文件f1.m。</li></ul><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">A=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>;<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>];</span><br><span class="line">B=[<span class="number">1</span>,<span class="number">2</span>;<span class="number">3</span>,<span class="number">4</span>;<span class="number">5</span>,<span class="number">6</span>];</span><br><span class="line">C=A*B</span><br></pre></td></tr></table></figure><ul><li>在命令行窗口运行脚本文件。</li></ul><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt;f1</span><br><span class="line">C = </span><br><span class="line">   <span class="number">22</span>   <span class="number">28</span></span><br><span class="line">   <span class="number">49</span>   <span class="number">64</span></span><br></pre></td></tr></table></figure><ul><li>建立函数文件f2.m。</li></ul><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">C</span>=<span class="title">f2</span><span class="params">(A,B)</span></span></span><br><span class="line">C=A*B;</span><br></pre></td></tr></table></figure><ul><li>在命令行窗C ]调用函数文件。</li></ul><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; A=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>;<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>];</span><br><span class="line">&gt;&gt; B=[<span class="number">1</span>,<span class="number">2</span>;<span class="number">3</span>,<span class="number">4</span>;<span class="number">5</span>,<span class="number">6</span>];</span><br><span class="line"></span><br><span class="line">C=</span><br><span class="line">   <span class="number">22</span>   <span class="number">28</span></span><br><span class="line">   <span class="number">49</span>   <span class="number">64</span></span><br></pre></td></tr></table></figure><h3 id="顺序结构"><a class="header-anchor" href="#顺序结构">¶</a>顺序结构</h3><p><img src="https://raw.githubusercontent.com/stardust14/picture/master/img/20200815233530.png" alt="image-20200815233529301"></p><h4 id="数据的输入"><a class="header-anchor" href="#数据的输入">¶</a>数据的输入</h4><p>A=input(提示信息，选项);</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt; A=input(<span class="string">&#x27;请输入变量A的值:&#x27;</span>);</span><br><span class="line">请输入变量A的值: <span class="number">100</span></span><br></pre></td></tr></table></figure><h4 id="数据的输出"><a class="header-anchor" href="#数据的输出">¶</a>数据的输出</h4><p>disp(输出项);</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; s=<span class="string">&#x27;Hello,World&#x27;</span>;</span><br><span class="line">&gt;&gt; <span class="built_in">disp</span>(s)</span><br><span class="line">Hello,World</span><br><span class="line">&gt;&gt; a=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>;<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>];</span><br><span class="line">&gt;&gt; <span class="built_in">disp</span>(a)</span><br><span class="line">   <span class="number">1</span>  <span class="number">2</span>  <span class="number">3</span></span><br><span class="line">   <span class="number">4</span>  <span class="number">5</span>  <span class="number">6</span></span><br></pre></td></tr></table></figure><h4 id="程序的暂停"><a class="header-anchor" href="#程序的暂停">¶</a>程序的暂停</h4><p>pause(延迟秒数)<br>若要强行中止程序的运行可使用Ctrl+C命令。</p><blockquote><p>若是省略秒数，直到用户按任意键才会继续执行程序</p></blockquote><ul><li>输入原始数据</li><li>对原始数据进行处理</li><li>输出处理结果</li></ul><p>ex:有一-线段AB，A的坐标为(1，1)， B的坐标为(4.5，4.5)， 求AB的长度，以及黄金分割点C的坐标。</p><p><img src="https://raw.githubusercontent.com/stardust14/picture/master/img/20200815234529.png" alt="image-20200815234527741"></p><p><img src="https://raw.githubusercontent.com/stardust14/picture/master/img/20200815234737.png" alt="image-20200815234735398"></p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">a=input(<span class="string">&#x27;a=);</span></span><br><span class="line"><span class="string">b=input(&quot;b=&#x27;</span>);</span><br><span class="line">c=a+<span class="number">0.618</span>*(b-a);</span><br><span class="line">s=<span class="built_in">abs</span>(a-b);</span><br><span class="line"><span class="built_in">disp</span>(s)</span><br><span class="line"><span class="built_in">disp</span>(c)</span><br><span class="line"></span><br><span class="line">输出结果为:</span><br><span class="line">a=<span class="number">1</span> +<span class="built_in">i</span></span><br><span class="line">b=<span class="number">4.5</span>+<span class="number">4.5</span><span class="built_in">i</span></span><br><span class="line">  <span class="number">4.9497</span></span><br><span class="line">  <span class="number">3.1630</span> + <span class="number">3.1630</span><span class="built_in">i</span></span><br></pre></td></tr></table></figure><h2 id="选择结构程序"><a class="header-anchor" href="#选择结构程序">¶</a>选择结构程序</h2><h3 id="用if语句实现选择结构"><a class="header-anchor" href="#用if语句实现选择结构">¶</a>用if语句实现选择结构</h3><h4 id="什么是选择结构"><a class="header-anchor" href="#什么是选择结构">¶</a>什么是选择结构?</h4><p>选择结构又称为分支结构，是根据给定的条件是否成立来决定程序的执行流程。</p><p><img src="https://raw.githubusercontent.com/stardust14/picture/master/img/20200816100723.png" alt="image-20200816100721041"></p><ul><li>用if语句实现选择结构</li><li>用switch语句实现选择结构</li></ul><h4 id="单分支if语句"><a class="header-anchor" href="#单分支if语句">¶</a>单分支if语句</h4><p>语句格式:</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">if 条件</span><br><span class="line"><span class="code">    语句组</span></span><br><span class="line"><span class="code">end</span></span><br></pre></td></tr></table></figure><blockquote><p>条件：关系运算或逻辑运算<br>语句组：可以是一条语句,也可以是多条语句</p></blockquote><p>流程图：</p><p><img src="https://raw.githubusercontent.com/stardust14/picture/master/img/20200816101231.png" alt="image-20200816101230060"></p><ul><li><p>当条件结果为标量时，<strong>非零</strong>表示条件成立，<strong>零</strong>表示条件不成立。</p></li><li><p>当条件结果为矩阵时，如果矩阵为非空，且不包含零元素，则条件成立，否则不成立。</p></li></ul><blockquote><p>例如，[1,2;0,4]表示条件时，条件不成立; [1,2;3,4]表示条件时,条件成立。</p></blockquote><h4 id="双分支if语句"><a class="header-anchor" href="#双分支if语句">¶</a>双分支if语句</h4><p>语句格式:</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">if条件</span><br><span class="line"><span class="code">    语句组1</span></span><br><span class="line"><span class="code">else</span></span><br><span class="line"><span class="code">    语句组2</span></span><br><span class="line"><span class="code">end</span></span><br></pre></td></tr></table></figure><p>流程图：</p><p><img src="https://raw.githubusercontent.com/stardust14/picture/master/img/20200816102148.png" alt="image-20200816102145334"></p><p>ex:输入一个整数，若为奇数则输出其平方根，否则输出其立方根。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">x=input(<span class="string">&#x27;请输入x的值:&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">rem</span>(x,<span class="number">2</span>)== <span class="number">1</span></span><br><span class="line">   y=<span class="built_in">sqrt</span>(x);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">   y=x^(<span class="number">1</span>/<span class="number">3</span>); .</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">y</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>rem(x,2)==1可等价写成rem(x,2)<br>x(1/3)可等价写成power(x,1/3)</p></blockquote><h4 id="多分支if语句"><a class="header-anchor" href="#多分支if语句">¶</a>多分支if语句</h4><p>语句格式:</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">if 条件1</span><br><span class="line"><span class="code">     语句组1</span></span><br><span class="line"><span class="code">elseif 条件2</span></span><br><span class="line"><span class="code">     语句组2</span></span><br><span class="line"><span class="code">     ···</span></span><br><span class="line"><span class="code">elseif 条件m</span></span><br><span class="line"><span class="code">     语句组m</span></span><br><span class="line"><span class="code">else</span></span><br><span class="line"><span class="code">    语句组n</span></span><br><span class="line"><span class="code">end</span></span><br></pre></td></tr></table></figure><p>流程图：</p><p><img src="https://raw.githubusercontent.com/stardust14/picture/master/img/20200816102644.png" alt="image-20200816102641792"></p><blockquote><p>在多分支if语句中不管有几个分支，程序执行完一个分支后，其余分支将不会再执行，这时整个if语句结束。</p></blockquote><p>ex:  输入一个字符，若为大写字母，则输出其对应的小写字母;若为小写字母，则输出其对应的大写字母;若为数字字符则输出其对应数的平方，若为其他字符则原样输出。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">c=input(<span class="string">&#x27;请输入一个字符: &#x27;</span>,<span class="string">&#x27;s&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span> c&gt;=<span class="string">&#x27;A&#x27;</span> &amp;&amp; c&lt;=<span class="string">&#x27;Z&#x27;</span></span><br><span class="line"><span class="built_in">disp</span>(lower(c))</span><br><span class="line"><span class="keyword">elseif</span> c&gt;=<span class="string">&#x27;a&#x27;</span> &amp;&amp; c&lt;=<span class="string">&#x27;z&#x27;</span></span><br><span class="line"><span class="built_in">disp</span>(upper(c))</span><br><span class="line"><span class="keyword">elseif</span> c&gt;=<span class="string">&#x27;0&#x27;</span> &amp;&amp; c&lt;=<span class="string">&#x27;9&#x27;</span></span><br><span class="line"><span class="built_in">disp</span>(str2double(c)^<span class="number">2</span>)</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">disp</span>(c)</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><blockquote><p>'s’表示以字符串形式接受用户的输入<br>lower函数：将大写字母转换为相应的小写字母<br>upper函数：将小写字母转换成相应的大写字母<br>str2double函数：将字符串转换成数值</p></blockquote><h3 id="用switch语句实现选择结构"><a class="header-anchor" href="#用switch语句实现选择结构">¶</a>用switch语句实现选择结构</h3><h4 id="switch语句的格式"><a class="header-anchor" href="#switch语句的格式">¶</a>switch语句的格式</h4><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">switch 表达式</span><br><span class="line">  case 结果表1</span><br><span class="line"><span class="code">    语句组1</span></span><br><span class="line"><span class="code">  case 结果表2</span></span><br><span class="line"><span class="code">    语句组2</span></span><br><span class="line"><span class="code">    ···</span></span><br><span class="line"><span class="code">  case 结果表m</span></span><br><span class="line"><span class="code">    语句组m</span></span><br><span class="line"><span class="code">  otherwise</span></span><br><span class="line"><span class="code">    语句组n</span></span><br><span class="line"><span class="code">end</span></span><br></pre></td></tr></table></figure><p>流程图：</p><p><img src="https://raw.githubusercontent.com/stardust14/picture/master/img/20200816104158.png" alt="image-20200816104156964"></p><ul><li>switch表达式应该是一个其值可以列举的表达式。</li><li>case结果表为switch表达式的取值，当取值有多个时，用单元数<br>据表示。</li></ul><p>ex:输入一个英文单词，判断它是否以元音字母开头。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">c=input(<span class="string">&#x27;请输入一个单词: &#x27;</span>,<span class="string">&#x27;s&#x27;</span>);</span><br><span class="line"><span class="keyword">switch</span> c(<span class="number">1</span>)</span><br><span class="line"><span class="keyword">case</span> &#123;<span class="string">&#x27;A&#x27;</span>,<span class="string">&#x27;E&#x27;</span>,<span class="string">&#x27;I&#x27;&#x27;O&#x27;</span>,<span class="string">&#x27;U&#x27;</span>,<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;e&#x27;</span>,<span class="string">&#x27;I&#x27;</span>,<span class="string">&#x27;o&#x27;</span>,<span class="string">&#x27;u&#x27;</span>&#125;</span><br><span class="line"><span class="built_in">disp</span>([c,<span class="string">&#x27;以元音字母开头&#x27;</span>]);</span><br><span class="line"><span class="keyword">otherwise</span></span><br><span class="line"><span class="built_in">disp</span>([c,<span class="string">&#x27;以辅音字母开头&#x27;</span>]);</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">c=input(<span class="string">&#x27;请输入一个单词: &#x27;</span>,<span class="string">&#x27;s&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span> strfind(c(<span class="number">1</span>),<span class="string">&#x27;AEIOUaeiou&#x27;</span>)&gt;<span class="number">0</span></span><br><span class="line"><span class="built_in">disp</span>([c,<span class="string">&#x27;以元音字母开头&#x27;</span>]);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">disp</span>([c,<span class="string">&#x27;以辅音字母开头&#x27;</span>]);</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>ex:例2 PM2. 5是指大气中直径小于或等于2.5微米的可入肺颗粒物，是衡量空气质量的重要指标。假定空气质量等级以PM2.5数值划分为6级。<br>PM2.5数值在[0，35)空气气质量为优，[35，75)为良，[75，115 )为轻度污染，[115， 150)为中度污染，[150， 250) 为重度污染,大于等于250为严重污染。<br>编写程序，输入PM2.5数值，输出空气质量等级。</p><ul><li>用六个单分支结构实现</li><li>用多分支if语句实现</li><li>用switch语句实现</li></ul><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">g=input(<span class="string">&#x27;请输入PM2.5值: &#x27;</span>);</span><br><span class="line"><span class="keyword">switch</span> <span class="built_in">fix</span>(g)</span><br><span class="line"><span class="keyword">case</span> <span class="built_in">num2cell</span>(<span class="number">0</span>:<span class="number">34</span>)</span><br><span class="line">   <span class="built_in">disp</span>(<span class="string">&#x27;空气质量优&#x27;</span>);</span><br><span class="line"><span class="keyword">case</span> <span class="built_in">num2cell</span>(<span class="number">35</span>:<span class="number">74</span>)</span><br><span class="line">   <span class="built_in">disp</span>(<span class="string">&#x27;空气质量良好&#x27;</span>); </span><br><span class="line"><span class="keyword">case</span> <span class="built_in">num2cell</span>(<span class="number">75</span>:<span class="number">114</span>)</span><br><span class="line">   <span class="built_in">disp</span>(<span class="string">&#x27;空气质量轻度污染&#x27;</span>);</span><br><span class="line"><span class="keyword">case</span> <span class="built_in">num2cell</span>(<span class="number">115</span>:<span class="number">149</span>)</span><br><span class="line">   <span class="built_in">disp</span>(<span class="string">&#x27;空气质量中度污染&#x27;</span>);</span><br><span class="line"><span class="keyword">case</span> <span class="built_in">num2cell</span>(<span class="number">150</span>:<span class="number">249</span>)</span><br><span class="line">   <span class="built_in">disp</span>(<span class="string">&#x27;空气质量重度污染&#x27;</span>);</span><br><span class="line"><span class="keyword">otherwise</span></span><br><span class="line">   <span class="built_in">disp</span>(<span class="string">&#x27;空气质量严重污染&#x27;</span>); </span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><blockquote><p>num2cell函数：将数值矩阵转换成单元矩阵</p></blockquote><h2 id="循环结构程序"><a class="header-anchor" href="#循环结构程序">¶</a>循环结构程序</h2><h3 id="什么是循环结构"><a class="header-anchor" href="#什么是循环结构">¶</a>什么是循环结构?</h3><p>循环结构又称为重复结构，是利用计算机运算速度快以及能进行逻辑控制的特点来重复执行某些操作。</p><p>流程图：</p><p><img src="https://raw.githubusercontent.com/stardust14/picture/master/img/20200816112840.png" alt="image-20200816112838938"></p><h3 id="用for语句实现循环结构"><a class="header-anchor" href="#用for语句实现循环结构">¶</a>用for语句实现循环结构</h3><h4 id="for语句"><a class="header-anchor" href="#for语句">¶</a>for语句</h4><p>格式:</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">for 循环变量=表达式1:表达式2:表达式3   %初值|步长|终值%</span><br><span class="line"><span class="code">    循环体语句  %重复执行的语句%</span></span><br><span class="line"><span class="code">end</span></span><br></pre></td></tr></table></figure><p>流程图：</p><p><img src="https://raw.githubusercontent.com/stardust14/picture/master/img/20200816114109.png" alt="image-20200816113228653"></p><p>说明:</p><ul><li>for语句针对向量的每一个元素执行一 次循环体。</li><li>退出循环之后，循环变量的值就是向量中最后的元素值。</li><li>当向量为空时，循环体一次也不执行。</li></ul><p>ex:计算圆周率π</p><p>(1)利用无穷级数展开式求π的近似值。</p><ul><li><p>这是求n个数之和的累加问题，可用以下递推式来描述:</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200819212437.png" alt="image-20200816113638006"></p></li><li><p>可用以下赋值语句来实现。</p><p>y=y+f</p></li><li><p>累加项f的符号可用以下赋值语句来实现(每循环一次反号一 次)<br>g=-g</p></li><li><p>累加项f就可用以下赋值语句来实现。</p><p><code>f=g*1/(2*i-1)</code></p><p><img src="https://raw.githubusercontent.com/stardust14/picture/master/img/20200816114103.png" alt="image-20200816114102769"></p></li></ul><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">y=<span class="number">0</span>; </span><br><span class="line">g=<span class="number">-1</span>;</span><br><span class="line">n=input(<span class="string">&#x27;n=?&#x27;</span>);</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:n</span><br><span class="line">g=-g;</span><br><span class="line">y=y+g* <span class="number">1</span>/(<span class="number">2</span>*<span class="built_in">i</span><span class="number">-1</span>); </span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">pai=<span class="number">4</span>*y</span><br></pre></td></tr></table></figure><p>用向量求和的方法实现程序:</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">n=input(<span class="string">&#x27;n=?&#x27;</span>);</span><br><span class="line">x=<span class="number">1</span>:<span class="number">2</span>:(<span class="number">2</span>*n<span class="number">-1</span>);</span><br><span class="line">y=(<span class="number">-1</span>).^(<span class="number">2</span>:n+<span class="number">1</span>)./x;</span><br><span class="line">pai=sum(y)*<span class="number">4</span></span><br></pre></td></tr></table></figure><p>(2)利用定积分的近似值求π的近似值。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200819212423.png" alt="image-20200816114949511"></p><p><img src="https://raw.githubusercontent.com/stardust14/picture/master/img/20200816143239.png" alt="image-20200816143236999"></p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">a=<span class="number">0</span>;</span><br><span class="line">b=<span class="number">1</span>;</span><br><span class="line">n=input(<span class="string">&#x27;n=?&#x27;</span>);</span><br><span class="line">h=(b-a)/n;</span><br><span class="line">x=a:h:b;</span><br><span class="line">f=<span class="built_in">sqrt</span>(<span class="number">1</span>-x.*x);</span><br><span class="line">s=[];</span><br><span class="line"><span class="keyword">for</span> k=<span class="number">1</span>:n</span><br><span class="line">   s1=(f(k)+f(k+<span class="number">1</span>))*h/<span class="number">2</span>;</span><br><span class="line">   s=[s,s1];</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">pai=<span class="number">4</span> *sum(s) </span><br></pre></td></tr></table></figure><p>(3)利用蒙特卡洛法求π的近似值。</p><p><img src="https://raw.githubusercontent.com/stardust14/picture/master/img/20200816150444.png" alt="image-20200816145725433"></p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">s=<span class="number">0</span>;</span><br><span class="line">n=input(<span class="string">&#x27;n=?&#x27;</span>);</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:n</span><br><span class="line">    x=<span class="built_in">rand</span>(<span class="number">1</span>);</span><br><span class="line">    y=<span class="built_in">rand</span>(<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span> x*x+y*y&lt;=<span class="number">1</span></span><br><span class="line">        s=s+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">pai=s/n*<span class="number">4</span></span><br></pre></td></tr></table></figure><p>按照MATLAB的定义，for语句的循环变量也可以是一个列向量，其格式为:</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">for 循环变量=矩阵表达式</span><br><span class="line"><span class="code">    循环体语句</span></span><br><span class="line"><span class="code">end</span></span><br></pre></td></tr></table></figure><h3 id="用while语句实现循环结构"><a class="header-anchor" href="#用while语句实现循环结构">¶</a>用while语句实现循环结构</h3><p>格式：</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">while 条件</span><br><span class="line"><span class="code">    循环体语句</span></span><br><span class="line"><span class="code">end</span></span><br></pre></td></tr></table></figure><p>流程图：</p><p><img src="https://raw.githubusercontent.com/stardust14/picture/master/img/20200816160404.png" alt="image-20200816160402909"></p><p>ex:  从键盘输入若干个数，当输入0时结束输入，求这些数的平均值和它们之和。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">msum=<span class="number">0</span>;</span><br><span class="line">n=<span class="number">0</span>;</span><br><span class="line">x=input(<span class="string">&#x27;Enter a number(end in 0):&#x27;</span>);</span><br><span class="line"><span class="keyword">while</span> x~=<span class="number">0</span></span><br><span class="line">    msum=msum+x;</span><br><span class="line">    n=n+<span class="number">1</span>;</span><br><span class="line">    x=input(<span class="string">&#x27;Enter a number(end in 0):&#x27;</span>);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">if</span> n&gt;<span class="number">0</span></span><br><span class="line">    msum</span><br><span class="line">    <span class="built_in">mean</span>=msum/n</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><ul><li>while语句多用于循环次数不确定的情况,而对于循环次数确定的情况，使用for语句更方便。</li><li>针对不同情况可以选择不同的循环语句，但从功能上讲两种循环语句可以相互替代。</li></ul><h4 id="break语句和continue语句"><a class="header-anchor" href="#break语句和continue语句">¶</a>break语句和continue语句</h4><ul><li>break语句用来跳出循环体，结束整个循环。</li><li>continue语 句用来结束本次循环，接着进行下一次是否执行循环的判断。</li></ul><p>ex:求1100，2001之间第一 个能被21整除的整数。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> n=<span class="number">100</span>:<span class="number">200</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">rem</span>(n,<span class="number">21</span>)~=<span class="number">0</span></span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    n</span><br><span class="line">    <span class="keyword">break</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><h4 id="循环的嵌套"><a class="header-anchor" href="#循环的嵌套">¶</a>循环的嵌套</h4><p>如果一个循环结构的循环体又包含一个循环结构，就称为循环的嵌套，或称为多重循环结构。</p><p>ex:用筛选法求某自然数范围内的全部素数。</p><p>筛选法求素数的基本思想:要找出<code>2~m</code>之间的全部素数，首先在<code>2~m</code>中划去2的倍数(不包括2)，然后划去3的倍数(不包括3)，由于4已被划去，再找5的倍数(不包括5)，····，直到再划去不超过vm的倍数，剩下的就都是素数。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">m=input(<span class="string">&#x27;m=&#x27;</span>);</span><br><span class="line">p=<span class="number">1</span>:m;</span><br><span class="line">p(<span class="number">1</span>)=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">2</span>:<span class="built_in">sqrt</span>(m)</span><br><span class="line">    <span class="keyword">for</span> <span class="built_in">j</span>=<span class="number">2</span>*<span class="built_in">i</span>:<span class="built_in">i</span>:m</span><br><span class="line">        p(<span class="built_in">j</span>)=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">n=<span class="built_in">find</span>(p~=<span class="number">0</span>);</span><br><span class="line">p(n)</span><br></pre></td></tr></table></figure><h2 id="函数文件的定义与调用"><a class="header-anchor" href="#函数文件的定义与调用">¶</a>函数文件的定义与调用</h2><h3 id="函数文件的基本结构"><a class="header-anchor" href="#函数文件的基本结构">¶</a>函数文件的基本结构</h3><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">function  输出形参表=函数名(输入形参表)</span><br><span class="line"><span class="code">     注释说明部分</span></span><br><span class="line"><span class="code">函数体语句</span></span><br><span class="line"><span class="code">当有多个形参时，形参之间用逗号分隔，组成形参表。当输出形参多于一个时，应该用方括号括起来，构成一个输出矩阵。</span></span><br></pre></td></tr></table></figure><ul><li>函数文件名通常由函数名再加上扩展名.m组成，函数文件名与函数名也可以不相同。</li></ul><blockquote><p>不相同时，matlab将忽略函数名，调用时使用函数文件名</p></blockquote><ul><li>return语句表示结束函数的执行。</li></ul><p>ex:编写函数文件,求半径为的圆的面积和周长。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="params">[s,p]</span>=<span class="title">fcircle</span><span class="params">(r)</span></span></span><br><span class="line">s=<span class="built_in">pi</span>*r*r;</span><br><span class="line">p=<span class="number">2</span>*<span class="built_in">pi</span>*r;</span><br></pre></td></tr></table></figure><h3 id="函数调用"><a class="header-anchor" href="#函数调用">¶</a>函数调用</h3><p>调用格式:<br>[输出实参表]=函数名(输入实参表)<br>在调用函数时，函数输入输出参数称为实际参数，简称<strong>实参</strong>。</p><p>在MATLAB命令行窗C ]调用前面定义的fcircle函数。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; [s,p]=fcircle(<span class="number">10</span>)</span><br><span class="line"></span><br><span class="line">s =</span><br><span class="line"></span><br><span class="line">  <span class="number">314.1593</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">p =</span><br><span class="line"></span><br><span class="line">   <span class="number">62.8319</span></span><br></pre></td></tr></table></figure><h3 id="匿名函数"><a class="header-anchor" href="#匿名函数">¶</a>匿名函数</h3><p>基本格式:<br>函数句柄变量=@(匿名函数输入参数)匿名函数表达式</p><blockquote><p>@:函数句柄的运算符</p></blockquote><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; f=@(x,y) x^<span class="number">2</span>+y^<span class="number">2</span></span><br><span class="line"></span><br><span class="line">f = </span><br><span class="line"></span><br><span class="line">    @(x,y)x^<span class="number">2</span>+y^<span class="number">2</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; f(<span class="number">3</span>,<span class="number">4</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">    <span class="number">25</span></span><br></pre></td></tr></table></figure><p>函数句柄变量=@函数名</p><blockquote><p>函数名：内部函数或自定义函数</p></blockquote><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; h=@<span class="built_in">sin</span></span><br><span class="line"></span><br><span class="line">h = </span><br><span class="line"></span><br><span class="line">    @<span class="built_in">sin</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; h(<span class="built_in">pi</span>/<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">     <span class="number">1</span></span><br></pre></td></tr></table></figure><p>ex:<img src="https://raw.githubusercontent.com/stardust14/picture/master/img/20200816173757.png" alt="image-20200816170950565"></p><p>第②问的函数文件f2.m。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">f</span>=<span class="title">f2</span><span class="params">(n)</span></span></span><br><span class="line">f=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> k=<span class="number">1</span>:n</span><br><span class="line">    f=f+k*(k+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>脚本文件mf.m</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">f1=@(n)n+<span class="number">10</span>*<span class="built_in">log</span>(n*n+<span class="number">5</span>)</span><br><span class="line">y1=f1(<span class="number">40</span>)/(f1(<span class="number">30</span>)+f1(<span class="number">20</span>))</span><br><span class="line">y2=f2(<span class="number">40</span>)/(f2(<span class="number">30</span>)+f2(<span class="number">20</span>))</span><br></pre></td></tr></table></figure><p>调用：</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; mf</span><br><span class="line"></span><br><span class="line">f1 = </span><br><span class="line"></span><br><span class="line">    @(n)n+<span class="number">10</span>*<span class="built_in">log</span>(n*n+<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">y1 =</span><br><span class="line"></span><br><span class="line">    <span class="number">0.6390</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">y2 =</span><br><span class="line"></span><br><span class="line">    <span class="number">1.7662</span></span><br></pre></td></tr></table></figure><h2 id="函数的递归调用"><a class="header-anchor" href="#函数的递归调用">¶</a>函数的递归调用</h2><h3 id="函数的嵌套调用"><a class="header-anchor" href="#函数的嵌套调用">¶</a>函数的嵌套调用</h3><p><img src="https://raw.githubusercontent.com/stardust14/picture/master/img/20200816173701.png" alt="image-20200816172833477"></p><h3 id="函数的递归调用-v2"><a class="header-anchor" href="#函数的递归调用-v2">¶</a>函数的递归调用</h3><p>一个函数调用它自身称为函数的递归调用。</p><blockquote><p>递归是把一个大型复杂的问题层层转化为一一个与原问题相似的规模较小的问题来求解。</p></blockquote><h4 id="直接递归调用"><a class="header-anchor" href="#直接递归调用">¶</a>直接递归调用</h4><p><img src="https://raw.githubusercontent.com/stardust14/picture/master/img/20200816173657.png" alt="image-20200816173120079"></p><h4 id="间接递归调用"><a class="header-anchor" href="#间接递归调用">¶</a>间接递归调用</h4><p><img src="https://raw.githubusercontent.com/stardust14/picture/master/img/20200816173652.png" alt="image-20200816173141929"></p><p>ex:利用函数的递归调用，求n!。</p><p>函数文件fact.m如下：</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">f</span>=<span class="title">fact</span><span class="params">(n)</span></span></span><br><span class="line"><span class="keyword">if</span> n&lt;=<span class="number">1</span></span><br><span class="line">    f=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    f=fact (n<span class="number">-1</span>)*n; <span class="comment">%递归调用求(n-1)!</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>在脚本文件a.m中调用函数文件fat.m,求n!。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">n=input(<span class="string">&#x27;Please input n=&#x27;</span>); </span><br><span class="line">s=fact (n);</span><br><span class="line"><span class="built_in">disp</span>(s)</span><br></pre></td></tr></table></figure><p>在命令行窗口运行脚本文件:</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt;a </span><br><span class="line">Please input n=<span class="number">3</span></span><br><span class="line"><span class="number">6</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/stardust14/picture/master/img/20200816173641.png" alt="image-20200816173640738"></p><p>ex:</p><p><img src="https://raw.githubusercontent.com/stardust14/picture/master/img/20200816174407.png" alt="image-20200816173931078"></p><ul><li>首先建立函数文件ffib.m。</li></ul><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">f</span>=<span class="title">ffib</span><span class="params">(n)</span></span></span><br><span class="line"><span class="keyword">if</span> n&gt;<span class="number">2</span></span><br><span class="line">   f=ffib(n- <span class="number">1</span>)+ffib(n<span class="number">-2</span>);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">   f=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><ul><li>建立脚本文件test.m。</li></ul><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">F=[];</span><br><span class="line"><span class="keyword">for</span> k=<span class="number">1</span>:<span class="number">20</span></span><br><span class="line">F=[Fffib(k)*ffib(k)];</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">sum(F)</span><br><span class="line">ffib(<span class="number">20</span>)*ffib(<span class="number">21</span>)</span><br></pre></td></tr></table></figure><ul><li>运行结果为:</li></ul><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt;test</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"><span class="number">7</span> <span class="number">4049690</span></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"><span class="number">7</span> <span class="number">4049690</span></span><br></pre></td></tr></table></figure><h2 id="函数参数与变量的作用域"><a class="header-anchor" href="#函数参数与变量的作用域">¶</a>函数参数与变量的作用域</h2><h3 id="函数参数的可调性"><a class="header-anchor" href="#函数参数的可调性">¶</a>函数参数的可调性</h3><p>nargin————&gt;输入实参的个数<br>nargout————&gt;输出实参的个数</p><p>建立函数文件test.m</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fout</span>=<span class="title">test</span><span class="params">(a,b,c)</span></span></span><br><span class="line"><span class="keyword">if</span> nargin==<span class="number">1</span></span><br><span class="line">fout=a;</span><br><span class="line"><span class="keyword">elseif</span> nargin==<span class="number">2</span></span><br><span class="line">fout=a+b;</span><br><span class="line"><span class="keyword">elseif</span> nargin==<span class="number">3</span></span><br><span class="line">fout=(a*b*c)/<span class="number">2</span>;</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>调用</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; fout=test(<span class="number">2</span>)</span><br><span class="line">fout =</span><br><span class="line"><span class="number">2</span></span><br><span class="line">&gt;&gt; fout=test(<span class="number">2</span>,<span class="number">3</span>,<span class="number">2</span>)</span><br><span class="line">fout =</span><br><span class="line"><span class="number">6</span></span><br></pre></td></tr></table></figure><h3 id="全局变量与局部变量"><a class="header-anchor" href="#全局变量与局部变量">¶</a>全局变量与局部变量</h3><ul><li><strong>局部变量</strong>是指在程序中只在特定过程或函数中可以访问的变量。</li><li><strong>全局变量</strong>的作用域是整个MATLAB工作空间，也就是全程有效，所有的函数都可以对它进行存取和修改。</li></ul><p>全局变量定义格式:<br>global    变量名</p><p>建立函数文件wad.m。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">f</span>=<span class="title">wad</span><span class="params">(x,y)</span></span></span><br><span class="line"><span class="keyword">global</span> ALPHA BETA </span><br><span class="line">f=ALPHA*x+BETA*y;</span><br></pre></td></tr></table></figure><p>在命令行窗口中输入命令并得到输出结果。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; <span class="keyword">global</span> ALPHA BETA</span><br><span class="line">&gt;&gt; ALPHA=<span class="number">1</span>;</span><br><span class="line">&gt;&gt; BETA=<span class="number">2</span>;</span><br><span class="line">&gt;&gt; s=wad(<span class="number">1</span>,<span class="number">2</span>)</span><br><span class="line">S=</span><br><span class="line"><span class="number">5</span></span><br></pre></td></tr></table></figure><h1>MATLAB绘图</h1><h2 id="二维曲线"><a class="header-anchor" href="#二维曲线">¶</a>二维曲线</h2><h3 id="plot函数"><a class="header-anchor" href="#plot函数">¶</a>plot函数</h3><p>(1) plot函数的基本用法<br>plot(x, y)<br>其中，x和y分别用于存储x坐标和y坐标数据。</p><p>ex:绘制一条折线。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; x=[<span class="number">2.5</span>,<span class="number">3.5</span>,<span class="number">4</span>,<span class="number">5</span>];</span><br><span class="line">&gt;&gt;y=[<span class="number">1.5</span>,<span class="number">2.0</span>,<span class="number">1</span>,<span class="number">1.5</span>];</span><br><span class="line">&gt;&gt; <span class="built_in">plot</span>(x, y)</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/stardust14/picture/master/img/20200817121937.png" alt="image-20200817121935693"></p><p>(2 )最简单的plot函数调用格式<br>plot(x)</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; x=[<span class="number">1.5</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">1.5</span>];</span><br><span class="line">&gt;&gt; <span class="built_in">plot</span>(x)</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/stardust14/picture/master/img/20200817122230.png" alt="image-20200817122229734"></p><p>当plot函数的参数x是复数向量时，则分别以该向量元素实部和虚部为横、纵坐标绘制出一条曲线。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; x=[<span class="number">2.5</span>,<span class="number">3.5</span>,<span class="number">4</span>,<span class="number">5</span>];</span><br><span class="line">&gt;&gt; y=[<span class="number">1.5</span>,<span class="number">2.0</span>,<span class="number">1</span>,<span class="number">1.5</span>]; </span><br><span class="line">&gt;&gt; cx=x+y*<span class="built_in">i</span>;  <span class="comment">%cx = complex(x,y);</span></span><br><span class="line">&gt;&gt; <span class="built_in">plot</span>(cx)</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200819212343.png" alt="image-20200817122718974"></p><p>(3) plot(x, y)函数参数的变化形式</p><ul><li>当x是向量，y是矩阵时<ul><li>如果矩阵y的列数等于x的长度，则以向量x为横坐标，以y的每个<br>行向量为纵坐标绘制曲线，曲线的条数等于y的行数。</li><li>如果矩阵y的行数等于x的长度，则以向量x为横坐标，以y的每个<br>列向量为纵坐标绘制曲线，曲线的条数等于y的列数。</li></ul></li></ul><p>ex:绘制sinx、sin(2x)、 sin(x /2 )的函数曲线。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; x=<span class="built_in">linspace</span>(<span class="number">0</span>,<span class="number">2</span>*<span class="built_in">pi</span>,<span class="number">100</span>);</span><br><span class="line">&gt;&gt; y=[<span class="built_in">sin</span>(x);<span class="built_in">sin</span>(<span class="number">2</span>*x);<span class="built_in">sin</span>(<span class="number">0.5</span>*x)];</span><br><span class="line">&gt;&gt; <span class="built_in">plot</span>(x,y)</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/stardust14/picture/master/img/20200817124053.png" alt="image-20200817124051811"></p><ul><li>当x、y是同型矩阵时以x、y对应列元素为横、纵坐标分别绘制曲线,曲线条数等于矩阵的列数。</li></ul><p>重复上例题中实现</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt;t=<span class="number">0</span>:<span class="number">0.01</span>:<span class="number">2</span>*<span class="built_in">pi</span>;</span><br><span class="line">&gt;&gt;t1=t&#x27;;</span><br><span class="line">&gt;&gt;x=[t1,tl,t1];</span><br><span class="line">&gt;&gt;y=[<span class="built_in">sin</span>(t1), <span class="built_in">sin</span>(<span class="number">2</span>*t1), <span class="built_in">sin</span>(<span class="number">0.5</span>*t1)];</span><br><span class="line">&gt;&gt;<span class="built_in">plot</span>(x,y)</span><br></pre></td></tr></table></figure><p>(4)含多个输入参数的plot函数<br>plot(x1, y1, x2, y2, … xn, yn)<br>其中，每一向量对构成一组数据点的横、纵坐标，绘制一条曲线。</p><p>ex:采用不同个数的数据点绘制正弦函数曲线，观察曲线形态。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; t1=<span class="built_in">linspace</span>(<span class="number">0</span>,<span class="number">2</span>*<span class="built_in">pi</span>,<span class="number">10</span>);</span><br><span class="line">&gt;&gt; t2=<span class="built_in">linspace</span>(<span class="number">0</span>,<span class="number">2</span>*<span class="built_in">pi</span>,<span class="number">20</span>);</span><br><span class="line">&gt;&gt; t3=<span class="built_in">linspace</span>(<span class="number">0</span>,<span class="number">2</span>*<span class="built_in">pi</span>,<span class="number">100</span>);</span><br><span class="line">&gt;&gt; <span class="built_in">plot</span>(t1,<span class="built_in">sin</span>(t1),t2,<span class="built_in">sin</span>(t2)+<span class="number">1</span>,t3,<span class="built_in">sin</span>(t3)+<span class="number">2</span>)</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/stardust14/picture/master/img/20200817124831.png" alt="image-20200817124829945"></p><p>(5)含选项的plot函数<br>plot(x, y,选项)</p><p><img src="https://raw.githubusercontent.com/stardust14/picture/master/img/20200817143225.png" alt="image-20200817142128551"></p><p>ex:用不同线型和颜色在同一坐标内绘制曲线y=2e0.5xsin(2 π x)及其包络线。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">x=(<span class="number">0</span>:<span class="built_in">pi</span>/<span class="number">50</span>:<span class="number">2</span>*<span class="built_in">pi</span>)&#x27;;</span><br><span class="line">y1=<span class="number">2</span>*<span class="built_in">exp</span>(<span class="number">-0.5</span>*x)*[<span class="number">1</span>,<span class="number">-1</span>];</span><br><span class="line">y2=<span class="number">2</span>*<span class="built_in">exp</span>(<span class="number">-0.5</span>*x).*<span class="built_in">sin</span>(<span class="number">2</span>*<span class="built_in">pi</span>*x);</span><br><span class="line">x1=<span class="number">0</span>:<span class="number">0.5</span>:<span class="number">6</span>;</span><br><span class="line">y3=<span class="number">2</span>*<span class="built_in">exp</span>(<span class="number">-0.5</span>*x1).*<span class="built_in">sin</span>(<span class="number">2</span>*<span class="built_in">pi</span>*x1);</span><br><span class="line"><span class="built_in">plot</span>(x,y1,<span class="string">&#x27;k:&#x27;</span>,x,y2,<span class="string">&#x27;b--&#x27;</span>,x1,y3,<span class="string">&#x27;rp&#x27;</span>)</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/stardust14/picture/master/img/20200817143208.png" alt="image-20200817143206234"></p><h3 id="fplot函数"><a class="header-anchor" href="#fplot函数">¶</a>fplot函数</h3><p>(1) fplot函数的基本用法<br>fplot(f, lims, 选项)</p><p>其中，f代表一个函数,通常采用函数句柄的形式。lims为x轴的取值范围，用二元向量[xmin，xmax]描述， 默认值为[-5,5]。 选项定义与plot函数相同。</p><p>ex:采用fplot函数绘制函数sin(1/x)的图形。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; fplot(@(x)<span class="built_in">sin</span>(<span class="number">1.</span>/x),[<span class="number">0</span>,<span class="number">0.2</span>],<span class="string">&#x27;b&#x27;</span>)</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/stardust14/picture/master/img/20200817143723.png" alt="image-20200817143722060"></p><p>(2)双输入函数参数的用法<br>fplot(funx, funy, tlims,选项)<br>其中，funx、 funy代表函数，通常采用函数句柄的形式。tlims为参 数函数funx和funy的自变量的取值范围，用二元向量[tmin, tmax]描述。</p><p>ex:已知螺旋线的参数方程，绘制曲线。</p><p>x=t·sint<br>y=t·cost</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; fplot(@(t) t.*<span class="built_in">sin</span>(t),@(t) t.*<span class="built_in">cos</span>(t),[<span class="number">0</span>,<span class="number">10</span>*<span class="built_in">pi</span>],<span class="string">&#x27;r&#x27;</span>)</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/stardust14/picture/master/img/20200817144145.png" alt="image-20200817144144096"></p><h2 id="绘制图形的辅助操作"><a class="header-anchor" href="#绘制图形的辅助操作">¶</a>绘制图形的辅助操作</h2><ul><li>给图形添加标注</li><li>坐标控制</li><li>图形保持</li><li>图形窗口的分割</li></ul><h3 id="图形标注"><a class="header-anchor" href="#图形标注">¶</a>图形标注</h3><ul><li>title(图形标题)</li><li>xlabel(x轴说明)</li><li>ylabelly轴说明)</li><li>textlx, y,图形说明)</li><li>legend(图例1,图例2, …)</li></ul><h4 id="title函数"><a class="header-anchor" href="#title函数">¶</a>title函数</h4><p>①title函数的基本用法<br>title(图形标题)<br>例1 绘制[-2π，2 π ]区间的正弦曲线并给图形添加标题。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; x=<span class="number">-2</span>*<span class="built_in">pi</span>:<span class="number">0.05</span>:<span class="number">2</span>*<span class="built_in">pi</span>;</span><br><span class="line">&gt;&gt; y=<span class="built_in">sin</span>(x);</span><br><span class="line">&gt;&gt; <span class="built_in">plot</span>(x,y)</span><br><span class="line">&gt;&gt; title(<span class="string">&#x27;y=sin(x)&#x27;</span>)  <span class="comment">%title(&#123;&#x27;MATLAB&#x27;,&#x27;y=sin(x)&#x27;&#125;)</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/stardust14/picture/master/img/20200817144733.png" alt="image-20200817144732376"></p><p>②在图形标题中使用LaTeX格式控制符</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; title(<span class="string">&#x27;y=cos&#123;\omega&#125;t&#x27;</span>)</span><br><span class="line">&gt;&gt; title(<span class="string">&#x27;y=e^&#123;axt&#125;&#x27;</span>)</span><br><span class="line">&gt;&gt; title(<span class="string">&#x27;X_&#123;1&#125;&#123;\geq&#125;X_&#123;2&#125;&#x27;</span>)</span><br><span class="line">&gt;&gt; title(<span class="string">&#x27;&#123;\bf y=cos&#123;\omega&#125;t+&#123;\beta&#125;&#125;&#x27;</span>)</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200819212315.png" alt="image-20200817145542681"></p><blockquote><p>“\bf”:加粗<br>“\it”:斜体<br>“\rm”:正体</p></blockquote><p>③含属性设置的title函数<br>title(图形标题,属性名，属性值)</p><ul><li>Color属性:用于设置图形标题文本的颜色。</li></ul><blockquote><p>默认为黑色</p></blockquote><ul><li>FontSize属性:用于设置标题文字的字号。</li></ul><blockquote><p>默认字号为11</p></blockquote><h4 id="xlabel函数和ylabel函数"><a class="header-anchor" href="#xlabel函数和ylabel函数">¶</a>xlabel函数和ylabel函数</h4><p>xlabel(x轴说明)<br>ylabelly轴说明)</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; x=<span class="number">-2</span>*<span class="built_in">pi</span>:<span class="number">0.05</span>:<span class="number">2</span>*<span class="built_in">pi</span>;</span><br><span class="line">&gt;&gt; y=<span class="built_in">sin</span>(x);</span><br><span class="line">&gt;&gt; <span class="built_in">plot</span>(x,y)</span><br><span class="line">&gt;&gt; title(<span class="string">&#x27;y=sin(x)&#x27;</span>)</span><br><span class="line">&gt;&gt; xlabel(<span class="string">&#x27;-2\pi\leqx\leq2\pi&#x27;</span>)</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200819212301.png" alt="image-20200817165151751"></p><h4 id="text函数和gtext函数"><a class="header-anchor" href="#text函数和gtext函数">¶</a>text函数和gtext函数</h4><p>text(x, y,说明)<br>gtext(说明)</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="comment">%在上述代码在添加以下</span></span><br><span class="line">&gt;&gt; text(<span class="number">-2</span>*<span class="built_in">pi</span>,<span class="number">0</span>,<span class="string">&#x27; - 2&#123;\pi&#125;&#x27;</span>)</span><br><span class="line">&gt;&gt; text(<span class="number">3</span>,<span class="number">0.28</span>,<span class="string">&#x27;\leftarrow sin(x)&#x27;</span>)</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/stardust14/picture/master/img/20200817171100.png" alt="image-20200817165557493"></p><h4 id="legend函数"><a class="header-anchor" href="#legend函数">¶</a>legend函数</h4><p>legend(图例1,图例2, ····）</p><p>ex:绘制不同频率的正弦曲线并用图例标注曲线。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; x=<span class="built_in">linspace</span>(<span class="number">0</span>,<span class="number">2</span>*<span class="built_in">pi</span>,<span class="number">100</span>);</span><br><span class="line">&gt;&gt; <span class="built_in">plot</span>(x,[<span class="built_in">sin</span>(x);<span class="built_in">sin</span>(<span class="number">2</span>*x);<span class="built_in">sin</span>(<span class="number">3</span>*x)])</span><br><span class="line">&gt;&gt; <span class="built_in">legend</span>(<span class="string">&#x27;sin(x)&#x27;</span>,<span class="string">&#x27;sin(2x)&#x27;</span>,<span class="string">&#x27;sin(3x)&#x27;</span>)</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/stardust14/picture/master/img/20200817171055.png" alt="image-20200817165925279"></p><h3 id="坐标控制"><a class="header-anchor" href="#坐标控制">¶</a>坐标控制</h3><h4 id="axis函数"><a class="header-anchor" href="#axis函数">¶</a>axis函数</h4><p>axis([xmin, xmax, ymin, ymax, zmin, zmax])</p><ul><li>axis的其他用法<ul><li>axis equal: 纵、横坐标轴采用等长刻度</li><li>axis square: 产生正方形坐标系(默认为矩形)</li><li>axis auto: 使用默认设置</li><li>axis off:取消坐标轴</li><li>axis on:显示坐标轴</li></ul></li></ul><h4 id="给坐标系加网格和边框"><a class="header-anchor" href="#给坐标系加网格和边框">¶</a>给坐标系加网格和边框</h4><p>grid on   +网格<br>grid off    不加网格<br>grid</p><p>box on    +边框<br>box off   不加边框<br>box</p><p>ex:绘制sinx、sin(2x)、 sin(x/ 2 )的函数曲线并添加图形标注。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">x=<span class="built_in">linspace</span>(<span class="number">0</span>,<span class="number">2</span>*<span class="built_in">pi</span>,<span class="number">100</span>);</span><br><span class="line">y=[<span class="built_in">sin</span>(x);<span class="built_in">sin</span>(<span class="number">2</span>*x);<span class="built_in">sin</span>(<span class="number">0.5</span>*x)];</span><br><span class="line"><span class="built_in">plot</span>(x,y)</span><br><span class="line">axis([<span class="number">0</span>,<span class="number">7</span>,<span class="number">-1.2</span>,<span class="number">1.2</span>])</span><br><span class="line">title(<span class="string">&#x27;不同频率正弦函数曲线&#x27;</span>);</span><br><span class="line">xlabel(<span class="string">&#x27;Variable X&#x27;</span>);</span><br><span class="line">ylabel(<span class="string">&#x27;Variable Y&#x27;</span>);</span><br><span class="line">text(<span class="number">2.5</span>,<span class="built_in">sin</span>(<span class="number">2.5</span>),<span class="string">&#x27;sin(x)&#x27;</span>);</span><br><span class="line">text(<span class="number">1.5</span>,<span class="built_in">sin</span>(<span class="number">2</span>*<span class="number">1.5</span>),<span class="string">&#x27;sin(2x)&#x27;</span>);</span><br><span class="line">text(<span class="number">5.5</span>,<span class="built_in">sin</span>(<span class="number">0.5</span>*<span class="number">5.5</span>),<span class="string">&#x27;sin(0.5x)&#x27;</span>);</span><br><span class="line"><span class="built_in">legend</span>(<span class="string">&#x27;sin(x)&#x27;</span>,<span class="string">&#x27;sin(2x)&#x27;</span>,<span class="string">&#x27;sin(0.5x)&#x27;</span>)</span><br><span class="line">grid on</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/stardust14/picture/master/img/20200817171032.png" alt="image-20200817171031693"></p><h3 id="图形保持"><a class="header-anchor" href="#图形保持">¶</a>图形保持</h3><p>hold on<br>hold off<br>hold</p><p>ex:用图形保持功能绘制两个同心圆。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">t=<span class="built_in">linspace</span>(<span class="number">0</span>,<span class="number">2</span>*<span class="built_in">pi</span>,<span class="number">100</span>);</span><br><span class="line">x=<span class="built_in">sin</span>(t);</span><br><span class="line">y=<span class="built_in">cos</span>(t);</span><br><span class="line"><span class="built_in">plot</span>(x,y,<span class="string">&#x27;b&#x27;</span>)</span><br><span class="line"><span class="built_in">hold</span> on</span><br><span class="line"><span class="built_in">plot</span>(<span class="number">2</span>*x,<span class="number">2</span>*y,<span class="string">&#x27;r--&#x27;</span>)</span><br><span class="line">grid on</span><br><span class="line">axis([<span class="number">-2.2</span>,<span class="number">2.2</span>,<span class="number">-2.2</span>,<span class="number">2.2</span>])</span><br><span class="line">axis equal</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/stardust14/picture/master/img/20200817172551.png" alt="image-20200817171513928"></p><h3 id="图形窗口的分割"><a class="header-anchor" href="#图形窗口的分割">¶</a>图形窗口的分割</h3><ul><li><p>子图:同一图形窗口中的不同坐标系下的图形称为子图。</p></li><li><p>subplot函数<br>subplot(m, n, p)</p><blockquote><p>其中，m和n指定将图形窗口分成mx n个绘图区，p指定当前活动区。</p></blockquote></li></ul><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">x=<span class="built_in">linspace</span>(<span class="number">0</span>,<span class="number">2</span>*<span class="built_in">pi</span>,<span class="number">60</span>);</span><br><span class="line">subplot(<span class="number">2</span>,<span class="number">2</span>,<span class="number">1</span>)</span><br><span class="line"><span class="built_in">plot</span>(x,<span class="built_in">sin</span>(x)<span class="number">-1</span>);</span><br><span class="line">title(<span class="string">&#x27;sin(x)-1&#x27;</span>);</span><br><span class="line">axis([<span class="number">0</span>,<span class="number">2</span>*<span class="built_in">pi</span>,<span class="number">-2</span>,<span class="number">0</span>])</span><br><span class="line">subplot(<span class="number">2</span>,<span class="number">1</span>,<span class="number">2</span>)</span><br><span class="line"><span class="built_in">plot</span>(x,<span class="built_in">cos</span>(x)+<span class="number">1</span>);</span><br><span class="line">title(<span class="string">&#x27;cos(x)+1&#x27;</span>);</span><br><span class="line">axis([<span class="number">0</span>,<span class="number">2</span>*<span class="built_in">pi</span>,<span class="number">0</span>,<span class="number">2</span>])</span><br><span class="line">subplot(<span class="number">4</span>,<span class="number">4</span>,<span class="number">3</span>)</span><br><span class="line"><span class="built_in">plot</span>(x,<span class="built_in">tan</span>(x));</span><br><span class="line">title(<span class="string">&#x27;tan(x)&#x27;</span>);</span><br><span class="line">axis([<span class="number">0</span>,<span class="number">2</span>*<span class="built_in">pi</span>,<span class="number">-40</span>,<span class="number">40</span>])</span><br><span class="line">subplot(<span class="number">4</span>,<span class="number">4</span>,<span class="number">8</span>)</span><br><span class="line"><span class="built_in">plot</span>(x,<span class="built_in">cot</span>(x));</span><br><span class="line">title(<span class="string">&#x27;cot(x)&#x27;</span>);</span><br><span class="line">axis([<span class="number">0</span>,<span class="number">2</span>*<span class="built_in">pi</span>,<span class="number">-35</span>,<span class="number">35</span>])</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/stardust14/picture/master/img/20200817172544.png" alt="image-20200817172543856"></p><h2 id="其他形式的二维图形"><a class="header-anchor" href="#其他形式的二维图形">¶</a>其他形式的二维图形</h2><ul><li>其他坐标系下的二维曲线图</li><li>统计图</li><li>矢量图形</li></ul><h3 id="对数坐标图"><a class="header-anchor" href="#对数坐标图">¶</a>对数坐标图</h3><p>semilogx(x1, y1,选项1, x2, y2,选项2, ···）<br>semilogy(x1, y1,选项1, x2, y2,选项2, ···）<br>loglog(x1, y1,选项1, x2, y2,选项2, ····）</p><p>ex:绘制1/x的直角线性坐标图和三种对数坐标图。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">x=<span class="number">0</span>:<span class="number">0.1</span>:<span class="number">10</span>;</span><br><span class="line">y=<span class="number">1.</span>/x;</span><br><span class="line">subplot(<span class="number">2</span>,<span class="number">2</span>,<span class="number">1</span>);</span><br><span class="line"><span class="built_in">plot</span>(x,y)</span><br><span class="line">title(<span class="string">&#x27;plot(x,y)&#x27;</span>);</span><br><span class="line">subplot(<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>);</span><br><span class="line">semilogx(x,y)</span><br><span class="line">title(<span class="string">&#x27;semilogx(x,y)&#x27;</span>);</span><br><span class="line">grid on</span><br><span class="line">subplot(<span class="number">2</span>,<span class="number">2</span>,<span class="number">3</span>);</span><br><span class="line">semilogy(x,y)</span><br><span class="line">title(<span class="string">&#x27;semilogy(x,y)&#x27;</span>);</span><br><span class="line">grid on</span><br><span class="line">subplot(<span class="number">2</span>,<span class="number">2</span>,<span class="number">4</span>);</span><br><span class="line">loglog(x,y)</span><br><span class="line">title(<span class="string">&#x27;loglog(x,y)&#x27;</span>);</span><br><span class="line">grid on</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200819105432.png" alt="image-20200819105020441"></p><h3 id="极坐标图"><a class="header-anchor" href="#极坐标图">¶</a>极坐标图</h3><p>polar(theta, rho,选项)</p><blockquote><p>其中，theta为极角，rho为极径，选项的内容与plot函数相同。</p></blockquote><p>ex:按极坐标方程ρ=1 -sin θ绘制心形曲线。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">t=<span class="number">0</span>:<span class="built_in">pi</span>/<span class="number">100</span>:<span class="number">2</span>*<span class="built_in">pi</span>;</span><br><span class="line">r=<span class="number">1</span>-<span class="built_in">sin</span>(t);</span><br><span class="line">subplot(<span class="number">1</span>,<span class="number">2</span>,<span class="number">1</span>)</span><br><span class="line">polar(t,r)</span><br><span class="line">subplot(<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>)</span><br><span class="line">t1=t-<span class="built_in">pi</span>/<span class="number">2</span>;</span><br><span class="line">r1=<span class="number">1</span>-<span class="built_in">sin</span>(t1);</span><br><span class="line">polar(t,r1)</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200819105922.png" alt="image-20200819105920695"></p><h3 id="统计图"><a class="header-anchor" href="#统计图">¶</a>统计图</h3><ul><li>条形图</li><li>直方图</li><li>饼图</li><li>散点图</li></ul><h4 id="条形类图形"><a class="header-anchor" href="#条形类图形">¶</a>条形类图形</h4><p>①条形图</p><ul><li><p>bar函数:二维垂直</p><p>bar（y, style)</p></li></ul><blockquote><p>其中，参数y是数据，选项style用于指定分组排列模式。<br>“grouped”:簇状分组；“stacked”:堆积分组</p></blockquote><p>ex:绘制分组条形图。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">y=[<span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span>;<span class="number">1</span> <span class="number">2</span> <span class="number">1</span> <span class="number">2</span> <span class="number">1</span>;<span class="number">5</span> <span class="number">4</span> <span class="number">3</span> <span class="number">2</span> <span class="number">1</span>];</span><br><span class="line">subplot(<span class="number">1</span>,<span class="number">2</span>,<span class="number">1</span>)</span><br><span class="line">bar(y)</span><br><span class="line">title(<span class="string">&#x27;Group&#x27;</span>)</span><br><span class="line">subplot(<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>)</span><br><span class="line">bar(y,<span class="string">&#x27;stacked&#x27;</span>)</span><br><span class="line">title(<span class="string">&#x27;Stack&#x27;</span>)</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200819162254.png" alt="image-20200819162252622"></p><p>bar(x, y, style)</p><blockquote><p>其中，x存储横坐标，y存储数据。y的行数必须与x的长度相同</p></blockquote><p>ex:下表是某公司2015~2017年家电类商品1月份的销售数据，绘制条形图。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200819162548.png" alt="image-20200819162546738"></p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">x=[<span class="number">2015</span>,<span class="number">2016</span>,<span class="number">2017</span>];</span><br><span class="line">y=[<span class="number">68</span>,<span class="number">80</span>,<span class="number">115</span>,<span class="number">98</span>,<span class="number">102</span>;<span class="number">75</span> <span class="number">88</span> <span class="number">102</span> <span class="number">99</span> <span class="number">110</span>;<span class="number">81</span> <span class="number">86</span> <span class="number">125</span> <span class="number">105</span> <span class="number">115</span>];</span><br><span class="line">bar(x,y)</span><br><span class="line">title(<span class="string">&#x27;Group&#x27;</span>);</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200819163422.png" alt="image-20200819162747539"></p><ul><li>barh函数：水平垂直</li></ul><p>②直方图</p><ul><li><p>hist函数</p><p>hist(y)<br>hist(y, x)</p></li></ul><blockquote><p>其中，参数y是要统计的数据，x用于指定区间的划分方式。</p></blockquote><p>ex:绘制服从高斯分布的直方图。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">y=<span class="built_in">randn</span>(<span class="number">500</span>,<span class="number">1</span>);</span><br><span class="line">subplot(<span class="number">2</span>,<span class="number">1</span>,<span class="number">1</span>);</span><br><span class="line">hist(y);</span><br><span class="line">title(<span class="string">&#x27;高斯分布直方图&#x27;</span>);</span><br><span class="line">subplot(<span class="number">2</span>,<span class="number">1</span>,<span class="number">2</span>);</span><br><span class="line">x=<span class="number">-3</span>:<span class="number">0.2</span>:<span class="number">3</span>;</span><br><span class="line">hist(y,x);</span><br><span class="line">title(<span class="string">&#x27;指定区间中心点的直方图&#x27;</span>)</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200819163403.png" alt="image-20200819163402030"></p><ul><li>rose函数 :极坐标系下的直方图/玫瑰花图</li></ul><p>rose(theta, x)</p><blockquote><p>其中，参数theta用于确定每一区间与原点的角度，选项x用于指定区间的划分方式。</p><p>若x是标量，则在2pi区间内均匀划分成x个扇形区域；x缺损时，默认按20个等分区间统计</p></blockquote><p>ex:绘制高斯分布数据在极坐标下的直方图。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">y=<span class="built_in">randn</span>(<span class="number">500</span>,<span class="number">1</span>);</span><br><span class="line">theta=y*<span class="built_in">pi</span>;</span><br><span class="line">rose(theta)</span><br><span class="line">title(<span class="string">&#x27;在极坐标下的直方图&#x27;</span>)</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200819172845.png" alt="image-20200819171315366"></p><h4 id="面积类图形"><a class="header-anchor" href="#面积类图形">¶</a>面积类图形</h4><p>①扇形图</p><ul><li><p>pie函数</p><p>pie(x, explode)</p></li></ul><blockquote><p>其中，参数x存储待统计数据，选项explode控制图块的显示模式。</p></blockquote><p>ex:某次考试优秀、良好、中等、及格、不及格的人数分别为： 5、17、23、9、4，试用扇形统计图作成绩统计分析。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">score = [<span class="number">5</span>, <span class="number">17</span>, <span class="number">23</span>, <span class="number">9</span>, <span class="number">4</span>];</span><br><span class="line">ex = [<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>];</span><br><span class="line">pie(score, ex)</span><br><span class="line"><span class="built_in">legend</span>(<span class="string">&#x27;优秀&#x27;</span>,<span class="string">&#x27;良好&#x27;</span>,<span class="string">&#x27;中等&#x27;</span>,<span class="string">&#x27;及格&#x27;</span>,<span class="string">&#x27;不及格&#x27;</span>,<span class="string">&#x27;location&#x27;</span>,<span class="string">&#x27;eastoutside&#x27;</span>)</span><br></pre></td></tr></table></figure><blockquote><p>'location’用于指定图例位置， 'eastoutside’表示图例放在绘图区域右 边的外侧。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200819172837.png" alt="image-20200819172314338"></p><p>②面积图</p><ul><li>area函数</li></ul><h4 id="散点类图形"><a class="header-anchor" href="#散点类图形">¶</a>散点类图形</h4><ul><li><p>scatter函数:  散点图</p><p>scatter(x, y, 选项, ‘filled’)</p></li></ul><blockquote><p>其中，x、y用于定位数据点，选项用于指定线型、颜色、数据点标记。如果数据点标记是封闭图形，可以用选项‘filled’指定填充数据点标记。该选项省略时，数据点是空心的。</p></blockquote><p>ex:以散点图形式绘制桃心曲线，曲线的参数方程如下：</p><p><img src="../../../picture/PicGo/copypicture/image-20200819172728303.png" alt="image-20200819172728303"></p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">t = <span class="number">0</span>:<span class="built_in">pi</span>/<span class="number">50</span>:<span class="number">2</span>*<span class="built_in">pi</span>;</span><br><span class="line">x = <span class="number">16</span>*<span class="built_in">sin</span>(t).^<span class="number">3</span>;</span><br><span class="line">y = <span class="number">13</span>*<span class="built_in">cos</span>(t)<span class="number">-5</span>*<span class="built_in">cos</span>(<span class="number">2</span>*t)<span class="number">-2</span>*<span class="built_in">cos</span>(<span class="number">3</span>*t)-<span class="built_in">cos</span>(<span class="number">4</span>*t);</span><br><span class="line"><span class="built_in">scatter</span>(x,y,<span class="string">&#x27;rd&#x27;</span>,<span class="string">&#x27;filled&#x27;</span>)</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200819172828.png" alt="image-20200819172826877"></p><ul><li><p>stairs函数:    阶梯图</p></li><li><p>stem函数:     杆图</p></li></ul><h3 id="矢量类图形"><a class="header-anchor" href="#矢量类图形">¶</a>矢量类图形</h3><ul><li>compass函数:罗盘图</li><li>feather函数:羽毛图</li><li>quiver函数:箭头图</li></ul><p>quiver函数调用格式：</p><p>quiver(x, y, u, v)</p><blockquote><p>其中，(x, y)指定矢量起点，(u, v)指定矢量终点。x、y、u、v 是同样大小的向量或同型矩阵，若省略x、y，则在x-y平面上均匀取若干个点作为起点。</p></blockquote><p>ex:已知向量A、B，求A+B，并用矢量图表示。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">A=[<span class="number">4</span>,<span class="number">5</span>]; B=[<span class="number">-10</span>,<span class="number">0</span>]; C=A+B;</span><br><span class="line"><span class="built_in">hold</span> on;</span><br><span class="line">quiver(<span class="number">0</span>, <span class="number">0</span>, A(<span class="number">1</span>), A(<span class="number">2</span>));</span><br><span class="line">quiver(<span class="number">0</span>, <span class="number">0</span>, B(<span class="number">1</span>), B(<span class="number">2</span>));</span><br><span class="line">quiver(<span class="number">0</span>, <span class="number">0</span>, C(<span class="number">1</span>), C(<span class="number">2</span>));</span><br><span class="line">text(A(<span class="number">1</span>),A(<span class="number">2</span>),<span class="string">&#x27;A&#x27;</span>);text(B(<span class="number">1</span>),B(<span class="number">2</span>),<span class="string">&#x27;B&#x27;</span>);</span><br><span class="line">text(C(<span class="number">1</span>),C(<span class="number">2</span>),<span class="string">&#x27;C&#x27;</span>);</span><br><span class="line">axis ([<span class="number">-12</span>, <span class="number">6</span>, <span class="number">-1</span>, <span class="number">6</span>])</span><br><span class="line">grid on</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200819173208.png" alt="image-20200819173207268"></p><h2 id="三维曲线"><a class="header-anchor" href="#三维曲线">¶</a>三维曲线</h2><ul><li>plot3函数</li><li>fplot3函数</li></ul><h3 id="plot3函数"><a class="header-anchor" href="#plot3函数">¶</a>plot3函数</h3><h4 id="plot3函数的基本用法"><a class="header-anchor" href="#plot3函数的基本用法">¶</a>plot3函数的基本用法</h4><p>plot3(x, y, z)</p><blockquote><p>其中，参数x、y、z组成一组曲线的坐标。</p></blockquote><p>ex:绘制一条空间折线。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">x=[<span class="number">0.2</span>, <span class="number">1.8</span>, <span class="number">2.5</span>];</span><br><span class="line">y=[<span class="number">1.3</span>, <span class="number">2.8</span>, <span class="number">1.1</span>];</span><br><span class="line">z=[<span class="number">0.4</span>, <span class="number">1.2</span>, <span class="number">1.6</span>];</span><br><span class="line"><span class="built_in">plot3</span>(x, y, z)</span><br><span class="line">grid on</span><br><span class="line">axis([<span class="number">0</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">3</span>, <span class="number">0</span>, <span class="number">2</span>]); </span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200819210855.png" alt="image-20200819210806024"></p><p>ex:绘制螺旋线</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200819210846.png" alt="image-20200819210844875"></p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">t=<span class="built_in">linspace</span>(<span class="number">0</span>, <span class="number">10</span>*<span class="built_in">pi</span>, <span class="number">200</span>);</span><br><span class="line">x=<span class="built_in">sin</span>(t)+t.*<span class="built_in">cos</span>(t);</span><br><span class="line">y=<span class="built_in">cos</span>(t)-t.*<span class="built_in">sin</span>(t);</span><br><span class="line">z=t;</span><br><span class="line">subplot(<span class="number">1</span>, <span class="number">2</span>, <span class="number">1</span>)</span><br><span class="line"><span class="built_in">plot3</span>(x, y, z)</span><br><span class="line">grid on</span><br><span class="line">subplot(<span class="number">1</span>, <span class="number">2</span>, <span class="number">2</span>)</span><br><span class="line"><span class="built_in">plot3</span>(x(<span class="number">1</span>:<span class="number">4</span>:<span class="number">200</span>), y(<span class="number">1</span>:<span class="number">4</span>:<span class="number">200</span>), z(<span class="number">1</span>:<span class="number">4</span>:<span class="number">200</span>))</span><br><span class="line">grid on</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200819210941.png" alt="image-20200819210940190"></p><h4 id="plot3-x-y-z-函数参数的变化形式"><a class="header-anchor" href="#plot3-x-y-z-函数参数的变化形式">¶</a>plot3(x, y, z)函数参数的变化形式</h4><p>​plot3(X, Y, Z)</p><ul><li>参数X、Y、Z是同型矩阵时，以X、Y、Z对应列元素绘制曲线,曲线条数等于矩阵列数。</li><li>参数X、Y、Z中有向量，也有矩阵时，向量的长度应与矩阵相符。</li></ul><p>ex:在空间不同位置绘制5条正弦曲线。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">t=<span class="number">0</span>:<span class="number">0.01</span>:<span class="number">2</span>*<span class="built_in">pi</span>;</span><br><span class="line">t=t&#x27;;</span><br><span class="line">x=[t, t, t, t, t];</span><br><span class="line">y=[<span class="built_in">sin</span>(t), <span class="built_in">sin</span>(t)+<span class="number">1</span>, <span class="built_in">sin</span>(t)+<span class="number">2</span>, <span class="built_in">sin</span>(t)+<span class="number">3</span>, <span class="built_in">sin</span>(t)+<span class="number">4</span>];</span><br><span class="line">z=t;</span><br><span class="line"><span class="built_in">plot3</span>(x,y,z)</span><br></pre></td></tr></table></figure><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">t=<span class="number">0</span>:<span class="number">0.01</span>:<span class="number">2</span>*<span class="built_in">pi</span>;</span><br><span class="line">x=t;</span><br><span class="line">y=[<span class="built_in">sin</span>(t); <span class="built_in">sin</span>(t)+<span class="number">1</span>; <span class="built_in">sin</span>(t)+<span class="number">2</span>; <span class="built_in">sin</span>(t)+<span class="number">3</span>; <span class="built_in">sin</span>(t)+<span class="number">4</span>];</span><br><span class="line">z=t;</span><br><span class="line"><span class="built_in">plot3</span>(x,y,z)</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200819211222.png" alt="image-20200819211221182"></p><h4 id="含多组输入参数的plot3函数"><a class="header-anchor" href="#含多组输入参数的plot3函数">¶</a>含多组输入参数的plot3函数</h4><p>plot3(x1, y1, z1, x2, y2, z2, …, xn, yn, zn)<br>每一组x、y、z向量构成一组数据点的坐标，绘制一条曲线。</p><p>ex:绘制三条不同长度的正弦曲线。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">t1=<span class="number">0</span>:<span class="number">0.01</span>:<span class="number">1.5</span>*<span class="built_in">pi</span>;</span><br><span class="line">t2=<span class="number">0</span>:<span class="number">0.01</span>:<span class="number">2</span>*<span class="built_in">pi</span>;</span><br><span class="line">t3=<span class="number">0</span>:<span class="number">0.01</span>:<span class="number">3</span>*<span class="built_in">pi</span>;</span><br><span class="line"><span class="built_in">plot3</span>(t1,<span class="built_in">sin</span>(t1),t1, t2,<span class="built_in">sin</span>(t2)+<span class="number">1</span>,t2,t3,<span class="built_in">sin</span>(t3)+<span class="number">2</span>,t3)</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200819211547.png" alt="image-20200819211415811"></p><h4 id="含选项的plot3函数"><a class="header-anchor" href="#含选项的plot3函数">¶</a>含选项的plot3函数</h4><p>plot3(x, y, z, 选项)</p><blockquote><p>选项用于指定曲线的线型、颜色和数据点标记。</p></blockquote><p>ex: 绘制空间曲线</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200819211537.png" alt="image-20200819211536479"></p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">t=<span class="number">0</span>:<span class="built_in">pi</span>/<span class="number">50</span>:<span class="number">6</span>*<span class="built_in">pi</span>;</span><br><span class="line">x=<span class="built_in">cos</span>(t);</span><br><span class="line">y=<span class="built_in">sin</span>(t);</span><br><span class="line">z=<span class="number">2</span>*t;</span><br><span class="line"><span class="built_in">plot3</span>(x,y,z,<span class="string">&#x27;p&#x27;</span>)</span><br><span class="line">xlabel(<span class="string">&#x27;X&#x27;</span>),ylabel(<span class="string">&#x27;Y&#x27;</span>),zlabel(<span class="string">&#x27;Z&#x27;</span>);</span><br><span class="line">grid on</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200819211637.png" alt="image-20200819211635920"></p><h3 id="fplot3函数"><a class="header-anchor" href="#fplot3函数">¶</a>fplot3函数</h3><p>fplot3 (funx，funy， funz， tlims)</p><blockquote><p>其中，funx、 funy、 funz代表定 义曲线x、y、z坐标的函数，通常采用函数句柄的形式。tlims为参数函数自变量的取值范围，用二元向量[tmin, tmax]描述， 默认为[-5,5]。</p></blockquote><p>ex:绘制墨西哥帽顶曲线，曲线的参数方程如下</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200819211800.png" alt="image-20200819211759357"></p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">xt = @(t) <span class="built_in">exp</span>(-t/<span class="number">10</span>).*<span class="built_in">sin</span>(<span class="number">5</span>*t);</span><br><span class="line">yt = @(t) <span class="built_in">exp</span>(-t/<span class="number">10</span>).*<span class="built_in">cos</span>(<span class="number">5</span>*t);</span><br><span class="line">zt = @(t) t;</span><br><span class="line">fplot3(xt, yt, zt, [<span class="number">-12</span>, <span class="number">12</span>])</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200819213846.png" alt="image-20200819211845148"></p><p>在fplot3函数中，可以指定曲线的线型、颜色或数据点标记。</p><p>例如，用红色点划线绘制墨西哥帽顶曲线。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">xt = @(t) <span class="built_in">exp</span>(-t/<span class="number">10</span>).*<span class="built_in">sin</span>(<span class="number">5</span>*t);</span><br><span class="line">yt = @(t) <span class="built_in">exp</span>(-t/<span class="number">10</span>).*<span class="built_in">cos</span>(<span class="number">5</span>*t);</span><br><span class="line">zt = @(t) t;</span><br><span class="line">fplot3(xt, yt, zt, [<span class="number">-12</span>, <span class="number">12</span>], <span class="string">&#x27;r-.&#x27;</span>)</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200819213834.png" alt="image-20200819212032722"></p><h2 id="三维曲面"><a class="header-anchor" href="#三维曲面">¶</a>三维曲面</h2><ul><li>平面网格数据的生成</li><li>绘制三维曲面的mesh函数和surf函数</li><li>fmesh函数和fsurf函数</li></ul><h3 id="平面网格数据的生成"><a class="header-anchor" href="#平面网格数据的生成">¶</a>平面网格数据的生成</h3><p>用矩阵X、Y分别存储每一个小矩形顶点的x坐标与y坐标，矩阵X、Y就是该矩形区域的xy平面网格坐标矩阵。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200819213822.png" alt="image-20200819213059384"></p><p>在MATLAB中，产生平面区域内的网格坐标矩阵有**<font color="red">两种方法</font>**。</p><p>(1)利用矩阵运算生成。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; x=<span class="number">2</span>:<span class="number">6</span>;</span><br><span class="line">&gt;&gt; y=(<span class="number">3</span>:<span class="number">8</span>)&#x27;;</span><br><span class="line">&gt;&gt; X=<span class="built_in">ones</span>(<span class="built_in">size</span>(y))*x;</span><br><span class="line">&gt;&gt; Y=y*<span class="built_in">ones</span>(<span class="built_in">size</span>(x));</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200819213815.png" alt="image-20200819213433657"></p><blockquote><p>X和Y相同位置上的元素，如X32、Y32是区域的第3行第2列网格点的坐标(3,5)。</p></blockquote><p>(2)利用meshgrid函数生成。</p><p>[X,Y]=meshgrid(x,y);</p><blockquote><p>其中，参数x、y为向量，存储网格点坐标的X、Y为矩阵。</p></blockquote><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; x = <span class="number">2</span>:<span class="number">1</span>:<span class="number">6</span>;</span><br><span class="line">&gt;&gt; y = (<span class="number">3</span>:<span class="number">1</span>:<span class="number">8</span>)&#x27;;</span><br><span class="line">&gt;&gt; [X, Y] = <span class="built_in">meshgrid</span>(x, y);</span><br></pre></td></tr></table></figure><blockquote><p>第3行命令生成的网格坐标矩阵X、Y与方法(1)得到的相同。</p></blockquote><p>若根据每一个网格点上的x、y坐标求函数值z，则得到函数值矩 阵Z。矩阵X、Y、Z中的各个列向量，对应于一条曲线数据点的坐标。</p><p>ex:绘制空间曲线。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">x = <span class="number">2</span>:<span class="number">6</span>;</span><br><span class="line">y = (<span class="number">3</span>:<span class="number">8</span>)&#x27;;</span><br><span class="line">[X, Y] = <span class="built_in">meshgrid</span>(x, y);</span><br><span class="line">Z = <span class="built_in">randn</span>(<span class="built_in">size</span>(X));</span><br><span class="line"><span class="built_in">plot3</span>(X,Y,Z)</span><br><span class="line">grid on;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200819213801.png" alt="image-20200819213800012"></p><ul><li>mesh函数和surf函数的调用格式：</li></ul><p>mesh(x, y, z, c)<br>surf(x, y, z, c)</p><blockquote><p>其中，x、y是网格坐标矩阵，z是网格点上的高度矩阵，c用于指定在不同高度下的曲面颜色。c省略时，颜色的设定正比于图形的高度。</p></blockquote><p>ex: 绘制三维曲面图<code>𝑧 = 𝑥𝑒 ^(− 𝑥 ^2 − 𝑦^2)</code></p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">t = <span class="number">-2</span>:<span class="number">0.2</span>:<span class="number">2</span>;</span><br><span class="line">[X, Y] = <span class="built_in">meshgrid</span>(t);</span><br><span class="line">Z = X .* <span class="built_in">exp</span>(-X.^<span class="number">2</span> - Y.^<span class="number">2</span>);</span><br><span class="line">subplot(<span class="number">1</span>,<span class="number">3</span>,<span class="number">1</span>)</span><br><span class="line">mesh(X,Y,Z);</span><br><span class="line">subplot(<span class="number">1</span>,<span class="number">3</span>,<span class="number">2</span>)</span><br><span class="line">surf(X,Y,Z);</span><br><span class="line">subplot(<span class="number">1</span>,<span class="number">3</span>,<span class="number">3</span>)</span><br><span class="line"><span class="built_in">plot3</span>(X,Y,Z);</span><br><span class="line">grid on </span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200819214239.png" alt="image-20200819214237905"></p><ul><li>mesh函数和surf函数的其他调用格式：</li></ul><p>mesh(z, c)<br>surf(z, c)</p><blockquote><p>当x、y省略时，z矩阵的第2维下标当作x轴坐标，z矩阵的第1维下 标当作y轴坐标。</p></blockquote><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; t = <span class="number">1</span>:<span class="number">5</span>;</span><br><span class="line">&gt;&gt; z= [<span class="number">0.5</span>*t; <span class="number">2</span>*t; <span class="number">3</span>*t];</span><br><span class="line">&gt;&gt; mesh(z);</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200819214557.png" alt="image-20200819214556082"></p><h3 id="绘制三维曲面的函数"><a class="header-anchor" href="#绘制三维曲面的函数">¶</a>绘制三维曲面的函数</h3><ul><li>带等高线的三维网格曲面函数meshc</li><li>带底座的三维网格曲面函数meshz</li><li>具有等高线的曲面函数surfc</li><li>具有光照效果的曲面函数surf1</li></ul><p>ex:用4种方式绘制函数𝒛 = (𝑥 − 1) 2+(𝑦 − 2) 2−1的曲面图。 其中，x∈[0,2]，y∈[1,3]。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">[x,y]=<span class="built_in">meshgrid</span>(<span class="number">0</span>:<span class="number">0.1</span>:<span class="number">2</span>,<span class="number">1</span>:<span class="number">0.1</span>:<span class="number">3</span>);</span><br><span class="line">z=(x<span class="number">-1</span>).^<span class="number">2</span>+(y<span class="number">-2</span>).^<span class="number">2</span><span class="number">-1</span>;</span><br><span class="line">subplot(<span class="number">2</span>,<span class="number">2</span>,<span class="number">1</span>);</span><br><span class="line">meshc(x,y,z);title(<span class="string">&#x27;meshc(x,y,z)&#x27;</span>)</span><br><span class="line">subplot(<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>);</span><br><span class="line">meshz(x,y,z);title(<span class="string">&#x27;meshz(x,y,z)&#x27;</span>)</span><br><span class="line">subplot(<span class="number">2</span>,<span class="number">2</span>,<span class="number">3</span>);</span><br><span class="line">surfc(x,y,z);title(<span class="string">&#x27;surfc(x,y,z)&#x27;</span>)</span><br><span class="line">subplot(<span class="number">2</span>,<span class="number">2</span>,<span class="number">4</span>);</span><br><span class="line">surfl(x,y,z); title(<span class="string">&#x27;surfl(x,y,z)&#x27;</span>)</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200819214744.png" alt="image-20200819214742546"></p><h3 id="标准三维曲面"><a class="header-anchor" href="#标准三维曲面">¶</a>标准三维曲面</h3><h4 id="sphere函数"><a class="header-anchor" href="#sphere函数">¶</a>sphere函数</h4><p>[x,y,z]=sphere(n)</p><p>产生3个(n+1)阶的方阵，采用这3个矩阵可以绘制出圆心位于 原点、半径为1的单位球体。</p><h4 id="cylinder函数"><a class="header-anchor" href="#cylinder函数">¶</a>cylinder函数</h4><p>[x,y,z]=cylinder(R, n)</p><blockquote><p>其中，参数R是一个向量，存放柱面各个等间隔高度上的半径， n表示在圆柱圆周上有n个间隔点，默认有20个间隔点。</p></blockquote><p>ex:用cylinder函数分别绘制柱面、花瓶和圆锥面</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">subplot(<span class="number">1</span>,<span class="number">3</span>,<span class="number">1</span>);</span><br><span class="line">[x,y,z]=cylinder;</span><br><span class="line">surf(x,y,z);</span><br><span class="line">subplot(<span class="number">1</span>,<span class="number">3</span>,<span class="number">2</span>);</span><br><span class="line">t=<span class="built_in">linspace</span>(<span class="number">0</span>,<span class="number">2</span>*<span class="built_in">pi</span>,<span class="number">40</span>);</span><br><span class="line">[x,y,z]= cylinder(<span class="number">2</span>+<span class="built_in">cos</span>(t),<span class="number">30</span>);</span><br><span class="line">surf(x,y,z);</span><br><span class="line">subplot(<span class="number">1</span>,<span class="number">3</span>,<span class="number">3</span>);</span><br><span class="line">[x,y,z]= cylinder(<span class="number">0</span>:<span class="number">0.2</span>:<span class="number">2</span>,<span class="number">30</span>);</span><br><span class="line">surf(x,y,z);</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200819215443.png" alt="image-20200819214947702"></p><p>ex:用cylinder函数绘制两个相互垂直且直径相等的圆柱面的相交图形。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">[x,y,z]= cylinder(<span class="number">1</span>,<span class="number">60</span>);</span><br><span class="line">z=[<span class="number">-1</span>*z(<span class="number">2</span>,:);z(<span class="number">2</span>,:)];</span><br><span class="line">surf(x,y,z)</span><br><span class="line"><span class="built_in">hold</span> on</span><br><span class="line">surf(y,z,x)</span><br><span class="line">axis equal</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200819215437.png" alt="image-20200819215104314"></p><h4 id="peaks-函数"><a class="header-anchor" href="#peaks-函数">¶</a>peaks 函数</h4><p>peaks函数的调用格式：</p><p>peaks(n)<br>peaks(V)<br>peaks(x,y)<br>peaks</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; p1=peaks(<span class="number">10</span>);</span><br><span class="line">&gt;&gt; p2=peaks;</span><br><span class="line">&gt;&gt; p3=peaks(<span class="number">-3</span>:<span class="number">0.2</span>:<span class="number">3</span>);</span><br><span class="line">&gt;&gt; [x,y]=<span class="built_in">meshgrid</span>(<span class="number">-2</span>:<span class="number">0.1</span>:<span class="number">2</span>, <span class="number">0</span>:<span class="number">0.1</span>:<span class="number">5</span>);</span><br><span class="line">&gt;&gt; p4=peaks(x,y);</span><br></pre></td></tr></table></figure><h3 id="fmesh函数和fsurf函数"><a class="header-anchor" href="#fmesh函数和fsurf函数">¶</a>fmesh函数和fsurf函数</h3><p>用于绘制参数方程定义的曲面</p><p>fsurf(funx, funy, funz, uvlims)<br>fmesh(funx, funy, funz, uvlims)</p><blockquote><p>其中，funx、funy、funz代表定义曲面x、y、z坐标的函数，通常采用函数句柄的形式。uvlims为funx、funy和funz的自变量的取值范围，用4元向量[umin, umax, vmin, vmax]描述 ，默认为[-5, 5, -5, 5]。</p></blockquote><p>ex:绘制螺旋曲面。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200819215942.png" alt="image-20200819215630359"></p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">funx = @(u,v) u.*<span class="built_in">sin</span>(v);</span><br><span class="line">funy = @(u,v) -u.*<span class="built_in">cos</span>(v);</span><br><span class="line">funz = @(u,v) v;</span><br><span class="line">fsurf(funx,funy,funz,[<span class="number">-5</span> <span class="number">5</span> <span class="number">-5</span> <span class="number">-2</span>])</span><br><span class="line"><span class="built_in">hold</span> on</span><br><span class="line">fmesh(funx,funy,funz,[<span class="number">-5</span> <span class="number">5</span> <span class="number">-2</span> <span class="number">2</span>])</span><br><span class="line"><span class="built_in">hold</span> off</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200819215930.png" alt="image-20200819215709246"></p><h2 id="图形修饰处理"><a class="header-anchor" href="#图形修饰处理">¶</a>图形修饰处理</h2><ul><li>视点处理</li><li>色彩处理</li><li>图形的裁剪处理</li></ul><h3 id="视点处理"><a class="header-anchor" href="#视点处理">¶</a>视点处理</h3><p>方位角:视点与原点连线在xy平面上的投影与y轴负方向形成的角度，正值表示逆时针，负值表示顺时针。<br>仰角:视点与原点连线与xy平面的夹角，正值表示视点在xy平面上方，负值表示视点在xy平面下方。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200820140437.png" alt="image-20200820140435709"></p><h4 id="view函数的基本用法"><a class="header-anchor" href="#view函数的基本用法">¶</a>view函数的基本用法</h4><p>view(az,el)</p><blockquote><p>其中，az为方位角，el为仰角。系统默认的视点定义为方位角-37.5°，仰角30°。</p></blockquote><p>ex:绘制函数𝒛 = (𝑥 − 1)^ 2+(𝑦 − 2)^2−1曲面，并从不同视点展示曲面</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">[x,y]=<span class="built_in">meshgrid</span>(<span class="number">0</span>:<span class="number">0.1</span>:<span class="number">2</span>, <span class="number">1</span>:<span class="number">0.1</span>:<span class="number">3</span>);</span><br><span class="line">z=(x<span class="number">-1</span>).^<span class="number">2</span>+(y<span class="number">-2</span>).^<span class="number">2</span><span class="number">-1</span>;</span><br><span class="line">subplot(<span class="number">2</span>,<span class="number">2</span>,<span class="number">1</span>); mesh(x,y,z)</span><br><span class="line">title(<span class="string">&#x27;方位角=-37.5&#123;\circ&#125;,仰角=30&#123;\circ&#125;&#x27;</span>)</span><br><span class="line">subplot(<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>); mesh(x,y,z)</span><br><span class="line">view(<span class="number">0</span>,<span class="number">90</span>);title(<span class="string">&#x27;方位角=0&#123;\circ&#125;,仰角=90&#123;\circ&#125;&#x27;</span>)</span><br><span class="line">subplot(<span class="number">2</span>,<span class="number">2</span>,<span class="number">3</span>); mesh(x,y,z)</span><br><span class="line">view(<span class="number">90</span>,<span class="number">0</span>); title(<span class="string">&#x27;方位角=90&#123;\circ&#125;,仰角=0&#123;\circ&#125;&#x27;</span>)</span><br><span class="line">subplot(<span class="number">2</span>,<span class="number">2</span>,<span class="number">4</span>); mesh(x,y,z)</span><br><span class="line">view(<span class="number">-45</span>,<span class="number">-60</span>); title(<span class="string">&#x27;方位角=-45&#123;\circ&#125;,仰角=-60&#123;\circ&#125;&#x27;</span>)</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200820141051.png" alt="image-20200820140657979"></p><h4 id="view函数的其他用法"><a class="header-anchor" href="#view函数的其他用法">¶</a>view函数的其他用法</h4><p>view(x, y, z)<br>view(2)<br>view(3)</p><h3 id="色彩处理"><a class="header-anchor" href="#色彩处理">¶</a>色彩处理</h3><h4 id="颜色的向量表示"><a class="header-anchor" href="#颜色的向量表示">¶</a>颜色的向量表示</h4><p>向量元素在[0，1]范围内取值，3个元素依次表示红、绿、蓝3种颜色的 相对亮度，称为RGB三元组。</p><p>[0 0 1]：蓝色 [1 0 0]：红色 [0 1 0]：绿色 [1 1 1]：白色 [0 0 0]：黑色</p><p>[R G B] 红 绿 蓝</p><h4 id="色图（Colormap）"><a class="header-anchor" href="#色图（Colormap）">¶</a>色图（Colormap）</h4><ul><li>色图矩阵</li></ul><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; cmap=colormap(parula(<span class="number">5</span>))</span><br><span class="line"></span><br><span class="line">cmap =</span><br><span class="line"></span><br><span class="line">    <span class="number">0.2081</span>    <span class="number">0.1663</span>    <span class="number">0.5292</span></span><br><span class="line">    <span class="number">0.0795</span>    <span class="number">0.5159</span>    <span class="number">0.8328</span></span><br><span class="line">    <span class="number">0.1986</span>    <span class="number">0.7214</span>    <span class="number">0.6310</span></span><br><span class="line">    <span class="number">0.8266</span>    <span class="number">0.7320</span>    <span class="number">0.3464</span></span><br><span class="line">    <span class="number">0.9763</span>    <span class="number">0.9831</span>    <span class="number">0.0538</span></span><br></pre></td></tr></table></figure><ul><li>内建色图</li></ul><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200820141043.png" alt="image-20200820141041965"></p><ul><li><p>指定当前图形使用的色图</p><p>colormap cmapname</p><p>colormap(cmap)</p></li></ul><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; surf(peaks)</span><br><span class="line">&gt;&gt; colormap hot</span><br></pre></td></tr></table></figure><div class="justified-gallery"><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200820141210.png" alt="image-20200820141209262"></p>          </div><div class="justified-gallery"><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200820141252.png" alt="image-20200820141251005"></p>          </div><ul><li>创建色图矩阵</li></ul><p>色图矩阵的每一行是RGB三元组。可以自定义色图矩阵，也可以 调用MATLAB提供的函数来定义色图矩阵。</p><p>ex:创建一个灰色系列色图矩阵。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">c = [<span class="number">0</span>, <span class="number">0.2</span>, <span class="number">0.4</span>, <span class="number">0.6</span>, <span class="number">0.8</span>, <span class="number">1.0</span>]&#x27;;</span><br><span class="line">cmap = [c, c, c];</span><br><span class="line">surf(peaks)</span><br><span class="line">colormap(cmap)</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200820141647.png" alt="image-20200820141645070"></p><h4 id="三维图形表面的着色"><a class="header-anchor" href="#三维图形表面的着色">¶</a>三维图形表面的着色</h4><p>可以用shading函数来改变着色方式</p><p>shading faceted:每个网格片用其高度对应的颜色进行着色， 网格线是黑色。这是默认着色方式。</p><p>shading flat:每个网格片用同一个颜色进行着色，且网格线也用相应的颜色。</p><p>shading interp:网格片内采用颜色插值处理。</p><p>ex:使用同一色图，以不同着色方式绘制圆锥体。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">[x,y,z]= cylinder(<span class="built_in">pi</span>:-<span class="built_in">pi</span>/<span class="number">5</span>:<span class="number">0</span>,<span class="number">10</span>);</span><br><span class="line">colormap(lines);</span><br><span class="line">subplot(<span class="number">1</span>,<span class="number">3</span>,<span class="number">1</span>);</span><br><span class="line">surf(x,y,z); shading flat</span><br><span class="line">subplot(<span class="number">1</span>,<span class="number">3</span>,<span class="number">2</span>);</span><br><span class="line">surf(x,y,z); shading interp</span><br><span class="line">subplot(<span class="number">1</span>,<span class="number">3</span>,<span class="number">3</span>);</span><br><span class="line">surf(x,y,z);</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200820141910.png" alt="image-20200820141909296"></p><h3 id="图形的裁剪处理"><a class="header-anchor" href="#图形的裁剪处理">¶</a>图形的裁剪处理</h3><p>将图形中需要裁剪部分对应的函数值设置成<font color="red">NaN</font>，这样在绘制图 形时，函数值为NaN的部分将不显示出来，从而达到对图形进行裁剪 的目的。</p><p>ex:绘制3/4圆。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">t = <span class="built_in">linspace</span>(<span class="number">0</span>,<span class="number">2</span>*<span class="built_in">pi</span>,<span class="number">100</span>);</span><br><span class="line">x = <span class="built_in">sin</span>(t);</span><br><span class="line">y = <span class="built_in">cos</span>(t);</span><br><span class="line">p = y &gt; <span class="number">0.5</span>;</span><br><span class="line">y(p)= NaN;</span><br><span class="line"><span class="built_in">plot</span>(x,y)</span><br><span class="line">axis([<span class="number">-1.1</span>,<span class="number">1.1</span>,<span class="number">-1.1</span>,<span class="number">1.1</span>])</span><br><span class="line">axis square</span><br><span class="line">grid on</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200820142049.png" alt="image-20200820142048475"></p><p>ex:绘制3/4球面。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">[X, Y, Z] = sphere(<span class="number">60</span>);</span><br><span class="line">p = Z&gt;<span class="number">0.5</span>;</span><br><span class="line">Z(p) = NaN;</span><br><span class="line">surf(X, Y, Z)</span><br><span class="line">axis([<span class="number">-1</span>, <span class="number">1</span>, <span class="number">-1</span>, <span class="number">1</span>, <span class="number">-1</span>, <span class="number">1</span>])</span><br><span class="line">axis equal</span><br><span class="line">view(<span class="number">-45</span>, <span class="number">20</span>)</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200820142135.png" alt="image-20200820142133450"></p><h2 id="交互式绘图工具"><a class="header-anchor" href="#交互式绘图工具">¶</a>交互式绘图工具</h2><ul><li>&quot;绘图&quot;选项卡</li><li>图形窗口绘图工具</li><li>图形窗口菜单和工具栏</li></ul><h3 id="“绘图”选项卡"><a class="header-anchor" href="#“绘图”选项卡">¶</a>“绘图”选项卡</h3><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200820142333.png" alt="image-20200820142329074"></p><p>“绘图”选项卡的工具条提供了绘制图形的基本命令。</p><p>&quot;所选内容&quot;命令组:用于显示已选中用于绘图的变量;<br>“绘图”命令组:提供了绘制各种图形的命令;<br>“选项”命令组:用于设置绘图时是否新建图形窗口。</p><p>ex:选择已有变量绘制图形。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200820142929.png" alt="无标题"></p><h3 id="绘图工具"><a class="header-anchor" href="#绘图工具">¶</a>绘图工具</h3><h4 id="显示绘图工具"><a class="header-anchor" href="#显示绘图工具">¶</a>显示绘图工具</h4><p>“显示绘图工具和停靠图形”按钮<br>命令行窗口中输入命令</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; plottools</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200820143221.png" alt="image-20200820143219869"></p><h4 id="绘图工具的组成"><a class="header-anchor" href="#绘图工具的组成">¶</a>绘图工具的组成</h4><ul><li>图形选项板</li><li>绘图浏览器</li><li>属性编辑器</li></ul><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200820143453.png" alt="image-20200820143408346"></p><ul><li>图形选项板</li></ul><p>用于在图形窗口中添加和排列子图，观察和选择绘图数据以及添加图形标注。</p><p>“新子图”面板</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200820143536.png" alt="image-20200820143535529"></p><p>“变量”面板</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200820143707.png" alt="image-20200820143706147"></p><p>“注释”面板</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200820143727.png" alt="image-20200820143726170"></p><ul><li>绘图浏览器</li></ul><p>以图例的方式列出图形中的元素。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200820144025.png" alt="image-20200820143756260"></p><ul><li>属性编辑器</li></ul><p>用于观测和设置所选对象 的名称、颜色、填充方法等参 数。不同类型的对象，属性编 辑器中的内容不同。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200820144040.png" alt="image-20200820143835238"></p><p>ex:用工作区的变量绘制曲线，改变曲线的类型、颜色、线型等。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200820144047.png" alt="image-20200820144013869"></p><h3 id="图形窗口菜单和工具栏"><a class="header-anchor" href="#图形窗口菜单和工具栏">¶</a>图形窗口菜单和工具栏</h3><ul><li>工具栏</li></ul><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200820144258.png" alt="无标题01"></p><ul><li>图形窗口菜单</li></ul><p>图形绘制完成后，可以 用“文件”菜单中的“生成 代码”命令，将实施在图形 上的这些操作命令输出成脚 本。也可以用“保存”命令 将图形窗口内容保存为fig 文件。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200820144420.png" alt="image-20200820144418286"></p><h1>数据分析与多项式计算</h1><h2 id="数据统计分析"><a class="header-anchor" href="#数据统计分析">¶</a>数据统计分析</h2><ul><li>求最大元素与最小元素</li><li>求平均值与中值</li><li>求和与求积</li><li>累加和与累乘积</li><li>求标准差与相关系数</li><li>排序</li></ul><h3 id="求矩阵的最大元素和最小元素"><a class="header-anchor" href="#求矩阵的最大元素和最小元素">¶</a>求矩阵的最大元素和最小元素</h3><ul><li>max():求向量或矩阵的最大元素。</li><li>min():求向量或矩阵的最小元素。</li></ul><p>当参数为向量时，上述函数有两种调用格式：</p><p>（1）y=max(X)：返回向量X的最大值存入y，如果X中包含复数元素， 则按模取最大值。</p><p>（2）[y,k]=max(X)：返回向量X的最大值存入y，最大值元素的序号 存入k，如果X中包含复数元素，则按模取最大值。</p><p>ex:求向量x的最大元素，其中x=[-43,72,9,16,23,47]。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; x=[<span class="number">-43</span>,<span class="number">72</span>,<span class="number">9</span>,<span class="number">16</span>,<span class="number">23</span>,<span class="number">47</span>];</span><br><span class="line">&gt;&gt; y=<span class="built_in">max</span>(x)</span><br><span class="line"></span><br><span class="line">y =</span><br><span class="line"></span><br><span class="line">    <span class="number">72</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; [y,k]=<span class="built_in">max</span>(x)</span><br><span class="line"></span><br><span class="line">y =</span><br><span class="line"></span><br><span class="line">    <span class="number">72</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">k =</span><br><span class="line"></span><br><span class="line">     <span class="number">2</span></span><br></pre></td></tr></table></figure><p>当参数为矩阵时，函数有三种调用格式:<br>(1)max(A):返回一个行向量，向量的第i个元素是矩阵A的第i列上的最<br>大值。<br>(2）[Y,U]=max(A):返回行向量Y和U，Y向量记录A中每列的最大值，U向量记录每列最大值元素的行号。<br>(3） max(A,[,dim):dim取1或2。dim取1时，该函数的功能和max(A)完全相同; dim取2时，该函数返回一个列向量，其第i个元素是A矩阵的第i行上的最大值。</p><blockquote><p>思考：对矩阵按行求最大元素，仅使用第一种格式，能够做到吗？</p></blockquote><p>ex: 求矩阵A的每行及每列的最大元素，并求整个矩阵的最大元素.</p><p>A=[13,-56,78;25,63,-235;78,25,563;1,0,-1]</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt;  A=[<span class="number">13</span>,<span class="number">-56</span>,<span class="number">78</span>;<span class="number">25</span>,<span class="number">63</span>,<span class="number">-235</span>;<span class="number">78</span>,<span class="number">25</span>,<span class="number">563</span>;<span class="number">1</span>,<span class="number">0</span>,<span class="number">-1</span>];</span><br><span class="line">&gt;&gt; <span class="built_in">max</span>(A)</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">    <span class="number">78</span>    <span class="number">63</span>   <span class="number">563</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; <span class="built_in">max</span>(<span class="built_in">max</span>(A))</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">   <span class="number">563</span></span><br></pre></td></tr></table></figure><blockquote><p>思考：用什么方法只调用一次max 函数就能求得整个矩阵的最大值？</p></blockquote><h3 id="求矩阵的平均值和中值"><a class="header-anchor" href="#求矩阵的平均值和中值">¶</a>求矩阵的平均值和中值</h3><ul><li>平均值:指算术平均值，即每项数据之和除以项数。</li><li>中值:指在数据序列中其值的大小恰好处在中间的元素。如果数据个数为奇数，则取值为大小位于中间的元素;如果数据个数为偶数，则取中间两个元素的平均值。</li></ul><p>在MATLAB中，求平均值和中值的函数分别为：</p><ul><li>mean():求算术平均值。</li><li>median():求中值。</li></ul><blockquote><p>思考：有了平均值，为什么还要中值？</p></blockquote><p>ex:某学生宿舍的5位同学月生活费如向量x所示，其中，小明同学家 境一般，请问他应该按什么标准向父母主张生活费额度才较为合理。</p><p>x=[1200,800,1500,1000,5000]</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; x=[<span class="number">1200</span>,<span class="number">800</span>,<span class="number">1500</span>,<span class="number">1000</span>,<span class="number">5000</span>];</span><br><span class="line">&gt;&gt; <span class="built_in">mean</span>(x)</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">        <span class="number">1900</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; median(x)</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">        <span class="number">1200</span></span><br></pre></td></tr></table></figure><h3 id="求和与求积"><a class="header-anchor" href="#求和与求积">¶</a>求和与求积</h3><ul><li>sum():求和函数。</li><li>prod():求积函数。</li></ul><h3 id="累加和与累乘积"><a class="header-anchor" href="#累加和与累乘积">¶</a>累加和与累乘积</h3><p>设<img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200821105420.png" alt="image-20200821105418343">，是一个向量，V、W是与U等长的另外两个向量，并且<img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200821105445.png" alt="image-20200821105444073"></p><p>则分别称V、W为U的累加和向量和累乘积向量。</p><p>在MATLAB中，求累加和与累乘积的函数分别为：</p><ul><li>cumsum():累加和函数。</li><li>cumprod():累乘积函数。</li></ul><p>ex:求向量X=[1,2,3,4,5,6,7,8,9,10]的积与累乘积。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; X=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>];</span><br><span class="line">&gt;&gt; y1=prod(X)</span><br><span class="line"></span><br><span class="line">y1 =</span><br><span class="line"></span><br><span class="line">     <span class="number">3628800</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; y2=cumprod(X)</span><br><span class="line"></span><br><span class="line">y2 =</span><br><span class="line"></span><br><span class="line">  <span class="number">1</span> 至 <span class="number">5</span> 列</span><br><span class="line"></span><br><span class="line">           <span class="number">1</span>           <span class="number">2</span>           <span class="number">6</span>          <span class="number">24</span>         <span class="number">120</span></span><br><span class="line"></span><br><span class="line">  <span class="number">6</span> 至 <span class="number">10</span> 列</span><br><span class="line"></span><br><span class="line">         <span class="number">720</span>        <span class="number">5040</span>       <span class="number">40320</span>      <span class="number">362880</span>     <span class="number">3628800</span></span><br></pre></td></tr></table></figure><h3 id="标准差与相关系数"><a class="header-anchor" href="#标准差与相关系数">¶</a>标准差与相关系数</h3><p>标准差用于计算数据偏离平均数的距离的平均值，其计算公式为</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200821105724.png" alt="image-20200821105723539"></p><p>MATLAB中计算标准差的函数为std()，其调用格式为：</p><p>(1) std(X):计算向量X的标准差。<br>(2)std(A):计算矩阵A的各列的标准差。<br>(3)std(A,flag,dim):flag取0或1，当flag=0时，按S1所列公式计算样本标准方差;当flag=1时，按S2所列公式计算总体标准方差。在默认情况下，flag=0，dim=1。</p><p>ex:生成满足正态分布的50000*4随机矩阵，用不同的形式求其各列之间的标准差。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; x=<span class="built_in">randn</span>(<span class="number">50000</span>,<span class="number">4</span>);</span><br><span class="line">&gt;&gt; y1=std(x,<span class="number">0</span>,<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">y1 =</span><br><span class="line"></span><br><span class="line">    <span class="number">0.9958</span>    <span class="number">0.9980</span>    <span class="number">1.0046</span>    <span class="number">0.9990</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; y2=std(x,<span class="number">1</span>,<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">y2 =</span><br><span class="line"></span><br><span class="line">    <span class="number">0.9958</span>    <span class="number">0.9980</span>    <span class="number">1.0046</span>    <span class="number">0.9990</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; x1=x&#x27;;</span><br><span class="line">&gt;&gt; y3=std(x1,<span class="number">0</span>,<span class="number">2</span>);</span><br><span class="line">&gt;&gt; y3&#x27; <span class="comment">%y3&#x27;=y1</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">    <span class="number">0.9958</span>    <span class="number">0.9980</span>    <span class="number">1.0046</span>    <span class="number">0.9990</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; y4=std(x1,<span class="number">1</span>,<span class="number">2</span>);</span><br><span class="line">&gt;&gt; y4&#x27; <span class="comment">%y4&#x27;=y2</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">    <span class="number">0.9958</span>    <span class="number">0.9980</span>    <span class="number">1.0046</span>    <span class="number">0.9990</span></span><br></pre></td></tr></table></figure><p>相关系数能够反映两组数据序列之间相互关系，其计算公式为</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200821162834.png" alt="image-20200821162833842"></p><p>在MATLAB中，计算相关系数的函数为corrcoef()，其调用格式为：</p><p>（1）corrcoef(A)：返回由矩阵A所形成的一个相关系数矩阵，其中，第i行第j 列的元素表示原矩阵A中第i列和第j列的相关系数。 （2）corrcoef(X,Y)：在这里，X,Y是向量，它们与corrcoef([X,Y])的作用一 样，用于求X、Y向量之间的相关系数。</p><p>ex:某新产品上市，在上市之 前，公司物流部门把新产品分 配到不同地区的10个仓库进行 销售。产品上市一个月后，公 司要对各种不同的分配方案进 行评估，以便在下一次新产品 上市时进行更准确的分配，避 免由于分配不当而产生的积压 和断货。右表是相关数据，请 判断哪种分配方案最为合理。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200821162932.png" alt="image-20200821162929853"></p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; A=[<span class="number">5032</span>,<span class="number">6000</span>,<span class="number">5100</span>,<span class="number">5200</span>;<span class="number">6532</span>,<span class="number">6500</span>,<span class="number">6600</span>,<span class="number">5800</span>;</span><br><span class="line"><span class="number">5500</span>,<span class="number">7000</span>,<span class="number">5400</span>,<span class="number">4800</span>;<span class="number">4530</span>,<span class="number">4000</span>,<span class="number">4300</span>,<span class="number">4200</span>;</span><br><span class="line"><span class="number">2300</span>,<span class="number">2000</span>,<span class="number">2200</span>,<span class="number">2500</span>;<span class="number">3254</span>,<span class="number">3000</span>,<span class="number">3500</span>,<span class="number">3000</span>;</span><br><span class="line"><span class="number">8095</span>,<span class="number">9000</span>,<span class="number">7800</span>,<span class="number">8500</span>;<span class="number">7530</span>,<span class="number">8000</span>,<span class="number">7000</span>,<span class="number">7500</span>;</span><br><span class="line"><span class="number">3841</span>,<span class="number">3200</span>,<span class="number">3500</span>,<span class="number">3200</span>;<span class="number">4500</span>,<span class="number">5200</span>,<span class="number">4800</span>,<span class="number">4000</span>];</span><br><span class="line">&gt;&gt; corrcoef(A)</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">    <span class="number">1.0000</span>    <span class="number">0.9630</span>    <span class="number">0.9906</span>    <span class="number">0.9782</span></span><br><span class="line">    <span class="number">0.9630</span>    <span class="number">1.0000</span>    <span class="number">0.9694</span>    <span class="number">0.9466</span></span><br><span class="line">    <span class="number">0.9906</span>    <span class="number">0.9694</span>    <span class="number">1.0000</span>    <span class="number">0.9635</span></span><br><span class="line">    <span class="number">0.9782</span>    <span class="number">0.9466</span>    <span class="number">0.9635</span>    <span class="number">1.0000</span></span><br></pre></td></tr></table></figure><h3 id="排序"><a class="header-anchor" href="#排序">¶</a>排序</h3><p>在MATLAB中，排序函数为sort()，其调用格式为：</p><p>（1）sort(X)：对向量X按升序排列。</p><p>（2）Y,I]=sort(A,dim,mode)，其中dim指明对A的列还是行进行排序。mode 指明按升序还是降序排序，若取“ascend”，则按升序；若取“descend”， 则按降序，默认为升序。输出参数中，Y是排序后的矩阵，而I记录Y中的元素在A中位置。</p><p>ex:对下列矩阵做各种排序。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200821165247.png" alt="image-20200821164831765"></p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; A=[<span class="number">1</span>,<span class="number">-8</span>,<span class="number">5</span>;<span class="number">4</span>,<span class="number">12</span>,<span class="number">6</span>;<span class="number">13</span>,<span class="number">7</span>,<span class="number">-13</span>];</span><br><span class="line">&gt;&gt; <span class="built_in">sort</span>(A)</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">     <span class="number">1</span>    <span class="number">-8</span>   <span class="number">-13</span></span><br><span class="line">     <span class="number">4</span>     <span class="number">7</span>     <span class="number">5</span></span><br><span class="line">    <span class="number">13</span>    <span class="number">12</span>     <span class="number">6</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; <span class="built_in">sort</span>(A,<span class="number">2</span>,<span class="string">&#x27;descend&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">     <span class="number">5</span>     <span class="number">1</span>    <span class="number">-8</span></span><br><span class="line">    <span class="number">12</span>     <span class="number">6</span>     <span class="number">4</span></span><br><span class="line">    <span class="number">13</span>     <span class="number">7</span>   <span class="number">-13</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; [X,I]=<span class="built_in">sort</span>(A)</span><br><span class="line"></span><br><span class="line">X =</span><br><span class="line"></span><br><span class="line">     <span class="number">1</span>    <span class="number">-8</span>   <span class="number">-13</span></span><br><span class="line">     <span class="number">4</span>     <span class="number">7</span>     <span class="number">5</span></span><br><span class="line">    <span class="number">13</span>    <span class="number">12</span>     <span class="number">6</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">I =</span><br><span class="line"></span><br><span class="line">     <span class="number">1</span>     <span class="number">1</span>     <span class="number">3</span></span><br><span class="line">     <span class="number">2</span>     <span class="number">3</span>     <span class="number">1</span></span><br><span class="line">     <span class="number">3</span>     <span class="number">2</span>     <span class="number">2</span></span><br></pre></td></tr></table></figure><h2 id="多项式计算"><a class="header-anchor" href="#多项式计算">¶</a>多项式计算</h2><ul><li>多项式的表示</li><li>多项式的四则运算</li><li>多项式的求导</li><li>多项式的求值</li><li>多项式的求根</li></ul><h3 id="多项式的表示"><a class="header-anchor" href="#多项式的表示">¶</a>多项式的表示</h3><p>在MATLAB中，n次多项式用一个长度为n+1的行向量表示。如有n次多项式：</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200821165212.png" alt="image-20200821165211471"></p><p>则在MATLAB中，p(x)表示为向量形式：</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200821165337.png" alt="image-20200821165336360"></p><p>在MATLAB中创建多项式向量时，要注意三点：</p><p>（1）多项式系数向量的顺序是从高到低。</p><p>（2）多项式系数向量包含0次项系数，所以其长度为多项式最高次数 加1。</p><p>（3）如果有的项没有，系数向量相应位置应用0补足。</p><h3 id="多项式的四则运算"><a class="header-anchor" href="#多项式的四则运算">¶</a>多项式的四则运算</h3><p>（1）多项式的加减运算<br>多项式的加减运算非常简单，即相应向量相加减。<br>（2）多项式乘法<br>conv(P1,P2)：多项式相乘，其中，P1、P2是两个多项式系数向量。<br>（3）多项式除法<br>[Q,r]=deconv(P1,P2)：多项式相除，其中Q返回多项式P1除以P2的商式，r返回P1除以P2的余式。这里，Q和r仍是多项式系数向量。deconv是conv的逆函 数，因此有下式成立。<br>P1=conv(Q,P2)+r</p><p>ex:设<code>f(x)=3*x^5-5*x^4-7*x^2+5*x+6,g(x)=3*x^2+5*x-3</code>，求f(x)+g(x),f(x)-g(x),f(x)g(x),f(x)/g(x)。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; f=[<span class="number">3</span>,<span class="number">-5</span>,<span class="number">0</span>,<span class="number">-7</span>,<span class="number">5</span>,<span class="number">6</span>]; g=[<span class="number">3</span>,<span class="number">5</span>,<span class="number">-3</span>]; g1=[<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,g];</span><br><span class="line">&gt;&gt; f+g1</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">     <span class="number">3</span>    <span class="number">-5</span>     <span class="number">0</span>    <span class="number">-4</span>    <span class="number">10</span>     <span class="number">3</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; f-g1</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">     <span class="number">3</span>    <span class="number">-5</span>     <span class="number">0</span>   <span class="number">-10</span>     <span class="number">0</span>     <span class="number">9</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; conv(f,g)</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">     <span class="number">9</span>     <span class="number">0</span>   <span class="number">-34</span>    <span class="number">-6</span>   <span class="number">-20</span>    <span class="number">64</span>    <span class="number">15</span>   <span class="number">-18</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; [Q,r]=deconv(f,g)</span><br><span class="line"></span><br><span class="line">Q =</span><br><span class="line"></span><br><span class="line">    <span class="number">1.0000</span>   <span class="number">-3.3333</span>    <span class="number">6.5556</span>  <span class="number">-16.5926</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">r =</span><br><span class="line"></span><br><span class="line">         <span class="number">0</span>         <span class="number">0</span>         <span class="number">0</span>         <span class="number">0</span>  <span class="number">107.6296</span>  <span class="number">-43.7778</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; conv(g,Q)+r          <span class="comment">%=f</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">    <span class="number">3.0000</span>   <span class="number">-5.0000</span>         <span class="number">0</span>   <span class="number">-7.0000</span>    <span class="number">5.0000</span>    <span class="number">6.0000</span></span><br></pre></td></tr></table></figure><h3 id="多项式的求导"><a class="header-anchor" href="#多项式的求导">¶</a>多项式的求导</h3><p>在MATLAB中，多项式求导函数为polyder()，其调用格式为：</p><p>（1）p=polyder§：求多项式P的导函数。<br>（2）p=polyder(P,Q)：求P×Q的导函数。<br>（3）[p,q]=polyder(P,Q)：求P/Q的导函数，导函数的分子存入p，分母存入q。</p><p>ex:已知两个多项式：</p><p><code>a(x)=3*x^3+x^2-6,b(x)=x+2</code></p><p>计算两个多项式的乘积的导函数、商的导函数。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; a=[<span class="number">3</span> <span class="number">1</span> <span class="number">0</span> <span class="number">-6</span>];</span><br><span class="line">&gt;&gt; b=[<span class="number">1</span> <span class="number">2</span>];</span><br><span class="line">&gt;&gt; polyder(a)</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">     <span class="number">9</span>     <span class="number">2</span>     <span class="number">0</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; c=polyder(a,b)<span class="comment">%这个语句等价于：&gt;&gt; d=conv(a,b)</span></span><br><span class="line"><span class="comment">%d =</span></span><br><span class="line"><span class="comment">%3 7 2 -6 -12</span></span><br><span class="line"><span class="comment">%&gt;&gt; polyder(d)</span></span><br><span class="line"><span class="comment">%ans =</span></span><br><span class="line"><span class="comment">%12 21 4 -6</span></span><br><span class="line"></span><br><span class="line">c =</span><br><span class="line"></span><br><span class="line">    <span class="number">12</span>    <span class="number">21</span>     <span class="number">4</span>    <span class="number">-6</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; [p,q]=polyder(a,b)</span><br><span class="line"></span><br><span class="line">p =</span><br><span class="line"></span><br><span class="line">     <span class="number">6</span>    <span class="number">19</span>     <span class="number">4</span>     <span class="number">6</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">q =</span><br><span class="line"></span><br><span class="line">     <span class="number">1</span>     <span class="number">4</span>     <span class="number">4</span></span><br></pre></td></tr></table></figure><blockquote><p>思考：对于[p,q]=polyder(a,b)，如 果换成先求商再求导，结果一样吗？</p></blockquote><h3 id="多项式的求值"><a class="header-anchor" href="#多项式的求值">¶</a>多项式的求值</h3><ul><li>polyval(p,x):代数多项式求值，其中，p为多项式系数向量，x可以是标量、向量或矩阵。若x为标量，则求多项式在该点的值;若x为向量或矩阵，则对向量或矩阵中的每个元素求多项式的值。</li><li>polyvalm(p, x):矩阵多项式求值，其调用格式与polyval相同，但含义不同。polyvalm函数要求x为方阵，以方阵为自变量求多项式的值。</li></ul><p>设A为方阵，P代表多项式x3-5x2+8，那么polyvalm(P,A)的含义是：</p><p><font color="red"><code>A*A*A-5*A*A+8*eye(size(A))</code></font></p><p>而polyval(P,A)的含义是：</p><p><font color="red"><code>A.*A.*A-5*A.*A+8*ones(size(A))</code></font></p><blockquote><p>思考：polyval(p,x)与polyvalm(p,x)有没有可能相等？如果有可 能，在什么情况下相等？</p></blockquote><p>ex:以多项式x 4+8x3-10为例，取一个2×2矩阵为自变量，分别用 polyval和polyvalm计算该多项式的值。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; a=[<span class="number">1</span> <span class="number">8</span> <span class="number">0</span> <span class="number">0</span> <span class="number">-10</span>];</span><br><span class="line">&gt;&gt; x=[<span class="number">-1</span> <span class="number">1.2</span>;<span class="number">2</span> <span class="number">-1.8</span>];</span><br><span class="line">&gt;&gt; y1=polyval(a,x)</span><br><span class="line"></span><br><span class="line">y1 =</span><br><span class="line"></span><br><span class="line">  <span class="number">-17.0000</span>    <span class="number">5.8976</span></span><br><span class="line">   <span class="number">70.0000</span>  <span class="number">-46.1584</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; y2=polyvalm(a,x)</span><br><span class="line"></span><br><span class="line">y2 =</span><br><span class="line"></span><br><span class="line">  <span class="number">-60.5840</span>   <span class="number">50.6496</span></span><br><span class="line">   <span class="number">84.4160</span>  <span class="number">-94.3504</span></span><br></pre></td></tr></table></figure><h3 id="多项式的求根"><a class="header-anchor" href="#多项式的求根">¶</a>多项式的求根</h3><p>在MATLAB中，多项式求根函数为roots§，其中p为多项式的系数向量。</p><p>ex:求多项式 <code>x^4+8*x^3-10</code>的根。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; a=[<span class="number">1</span> <span class="number">8</span> <span class="number">0</span> <span class="number">0</span> <span class="number">-10</span>];</span><br><span class="line">&gt;&gt; x=roots(a)</span><br><span class="line"></span><br><span class="line">x =</span><br><span class="line"></span><br><span class="line">  <span class="number">-8.0194</span> + <span class="number">0.0000</span><span class="built_in">i</span></span><br><span class="line">   <span class="number">1.0344</span> + <span class="number">0.0000</span><span class="built_in">i</span></span><br><span class="line">  <span class="number">-0.5075</span> + <span class="number">0.9736</span><span class="built_in">i</span></span><br><span class="line">  <span class="number">-0.5075</span> - <span class="number">0.9736</span><span class="built_in">i</span></span><br></pre></td></tr></table></figure><p>若已知多项式的全部根，则可以用poly函数建立起该多 项式，其调用格式为：</p><p>p=poly(x)</p><p>ex:在以上语句之后，继续输入命令：</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; p=poly(x)</span><br><span class="line"></span><br><span class="line">p =</span><br><span class="line"></span><br><span class="line">    <span class="number">1.0000</span>    <span class="number">8.0000</span>    <span class="number">0.0000</span>    <span class="number">0.0000</span>  <span class="number">-10.0000</span></span><br></pre></td></tr></table></figure><p>ex:某工业过程需要对工件进行高温加热，热量由一个燃烧装置产生。该装置中共有两条输送管 道，一条管道按固定量提供燃料，一条管道注入空气。空气能够帮助燃烧，但是过高的空气流量 又会带走热量，降低加热效率。经过数十次空气流量实验，技术部门取得了相应的结果数据，并 通过曲线拟合得知空气流量与加热效率在[0, 2]范围内基本满足多项式<code>p(x)=-38.89x^2+126.11x-3.42</code>（x表示空气流量），请推算空气流量在[0, 2]范围内什么水平时，加热效率为最高。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; p=[<span class="number">-38.89</span>,<span class="number">126.11</span>,<span class="number">-3.42</span>];</span><br><span class="line">&gt;&gt; q=polyder(p)</span><br><span class="line">q =</span><br><span class="line"><span class="number">-77.7800</span> <span class="number">126.1100</span></span><br><span class="line">&gt;&gt; roots(q)</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"><span class="number">1.6214</span></span><br><span class="line">&gt;&gt; polyval(p,<span class="number">1.6214</span>)</span><br><span class="line"><span class="built_in">ans</span>=</span><br><span class="line"><span class="number">98.8154</span></span><br><span class="line">&gt;&gt; x=<span class="number">0</span>:<span class="number">0.1</span>:<span class="number">2</span>;</span><br><span class="line">&gt;&gt; <span class="built_in">plot</span>(x,polyval(p,x),<span class="number">1.6214</span>,<span class="number">98.8154</span>,<span class="string">&#x27;rp&#x27;</span>);</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200821174701.png" alt="image-20200821174657674"></p><h2 id="数据插值"><a class="header-anchor" href="#数据插值">¶</a>数据插值</h2><ul><li>引例-零件加工问题</li><li>数据插值的计算机制</li><li>数据插值的实现方法</li><li>应用案例-粮储仓的通风控制问题</li></ul><h3 id="引例-零件加工问题"><a class="header-anchor" href="#引例-零件加工问题">¶</a>引例-零件加工问题</h3><p>在飞机制造中，机翼的加工是一项关键技术。由于机翼尺寸很大，通常 在图纸中只能标出一些关键点的数据。下表给出了某型飞机机翼的下缘 轮廓线数据，求x每改变0.1时y的值。</p><table><thead><tr><th>x</th><th>0</th><th>3</th><th>5</th><th>7</th><th>9</th><th>11</th><th>12</th><th>13</th><th>14</th><th>15</th></tr></thead><tbody><tr><td>y</td><td>0</td><td>1.2</td><td>1.7</td><td>2.0</td><td>2.1</td><td>2.0</td><td>1.8</td><td>1.2</td><td>1.0</td><td>1.6</td></tr></tbody></table><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200821182018.png" alt="image-20200821181842835"></p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; x=[<span class="number">0</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">9</span>,<span class="number">11</span>,<span class="number">12</span>,<span class="number">13</span>,<span class="number">14</span>,<span class="number">15</span>];</span><br><span class="line">&gt;&gt; y=[<span class="number">0</span>,<span class="number">1.2</span>,<span class="number">1.7</span>,<span class="number">2.0</span>,<span class="number">2.1</span>,<span class="number">2.0</span>,<span class="number">1.8</span>,<span class="number">1.2</span>,<span class="number">1.0</span>,<span class="number">1.6</span>];</span><br><span class="line">&gt;&gt; x1=<span class="number">0</span>:<span class="number">0.1</span>:<span class="number">15</span>;</span><br><span class="line">&gt;&gt; y1=interp1(x,y,x1,<span class="string">&#x27;spline&#x27;</span>);</span><br><span class="line">&gt;&gt; <span class="built_in">plot</span>(x1,y1)</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200821182002.png" alt="image-20200821182001920"></p><h3 id="数据插值的计算机制"><a class="header-anchor" href="#数据插值的计算机制">¶</a>数据插值的计算机制</h3><p>从数学上来说，数据插值是一种函数逼近的方法。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200821203653.png" alt="image-20200821201007384"></p><h3 id="数据插值的实现方法"><a class="header-anchor" href="#数据插值的实现方法">¶</a>数据插值的实现方法</h3><p>在MATLAB中，一维插值函数为interp1()，其调用格式为：</p><p>Y1=interp1(X,Y,X1,method)</p><p>该语句将根据X、Y的值，计算函数在X1处的值。其中，X、Y是两个等长 的已知向量，分别表示采样点和采样值。X1是一个向量或标量，表示要 插值的点。</p><p>method参数用于指定插值方法，常用的取值有以下四种：</p><p>(1) linear:线性插值，默认方法。将与插值点靠近的两个数据点用直线连接，然后在直线上选取对应插值点的数据。<br>(2)nearest:最近点插值。选择最近样本点的值作为插值数据。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200821200421.png" alt="image-20200821200420255"></p><p>(3） pchip:分段3次埃尔米特插值。采用分段三次多项式，除满足插值条件，还需满足在若干节点处相邻段插值函数的一阶导数相等，使得曲线光滑的同时，还具有保形性。<br>(4） spline:3次样条插值。每个分段内构造一个三次多项式，使其插值函数除满足插值条件外，还要求在各节点处具有连续的一阶和二阶导数。</p><blockquote><p>思考：为什么这两种插值方法都用3次多项式而不用更高次的？</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200821203629.png" alt="image-20200821200550064"></p><h3 id="四种方法的比较"><a class="header-anchor" href="#四种方法的比较">¶</a>四种方法的比较</h3><ul><li>线性插值和最近点插值方法比较简单。其中线性插值方法的计算量与样本点n无关。n越大，误差越小。</li><li>3次埃尔米特插值和3次样条插值都能保证曲线的光滑性。相比较而言，3次埃尔米特插值具有保形性;而3次样条插值要求其二阶导数也连续，所以插值函数的性态更好。</li></ul><p>MATLAB中的二维插值函数为interp2()，其调用格式为：<br>Z1=interp2(X,Y,Z,X1,Y1,method)<br>其中，X、Y是两个向量，表示两个参数的采样点，Z是采样 点对应的函数值。X1、Y1是两个标量或向量，表示要插值 的点。</p><h3 id="粮储仓的通风控制问题"><a class="header-anchor" href="#粮储仓的通风控制问题">¶</a>粮储仓的通风控制问题</h3><p>在某粮情自动测控系统中，根据粮温、粮湿计算平衡点湿度，与大气湿 度进行比较，再根据通风模拟情况决定是否自动进行通风。已测得平衡 点湿度与粮温、粮湿关系的部分数据如下表，请推算相应范围内温度每 变化1度、湿度每变化1个点的平衡点湿度。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200821201245.png" alt="image-20200821201244739"></p><blockquote><p>若粮食水分吸收和蒸发量相等，这个湿度称为平衡点湿度。平衡点湿 度跟粮温、粮湿有关。</p></blockquote><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; x=<span class="number">20</span>:<span class="number">10</span>:<span class="number">90</span>;</span><br><span class="line">&gt;&gt; y=(<span class="number">0</span>:<span class="number">5</span>:<span class="number">20</span>)&#x27;;</span><br><span class="line">&gt;&gt; z=[<span class="number">8.9</span>,<span class="number">10.32</span>,<span class="number">11.3</span>,<span class="number">12.5</span>,<span class="number">13.9</span>,<span class="number">15.3</span>,<span class="number">17.8</span>,<span class="number">21.3</span>;</span><br><span class="line"><span class="number">8.7</span>,<span class="number">10.8</span>,<span class="number">11</span>,<span class="number">12.1</span>,<span class="number">13.2</span>,<span class="number">14.8</span>,<span class="number">16.55</span>,<span class="number">20.8</span>;</span><br><span class="line"><span class="number">8.3</span>,<span class="number">9.65</span>,<span class="number">10.88</span>,<span class="number">12</span>,<span class="number">13.2</span>,<span class="number">14.6</span>,<span class="number">16.4</span>,<span class="number">20.5</span>;</span><br><span class="line"><span class="number">8.1</span>,<span class="number">9.4</span>,<span class="number">10.7</span>,<span class="number">11.9</span>,<span class="number">13.1</span>,<span class="number">14.5</span>,<span class="number">16.2</span>,<span class="number">20.3</span>;</span><br><span class="line"><span class="number">8.1</span>,<span class="number">9.2</span>,<span class="number">10.8</span>,<span class="number">12</span>,<span class="number">13.2</span>,<span class="number">14.8</span>,<span class="number">16.9</span>,<span class="number">20.9</span>];</span><br><span class="line">&gt;&gt; xi=<span class="number">20</span>:<span class="number">90</span>;</span><br><span class="line">&gt;&gt; yi=(<span class="number">0</span>:<span class="number">20</span>)&#x27;;</span><br><span class="line">&gt;&gt; zi=interp2(x,y,z,xi,yi,<span class="string">&#x27;spline&#x27;</span>);</span><br><span class="line">&gt;&gt; surf(xi,yi,zi)</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200821203618.png" alt="image-20200821201434989"></p><h2 id="数据插值应用举例"><a class="header-anchor" href="#数据插值应用举例">¶</a>数据插值应用举例</h2><ul><li>机动车刹车距离问题</li><li>沙盘制作问题</li></ul><h3 id="机动车刹车距离问题"><a class="header-anchor" href="#机动车刹车距离问题">¶</a>机动车刹车距离问题</h3><p>在车辆行驶中，从驾驶员看到障碍物开始，到作出判断而采取制动措施停车所需的最短 距离叫停车视距。停车视距由三部分组成：一是驾驶员反应时间内行驶的距离（即反应 距离）；二是开始制动到车辆完全停止所行驶的距离（即制动距离）；三是车辆停止时 与障碍物应该保持的安全距离。其中，制动距离主要与行驶速度和路面类型有关。根据 测试，某型车辆在潮湿天气于沥青路面行驶时，其行车速度（单位：km/h）与制动距离 （单位：m）的关系如下表所示。</p><table><thead><tr><th>速度</th><th>20</th><th>30</th><th>40</th><th>50</th><th>60</th><th>70</th><th>80</th><th>90</th><th>100</th><th>110</th><th>120</th><th>130</th><th>140</th><th>150</th></tr></thead><tbody><tr><td>制动距离</td><td>3.15</td><td>7.08</td><td>12.59</td><td>19.68</td><td>28.34</td><td>38.57</td><td>50.4</td><td>63.75</td><td>78.71</td><td>95.22</td><td>113.29</td><td>132.93</td><td>154.12</td><td>176.87</td></tr></tbody></table><p>假设驾驶员的反应时间为10s，安全距离为10m。请问:<br>①根据某驾驶员的实际视力和视觉习惯，其驾驶时的有效视距为120m，则其在该路面行车时，时速最高不能超过多少（结果取整）?<br>②若以表中数据为参考，设计一条最高时速为125km/h的高速公路，则设计人员应该保证驾驶者在公路上任一点的可视距离为多少米?</p><p><font color="red"><strong>设</strong></font>速度为v，停车视距为d，反应距离为d1，制动距离为d2，安全距离为d3，反应时间为as， 则<br>d=d1+d2+d3<br>其中，d1=asv，d2为v的函数，d3已知。<br>第一问：根据某驾驶员的实际视力和视觉习惯，其驾驶时的有效视距为120m，则其在该路面<br>行车时，时速最高不能超过多少（结果取整） ？<br>已知反应时间为10s，安全距离为10m，可采用解方程方法：<br>10v+d2+10=120<br>存在的问题是，d2是v的函数，但是函数关系未知，方程不可解。<br>下面考虑<strong>数据插值方法</strong>，以表格中的数据为样本，进行数据插值，计算出与120m的停车视距所对应的速度指标。<br><font color="red"><strong>编程思路：</strong></font><br>第一步:建立速度和停车视距向量。<br>第二步:以1为单位，对采样区间内所有速度进行插值，计算出相应的停车视距。<br>第三步:求出停车视距120所对应的速度。<br>第四步:绘图展示。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">v=<span class="number">20</span>:<span class="number">10</span>:<span class="number">150</span>;</span><br><span class="line">vs=v.*(<span class="number">1000</span>/<span class="number">3600</span>);</span><br><span class="line">d1=<span class="number">10.</span>*vs;</span><br><span class="line">d2=[<span class="number">3.15</span>,<span class="number">7.08</span>,<span class="number">12.59</span>,<span class="number">19.68</span>,<span class="number">28.34</span>,<span class="number">38.57</span>,<span class="number">50.4</span>,<span class="number">63.75</span>,<span class="number">78.71</span>,<span class="number">95.22</span>,<span class="number">113.29</span>,<span class="number">132.93</span>,<span class="number">154.12</span>,<span class="number">176.87</span>];</span><br><span class="line">d3=<span class="number">10</span>;</span><br><span class="line">d=d1+d2+d3;</span><br><span class="line">vi=<span class="number">20</span>:<span class="number">1</span>:<span class="number">150</span>;</span><br><span class="line">di=interp1(v,d,vi,<span class="string">&#x27;spline&#x27;</span>);</span><br></pre></td></tr></table></figure><p><font color="red">如何根据停车视距120找到对应的速度？</font></p><p>第一步;令代表停车视距的向量di减去120，再取绝对值，得到一个新的向量x。<br>第二步:将x按升序排列，并记录最小元素的序号，该序号即为停车视距120所对应的速度数据在向量vi中的序号。<br>第三步;根据序号取得速度数据。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">x=<span class="built_in">abs</span>(di<span class="number">-120</span>);</span><br><span class="line">[y,<span class="built_in">i</span>]=<span class="built_in">sort</span>(x);</span><br><span class="line">vi(<span class="built_in">i</span>(<span class="number">1</span>)) <span class="comment">%vi(i(1))=36</span></span><br><span class="line"><span class="built_in">plot</span>(vi,di,vi(<span class="built_in">i</span>(<span class="number">1</span>)),di(<span class="built_in">i</span>(<span class="number">1</span>)),<span class="string">&#x27;rp&#x27;</span>)</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200821203611.png" alt="image-20200821202810194"></p><ul><li>停车视距的增长随着车速增加呈非线性增长。</li><li>速度越快，要求视线越远。</li></ul><p><strong>第二问</strong>：设计一条最高时速为125km/h 的高速公路，则设计人员应该保证驾驶 者在公路上任一点的可视距离为多少米？</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; <span class="built_in">j</span>=<span class="built_in">find</span>(vi==<span class="number">125</span>);</span><br><span class="line">&gt;&gt; di(<span class="built_in">j</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">  <span class="number">480.1373</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; <span class="built_in">plot</span>(vi,di,<span class="number">125</span>,<span class="number">480.1373</span>,<span class="string">&#x27;rp&#x27;</span>)</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200821203557.png" alt="image-20200821203028579"></p><p>公路设计是一个复杂的工程，除了地形、 地质等因素之外，驾驶者的可视距离也 要考虑在内，以与设计时速相匹配，从 设计上保障安全。</p><h3 id="沙盘制作问题"><a class="header-anchor" href="#沙盘制作问题">¶</a>沙盘制作问题</h3><p>某地面部队分成红蓝两方在指定的陌生区域（平面区域[0,2000]*[0,2000]内，单位：m） 进行作战演习。在演习过程中，红方侦查单位已经测得一些地点的高程如下表所示。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200821203551.png" alt="image-20200821203151462"></p><p>①根据表中数据，制作军事沙盘。<br>②在演习范围内，占领最大高地的一方将获得居高临下的优势。请问红方应第一时间抢占哪块区域。</p><p><font color="red">解题思路：</font></p><ul><li>第一问:用二维插值估算数据，以方便制作军事沙盘。</li><li>第二问:在插值的基础上，绘制等高线图，找到最大高地。</li></ul><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">x=<span class="number">0</span>:<span class="number">200</span>:<span class="number">1800</span>;</span><br><span class="line">y=x&#x27;;</span><br><span class="line">z=[<span class="number">2000</span>,<span class="number">2000</span>,<span class="number">2001</span>,<span class="number">1992</span>,<span class="number">1954</span>,<span class="number">1938</span>,<span class="number">1972</span>,<span class="number">1995</span>,<span class="number">1999</span>,<span class="number">1999</span>;</span><br><span class="line"><span class="number">2000</span>,<span class="number">2002</span>,<span class="number">2006</span>,<span class="number">1908</span>,<span class="number">1533</span>,<span class="number">1381</span>,<span class="number">1728</span>, <span class="number">1959</span>,<span class="number">1998</span>,<span class="number">2000</span>;</span><br><span class="line"><span class="number">2000</span>,<span class="number">2005</span>,<span class="number">2043</span>,<span class="number">1921</span>,<span class="number">977</span>,<span class="number">897</span>,<span class="number">1310</span>,<span class="number">1930</span>,<span class="number">2003</span>,<span class="number">2000</span>;</span><br><span class="line"><span class="number">1997</span>,<span class="number">1978</span>,<span class="number">2009</span>,<span class="number">2463</span>,<span class="number">2374</span>,<span class="number">1445</span>,<span class="number">1931</span>,<span class="number">2209</span>,<span class="number">2050</span>,<span class="number">2003</span>;</span><br><span class="line"><span class="number">1992</span>,<span class="number">1892</span>,<span class="number">1566</span>,<span class="number">1971</span>,<span class="number">2768</span>,<span class="number">2111</span>,<span class="number">2653</span>,<span class="number">2610</span>,<span class="number">2121</span>,<span class="number">2007</span>;</span><br><span class="line"><span class="number">1991</span>,<span class="number">1875</span>,<span class="number">1511</span>,<span class="number">1556</span>,<span class="number">2221</span>,<span class="number">1986</span>,<span class="number">2660</span>,<span class="number">2601</span>,<span class="number">2119</span>,<span class="number">2007</span>;</span><br><span class="line"><span class="number">1996</span>,<span class="number">1950</span>,<span class="number">1797</span>,<span class="number">2057</span>,<span class="number">2849</span>,<span class="number">2798</span>,<span class="number">2608</span>,<span class="number">2303</span>,<span class="number">2052</span>,<span class="number">2003</span>;</span><br><span class="line"><span class="number">1999</span>,<span class="number">1999</span>,<span class="number">2079</span>,<span class="number">2685</span>,<span class="number">3390</span>,<span class="number">3384</span>,<span class="number">2781</span>,<span class="number">2165</span>,<span class="number">2016</span>,<span class="number">2000</span>;</span><br><span class="line"><span class="number">2000</span>,<span class="number">2002</span>,<span class="number">2043</span>,<span class="number">2271</span>,<span class="number">2668</span>,<span class="number">2668</span>,<span class="number">2277</span>,<span class="number">2049</span>,<span class="number">2003</span>,<span class="number">2000</span>;</span><br><span class="line"><span class="number">2000</span>,<span class="number">2000</span>,<span class="number">2004</span>,<span class="number">2027</span>,<span class="number">2067</span>,<span class="number">2067</span>,<span class="number">2027</span>,<span class="number">2004</span>,<span class="number">2000</span>,<span class="number">2000</span>];</span><br><span class="line">surf(x,y,z);</span><br><span class="line">x1=<span class="number">0</span>:<span class="number">100</span>:<span class="number">1800</span>;</span><br><span class="line">y1=x1&#x27;;</span><br><span class="line">z1=interp2(x,y,z,x1,y1,<span class="string">&#x27;spline&#x27;</span>);</span><br><span class="line">surf(x1,y1,z1);</span><br><span class="line">x2=<span class="number">0</span>:<span class="number">50</span>:<span class="number">1800</span>;</span><br><span class="line">y2=x2&#x27;;</span><br><span class="line">z2=interp2(x1,y1,z1,x2,y2,<span class="string">&#x27;spline&#x27;</span>);</span><br><span class="line">surf(x2,y2,z2);</span><br><span class="line">contour(x2,y2,z2,<span class="number">12</span>)</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200821203541.png" alt="image-20200821203540410"></p><h2 id="曲线拟合"><a class="header-anchor" href="#曲线拟合">¶</a>曲线拟合</h2><ul><li>引例-人口预测问题</li><li>曲线拟合的原理</li><li>曲线拟合的实现方法</li><li>实际应用</li></ul><h3 id="引例-人口预测问题"><a class="header-anchor" href="#引例-人口预测问题">¶</a>引例-人口预测问题</h3><p>人口增长是当今世界上都关注的问题，对人口增长趋势进行预测是 各国普遍的做法。已知某国1790年到2010年间历次人口普查数据如 下表所示，请预测该国2020年的人口数。</p><table><thead><tr><th>年份</th><th>1790</th><th>1800</th><th>1810</th><th>1820</th><th>1830</th><th>1840</th><th>1850</th><th>1860</th><th>1870</th><th>1880</th><th>1890</th><th>1900</th></tr></thead><tbody><tr><td>人口（百万）</td><td>3.9</td><td>5.3</td><td>7.2</td><td>9.6</td><td>12.9</td><td>17.1</td><td>23.2</td><td>31.4</td><td>38.6</td><td>50.2</td><td>63.0</td><td>76.0</td></tr><tr><td>年份</td><td>1910</td><td>1920</td><td>1930</td><td>1940</td><td>1950</td><td>1960</td><td>1970</td><td>1980</td><td>1990</td><td>2000</td><td>2010</td><td></td></tr><tr><td>人口（百万）</td><td>92.0</td><td>105.7</td><td>122.8</td><td>131.7</td><td>150.7</td><td>179.3</td><td>203.2</td><td>226.5</td><td>248.7</td><td>281.4</td><td>308.7</td><td></td></tr></tbody></table><blockquote><p>解题思路：找一个函数，去逼近这些数据，然后再根据找到的函数， 计算预测点的值。</p></blockquote><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">x=<span class="number">1790</span>:<span class="number">10</span>:<span class="number">2010</span>;</span><br><span class="line">y=[<span class="number">3.9</span>,<span class="number">5.3</span>,<span class="number">7.2</span>,<span class="number">9.6</span>,<span class="number">12.9</span>,<span class="number">17.1</span>,<span class="number">23.2</span>,<span class="number">31.4</span>,<span class="number">38.6</span>,<span class="number">50.2</span>,<span class="number">63.0</span>,<span class="number">76.0</span>,<span class="number">92.0</span>,<span class="number">105.7</span>,<span class="number">122.8</span>,<span class="number">131.7</span>,<span class="number">150.7</span>,<span class="number">179.3</span>,<span class="number">203.2</span>,<span class="number">226.5</span>,<span class="number">248.7</span>,<span class="number">281.4</span>,<span class="number">308.7</span>];</span><br><span class="line"><span class="built_in">plot</span>(x,y,<span class="string">&#x27;*&#x27;</span>);</span><br><span class="line">p=polyfit(x,y,<span class="number">3</span>);</span><br><span class="line">polyval(p,<span class="number">2020</span>)</span><br><span class="line"><span class="built_in">plot</span>(x,y,<span class="string">&#x27;*&#x27;</span>,x,polyval(p,x));</span><br><span class="line"><span class="comment">%ans=339.8</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200821205035.png" alt="image-20200821205034699"></p><h3 id="曲线拟合的原理"><a class="header-anchor" href="#曲线拟合的原理">¶</a>曲线拟合的原理</h3><p>与数据插值类似，曲线拟合也是一种函数逼近的方法。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200821205623.png" alt="image-20200821205154515"></p><p>构造函数g(x)去逼近未知函数f(x)，使得误差</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200821205618.png" alt="image-20200821205222116"></p><p>在某种意义下达到最小。</p><p><font color="red"><strong>两个问题</strong>：</font></p><ul><li>(1)用什么类型的函数做逼近函数?     多项式函数</li><li>(2）误差最小到底怎么计算?     最小二乘法</li></ul><p><strong>最小二乘法</strong>（又称最小平方法）是一种数学优化技术。它通过最小化误差的平方和来寻找数据的最佳函数匹配。</p><p>设p(x)是一个多项式函数</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200821205611.png" alt="image-20200821205610481"></p><p>且</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200821205644.png" alt="image-20200821205643541"></p><p>的值最小，则p(x)为原函数y=f(x)的逼近函数。</p><h3 id="曲线拟合的实现方法"><a class="header-anchor" href="#曲线拟合的实现方法">¶</a>曲线拟合的实现方法</h3><p>MATLAB中的多项式拟合函数为polyfit()，其功能为求得最小二乘拟合多项式系 数，其调用格式为：</p><p>(1）P=polyfit(X,Y,m)<br>(2）[P,S]=polyfit(X,Y,m)<br>(3）[P, S,mu]=polyfit(X,Y,m):根据样本数据X和Y，产生一个m次多项式P及其在采样点误差数据S，mu(1)是一个二元向量，mu(1)是mean(X)，而mu(2)是std(X)。</p><p>在引例中，我们已经用polyfit()函数预测了某国2020年的人口数。这 个结果是否正确呢？我们无法得到2020年的数据，但是2016年的数 据已经有了。所以，不妨再预测一下该国2016年的人口数。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; polyval(p,<span class="number">2016</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">  <span class="number">327.0964</span></span><br></pre></td></tr></table></figure><p>该国2016年人口数实际为323.1。</p><blockquote><p>思考：相对误差1.24%，怎样才能减小？</p></blockquote><p><font color="purple">问题分析：</font></p><p>据研究，一个国家的人口增长具有如下特点：</p><p>(1）发展越平稳，人口增长越有规律。<br>(2）当经济发展到一定水平时，人口增长率反而下降。<br>换言之，在不同的环境和经济发展水平，人口可能有不同的增长规律。</p><p><font color="purple">结论：</font></p><p>在人口增长数据的拟合上，应该将二战后至今这一时期的数据与此前的数据分开处理。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; x=<span class="number">1950</span>:<span class="number">10</span>:<span class="number">2010</span>;</span><br><span class="line">&gt;&gt; y=[<span class="number">150.7</span>,<span class="number">179.3</span>,<span class="number">203.2</span>,<span class="number">226.5</span>,<span class="number">248.7</span>,<span class="number">281.4</span>,<span class="number">308.7</span>];</span><br><span class="line">&gt;&gt; p=polyfit(x,y,<span class="number">3</span>)</span><br><span class="line">p =</span><br><span class="line"><span class="number">1.0e+06</span> *  <span class="comment">%次数太高</span></span><br><span class="line"><span class="number">0.0000</span> <span class="number">-0.0000</span> <span class="number">0.0034</span> <span class="number">-2.2305</span></span><br><span class="line">&gt;&gt; p=polyfit(x,y,<span class="number">2</span>);</span><br><span class="line">&gt;&gt; <span class="built_in">plot</span>(x,y,<span class="string">&#x27;*&#x27;</span>,x,polyval(p,x))</span><br><span class="line">&gt;&gt; polyval(p,<span class="number">2016</span>)</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"><span class="number">325.1696</span>   <span class="comment">%相对误差成功减小到0.64%！</span></span><br><span class="line">&gt;&gt; polyval(p,<span class="number">2020</span>)</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"><span class="number">336.7857</span></span><br></pre></td></tr></table></figure><p><img src="../../../picture/PicGo/copypicture/image-20200821210713453.png" alt="image-20200821210713453"></p><p>结论：</p><p>（1）要对问题的背景进行详细的分析。</p><p>（2）采样点并非越多越好，适当的时候，可以减少采样点，分段进行拟合。</p><h3 id="家庭储蓄规律问题"><a class="header-anchor" href="#家庭储蓄规律问题">¶</a>家庭储蓄规律问题</h3><p>以下是某市家庭收入x与家庭储蓄y之间的一组调查数据（单位：万元）， 试建立x与y的线性函数经验公式。</p><table><thead><tr><th>x</th><th>0.6</th><th>1.0</th><th>1.4</th><th>1.8</th><th>2.2</th><th>2.6</th><th>3.0</th><th>3.4</th><th>3.8</th><th>4</th></tr></thead><tbody><tr><td>y</td><td>0.08</td><td>0.22</td><td>0.31</td><td>0.4</td><td>0.48</td><td>0.56</td><td>0.67</td><td>0.75</td><td>0.8</td><td>1.0</td></tr></tbody></table><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; x=[<span class="number">0.6</span>,<span class="number">1.0</span>,<span class="number">1.4</span>,<span class="number">1.8</span>,<span class="number">2.2</span>,<span class="number">2.6</span>,<span class="number">3.0</span>,<span class="number">3.4</span>,<span class="number">3.8</span>,<span class="number">4</span> ];</span><br><span class="line">&gt;&gt;  y=[<span class="number">0.08</span>,<span class="number">0.22</span>,<span class="number">0.31</span>,<span class="number">0.4</span>,<span class="number">0.48</span>,<span class="number">0.56</span>,<span class="number">0.67</span>,<span class="number">0.75</span>,<span class="number">0.8</span>,<span class="number">1.0</span> ];</span><br><span class="line">&gt;&gt;  p=polyfit(x,y,<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">p =</span><br><span class="line"></span><br><span class="line">    <span class="number">0.2390</span>   <span class="number">-0.0418</span></span><br><span class="line">&gt;&gt; <span class="built_in">plot</span>(x,y,<span class="string">&#x27;*&#x27;</span>,x,polyval(p,x))</span><br></pre></td></tr></table></figure><blockquote><p><font color="red">经验公式：y=0.239x-0.0418</font></p></blockquote><p><img src="../../../picture/PicGo/copypicture/20200821211259.png" alt="image-20200821211258252">曲线拟合的<strong>三种功能</strong>： （1）估算数据 （2）预测趋势 （3）总结规律</p><h2 id="曲线拟合应用举例"><a class="header-anchor" href="#曲线拟合应用举例">¶</a>曲线拟合应用举例</h2><ul><li>股票预测问题</li><li>算法的参数优化问题</li></ul><h3 id="股票预测问题"><a class="header-anchor" href="#股票预测问题">¶</a>股票预测问题</h3><p>已知一只股票在2016年8月每个交易日的收盘价如下表所示，试预测 其后面的大体走势。</p><table><thead><tr><th>时间</th><th>2</th><th>3</th><th>4</th><th>5</th><th>8</th><th>9</th><th>10</th><th>11</th><th>12</th><th>15</th><th>16</th></tr></thead><tbody><tr><td>价格</td><td>7.74</td><td>7.84</td><td>7.82</td><td>7.78</td><td>7.91</td><td>7.97</td><td>7.9</td><td>7.76</td><td>7.9</td><td>8.04</td><td>8.06</td></tr><tr><td>时间</td><td>17</td><td>18</td><td>19</td><td>22</td><td>23</td><td>24</td><td>25</td><td>26</td><td>29</td><td>30</td><td></td></tr><tr><td>价格</td><td>8.11</td><td>8.08</td><td>8.13</td><td>8.03</td><td>8.01</td><td>8.06</td><td>8.0</td><td>8.3</td><td>8.41</td><td>8.28</td><td></td></tr></tbody></table><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; x=[<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">11</span>,<span class="number">12</span>,<span class="number">15</span>,<span class="number">16</span>,<span class="number">17</span>,<span class="number">18</span>,<span class="number">19</span>,<span class="number">22</span>,<span class="number">23</span>,<span class="number">24</span>,<span class="number">25</span>,<span class="number">26</span>,<span class="number">29</span>,<span class="number">30</span>];</span><br><span class="line">&gt;&gt; y=[<span class="number">7.74</span>,<span class="number">7.84</span>,<span class="number">7.82</span>,<span class="number">7.78</span>,<span class="number">7.91</span>,<span class="number">7.97</span>,<span class="number">7.9</span>,<span class="number">7.76</span>,<span class="number">7.9</span>,<span class="number">8.04</span>,<span class="number">8.06</span>,<span class="number">8.11</span>,<span class="number">8.08</span>,<span class="number">8.13</span>,<span class="number">8.03</span>,<span class="number">8.01</span>,<span class="number">8.06</span>,<span class="number">8.0</span>,<span class="number">8.3</span>,<span class="number">8.41</span>,<span class="number">8.28</span>];</span><br><span class="line">&gt;&gt; <span class="built_in">plot</span>(x,y,<span class="string">&#x27;*&#x27;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&gt;&gt; p=polyfit(x,y,<span class="number">3</span>);</span><br><span class="line">&gt;&gt; <span class="built_in">plot</span>(x,y,<span class="string">&#x27;*&#x27;</span>,x,polyval(p,x));</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200821212103.png" alt="image-20200821212101554"></p><blockquote><p>跳动幅度大，不稳定，难以看出规律。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200821212146.png" alt="image-20200821212145780"></p><p>该股票后三个交易日的收盘价分别为8.27,8.17,9.54。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; x1=[<span class="number">31</span>,<span class="number">32</span>,<span class="number">33</span>];</span><br><span class="line">&gt;&gt; xi=[x,x1];</span><br><span class="line">&gt;&gt; <span class="built_in">plot</span>(x,y,<span class="string">&#x27;*&#x27;</span>,xi,polyval(p,xi));</span><br><span class="line">&gt;&gt; y1=[<span class="number">8.27</span>,<span class="number">8.17</span>,<span class="number">9.54</span>];</span><br><span class="line">&gt;&gt; <span class="built_in">plot</span>(x,y,<span class="string">&#x27;*&#x27;</span>,xi,polyval(p,xi),x1,y1,<span class="string">&#x27;rp&#x27;</span>);</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200821212253.png" alt="image-20200821212251986"></p><blockquote><p>误差太大， 预测结果并 没有太大的 参考价值。</p></blockquote><h3 id="算法的参数优化问题"><a class="header-anchor" href="#算法的参数优化问题">¶</a>算法的参数优化问题</h3><p>在群体智能优化算法的设计中，搜索行为具有一定的随机性，以免于陷入局部最优。 但是，随机性参数的设置却是一个普遍性的难题。如果随机性过高，算法的多样性增 加，但是难以收敛；若随机性太低，算法收敛速度快，但多样性降低，极有可能陷入 局部最优。已知某算法随机性参数与多样性、收敛性的关系分别如表1和表2所示，其中收敛性与多样性数据都已经转换为与算法性能相关的统一度量。现在算法的设计者 既不愿意降低收敛性，又不愿意牺牲多样性，想要在两者之间取得一个平衡点。请问怎么确定随机性参数？</p><p>​表1 随机性参数与多样性度量之间的关系</p><table><thead><tr><th>x</th><th>0.03</th><th>0.06</th><th>0.09</th><th>0.12</th><th>0.15</th><th>0.18</th><th>0.21</th><th>0.24</th><th>0.27</th><th>0.3</th></tr></thead><tbody><tr><td>y1</td><td>0.01</td><td>0.01</td><td>0.02</td><td>0.03</td><td>0.06</td><td>0.07</td><td>0.13</td><td>0.17</td><td>0.25</td><td>0.37</td></tr></tbody></table><p>​表2 随机性参数与收敛性度量之间的关系</p><table><thead><tr><th>x</th><th>0.03</th><th>0.06</th><th>0.09</th><th>0.12</th><th>0.15</th><th>0.18</th><th>0.21</th><th>0.24</th><th>0.27</th><th>0.3</th></tr></thead><tbody><tr><td>y2</td><td>0.85</td><td>0.76</td><td>0.68</td><td>0.62</td><td>0.54</td><td>0.52</td><td>0.5</td><td>0.49</td><td>0.48</td><td>0.47</td></tr></tbody></table><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">x=<span class="number">0.03</span>:<span class="number">0.03</span>:<span class="number">0.3</span>;</span><br><span class="line">y1=[<span class="number">0.01</span>,<span class="number">0.01</span>,<span class="number">0.02</span>,<span class="number">0.03</span>,<span class="number">0.06</span>,<span class="number">0.07</span>,<span class="number">0.13</span>,<span class="number">0.17</span>,<span class="number">0.25</span>,<span class="number">0.37</span>];</span><br><span class="line">y2=[<span class="number">0.85</span>,<span class="number">0.76</span>,<span class="number">0.68</span>,<span class="number">0.62</span>,<span class="number">0.56</span>,<span class="number">0.52</span>,<span class="number">0.49</span>,<span class="number">0.46</span>,<span class="number">0.43</span>,<span class="number">0.39</span>];</span><br><span class="line"><span class="built_in">plot</span>(x,y1,<span class="string">&#x27;*&#x27;</span>,x,y2,<span class="string">&#x27;o&#x27;</span>);</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200821213119.png" alt="image-20200821212813579"></p><p><font color="pink">问题分析：</font></p><ul><li>随机性参数的增长导致多样性增加，收敛性降低。</li><li>两者同等重要，则取平衡点。</li><li>平衡点最佳位置是多样性和收敛性相等的地方。</li></ul><p><font color="pink">解决方案：</font></p><ul><li>第一步：分别对多样性和收敛性进行拟合，得到拟合曲线。</li><li>第二步：找到两曲线的交点。</li></ul><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">p1=polyfit(x,y1,<span class="number">2</span>);</span><br><span class="line">p2=polyfit(x,y2,<span class="number">2</span>);</span><br><span class="line">p=p1-p2;</span><br><span class="line">xi=roots(p);</span><br><span class="line">xj=<span class="number">0</span>:<span class="number">0.03</span>:<span class="number">0.36</span>;</span><br><span class="line">yj1=polyval(p1,xj);</span><br><span class="line">yj2=polyval(p2,xj);</span><br><span class="line">yi=polyval(p1,xi(<span class="number">2</span>))</span><br><span class="line"><span class="built_in">plot</span>(x,y1,<span class="string">&#x27;*&#x27;</span>,x,y2,<span class="string">&#x27;o&#x27;</span>,xj,yj1,xj,yj2,xi(<span class="number">2</span>),yi,<span class="string">&#x27;rp&#x27;</span>);</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200821213059.png" alt="image-20200821213058480"></p><h3 id="数据插值与曲线拟合的比较"><a class="header-anchor" href="#数据插值与曲线拟合的比较">¶</a>数据插值与曲线拟合的比较</h3><p>相同点：</p><ul><li>都属于函数逼近方法</li><li>都能进行数据估算</li></ul><p>不同点：</p><ul><li>实现方法不同</li><li>结果形式不同</li><li>侧重点不同</li><li>应用场合不同</li></ul><h1>数值微积分与方程求解</h1><h2 id="数值微分与数值积分数值微分"><a class="header-anchor" href="#数值微分与数值积分数值微分">¶</a>数值微分与数值积分数值微分</h2><ul><li>数值积分</li><li>数值微分</li></ul><h3 id="数值微分"><a class="header-anchor" href="#数值微分">¶</a>数值微分</h3><h4 id="数值差分与差商"><a class="header-anchor" href="#数值差分与差商">¶</a>数值差分与差商</h4><p>微积分中，任意函数f(x)在x0点的导数是通过极限定义的：</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200826183722.png" alt="image-20200826183720287"></p><p>如果去掉极限定义中h趋向于0的极限过程，得到函数在x0点处以h（h&gt;0） 为步长的向前差分、向后差分和中心差分公式：</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200826183758.png" alt="image-20200826183756703"></p><p>函数f(x)在点x0的微分接近于函数在该点的差分，而f在点x的导数接近于函数在该点的差商。</p><h4 id="数值微分的实现"><a class="header-anchor" href="#数值微分的实现">¶</a>数值微分的实现</h4><p>MATLAB提供了求向前差分的函数diff，其调用格式有三种：</p><ul><li><font color='purple'>dx=diff(x)</font>:计算向量x的向前差分，dx(i)=x(i+1)-x(i)，i=1，2，…，n-1。</li><li><font color='purple'>dx=diff(x, n):</font>计算向量x的n阶向前差分。例如，diff(x,2)=diff(diff(x))。</li><li><font color='purple'>dx=diff(A,n, dim):</font>计算矩阵A的n阶差分，dim=1时（默认状态），按列计算差分;dim=2，按行计算差分。</li></ul><blockquote><p><font color ="red">注意：</font>diff函数计算的是向量元素间的差分，故差分向量元素的个数比原向量少了 一个。同样，对于矩阵来说，差分后的矩阵比原矩阵少了一行或一列。 另外，计算差分之后，可以用f(x)在某点处的差商作为其导数的近似值。</p></blockquote><p>ex:设f(x)=sinx，在[0，2π ]范围内随机采样，计算f’(x)的近似值，并与 理论值f’(x)=cosx 进行比较。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; x=[<span class="number">0</span>,<span class="built_in">sort</span>(<span class="number">2</span>*<span class="built_in">pi</span>*<span class="built_in">rand</span>(<span class="number">1</span>,<span class="number">5000</span>)),<span class="number">2</span>*<span class="built_in">pi</span>];</span><br><span class="line">y=<span class="built_in">sin</span>(x);</span><br><span class="line">f1=diff(y)./diff(x);</span><br><span class="line">f2=<span class="built_in">cos</span>(x(<span class="number">1</span>:<span class="keyword">end</span><span class="number">-1</span>));</span><br><span class="line"><span class="built_in">plot</span>(x(<span class="number">1</span>:<span class="keyword">end</span><span class="number">-1</span>),f1,x(<span class="number">1</span>:<span class="keyword">end</span><span class="number">-1</span>),f2);</span><br><span class="line">d=norm(f1-f2) </span><br><span class="line"></span><br><span class="line">d =</span><br><span class="line"></span><br><span class="line">    <span class="number">0.0456</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200826185635.png" alt="image-20200826184859687"></p><h3 id="数值积分"><a class="header-anchor" href="#数值积分">¶</a>数值积分</h3><h4 id="数值积分基本原理"><a class="header-anchor" href="#数值积分基本原理">¶</a>数值积分基本原理</h4><p>在高等数学中，计算定积分依靠微积分基本定理，只要找到被积函数f(x) 的原函数大F(x)，则可用牛顿—莱布尼兹（Newton-Leibniz）公式：</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200826185626.png" alt="image-20200826185010745"></p><p>在有些情况下，应用牛顿—莱布尼兹公式有困难，例如，当被积函数的原函 数无法用初等函数表示，或被积函数是用离散的表格形式给出的。这时就需 要用数值解法来求定积分的近似值。</p><p>求定积分的数值方法多种多样，如梯形法、辛普森（Simpson）法、高斯求积公式 等。它们的基本思想都是将积分区间[a，b]分成n个子区间[xi，xi+1]，i=1，2，…， n，其中x1=a，xn+1=b，这样求定积分问题就分解为下面的求和问题：</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200826185619.png" alt="image-20200826185055502"></p><p>在每一个小的子区间上定积分的值可以近似求得,从而避免了牛顿—莱布尼兹公式 需要寻求原函数的困难。</p><h4 id="数值积分的实现"><a class="header-anchor" href="#数值积分的实现">¶</a>数值积分的实现</h4><ul><li>基于自适应辛普森方法</li></ul><p><font color ="purple">[I,n]=quad(filename,a,b,tol,trace)</font></p><ul><li>基于自适应Gauss-Lobatto方法</li></ul><p><font color ="purple">[I,n]=quadl(filename,a,b,tol,trace)</font></p><blockquote><p>其中，filename是被积函数名；a和b分别是定积分的下限和上限，积分限[a，b] 必须是有限的，不能为无穷大（Inf）；tol用来控制积分精度，默认时取 tol=10^(-6)；trace控制是否展现积分过程，若取非0则展现积分过程，取0则不展 现，默认时取trace=0；返回参数I即定积分的值，n为被积函数的调用次数。</p></blockquote><p>ex:分别用quad函数和quadl函数求定 积分的近似值，并在相同的积分精度下， 比较被积函数的调用次数。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200826185608.png" alt="image-20200826185607408"></p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; format long</span><br><span class="line">&gt;&gt; f=@(x) <span class="number">4.</span>/(<span class="number">1</span>+x.^<span class="number">2</span>);</span><br><span class="line">&gt;&gt; [I,n]=quad(f,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1e-8</span>)</span><br><span class="line"></span><br><span class="line">I =</span><br><span class="line"></span><br><span class="line">   <span class="number">3.141592653733437</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">n =</span><br><span class="line"></span><br><span class="line">    <span class="number">61</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; [I,n]=quadl(f,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1e-8</span>)</span><br><span class="line"></span><br><span class="line">I =</span><br><span class="line"></span><br><span class="line">   <span class="number">3.141592653589806</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">n =</span><br><span class="line"></span><br><span class="line">    <span class="number">48</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; (<span class="built_in">atan</span>(<span class="number">1</span>)-<span class="built_in">atan</span>(<span class="number">0</span>))*<span class="number">4</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">   <span class="number">3.141592653589793</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; format short</span><br></pre></td></tr></table></figure><ul><li>基于全局自适应积分方法</li></ul><p><font color ="purple">I=integral(filename,a,b)</font></p><blockquote><p>其中，I是计算得到的积分；filename是被积函数；a和b分别是定积分的下限和 上限，积分限可以为无穷大。</p></blockquote><p>ex:求定积分。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200826190315.png" alt="image-20200826190314126"></p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="comment">%被积函数文件fe.m：</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">f</span>=<span class="title">fe</span><span class="params">(x)</span></span></span><br><span class="line">f=<span class="number">1.</span>/(x.*<span class="built_in">sqrt</span>(<span class="number">1</span>-<span class="built_in">log</span>(x).^<span class="number">2</span>));</span><br><span class="line"></span><br><span class="line">&gt;&gt; I=integral(@fe,<span class="number">1</span>,<span class="built_in">exp</span>(<span class="number">1</span>))</span><br><span class="line"></span><br><span class="line">I =</span><br><span class="line"></span><br><span class="line">    <span class="number">1.5708</span></span><br></pre></td></tr></table></figure><ul><li>基于自适应高斯-克朗罗德方法</li></ul><p><font color="purple">[I,err]=quadgk(filename,a,b)</font></p><blockquote><p>其中，err返回近似误差范围，其他参数的含义和用法与quad函数相同。积分 上下限可以是无穷大（−Inf或Inf），也可以是复数。如果积分上下限是复数， 则quadgk函数在复平面上求积分。</p></blockquote><p>ex:求定积分。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200826191306.png" alt="image-20200826191305074"></p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="comment">%被积函数文件fsx.m：</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">f</span>=<span class="title">fsx</span><span class="params">(x)</span></span></span><br><span class="line">f=<span class="built_in">sin</span>(<span class="number">1.</span>/x)./x.^<span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&gt;&gt; I=quadgk(@fsx,<span class="number">2</span>/<span class="built_in">pi</span>,+Inf)</span><br><span class="line"></span><br><span class="line">I =</span><br><span class="line"></span><br><span class="line">    <span class="number">1.0000</span></span><br></pre></td></tr></table></figure><ul><li>基于梯形积分法</li></ul><p>已知（xi，yi）（i=1，2，…，n），且a=x1&lt;x2&lt;····&lt;xn=b，求<img src="../../../picture/PicGo/copypicture/image-20200826191602547.png" alt="image-20200826191602547">近似值。</p><p><font color ="purple">I=trapz(x,y) </font></p><blockquote><p>其中，向量x、y定义函数关系y=f(x)。</p></blockquote><p>trapz函数采用梯形积分法则，积分的近似值为：</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200826191728.png" alt="image-20200826191726661"></p><blockquote><p>其中，hi=x(i+1)-xi。</p></blockquote><p>可用以下语句实现：</p><p><font color="green">sum(diff(x).*(y(1:end-1)+y(2:end))/2)</font></p><p>ex:设x=1:6，y=[6,8,11,7,5,2],用trapz函数计算定积分。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; x=<span class="number">1</span>:<span class="number">6</span>;</span><br><span class="line">&gt;&gt; y=[<span class="number">6</span> <span class="number">8</span> <span class="number">11</span> <span class="number">7</span> <span class="number">5</span> <span class="number">2</span>];</span><br><span class="line">&gt;&gt; <span class="built_in">plot</span>(x,y,<span class="string">&#x27;-ko&#x27;</span>);</span><br><span class="line">&gt;&gt; grid on</span><br><span class="line">&gt;&gt; axis([<span class="number">1</span>,<span class="number">6</span>,<span class="number">0</span>,<span class="number">11</span>]);</span><br><span class="line">&gt;&gt; I1=trapz(x,y)</span><br><span class="line"></span><br><span class="line">I1 =</span><br><span class="line"></span><br><span class="line">    <span class="number">35</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; I2=sum(diff(x).*(y(<span class="number">1</span>:<span class="keyword">end</span><span class="number">-1</span>)+y(<span class="number">2</span>:<span class="keyword">end</span>))/<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">I2 =</span><br><span class="line"></span><br><span class="line">    <span class="number">35</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200826192244.png" alt="image-20200826192243277"></p><h4 id="多重定积分的数值求解"><a class="header-anchor" href="#多重定积分的数值求解">¶</a>多重定积分的数值求解</h4><ul><li>求二重积分的数值解：<img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200826192317.png" alt="image-20200826192316268"></li></ul><p><font color="purple">I=integral2(filename,a,b,c,d)</font></p><p><font color="purple">I=quad2d(filename,a,b,c,d)</font></p><p><font color="purple">I=dblquad(filename,a,b,c,d,tol)</font></p><ul><li>求三重积分的数值解：<img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200826203656.png" alt="image-20200826192442918"></li></ul><p><font color="purple">I=integral3(filename,a,b,c,d,e,f)</font></p><p><font color="purple">I=triplequad(filename,a,b,c,d,e,f,tol)</font></p><p>ex:分别求二重积分和三重积分。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200826203650.png" alt="image-20200826192607178"></p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; f1=@(x,y) <span class="built_in">exp</span>(-x.^<span class="number">2</span>/<span class="number">2</span>).*<span class="built_in">sin</span>(x.^<span class="number">2</span>+y);</span><br><span class="line">&gt;&gt; I1=quad2d(f1,<span class="number">-2</span>,<span class="number">2</span>,<span class="number">-1</span>,<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">I1 =</span><br><span class="line"></span><br><span class="line">    <span class="number">1.5745</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; f2=@(x,y,z) <span class="number">4</span>*x.*z.*<span class="built_in">exp</span>(-z.*z.*y-x.*x);</span><br><span class="line">&gt;&gt; I2=integral3(f2,<span class="number">0</span>,<span class="built_in">pi</span>,<span class="number">0</span>,<span class="built_in">pi</span>,<span class="number">0</span>,<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">I2 =</span><br><span class="line"></span><br><span class="line">    <span class="number">1.7328</span></span><br></pre></td></tr></table></figure><h2 id="线性方程组求解"><a class="header-anchor" href="#线性方程组求解">¶</a>线性方程组求解</h2><ul><li>直接法</li><li>迭代法</li></ul><h3 id="线性方程组的直接解法"><a class="header-anchor" href="#线性方程组的直接解法">¶</a>线性方程组的直接解法</h3><ul><li>高斯（Gauss）消去法</li><li>列主元消去法</li><li>矩阵的三角分解法</li></ul><p>高斯（Gauss）消去法是一个经典的直接法，由它改进得到的列主元消去法，是 目前计算机上求解线性方程组的标准算法，其特点就是通过消元将一般线性方 程组的求解问题转化为三角方程组的求解问题。此外，还有矩阵的三角分解法 等许多直接求解算法。</p><h4 id="利用左除运算符的直接解法"><a class="header-anchor" href="#利用左除运算符的直接解法">¶</a>利用左除运算符的直接解法</h4><p>MATLAB提供了一个左除运算符“\”用于求解线性方程组，它使用列主元消去法， 使用起来十分方便。对于线性方程组Ax=b，可以利用左除运算符反斜杠求解，b左 除以A可获得线性方程组的数值解x。</p><p><font color="purple">Ax=b</font><font color="red">——&gt;</font><font color="purple">x=A\b</font></p><blockquote><p>注意，如果矩阵A是奇异的或接近奇异的，则MATLAB会给出警告信息。</p></blockquote><p>ex:用左除运算符求解下列线性方程组。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200826203644.png" alt="image-20200826193110942"></p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; A=[<span class="number">2</span>,<span class="number">1</span>,<span class="number">-5</span>,<span class="number">1</span>;<span class="number">1</span>,<span class="number">-5</span>,<span class="number">0</span>,<span class="number">7</span>;<span class="number">0</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">-1</span>;<span class="number">1</span>,<span class="number">6</span>,<span class="number">-1</span>,<span class="number">-4</span>];</span><br><span class="line">&gt;&gt; b=[<span class="number">13</span>,<span class="number">-9</span>,<span class="number">6</span>,<span class="number">0</span>]&#x27;;</span><br><span class="line">&gt;&gt; x=A\b</span><br><span class="line"></span><br><span class="line">x =</span><br><span class="line"></span><br><span class="line">  <span class="number">-66.5556</span></span><br><span class="line">   <span class="number">25.6667</span></span><br><span class="line">  <span class="number">-18.7778</span></span><br><span class="line">   <span class="number">26.5556</span></span><br></pre></td></tr></table></figure><h4 id="利用矩阵分解求解线性方程组"><a class="header-anchor" href="#利用矩阵分解求解线性方程组">¶</a>利用矩阵分解求解线性方程组</h4><p>矩阵分解是设计算法的重要技巧，是指将一个给定的矩阵分解成若干个特 殊类型矩阵的乘积，从而将一个一般的矩阵计算问题转化为几个易求的特 殊矩阵的计算问题。通过矩阵分解方法求解线性方程组的优点是运算速度快，可以节省存储空间。</p><ul><li>LU分解</li><li>QR分解</li><li>Cholesky分解</li></ul><p>①LU分解的基本思想</p><p>矩阵的LU分解就是将一个n阶矩阵表示为一个下三角矩阵和一个上三角矩阵的 乘积。线性代数中已经证明，只要方阵是非奇异的，LU分解总是可以进行的。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200826220122.png" alt="image-20200826203934776"></p><p>对于三角方程很容易求解，于是可以首先求解向量y使Ly=b，再求解Ux=y，从 而达到求解线性方程组Ax=b的目的。</p><p>②MATLAB的LU分解函数</p><p>LU分解函数是根据列主元LU分解算法定义的，具有较好的数据稳定性。lu 函数有两种调用格式：</p><ul><li><font color="purple">[L, U]=lu(A):</font>产生一个上三角阵U和一个变换形式的下三角阵L，使之满足A=LU。注意，这里的矩阵A必须是方阵。</li><li><font color="purple">[L,U,P]=lu(A):</font>产生一个上三角阵U和一个下三角阵L以及一个置换矩阵P，使之满足PA=LU。同样，矩阵A必须是方阵。</li></ul><p>当使用第一种格式时，矩阵L往往不是一个下三角阵，但可以通过行交换成为一个下三角阵。</p><p>③用LU分解求解线性方程组</p><p><font color="purple">Ax=b→LUx=b→x=U(L\b) </font></p><p>或</p><p><font color="purple">Ax=b→ PAx=Pb→ LUx=Pb → x=U(L\P*b)</font></p><p>通过LU分解后可以大大提高运算速度。</p><p>ex:用LU分解求解例1中的线性方程组。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200826220116.png" alt="image-20200826204438949"></p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; A=[<span class="number">2</span>,<span class="number">1</span>,<span class="number">-5</span>,<span class="number">1</span>;<span class="number">1</span>,<span class="number">-5</span>,<span class="number">0</span>,<span class="number">7</span>;<span class="number">0</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">-1</span>;<span class="number">1</span>,<span class="number">6</span>,<span class="number">-1</span>,<span class="number">-4</span>];</span><br><span class="line">&gt;&gt; b=[<span class="number">13</span>,<span class="number">-9</span>,<span class="number">6</span>,<span class="number">0</span>]&#x27;;</span><br><span class="line">&gt;&gt; [L,U]=lu(A);<span class="comment">%&gt;&gt; [L,U,P]=lu(A);</span></span><br><span class="line"><span class="comment">%&gt;&gt; x=U\(L\P*b) </span></span><br><span class="line">&gt;&gt; x=U\(L\b)</span><br><span class="line"></span><br><span class="line">x =</span><br><span class="line"></span><br><span class="line">  <span class="number">-66.5556</span></span><br><span class="line">   <span class="number">25.6667</span></span><br><span class="line">  <span class="number">-18.7778</span></span><br><span class="line">   <span class="number">26.5556</span></span><br></pre></td></tr></table></figure><h3 id="线性方程组的迭代解法"><a class="header-anchor" href="#线性方程组的迭代解法">¶</a>线性方程组的迭代解法</h3><p>迭代法是一种不断用变量的原值推出它的新值的过程，是用计算机解决问题的一种基本方法。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200826220107.png" alt="image-20200826220106591"></p><h4 id="雅可比（Jacobi）迭代法"><a class="header-anchor" href="#雅可比（Jacobi）迭代法">¶</a>雅可比（Jacobi）迭代法</h4><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200826220207.png" alt="image-20200826220206404"></p><p>求解公式为：</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200826220254.png" alt="image-20200826220253399"></p><p>与之对应的迭代公式为：</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200826220323.png" alt="image-20200826220322259"></p><p>雅可比迭代法的函数文件jacobi.m：</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="params">[y,n]</span>=<span class="title">jacobi</span><span class="params">(A,b,x0,ep)</span></span></span><br><span class="line">D=<span class="built_in">diag</span>(<span class="built_in">diag</span>(A));</span><br><span class="line">L=-<span class="built_in">tril</span>(A,<span class="number">-1</span>);</span><br><span class="line">U=-<span class="built_in">triu</span>(A,<span class="number">1</span>);</span><br><span class="line">B=D\(L+U);</span><br><span class="line">f=D\b;</span><br><span class="line">y=B*x0+f;</span><br><span class="line">n=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span> norm(y-x0)&gt;=ep</span><br><span class="line"> x0=y;</span><br><span class="line"> y=B*x0+f;</span><br><span class="line"> n=n+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">end</span> </span><br></pre></td></tr></table></figure><h4 id="高斯-赛德尔（Gauss-Serdel）迭代法"><a class="header-anchor" href="#高斯-赛德尔（Gauss-Serdel）迭代法">¶</a>高斯-赛德尔（Gauss-Serdel）迭代法</h4><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200826220436.png" alt="image-20200826220435494"></p><p>Gauss-Serdel迭代法的函数文件gauseidel.m：</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="params">[y,n]</span>=<span class="title">gauseidel</span><span class="params">(A,b,x0,ep)</span></span></span><br><span class="line">D=<span class="built_in">diag</span>(<span class="built_in">diag</span>(A));</span><br><span class="line">L=-<span class="built_in">tril</span>(A,<span class="number">-1</span>);</span><br><span class="line">U=-<span class="built_in">triu</span>(A,<span class="number">1</span>);</span><br><span class="line">B=(D-L)\U;</span><br><span class="line">f=(D-L)\b;</span><br><span class="line">y=B*x0+f;</span><br><span class="line">n=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span> norm(y-x0)&gt;=ep</span><br><span class="line"> x0=y;</span><br><span class="line"> y=B*x0+f;</span><br><span class="line"> n=n+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">end</span> </span><br></pre></td></tr></table></figure><p>ex:分别用雅可比迭代法和高斯-赛德尔迭代法求解线性方程组。设迭代初值为 0，迭代精度为10^-6 。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200826220542.png" alt="image-20200826220541284"></p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; A=[<span class="number">4</span>,<span class="number">-2</span>,<span class="number">-1</span>;<span class="number">-2</span>,<span class="number">4</span>,<span class="number">3</span>;<span class="number">-1</span>,<span class="number">-3</span>,<span class="number">3</span>]; </span><br><span class="line">&gt;&gt; b=[<span class="number">1</span>,<span class="number">5</span>,<span class="number">0</span>]&#x27;;</span><br><span class="line">&gt;&gt; [x,n]=jacobi(A,b,[<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>]&#x27;,<span class="number">1.0e-6</span>) </span><br><span class="line"></span><br><span class="line">x =</span><br><span class="line"></span><br><span class="line">    <span class="number">0.9706</span></span><br><span class="line">    <span class="number">0.8529</span></span><br><span class="line">    <span class="number">1.1765</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">n =</span><br><span class="line"></span><br><span class="line">    <span class="number">35</span></span><br><span class="line">    </span><br><span class="line"><span class="comment">%other    </span></span><br><span class="line">&gt;&gt; [x,n]=gauseidel(A,b,[<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>]&#x27;,<span class="number">1.0e-6</span>)</span><br><span class="line"></span><br><span class="line">x =</span><br><span class="line"></span><br><span class="line">    <span class="number">0.9706</span></span><br><span class="line">    <span class="number">0.8529</span></span><br><span class="line">    <span class="number">1.1765</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">n =</span><br><span class="line"></span><br><span class="line">    <span class="number">16</span></span><br></pre></td></tr></table></figure><p>ex:分别用雅可比迭代法和高斯-赛德尔迭代法求解下列线性方程组，看是否收敛。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200826221403.png" alt="image-20200826221000840"></p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; A=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">-2</span>;<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>;<span class="number">2</span>,<span class="number">2</span>,<span class="number">1</span>]; </span><br><span class="line">&gt;&gt; b=[<span class="number">9</span>;<span class="number">7</span>;<span class="number">6</span>];</span><br><span class="line">&gt;&gt; [x,n]=jacobi(A,b,[<span class="number">0</span>;<span class="number">0</span>;<span class="number">0</span>],<span class="number">1.0e-6</span>) </span><br><span class="line"></span><br><span class="line">x =</span><br><span class="line"></span><br><span class="line">   <span class="number">-27</span></span><br><span class="line">    <span class="number">26</span></span><br><span class="line">     <span class="number">8</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">n =</span><br><span class="line"></span><br><span class="line">     <span class="number">4</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; [x,n]=gauseidel(A,b,[<span class="number">0</span>;<span class="number">0</span>;<span class="number">0</span>],<span class="number">1.0e-6</span>) </span><br><span class="line"></span><br><span class="line">x =</span><br><span class="line"></span><br><span class="line">   NaN</span><br><span class="line">   NaN</span><br><span class="line">   NaN</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">n =</span><br><span class="line"></span><br><span class="line">        <span class="number">1012</span></span><br></pre></td></tr></table></figure><ul><li><p>直接法：以矩阵初等变换为基础，可以求得方程组的精确解；占用的内存空 间大、程序实现较为复杂；一般适合求解低阶稠密线性方程组。</p></li><li><p>迭代法：从给定初始值逐步逼近精确解的过程，求解过程占用存储空间小， 程序设计简单；适用于求解大型稀疏矩阵线性方程组；要考虑算法的收敛性。</p></li></ul><h2 id="线性方程组应用举例"><a class="header-anchor" href="#线性方程组应用举例">¶</a>线性方程组应用举例</h2><ul><li>平面桁架结构受力分析问题</li><li>小行星运行轨道计算问题</li></ul><h3 id="平面桁架结构受力分析问题"><a class="header-anchor" href="#平面桁架结构受力分析问题">¶</a>平面桁架结构受力分析问题</h3><p>桁架是工程中常用的一种结构，各构件在同一平面内的桁架称为平面桁架。 一个平面桁架结构由连接于A、B、C、D、E、F、G、H共8个结点的13根杆件 构成。在结点B、E和G上施加指定载荷，求桁架每根杆件上的轴力。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200826221334.png" alt="image-20200826221333310"></p><p>对于静态平衡的衍架而言，它的各个结点也一定是平衡的，即在任何结点上 水平方向或垂直方向受力之和都必须为零。因此，可以对每一个结点列出两 个独立的平衡方程，从而可求出杆件的轴力。对于8个结点，可以列出16个方 程，方程数多于待定的13个未知量。为使该衍架静定，即为使问题存在唯一 解，我们假定：结点A在水平和垂直方向上刚性固定，而结点H仅在垂直方向 刚性固定。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200826221433.png" alt="image-20200826221431889"></p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200826221452.png" alt="image-20200826221451371"></p><p>以结点E为例,其受力如图所示,写出平衡方程，有：</p><p>水平方向：ƒ𝟓cos45°+ƒ𝟔= ƒ𝟗cos45°+ƒ𝟏0</p><p>垂直方向：ƒ𝟓sin45°+ƒ𝟕+ƒ𝟗sin45°=15</p><p>定义参数𝜶 = 𝟐/𝟐，则可得到E点的平衡方程。</p><p>𝜶ƒ𝟓+ƒ𝟔= 𝜶 ƒ𝟗+ƒ𝟏𝟎</p><p>𝜶 ƒ𝟓+ƒ𝟕+𝜶ƒ𝟗=15</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">结点B：  ƒ𝟐=ƒ𝟔</span><br><span class="line"> ƒ𝟑=10</span><br><span class="line">结点C：𝛂ƒ𝟏=ƒ𝟒+𝛂ƒ𝟓</span><br><span class="line">   𝛂ƒ𝟏+ƒ𝟑+𝛂ƒ𝟓=0</span><br><span class="line">结点D：ƒ𝟒=ƒ𝟖</span><br><span class="line"><span class="code">  ƒ𝟕=0</span></span><br><span class="line"><span class="code">结点E：𝛂ƒ𝟓+ƒ𝟔=𝛂ƒ𝟗+ƒ𝟏𝟎</span></span><br><span class="line"><span class="code">   𝛂ƒ𝟓+ƒ𝟕+𝛂ƒ𝟗=15</span></span><br><span class="line"><span class="code">结点F：ƒ𝟏𝟎=ƒ𝟏𝟑</span></span><br><span class="line"><span class="code">   ƒ𝟏𝟏=20</span></span><br><span class="line"><span class="code">结点G：ƒ𝟖+𝛂ƒ𝟗= 𝛂ƒ𝟏𝟐</span></span><br><span class="line"><span class="code">   𝛂ƒ𝟗+ƒ𝟏𝟏+𝛂ƒ𝟏𝟐=0</span></span><br><span class="line"><span class="code">结点H：ƒ𝟏𝟑+𝛂ƒ𝟏𝟐=0</span></span><br></pre></td></tr></table></figure><ul><li>结点H在垂直方向刚性固定，只有水平方向平衡方程。</li><li>这是一个包含13个未知数的线性方程组，利用MATLAB很容易求出杆件轴力向量f。</li></ul><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">alpha=<span class="built_in">sqrt</span>(<span class="number">2</span>)/<span class="number">2</span>;</span><br><span class="line">A=[<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">-1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>;</span><br><span class="line"> <span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>;</span><br><span class="line"> alpha,<span class="number">0</span>,<span class="number">0</span>,<span class="number">-1</span>,-alpha,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>;</span><br><span class="line"> alpha,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,alpha,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>;</span><br><span class="line"> <span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">-1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>;</span><br><span class="line"> <span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>;</span><br><span class="line"> <span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,alpha,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,-alpha,<span class="number">-1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>;</span><br><span class="line"> <span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,alpha,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,alpha,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>;</span><br><span class="line"> <span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">-1</span>;</span><br><span class="line"> <span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>;</span><br><span class="line"> <span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,alpha,<span class="number">0</span>,<span class="number">0</span>,-alpha,<span class="number">0</span>;</span><br><span class="line"> <span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,alpha,<span class="number">0</span>,<span class="number">1</span>,alpha,<span class="number">0</span>;</span><br><span class="line"> <span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,alpha,<span class="number">1</span>];</span><br><span class="line">b=[<span class="number">0</span>;<span class="number">10</span>;<span class="number">0</span>;<span class="number">0</span>;<span class="number">0</span>;<span class="number">0</span>;<span class="number">0</span>;<span class="number">15</span>;<span class="number">0</span>;<span class="number">20</span>;<span class="number">0</span>;<span class="number">0</span>;<span class="number">0</span>];</span><br><span class="line">f=A\b;</span><br><span class="line"><span class="built_in">disp</span>(f&#x27;) </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">-28.2843</span>   <span class="number">20.0000</span>   <span class="number">10.0000</span>  <span class="number">-30.0000</span>   <span class="number">14.1421</span>   <span class="number">20.0000</span>         <span class="number">0</span>  <span class="number">-30.0000</span>    <span class="number">7.0711</span>   <span class="number">25.0000</span>   <span class="number">20.0000</span>  <span class="number">-35.3553</span>   <span class="number">25.0000</span></span><br></pre></td></tr></table></figure><h3 id="小行星运行轨道计算问题"><a class="header-anchor" href="#小行星运行轨道计算问题">¶</a>小行星运行轨道计算问题</h3><p>现在已经在5个不同时刻对某颗小行星进行了5次观测，测得轨道上的5个点 的坐标数据如表所示，其单位为天文测量单位。试确定小行星的轨道方程。</p><table><thead><tr><th>i</th><th>1</th><th>2</th><th>3</th><th>4</th><th>5</th></tr></thead><tbody><tr><td>xi</td><td>1.02</td><td>0.87</td><td>0.67</td><td>0.44</td><td>0.16</td></tr><tr><td>yi</td><td>0.39</td><td>0.27</td><td>0.18</td><td>0.13</td><td>0.13</td></tr></tbody></table><h4 id="模型分析"><a class="header-anchor" href="#模型分析">¶</a>模型分析</h4><p>由开普勒第一定律知，小行星运行轨道为椭圆方程：</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200826223000.png" alt="image-20200826222646103"></p><p>需要确定系数ai(i=1,2,3,4,5)。</p><p>利用已知的数据，不妨设测得的5个点坐标为（xi,yi）（i=1,2,3,4,5），确 定系数ai等价于求解下列线性方程组。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200826222950.png" alt="image-20200826222722213"></p><p>将方程改写为：</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200826222945.png" alt="image-20200826222743485"></p><p>将表中的数据（xi,yi）（i=1,2,3,4,5）代入系数矩阵，可求得 ai(i=1,2,3,4,5)，从而得到小行星的轨道方程。</p><h4 id="模型求解"><a class="header-anchor" href="#模型求解">¶</a>模型求解</h4><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">xi=[<span class="number">1.02</span>,<span class="number">0.87</span>,<span class="number">0.67</span>,<span class="number">0.44</span>,<span class="number">0.16</span>];</span><br><span class="line">yi=[<span class="number">0.39</span>,<span class="number">0.27</span>,<span class="number">0.18</span>,<span class="number">0.13</span>,<span class="number">0.13</span>];</span><br><span class="line">A=<span class="built_in">zeros</span>(<span class="built_in">length</span>(xi));</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:<span class="built_in">length</span>(xi)</span><br><span class="line"> A(<span class="built_in">i</span>,:)=[xi(<span class="built_in">i</span>)*xi(<span class="built_in">i</span>),<span class="number">2</span>*xi(<span class="built_in">i</span>)*yi(<span class="built_in">i</span>),yi(<span class="built_in">i</span>)*yi(<span class="built_in">i</span>),<span class="number">2</span>*xi(<span class="built_in">i</span>),<span class="number">2</span>*yi(<span class="built_in">i</span>)];</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">b=-<span class="built_in">ones</span>(<span class="built_in">length</span>(xi),<span class="number">1</span>);</span><br><span class="line">ai=A\b</span><br><span class="line"></span><br><span class="line">ai =</span><br><span class="line"></span><br><span class="line">    <span class="number">2.4645</span></span><br><span class="line">   <span class="number">-0.4423</span></span><br><span class="line">    <span class="number">6.4917</span></span><br><span class="line">   <span class="number">-0.6819</span></span><br><span class="line">   <span class="number">-3.6008</span></span><br></pre></td></tr></table></figure><p>因此小行星的轨道方程为：</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200826222925.png" alt="image-20200826222924456"></p><p>绘制小行星运行轨道：</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; f=@(x,y) <span class="number">2.4645</span>*x.^<span class="number">2</span><span class="number">-0.8846</span>*x.*y+<span class="number">6.4917</span>*y.^<span class="number">2</span><span class="number">-1.3638</span>*x<span class="number">-7.2016</span>*y+<span class="number">1</span>;</span><br><span class="line">&gt;&gt; h=ezplot(f,[<span class="number">-0.5</span>,<span class="number">1.2</span>,<span class="number">0</span>,<span class="number">1.2</span>]);</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200826223043.png" alt="image-20200826223042839"></p><h2 id="非线性方程求解与函数极值计算"><a class="header-anchor" href="#非线性方程求解与函数极值计算">¶</a>非线性方程求解与函数极值计算</h2><ul><li>非线性方程数值求解</li><li>函数极值的计算</li></ul><h3 id="非线性方程数值求解"><a class="header-anchor" href="#非线性方程数值求解">¶</a>非线性方程数值求解</h3><h4 id="单变量非线性方程求解"><a class="header-anchor" href="#单变量非线性方程求解">¶</a>单变量非线性方程求解</h4><p>函数的调用格式为：</p><p><font color="purple">x=fzero(filename,x0)</font></p><blockquote><p>其中，filename是待求根方程左端的函数表达式，x0是初始值。</p></blockquote><p>ex:求f(x)=x-(1/x)+5在x0=-5和x0=1作为迭代初值时的根。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; f=@(x) x<span class="number">-1.</span>/x+<span class="number">5</span>;</span><br><span class="line">&gt;&gt; x1=fzero(f,<span class="number">-5</span>)</span><br><span class="line"></span><br><span class="line">x1 =</span><br><span class="line"></span><br><span class="line">   <span class="number">-5.1926</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; x2=fzero(f,<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">x2 =</span><br><span class="line"></span><br><span class="line">    <span class="number">0.1926</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; x3=fzero(f,<span class="number">0.1</span>)</span><br><span class="line"></span><br><span class="line">x3 =</span><br><span class="line"></span><br><span class="line">   <span class="number">3.7372e-16</span></span><br></pre></td></tr></table></figure><blockquote><p>取x=0点近的初值,看看结果如何（x3），显然x3不是方程的解，所以利用 fzero函数求解方程，初值的选取是很重要的。在使用MATLAB进行问题求解时， 需要对问题进行多角度分析，而不能机械地套用命令或程序。</p></blockquote><p>f(x)=x2-1=0的根。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">f=@(x) x.^<span class="number">2</span><span class="number">-1</span>;</span><br><span class="line">x=[];</span><br><span class="line">x0=<span class="number">-0.25</span>:<span class="number">0.001</span>:<span class="number">0.25</span>;</span><br><span class="line"><span class="keyword">for</span> x00=x0</span><br><span class="line">x=[x,fzero(f,x00)];</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="built_in">plot</span>(x0,x,<span class="string">&#x27;-o&#x27;</span>)</span><br><span class="line">xlabel(<span class="string">&#x27;初值&#x27;</span>);</span><br><span class="line">ylabel(<span class="string">&#x27;方程的根&#x27;</span>);</span><br><span class="line">axis([<span class="number">-0.25</span>,<span class="number">0.25</span>,<span class="number">-1</span>,<span class="number">1</span>])</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200827095806.png" alt=""></p><blockquote><p>结果表明，在零附近，相同的根所对应的初值范围并不连续，求得的根也并 非是离初值比较近的根。所以fzero函数执行的是一个数值搜索过程，搜索结 果依赖于函数特性和指定的初值。</p></blockquote><h4 id="非线性方程组的求解"><a class="header-anchor" href="#非线性方程组的求解">¶</a>非线性方程组的求解</h4><p>在MATLAB的最优化工具箱中提供了非线性方程组的求解函数fsolve，其调用 格式如下：</p><p><font color="purple">x=fsolve(filename,x0,option)</font></p><blockquote><p>其中，x为返回的近似解，filename是待求根方程左端的函数表达式，x0是初值， option用于设置优化工具箱的优化参数，可以调用optimset函数来完成。例如， Display参数设置为‘off’时不显示中间结果。</p></blockquote><p>利用fsolve函数解上例的方程。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; f=@(x) x<span class="number">-1.</span>/x+<span class="number">5</span>;</span><br><span class="line">&gt;&gt; x1=fsolve(f,<span class="number">-5</span>,optimset(<span class="string">&#x27;Display&#x27;</span>,<span class="string">&#x27;off&#x27;</span>))</span><br><span class="line"></span><br><span class="line">x1 =</span><br><span class="line"></span><br><span class="line">   <span class="number">-5.1926</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; x2=fsolve(f,<span class="number">1</span>,optimset(<span class="string">&#x27;Display&#x27;</span>,<span class="string">&#x27;off&#x27;</span>))</span><br><span class="line"></span><br><span class="line">x2 =</span><br><span class="line"></span><br><span class="line">    <span class="number">0.1926</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; x3=fsolve(f,<span class="number">0.1</span>,optimset(<span class="string">&#x27;Display&#x27;</span>,<span class="string">&#x27;off&#x27;</span>))</span><br><span class="line"></span><br><span class="line">x3 =</span><br><span class="line"></span><br><span class="line">    <span class="number">0.1926</span></span><br></pre></td></tr></table></figure><blockquote><p>当初值是0.1时，利用fzero函数无法得到正确结果，这里利用fsolve函数就能 得到正确结果，因为不同函数的实现方法不同，适用的场合也不同。总之，多 角度选择和分析是很有必要的。</p></blockquote><p>ex:求下列方程组在（1，1，1）附近的解并对结果进行验证。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200827100124.png" alt="image-20200827100123591"></p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; f=@(x) [<span class="built_in">sin</span>(x(<span class="number">1</span>))+x(<span class="number">2</span>)+x(<span class="number">3</span>)^<span class="number">2</span>*<span class="built_in">exp</span>(x(<span class="number">1</span>)),x(<span class="number">1</span>)+x(<span class="number">2</span>)+x(<span class="number">3</span>),x(<span class="number">1</span>)*x(<span class="number">2</span>)*x(<span class="number">3</span>)];</span><br><span class="line">&gt;&gt; f([<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>])</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">    <span class="number">4.5598</span>    <span class="number">3.0000</span>    <span class="number">1.0000</span></span><br><span class="line"></span><br><span class="line">&gt;&gt;  x=fsolve(f,[<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>],optimset(<span class="string">&#x27;Display&#x27;</span>,<span class="string">&#x27;off&#x27;</span>))</span><br><span class="line"></span><br><span class="line">x =</span><br><span class="line"></span><br><span class="line">    <span class="number">0.0224</span>   <span class="number">-0.0224</span>   <span class="number">-0.0000</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; f(x)</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">   <span class="number">1.0e-06</span> *</span><br><span class="line"></span><br><span class="line">   <span class="number">-0.5931</span>    <span class="number">0.0000</span>    <span class="number">0.0006</span></span><br></pre></td></tr></table></figure><h3 id="函数极值的计算"><a class="header-anchor" href="#函数极值的计算">¶</a>函数极值的计算</h3><p>函数极值包括极大值和极小值，或者叫最大值和最小值。MATLAB只考虑最小值问题的计算，如果要求f(x)的最大值，可以通过求-f(x)的最小值来解 决。</p><h4 id="无约束最优化问题"><a class="header-anchor" href="#无约束最优化问题">¶</a>无约束最优化问题</h4><p>无约束最优化问题的一般描述为：</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200827100448.png" alt="image-20200827100447542"></p><blockquote><p>其中，x=[x1,x2,····，xn的转置。</p></blockquote><p>求最小值的函数为：</p><p><font color="purple">[xmin,fmin]=fminbnd(filename,x1,x2,option)</font></p><p><font color="purple">[xmin,fmin]=fminsearch(filename,x0,option)</font></p><p><font color="purple">[xmin,fmin]=fminunc(filename,x0,option)</font></p><blockquote><p>其中，xmin表示极小值点，fmin表示最小值，filename是定义的目标函数。第一 个函数的输入变量xl、x2分别表示被研究区间的左、右边界。后两个函数的输入 变量x0是一个向量，表示极值点的初值。option为优化参数，可以通过optimset 函数来设置。</p></blockquote><p>ex:求函数 f(x)=x −(1/x) +5 ，在区间(-10，-1)和(1，10)上的最小值点。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; f=@(x) x<span class="number">-1.</span>/x+<span class="number">5</span>;</span><br><span class="line">&gt;&gt; [xmin,fmin]=fminbnd(f,<span class="number">-10</span>,<span class="number">-1</span>)</span><br><span class="line"></span><br><span class="line">xmin =</span><br><span class="line"></span><br><span class="line">   <span class="number">-9.9999</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">fmin =</span><br><span class="line"></span><br><span class="line">   <span class="number">-4.8999</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; [xmin,fmin]=fminbnd(f,<span class="number">1</span>,<span class="number">10</span>)</span><br><span class="line"></span><br><span class="line">xmin =</span><br><span class="line"></span><br><span class="line">    <span class="number">1.0001</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">fmin =</span><br><span class="line"></span><br><span class="line">    <span class="number">5.0001</span></span><br></pre></td></tr></table></figure><h4 id="有约束最优化问题"><a class="header-anchor" href="#有约束最优化问题">¶</a>有约束最优化问题</h4><p>有约束最优化问题的一般描述为：</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200827102223.png" alt="image-20200827102221098"></p><blockquote><p>其中，x=[x1,x2,····,xn]的转置。</p></blockquote><p>即求取一组x，使得目标函数f(x)为最小，且满足约束条件G(x)≤0。记号s.t. 是英文subject to的缩写，表示x要满足后面的约束条件。 约束条件可以进一步细化为：线性不等式约束、线性等式约束、非线性不等 式约束、非线性等式约束以及x的下界和上界。</p><p>求有约束条件下最小值的函数为：</p><p><font color="purple">[xmin,fmin]=fmincon(filename,x0,A,b,Aeq,beq,Lbnd,Ubnd,NonF,option)</font></p><blockquote><p>其中，xmin、fmin、filename、x0和option的含义与求最小值函数相同。其余 参数为约束条件，包括线性不等式约束、线性等式约束、x的下界和上界以及定 义非线性约束的函数。如果某个约束不存在，则用空矩阵来表示。</p></blockquote><p>ex:求解有约束最优化问题。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200827104337.png" alt="image-20200827104127644"></p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">f=@(x) <span class="number">0.4</span>*x(<span class="number">2</span>)+x(<span class="number">1</span>)^<span class="number">2</span>+x(<span class="number">2</span>)^<span class="number">2</span>-x(<span class="number">1</span>)*x(<span class="number">2</span>)+<span class="number">1</span>/<span class="number">30</span>*x(<span class="number">1</span>)^<span class="number">3</span>;</span><br><span class="line">x0=[<span class="number">0.5</span>;<span class="number">0.5</span>];</span><br><span class="line">A=[<span class="number">-1</span>,<span class="number">-0.5</span>;<span class="number">-0.5</span>,<span class="number">-1</span>];</span><br><span class="line">b=[<span class="number">-0.4</span>;<span class="number">-0.5</span>];</span><br><span class="line">lb=[<span class="number">0</span>;<span class="number">0</span>];</span><br><span class="line">option=optimset(<span class="string">&#x27;Display&#x27;</span>,<span class="string">&#x27;off&#x27;</span>);</span><br><span class="line">[xmin,fmin]=fmincon(f,x0,A,b,[],[],lb,[],[],option)</span><br><span class="line"></span><br><span class="line">xmin =</span><br><span class="line"></span><br><span class="line">    <span class="number">0.3396</span></span><br><span class="line">    <span class="number">0.3302</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">fmin =</span><br><span class="line"></span><br><span class="line">    <span class="number">0.2456</span></span><br></pre></td></tr></table></figure><h4 id="最小值问题应用实例"><a class="header-anchor" href="#最小值问题应用实例">¶</a>最小值问题应用实例</h4><p>ex:某公司有A、B、C、D、E 5个工厂，分别位于xy平面上的坐标点（10， 10），（30，50），（16.667，29），（0.555，29.888）和（22.2221， 49.988）处。设两点之间的距离表示在工厂之间开车的距离，以公里为单位。 公司计划在平面上某点处建造一座仓库，预期平均每周到A、B、C、D、E工厂 分别有10、18、20、14和25次送货。理想情况下，要使每周送货车的里程最 小，仓库应建在xy平面的什么位置？</p><p>假设仓库所选点的坐标为（x，y），则总里程表达式为：</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200827104326.png" alt="image-20200827104325707"></p><p>所以原问题即求无约束条件下d(x,y)的最小值。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">a=[<span class="number">10</span>,<span class="number">30</span>,<span class="number">16.667</span>,<span class="number">0.555</span>,<span class="number">22.2221</span>];</span><br><span class="line">b=[<span class="number">10</span>,<span class="number">50</span>,<span class="number">29</span>,<span class="number">29.888</span>,<span class="number">49.988</span>];</span><br><span class="line">c=[<span class="number">10</span>,<span class="number">18</span>,<span class="number">20</span>,<span class="number">14</span>,<span class="number">25</span>];</span><br><span class="line">f=@(x) sum(c.*<span class="built_in">sqrt</span>((x(<span class="number">1</span>)-a).^<span class="number">2</span>+(x(<span class="number">2</span>)-b).^<span class="number">2</span>));</span><br><span class="line">[xmin,fmin]=fminsearch(f,[<span class="number">15</span>,<span class="number">30</span>])</span><br><span class="line"></span><br><span class="line">xmin =</span><br><span class="line"></span><br><span class="line">   <span class="number">19.8143</span>   <span class="number">41.1247</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">fmin =</span><br><span class="line"></span><br><span class="line">   <span class="number">1.3618e+03</span></span><br></pre></td></tr></table></figure><p>ex:在上例中，如果由于地域的限制，仓库必须建在曲线y=x²上，则它应该建在何处？</p><p>非线性约束的函数文件funny.m：</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="params">[c,h]</span>=<span class="title">funny</span><span class="params">(x)</span></span></span><br><span class="line">c=[];</span><br><span class="line">h=x(<span class="number">2</span>)-x(<span class="number">1</span>)^<span class="number">2</span>;</span><br></pre></td></tr></table></figure><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; a=[<span class="number">10</span>,<span class="number">30</span>,<span class="number">16.667</span>,<span class="number">0.555</span>,<span class="number">22.2221</span>];</span><br><span class="line">&gt;&gt; b=[<span class="number">10</span>,<span class="number">50</span>,<span class="number">29</span>,<span class="number">29.888</span>,<span class="number">49.988</span>];</span><br><span class="line">&gt;&gt; c=[<span class="number">10</span>,<span class="number">18</span>,<span class="number">20</span>,<span class="number">14</span>,<span class="number">25</span>];</span><br><span class="line">&gt;&gt; f=@(x) sum(c.*<span class="built_in">sqrt</span>((x(<span class="number">1</span>)-a).^<span class="number">2</span>+(x(<span class="number">2</span>)-b).^<span class="number">2</span>));</span><br><span class="line">&gt;&gt; [xmin,fmin]=fmincon(f,[<span class="number">15</span>,<span class="number">30</span>],[],[],[],[],[],[],<span class="string">&#x27;funny&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">xmin =</span><br><span class="line"></span><br><span class="line">    <span class="number">5.9363</span>   <span class="number">35.2402</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">fmin =</span><br><span class="line"></span><br><span class="line">   <span class="number">1.6676e+03</span></span><br></pre></td></tr></table></figure><h2 id="常微分方程数值求解"><a class="header-anchor" href="#常微分方程数值求解">¶</a>常微分方程数值求解</h2><ul><li>常微分方程数值求解的一般概念</li><li>常微分方程数值求解函数</li><li>刚性问题</li></ul><h3 id="常微分方程数值求解的一般概念"><a class="header-anchor" href="#常微分方程数值求解的一般概念">¶</a>常微分方程数值求解的一般概念</h3><p>求解常微分方程初值问题就是寻找函数y(t)使之满足如下方程：</p><p><font color="purple">y’=f(t,y)，t0≤t≤b</font></p><p><font color="purple">y(t0)=y0</font></p><p>所谓其数值解法，就是求y(t)在离散结点tn处的函数近似值yn的方法，yn≈y(xn)。 这些近似值称为常微分方程初值问题的数值解。相邻两个结点之间的距离称为步长。</p><ul><li>单步法:在计算y(n+1)时只用到前一步的y‰因此在有了初值之后就可以逐步往下计算，其代表是龙格-库塔（Runge-Kutta）法。</li><li>多步法:在计算y,时，除了用到前一步的值y,之外,还要用到y,p(p=1，2，…，k,k&gt;0）的值,即前面的k步。其代表就是亚当斯(Adams)法。</li></ul><h3 id="常微分方程数值求解函数"><a class="header-anchor" href="#常微分方程数值求解函数">¶</a>常微分方程数值求解函数</h3><p>MATLAB提供了多个求常微分方程初值问题数值解的函数，一般调用格式为：</p><p><font color="purple">[t,y]=solver(filename,tspan,y0,option)</font></p><blockquote><p>其中，t和y分别给出时间向量和相应的数值解。solver为求常微分方程数值解 的函数。filename是定义f(t，y)的函数名，该函数必须返回一个列向量。 tspan形式为[t0，tf]，表示求解区间。y0是初始状态向量。Option是可选参数， 用于设置求解属性，常用的属性包括相对误差值RelTol(默认值是10^-3)和绝对误 差值AbsTol(默认值是10^-6)。</p></blockquote><p>常微分方程数值求解函数的统一命名格式：</p><p><font color="purple">odennxx</font></p><ul><li>ode是Ordinary Differential Equation的缩写，是常微分方程的意思。</li><li>nn是数字，代表所用方法的阶数。例如，ode23采用2阶 龙格-库塔(Runge-Kutta)算法，用3阶公式做误差估计来调节步长，具有低等精度。ode45采用4阶龙格-库塔算法，用5阶公式做误差估计来调节步长，具有中等精度。</li><li>xx是字母，用于标注方法的专门特征。例如，ode15s、 ode23s中的 “s&quot;代表(Stiff) ，表示函数适用于刚性方程。</li></ul><p>求常微分方程数值解的函数</p><table><thead><tr><th>求解函数</th><th>采用方法</th><th>适用场合</th></tr></thead><tbody><tr><td>ode23</td><td>2阶或3阶Runge-Kutta算法，低精度</td><td>非刚性</td></tr><tr><td>ode45</td><td>4阶或5阶Runge-Kutta算法，中精度</td><td>非刚性</td></tr><tr><td>ode113</td><td>Adams算法，精度可到<code>10^-3～10^-6</code></td><td>非刚性，计算时间比ode45短</td></tr><tr><td>ode23t</td><td>梯形算法</td><td>适度刚性</td></tr><tr><td>ode15s</td><td>Gear’s反向数值微分算法，中精度</td><td>刚性</td></tr><tr><td>ode23s</td><td>2阶Rosebrock算法，低精度</td><td>刚性，当精度较低时，计算时间比ode15s短</td></tr><tr><td>ode23tb</td><td>梯形算法，低精度</td><td>刚性，当精度较低时，计算时间比ode15s短</td></tr></tbody></table><p>ex1:求解微分方程初值问题，并与精确解<img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200827225523.png" alt="image-20200827225519670">进行比较。</p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200827225556.png" alt="image-20200827225555373" style="zoom:80%;" /><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">f=@(t,y) (y^<span class="number">2</span>-t<span class="number">-2</span>)/<span class="number">4</span>/(t+<span class="number">1</span>);</span><br><span class="line">[t,y]=ode23(f,[<span class="number">0</span>,<span class="number">10</span>],<span class="number">2</span>);</span><br><span class="line">y1=<span class="built_in">sqrt</span>(t+<span class="number">1</span>)+<span class="number">1</span>;</span><br><span class="line"><span class="built_in">plot</span>(t,y,<span class="string">&#x27;b:&#x27;</span>,t,y1,<span class="string">&#x27;r&#x27;</span>);</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200827225651.png" alt="image-20200827225650118"></p><p>ex2:已知一个二阶线性系统的微分方程为：</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200827225726.png" alt="image-20200827225725350"></p><p>取a=2，绘制系统的时间响应曲线和相平面图。 令x2=x，x1=x’，则得到系统的状态方程：</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200827225745.png" alt="image-20200827225745024"></p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">f=@(t,x) [<span class="number">-2</span>,<span class="number">0</span>;<span class="number">0</span>,<span class="number">1</span>]*[x(<span class="number">2</span>);x(<span class="number">1</span>)];</span><br><span class="line">[t,x]=ode45(f,[<span class="number">0</span>,<span class="number">20</span>],[<span class="number">1</span>,<span class="number">0</span>]);</span><br><span class="line">subplot(<span class="number">2</span>,<span class="number">2</span>,<span class="number">1</span>);<span class="built_in">plot</span>(t,x(:,<span class="number">2</span>));</span><br><span class="line">subplot(<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>);<span class="built_in">plot</span>(x(:,<span class="number">2</span>),x(:,<span class="number">1</span>));</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200827225826.png" alt="image-20200827225824881"></p><h3 id="刚性问题"><a class="header-anchor" href="#刚性问题">¶</a>刚性问题</h3><p>有一类常微分方程，其解的分量有的变化很快，有的变化很慢，且相差悬殊， 这就是所谓的刚性问题(Stiff)。</p><p>对于刚性问题，数值解算法必须取很小步长才能获得满意的结果，导致计算 量会大大增加。解决刚性问题需要有专门方法。非刚性算法可以求解刚性问 题，只不过需要很长的计算时间。</p><p>ex3:假如点燃一个火柴，火焰球迅速增大直至某个临界体积，然后，维 持这一体积不变，原因是火焰球内部燃烧耗费的氧气和从球表面所获氧气 达到平衡。其简化模型如下：</p><p><font color="purple">y’=y^2-y ^3</font></p><p><font color="purple">y(0)=λ </font></p><p><font color="purple">0≤t≤2/λ</font></p><blockquote><p>其中，y(t)代表火焰球半径，初始半径是λ，它很小。分析λ的大小对方程求解过程的影响。</p></blockquote><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">lamda=<span class="number">0.01</span>;</span><br><span class="line">f=@(t,y) y^<span class="number">2</span>-y^<span class="number">3</span>;</span><br><span class="line">tic;[t,y]=ode45(f,[<span class="number">0</span>,<span class="number">2</span>/lamda],lamda);toc</span><br><span class="line"><span class="built_in">disp</span>([<span class="string">&#x27;ode45计算的点数&#x27;</span> num2str(<span class="built_in">length</span>(t))]);</span><br></pre></td></tr></table></figure><p><font color="purple">时间已过 2.946947 秒。</font></p><p><font color="purple">ode45计算的点数120565</font></p><p>这时计算时间明显加长，计算的点数剧增，表明这时常微分方程表现为刚性。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">lamda=<span class="number">1e-5</span>;</span><br><span class="line">f=@(t,y) y^<span class="number">2</span>-y^<span class="number">3</span>;</span><br><span class="line">tic;[t,y]=ode15s(f,[<span class="number">0</span>,<span class="number">2</span>/lamda],lamda);toc</span><br><span class="line"><span class="built_in">disp</span>([<span class="string">&#x27;ode15s计算的点数&#x27;</span> num2str(<span class="built_in">length</span>(t))]);</span><br></pre></td></tr></table></figure><p><font color="purple">时间已过 0.070974 秒。</font></p><p><font color="purple">ode15s计算的点数98</font></p><p>对于刚性问题，我们需要改变求解算法。我们选择以“s”结尾的函数，他们 专门用于求解刚性方程。计算时间大大缩短，计算的点数大大减少。</p><h2 id="常微分方程应用举例"><a class="header-anchor" href="#常微分方程应用举例">¶</a>常微分方程应用举例</h2><ul><li>Lotka-Volterra模型</li><li>Lotka-Volterra改进模型</li></ul><h3 id="Lotka-Volterra模型"><a class="header-anchor" href="#Lotka-Volterra模型">¶</a>Lotka-Volterra模型</h3><p>一阶非线性微分方程组：</p><p>dr / dt = 2r − λrƒ，r(0) = r0</p><p>dƒ / dt = −ƒ + λrƒ，ƒ(0)= ƒ0</p><blockquote><p>其中，t为时间， 𝐫 (𝒕) 为兔子数量，ƒ (𝒕) 为狐狸数量，𝝀为一个正常数。该系统解具有周 期性，其周期取决于初始条件。也就是说，对于任意数量的𝐫 (𝟎) 和ƒ (𝟎) ，总存在一个时间 𝐭 = 𝒕𝒑，使这两个种群的数量回归初始值。</p></blockquote><p>① 在𝒓𝟎 = 𝟑𝟎𝟎、ƒ𝟎 = 𝟏𝟓𝟎、𝝀 = 𝟎. 𝟎𝟏的条件下，求该系统的解，结果会发现𝒕𝒑接 近5。进一步绘制𝐫(𝐭)和ƒ(t)函数的曲线，以及以𝐫和ƒ为坐标轴画相平面图。</p><p>② 在𝒓𝟎 = 𝟏𝟓、ƒ𝟎 = 𝟐𝟐、𝝀 = 𝟎. 𝟎𝟏时求解并绘制图形，发现会发现𝒕𝒑接近6.62。</p><p>③ 在𝒓𝟎 = 𝟏𝟎𝟐、ƒ𝟎 = 𝟏𝟗𝟖、𝝀 = 𝟎. 𝟎𝟏时求解并绘制图形，并确定周期𝒕𝒑。</p><p>④ 点（𝒓𝟎，ƒ𝟎）=（𝟏 𝝀，𝟐 𝝀）是一个稳定平衡点。若以此为初值，那么种群数量 不发生变化。若初值接近此平衡点，那么数量不会发生大的变化。试作图验证。</p><h4 id="模型分析-v2"><a class="header-anchor" href="#模型分析-v2">¶</a>模型分析</h4><p>x1(t)—兔子在t时刻的数量 x2(t)—狐狸在t时刻的数量</p><p>r1—兔子独立生存时的增长率 r2—狐狸独自存在时的死亡率</p><p>λ 1—狐狸掠取兔子的能力 λ 2—兔子对狐狸的供养能力</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200829153627.png" alt="image-20200829152315097"></p><p>这里假设r1= 2，r2=1，λ 1= λ 2= 0.01，即系统模型如下：</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200829153623.png" alt="image-20200829152720561"></p><p>第①问：兔子数量初始值x1(0)=300，狐狸数量初始值x2(0)=150。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">rabbitFox=@(t,x) [x(<span class="number">1</span>)*(<span class="number">2</span><span class="number">-0.01</span>*x(<span class="number">2</span>));x(<span class="number">2</span>)*(<span class="number">-1</span>+<span class="number">0.01</span>*x(<span class="number">1</span>))];</span><br><span class="line">[t,x]=ode45(rabbitFox,[<span class="number">0</span>,<span class="number">30</span>],[<span class="number">300</span>,<span class="number">150</span>])</span><br><span class="line">subplot(<span class="number">1</span>,<span class="number">2</span>,<span class="number">1</span>);<span class="built_in">plot</span>(t,x(:,<span class="number">1</span>),<span class="string">&#x27;-&#x27;</span>,t,x(:,<span class="number">2</span>),<span class="string">&#x27;-*&#x27;</span>);</span><br><span class="line"><span class="built_in">legend</span>(<span class="string">&#x27;x1(t)&#x27;</span>,<span class="string">&#x27;x2(t)&#x27;</span>);</span><br><span class="line">xlabel(<span class="string">&#x27;时间&#x27;</span>);ylabel(<span class="string">&#x27;物种数量&#x27;</span>);</span><br><span class="line">grid on</span><br><span class="line">subplot(<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>);<span class="built_in">plot</span>(x(:,<span class="number">1</span>),x(:,<span class="number">2</span>))</span><br><span class="line">grid on </span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200829153618.png" alt="image-20200829153123062"></p><p>我们可以看到，兔子和狐狸两者相互制约，当狐狸逐渐增多时，兔子逐渐减少，当狐狸增 加到一定数量时，由于种群内部竞争激烈，又导致其数量减少，从而兔子天敌减少，进而 导致兔子数量增加，当兔子增加到一定数量时，种间竞争加剧，从而又导致兔子数量减少， 如此循环，相互制约发展。</p><p>第②问：兔子初始值x1(0)=15，狐狸初始值x2(0)=22。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200829153609.png" alt="image-20200829153355658"></p><p>第③问：兔子初始值x1(0)=102，狐狸初始值x2(0)=198。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200829153604.png" alt="image-20200829153439155"></p><p>第④问：验证（1/λ ，2/λ ）是稳定平衡点。</p><ul><li>取λ =0.01， 所以稳定平衡点（1/λ ，2/λ ）即是（100，200），以此点作 为初值时，画出其图像。</li></ul><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">rabbitFox=@(t,x) [x(<span class="number">1</span>)*(<span class="number">2</span><span class="number">-0.01</span>*x(<span class="number">2</span>));...</span><br><span class="line"> x(<span class="number">2</span>)*(<span class="number">-1</span>+<span class="number">0.01</span>*x(<span class="number">1</span>))];</span><br><span class="line">[t,x]=ode45(rabbitFox,[<span class="number">0</span>,<span class="number">30</span>],[<span class="number">100</span>,<span class="number">200</span>]);</span><br><span class="line"><span class="built_in">plot</span>(t,x(:,<span class="number">1</span>),<span class="string">&#x27;-o&#x27;</span>,t,x(:,<span class="number">2</span>),<span class="string">&#x27;-*&#x27;</span>);</span><br><span class="line"><span class="built_in">legend</span>(<span class="string">&#x27;x1(t)-兔子&#x27;</span>,<span class="string">&#x27;x2(t)-狐狸&#x27;</span>);</span><br><span class="line">xlabel(<span class="string">&#x27;时间&#x27;</span>);</span><br><span class="line">ylabel(<span class="string">&#x27;物种数量&#x27;</span>);</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200829153550.png" alt="image-20200829153548985"></p><ul><li>当将初始值变为（98,195）时，即向下十分接近平衡点，画出其图像。</li></ul><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">rabbitFox=@(t,x) [x(<span class="number">1</span>)*(<span class="number">2</span><span class="number">-0.01</span>*x(<span class="number">2</span>));...</span><br><span class="line"> x(<span class="number">2</span>)*(<span class="number">-1</span>+<span class="number">0.01</span>*x(<span class="number">1</span>))];</span><br><span class="line">[t,x]=ode45(rabbitFox,[<span class="number">0</span>,<span class="number">30</span>],[<span class="number">98</span>,<span class="number">195</span>]);</span><br><span class="line"><span class="built_in">plot</span>(t,x(:,<span class="number">1</span>),<span class="string">&#x27;-o&#x27;</span>,t,x(:,<span class="number">2</span>),<span class="string">&#x27;-*&#x27;</span>);</span><br><span class="line"><span class="built_in">legend</span>(<span class="string">&#x27;x1(t)-兔子&#x27;</span>,<span class="string">&#x27;x2(t)-狐狸&#x27;</span>);</span><br><span class="line">xlabel(<span class="string">&#x27;时间&#x27;</span>);</span><br><span class="line">ylabel(<span class="string">&#x27;物种数量&#x27;</span>);</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200829154248.png" alt="image-20200829153745712"></p><blockquote><p>两者图像没有交点，兔子和狐狸的数量分别以各自的平衡点进行周期性波动， 但是两者的数量变化不是很大。</p></blockquote><ul><li>当将初始值变为（70,150）时（向下偏离平衡点比较远时），画出其图像。</li></ul><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">rabbitFox=@(t,x) [x(<span class="number">1</span>)*(<span class="number">2</span><span class="number">-0.01</span>*x(<span class="number">2</span>));...</span><br><span class="line"> x(<span class="number">2</span>)*(<span class="number">-1</span>+<span class="number">0.01</span>*x(<span class="number">1</span>))];</span><br><span class="line">[t,x]=ode45(rabbitFox,[<span class="number">0</span>,<span class="number">30</span>],[<span class="number">70</span>,<span class="number">150</span>]);</span><br><span class="line"><span class="built_in">plot</span>(t,x(:,<span class="number">1</span>),<span class="string">&#x27;-o&#x27;</span>,t,x(:,<span class="number">2</span>),<span class="string">&#x27;-*&#x27;</span>);</span><br><span class="line"><span class="built_in">legend</span>(<span class="string">&#x27;x1(t)-兔子&#x27;</span>,<span class="string">&#x27;x2(t)-狐狸&#x27;</span>);</span><br><span class="line">xlabel(<span class="string">&#x27;时间&#x27;</span>);</span><br><span class="line">ylabel(<span class="string">&#x27;物种数量&#x27;</span>); </span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200829154243.png" alt="image-20200829153845856"></p><blockquote><p>可以发现兔子和狐狸的数量变化比较剧烈，但是依然成周期性变化。</p></blockquote><ul><li>当将初始值变为（900,1600）时（向上偏离平衡点十分远时），画出其图像。</li></ul><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">rabbitFox=@(t,x) [x(<span class="number">1</span>)*(<span class="number">2</span><span class="number">-0.01</span>*x(<span class="number">2</span>));...</span><br><span class="line"> x(<span class="number">2</span>)*(<span class="number">-1</span>+<span class="number">0.01</span>*x(<span class="number">1</span>))];</span><br><span class="line">[t,x]=ode45(rabbitFox,[<span class="number">0</span>,<span class="number">500</span>],[<span class="number">900</span>,<span class="number">1600</span>]);</span><br><span class="line"><span class="built_in">plot</span>(t,x(:,<span class="number">1</span>),t,x(:,<span class="number">2</span>));</span><br><span class="line"><span class="built_in">legend</span>(<span class="string">&#x27;x1(t)-兔子&#x27;</span>,<span class="string">&#x27;x2(t)-狐狸&#x27;</span>);</span><br><span class="line">xlabel(<span class="string">&#x27;时间&#x27;</span>);</span><br><span class="line">ylabel(<span class="string">&#x27;物种数量&#x27;</span>); </span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200829154237.png" alt="image-20200829153952626"></p><blockquote><p>可以发现，此时兔子和狐狸的数量变化相当的剧烈，但是依然存在周期。</p></blockquote><h3 id="Lotka-Volterra改进模型"><a class="header-anchor" href="#Lotka-Volterra改进模型">¶</a>Lotka-Volterra改进模型</h3><p>修改后的方程：</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200829154232.png" alt="image-20200829154048156"></p><blockquote><p>其中，t为时间； 𝐫 𝒕 为兔子数量；𝒇 𝒕 为狐狸数量；𝝀为一个正常数，R也是 一个正常数。方程在𝒓𝟎 = 𝟑𝟎𝟎、ƒ𝟎 = 𝟏𝟓𝟎初始条件下的50个时间单位上求解 并绘制图形。</p></blockquote><p>① 原模型下，狐狸数量和兔子数量的时间函数曲线。<br>② 改进模型下，狐狸数量和兔子数量的时间函数曲线。<br>③ 原模型下，狐狸数量相对兔子数量的关系曲线。<br>④ 改进模型下，狐狸数量相对兔子数量的关系曲线。</p><p>第①问：在原模型下，绘制狐狸和兔子数量的时间函数曲线。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">rabbitFox=@(t,x) [x(<span class="number">1</span>)*(<span class="number">2</span><span class="number">-0.01</span>*x(<span class="number">2</span>));...</span><br><span class="line"> x(<span class="number">2</span>)*(<span class="number">-1</span>+<span class="number">0.01</span>*x(<span class="number">1</span>))];</span><br><span class="line"><span class="built_in">plot</span>(t,x(:,<span class="number">1</span>),t,x(:,<span class="number">2</span>));</span><br><span class="line"><span class="built_in">legend</span>(<span class="string">&#x27;x1(t)-兔子&#x27;</span>,<span class="string">&#x27;x2(t)-狐狸&#x27;</span>);</span><br><span class="line">xlabel(<span class="string">&#x27;时间&#x27;</span>);</span><br><span class="line">ylabel(<span class="string">&#x27;物种数量&#x27;</span>);</span><br><span class="line">title(<span class="string">&#x27;原模型下，狐狸和兔子数量的函数曲线&#x27;</span>);</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200829154224.png" alt="image-20200829154223112"></p><p>第②问：在改进模型下，狐狸和兔子数量的时间函数曲线。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">rabbitFox=@(t,x) [<span class="number">2</span>*x(<span class="number">1</span>)*(<span class="number">1</span>-x(<span class="number">1</span>)/<span class="number">400</span><span class="number">-0.005</span>*x(<span class="number">2</span>));...</span><br><span class="line"> x(<span class="number">2</span>)*(<span class="number">-1</span>+<span class="number">0.01</span>*x(<span class="number">1</span>))];</span><br><span class="line">[t,x]=ode45(rabbitFox,[<span class="number">0</span>,<span class="number">50</span>],[<span class="number">300</span>,<span class="number">150</span>]);</span><br><span class="line"><span class="built_in">plot</span>(t,x(:,<span class="number">1</span>),t,x(:,<span class="number">2</span>));</span><br><span class="line"><span class="built_in">legend</span>(<span class="string">&#x27;x1(t)-兔子&#x27;</span>,<span class="string">&#x27;x2(t)-狐狸&#x27;</span>);</span><br><span class="line">xlabel(<span class="string">&#x27;时间&#x27;</span>);</span><br><span class="line">ylabel(<span class="string">&#x27;物种数量&#x27;</span>);</span><br><span class="line">title(<span class="string">&#x27;改进模型下，狐狸和兔子数量的函数曲线&#x27;</span>); </span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200829154340.png" alt="image-20200829154339459"></p><p>通过对比发现，原模型无论经历多长时间，狐狸和兔子的数量总是在自己的平 衡点之间波动；而改进以后的模型，虽然在先前一段时间有较大的波动，但随 着时间的推移，它们的波动越来越小，在经历足够长的时间后，狐狸和兔子的 数量分别达到稳定平衡，这更加接近自然界中的实际情况。</p><p>第③问：在原模型下，绘制狐狸数量相对于兔子数量的关系曲线。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">rabbitFox=@(t,x) [x(<span class="number">1</span>)*(<span class="number">2</span><span class="number">-0.01</span>*x(<span class="number">2</span>));...</span><br><span class="line"> x(<span class="number">2</span>)*(<span class="number">-1</span>+<span class="number">0.01</span>*x(<span class="number">1</span>))];</span><br><span class="line">[t,x]=ode45(rabbitFox,[<span class="number">0</span>,<span class="number">50</span>],[<span class="number">300</span>,<span class="number">150</span>]);</span><br><span class="line"><span class="built_in">plot</span>(x(:,<span class="number">1</span>),x(:,<span class="number">2</span>));</span><br><span class="line">xlabel(<span class="string">&#x27;兔子数量&#x27;</span>);</span><br><span class="line">ylabel(<span class="string">&#x27;狐狸数量&#x27;</span>);</span><br><span class="line">title(<span class="string">&#x27;原模型下，狐狸数量相对于兔子数量的关系曲线&#x27;</span>);</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200829154523.png" alt="image-20200829154431392"></p><p>第④问：在改进模型下，狐狸数量相对于兔子数量的关系曲线。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">rabbitFox=@(t,x) [<span class="number">2</span>*x(<span class="number">1</span>)*(<span class="number">1</span>-x(<span class="number">1</span>)/<span class="number">400</span><span class="number">-0.005</span>*x(<span class="number">2</span>));...</span><br><span class="line"> x(<span class="number">2</span>)*(<span class="number">-1</span>+<span class="number">0.01</span>*x(<span class="number">1</span>))];</span><br><span class="line">[t,x]=ode45(rabbitFox,[<span class="number">0</span>,<span class="number">50</span>],[<span class="number">300</span>,<span class="number">150</span>]);</span><br><span class="line"><span class="built_in">plot</span>(x(:,<span class="number">1</span>),x(:,<span class="number">2</span>));</span><br><span class="line">xlabel(<span class="string">&#x27;兔子数量&#x27;</span>);</span><br><span class="line">ylabel(<span class="string">&#x27;狐狸数量&#x27;</span>);</span><br><span class="line">title(<span class="string">&#x27;改进模型下，狐狸数量相对于兔子数量的关系曲线&#x27;</span>);</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200829154516.png" alt="image-20200829154515140"></p><p>模型的进一步改进:</p><ul><li>考虑狐狸的环境容纳量</li><li>考虑到兔子其他天敌和狐狸天敌的影响</li><li>考虑自然灾害、人为捕捉等因素</li></ul><h1>MATLAB符号计算</h1><h2 id="符号对象"><a class="header-anchor" href="#符号对象">¶</a>符号对象</h2><ul><li>符号对象的建立</li><li>符号对象的运算</li><li>符号矩阵</li></ul><h3 id="符号对象的建立"><a class="header-anchor" href="#符号对象的建立">¶</a>符号对象的建立</h3><h4 id="sym函数"><a class="header-anchor" href="#sym函数">¶</a>sym函数</h4><p>sym函数用于建立单个符号对象，其常用调用格式为：</p><p>符号对象名=sym(A)</p><p>将由A来建立符号对象。其中，A可以是一个数值常量、数值矩阵或数值表达式（<font color="red">不加单引号</font>），此时符号对象为一 个<font color="red">符号常量</font>；A也可以是一个变量名（<font color="red">加单引号</font>），这时 符号对象为一个<font color="red">符号变量</font>。</p><p>请对比以下程序：</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; t=sym(<span class="number">2</span>);</span><br><span class="line">&gt;&gt; t+<span class="number">1</span>/<span class="number">2</span></span><br><span class="line"> </span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"> </span><br><span class="line"><span class="number">5</span>/<span class="number">2</span></span><br><span class="line"> </span><br><span class="line">&gt;&gt; <span class="built_in">sin</span>(sym(<span class="built_in">pi</span>/<span class="number">3</span>))</span><br><span class="line"> </span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"> </span><br><span class="line"><span class="number">3</span>^(<span class="number">1</span>/<span class="number">2</span>)/<span class="number">2</span></span><br><span class="line"> </span><br><span class="line">&gt;&gt; <span class="built_in">sin</span>(<span class="built_in">pi</span>/<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">    <span class="number">0.8660</span></span><br></pre></td></tr></table></figure><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; a=<span class="number">5</span>;</span><br><span class="line">&gt;&gt; b=<span class="number">-8</span>;</span><br><span class="line">&gt;&gt; x=sym(<span class="string">&#x27;a&#x27;</span>);</span><br><span class="line">&gt;&gt; y=sym(<span class="string">&#x27;b&#x27;</span>);</span><br><span class="line">&gt;&gt; w=(a+b)*(a-b)</span><br><span class="line"></span><br><span class="line">w =</span><br><span class="line"></span><br><span class="line">   <span class="number">-39</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; s=(x+y)*(x-y)</span><br><span class="line"> </span><br><span class="line">s =</span><br><span class="line"> </span><br><span class="line">(a + b)*(a - b)</span><br><span class="line"> </span><br><span class="line">&gt;&gt; eval(s)</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">   <span class="number">-39</span></span><br></pre></td></tr></table></figure><p>由以上的例子我们可以看出：</p><ul><li>符号计算的结果是一个精确的数学表达式。</li><li>数值计算的结果是一个数值。</li></ul><h4 id="syms命令"><a class="header-anchor" href="#syms命令">¶</a>syms命令</h4><p>syms命令可以一次定义多个符号变量，其一般调用格式如下：</p><p>syms 符号变量名1 符号变量名2 … 符号变量名n</p><blockquote><p>其中，变量名不能加单引号，相互之间用空格隔开。</p></blockquote><p>例如，要同时定义四个符号变量a、b、c、d，则可以输入如下 命令：</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; syms a b c d</span><br></pre></td></tr></table></figure><h3 id="符号对象的运算"><a class="header-anchor" href="#符号对象的运算">¶</a>符号对象的运算</h3><h4 id="四则运算"><a class="header-anchor" href="#四则运算">¶</a>四则运算</h4><p>符号表达式的四则运算与数值运算一样，用+、-、*、/、^ 运 算符实现，其运算结果依然是一个符号表达式。例如：</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; syms x;</span><br><span class="line">&gt;&gt; f=<span class="number">2</span>*x^<span class="number">2</span>+<span class="number">3</span>*x<span class="number">-5</span>;</span><br><span class="line">&gt;&gt; g=x^<span class="number">2</span>-x+<span class="number">7</span>;</span><br><span class="line">&gt;&gt; f+g</span><br><span class="line"> </span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"> </span><br><span class="line"><span class="number">3</span>*x^<span class="number">2</span> + <span class="number">2</span>*x + <span class="number">2</span></span><br></pre></td></tr></table></figure><h4 id="关系运算-v2"><a class="header-anchor" href="#关系运算-v2">¶</a>关系运算</h4><ul><li>6种关系运算符:&lt;、&lt;=、&gt;、&gt;=、=、一=。</li><li>对应的6个函数: lt()、le()、gt()、ge()、eq()、ne()。</li></ul><p>若参与运算的是<font color="red">符号表达式</font>，其结果是一个<font color="red">符号关系表达式</font>；若参与运算的是<font color="red">符号矩阵</font>，其结果是<font color="red">由符号关系表达式组 成的矩阵</font>。</p><p>在进行符号对象的运算前，可用<font color="red">assume函数</font>对符号对象设置值域， 函数调用格式为：</p><p>assume(condition)</p><p>assume(expr,set)</p><blockquote><p>第一种格式指定变量满足条件condition，第二种格式指定表达式 expr属于集合set。</p></blockquote><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; syms x;</span><br><span class="line">&gt;&gt; assume(x&lt;<span class="number">0</span>);</span><br><span class="line">&gt;&gt; <span class="built_in">abs</span>(x)==x</span><br><span class="line"><span class="built_in">ans</span>=</span><br><span class="line">-x==x</span><br><span class="line"><span class="comment">%因为x&lt;0，所以abs(x)的值为-x。</span></span><br></pre></td></tr></table></figure><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; assume(x,<span class="string">&#x27;positive&#x27;</span>);</span><br><span class="line">&gt;&gt; <span class="built_in">abs</span>(x)==x</span><br><span class="line"><span class="built_in">ans</span>=</span><br><span class="line">x==x</span><br><span class="line"><span class="comment">%因为x为正数，所以abs(x)的值为x。</span></span><br></pre></td></tr></table></figure><h4 id="逻辑运算-v2"><a class="header-anchor" href="#逻辑运算-v2">¶</a>逻辑运算</h4><ul><li>3种逻辑运算符:&amp;（与）、│(或）和～（非）。</li><li>4个逻辑运算函数: and(a, b)、or(a,b)、not(a)和xor(a, b)。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200829171020.png" alt="image-20200829160458763"></p><h4 id="因式分解与展开运算"><a class="header-anchor" href="#因式分解与展开运算">¶</a>因式分解与展开运算</h4><p>MATLAB提供了符号表达式的因式分解与展开的函数，函数的调用格式为：</p><p>①factor(s):对符号表达式s分解因式。<br>②expand(s):对符号表达式s进行展开。<br>③collect(s):对符号表达式s合并同类项。<br>④collect(s,v):对符号表达式s按变量v合并同类项。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; syms a b;</span><br><span class="line">&gt;&gt; s=a^<span class="number">3</span>-b^<span class="number">3</span>;</span><br><span class="line">&gt;&gt; <span class="built_in">factor</span>(s)</span><br><span class="line"><span class="built_in">ans</span>=</span><br><span class="line">[ a-b, a^<span class="number">2</span> + a*b + b^<span class="number">2</span>]</span><br></pre></td></tr></table></figure><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; <span class="built_in">factor</span>(<span class="number">12</span>)</span><br><span class="line"><span class="built_in">ans</span>=</span><br><span class="line"><span class="number">2</span> <span class="number">2</span> <span class="number">3</span></span><br></pre></td></tr></table></figure><p>梅森素数的验证问题</p><p>所谓梅森数，是指形如2 p -1的一类整数，其中指数p是素数。将梅森数记为Mp。 如果梅森数是素数，就称为梅森素数。请验证M19 、 M23 、 M29 、 M31是否 为梅森素数。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; syms p;</span><br><span class="line">&gt;&gt; m=<span class="number">2</span>^p<span class="number">-1</span>;</span><br><span class="line">&gt;&gt; p=<span class="number">19</span>;</span><br><span class="line">&gt;&gt; m19=eval(m)</span><br><span class="line"></span><br><span class="line">m19 =</span><br><span class="line"></span><br><span class="line">      <span class="number">524287</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; <span class="built_in">factor</span>(m19)</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">      <span class="number">524287</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; p=<span class="number">23</span>;</span><br><span class="line">&gt;&gt; m23=eval(m)</span><br><span class="line"></span><br><span class="line">m23 =</span><br><span class="line"></span><br><span class="line">     <span class="number">8388607</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; <span class="built_in">factor</span>(m23)</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">          <span class="number">47</span>      <span class="number">178481</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; p=<span class="number">29</span>;</span><br><span class="line">&gt;&gt; m29=eval(m)</span><br><span class="line"></span><br><span class="line">m29 =</span><br><span class="line"></span><br><span class="line">   <span class="number">536870911</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; <span class="built_in">factor</span>(m29)</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">         <span class="number">233</span>        <span class="number">1103</span>        <span class="number">2089</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; p=<span class="number">31</span>;</span><br><span class="line">&gt;&gt; m31=eval(m)</span><br><span class="line"></span><br><span class="line">m31 =</span><br><span class="line"></span><br><span class="line">   <span class="number">2.1475e+09</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&gt;&gt; <span class="built_in">factor</span>(m31)</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">   <span class="number">2.1475e+09</span></span><br></pre></td></tr></table></figure><h4 id="其他运算"><a class="header-anchor" href="#其他运算">¶</a>其他运算</h4><p>① 提取有理分式的分子分母：[n,d]=numden(s)。<br>② 提取符号表达式的系数：c=coeffs(s,x)。<br>③ 符号表达式化简：simplify(s)。<br>④ 符号多项式与多项式系数向量之间的转换：</p><ul><li>符号多项式转换为多项式系数向量: p=sym2poly(s)。</li><li>多项式系数向量转换为符号多项式:s=poly2sym§。</li></ul><p>ex1:求方程ax^2+bx+c=0的根。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; syms a b c x;</span><br><span class="line">&gt;&gt; f=a*x^<span class="number">2</span>+b*x+c</span><br><span class="line"> </span><br><span class="line">f =</span><br><span class="line"> </span><br><span class="line">a*x^<span class="number">2</span> + b*x + c</span><br><span class="line"> </span><br><span class="line">&gt;&gt; g=coeffs(f,x)</span><br><span class="line"> </span><br><span class="line">g =</span><br><span class="line"> </span><br><span class="line">[ c, b, a]</span><br><span class="line"> </span><br><span class="line">&gt;&gt; g=g(<span class="keyword">end</span>:<span class="number">-1</span>:<span class="number">1</span>)</span><br><span class="line"> </span><br><span class="line">g =</span><br><span class="line"> </span><br><span class="line">[ a, b, c]</span><br><span class="line"> </span><br><span class="line">&gt;&gt; roots(g)</span><br><span class="line"> </span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"> </span><br><span class="line"> -(b + (b^<span class="number">2</span> - <span class="number">4</span>*a*c)^(<span class="number">1</span>/<span class="number">2</span>))/(<span class="number">2</span>*a)</span><br><span class="line"> -(b - (b^<span class="number">2</span> - <span class="number">4</span>*a*c)^(<span class="number">1</span>/<span class="number">2</span>))/(<span class="number">2</span>*a)</span><br></pre></td></tr></table></figure><h4 id="符号运算中变量的确定"><a class="header-anchor" href="#符号运算中变量的确定">¶</a>符号运算中变量的确定</h4><p>① 如果没有明确指定自变量，MATLAB将按以下原则确定主变量并对其进行相应运算:</p><ul><li>寻找除i、j之外，在字母顺序上最接近x的小写字母。</li><li>若表达式中有两个符号变量与x的距离相等，则ASCII码大者优先。</li></ul><p>② symvar()函数可以用于查找一个符号表达式中的符号变量，函数的调用格式为：</p><p>symvar(s,n)</p><p>函数返回符号表达式s中的n个符号变量。因此，可以用<font color="red">symvar(s,1)</font>查找表达式s的主变量。</p><h3 id="符号矩阵"><a class="header-anchor" href="#符号矩阵">¶</a>符号矩阵</h3><p>符号矩阵也是一种符号表达式，所以符号表达式运算都可以在矩阵意 义下进行。</p><div class="note success flat"><p>注意：这些函数作用于符号矩阵时，是分别作用于矩阵的每一个元素。</p></div><p>ex1：建立符号矩阵并化简。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200829170952.png" alt="image-20200829170951954"></p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; syms a b x y alp;</span><br><span class="line">&gt;&gt; m=[a^<span class="number">3</span>-b^<span class="number">3</span>,<span class="built_in">sin</span>(alp)^<span class="number">2</span>+<span class="built_in">cos</span>(alp)^<span class="number">2</span>;(<span class="number">15</span>*x*y<span class="number">-3</span>*x^<span class="number">2</span>)/(x<span class="number">-5</span>*y),<span class="number">78</span>]</span><br><span class="line">m =</span><br><span class="line">[ a^<span class="number">3</span> - b^<span class="number">3</span>,<span class="built_in">cos</span>(alp)^<span class="number">2</span> + <span class="built_in">sin</span>(alp)^<span class="number">2</span>]</span><br><span class="line">[(- <span class="number">3</span>*x^<span class="number">2</span> + <span class="number">15</span>*y*x)/(x - <span class="number">5</span>*y), <span class="number">78</span>]</span><br><span class="line">&gt;&gt; simplify(m)</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line">[ a^<span class="number">3</span> - b^<span class="number">3</span>, <span class="number">1</span>]</span><br><span class="line">[ <span class="number">-3</span>*x, <span class="number">78</span>]</span><br></pre></td></tr></table></figure><p>ex2:当λ取何值时，以下齐次线性方程组有非零解。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200829171105.png" alt="image-20200829171104371"></p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">syms lamda;</span><br><span class="line">A=[<span class="number">1</span>-lamda,<span class="number">-2</span>,<span class="number">4</span>;<span class="number">2</span>,<span class="number">3</span>-lamda,<span class="number">1</span>;<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>-lamda];</span><br><span class="line">D=det(A);</span><br><span class="line"><span class="built_in">factor</span>(D)</span><br><span class="line"></span><br><span class="line"><span class="comment">%程序运行结果为：</span></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line">[<span class="number">-1</span>, lamda, lamda - <span class="number">2</span>, lamda - <span class="number">3</span>]</span><br><span class="line"><span class="comment">%从而得知，当λ=0、λ=2或λ=3时，原方程组有非零解。</span></span><br></pre></td></tr></table></figure><blockquote><p>对于齐次线性方程组Ax=0，当 rank(A)&lt;n或|A|=0时，齐次线性方程组有非零解。</p></blockquote><h2 id="符号微积分"><a class="header-anchor" href="#符号微积分">¶</a>符号微积分</h2><ul><li>符号函数的极限</li><li>符号函数的导数</li><li>符号函数的积分</li></ul><h3 id="符号函数的极限"><a class="header-anchor" href="#符号函数的极限">¶</a>符号函数的极限</h3><ul><li>求符号函数极限的命令为limit，其调用格式为：</li></ul><p>limit(f,x,a)</p><p>即求函数f关于变量x在a点的极限。</p><p>limit函数的另一种功能是求单边极限，其调用格式为：</p><p>limit(f,x,a,‘right’)</p><p>limit(f,x,a,‘left’)</p><p>ex:求下列极限。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200829171745.png" alt="image-20200829171743840"></p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; syms a m x n;</span><br><span class="line">&gt;&gt; f=(x^(<span class="number">1</span>/m)-a^(<span class="number">1</span>/m))/(x-a);</span><br><span class="line">&gt;&gt; limit(f,x,a)</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line">a^(<span class="number">1</span>/m - <span class="number">1</span>)/m</span><br><span class="line">&gt;&gt; g=(<span class="number">1</span>+<span class="number">1</span>/n)^n;</span><br><span class="line">&gt;&gt; limit(g,n,<span class="built_in">inf</span>)</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"><span class="built_in">exp</span>(<span class="number">1</span>)</span><br><span class="line"><span class="comment">%即自然常数e。</span></span><br></pre></td></tr></table></figure><h3 id="符号函数的导数"><a class="header-anchor" href="#符号函数的导数">¶</a>符号函数的导数</h3><p>MATLAB中的求导函数为：</p><p>diff(f,x,n)</p><p>即求函数f关于变量x的n阶导数。参数x的用法同求极限函数limit，可以缺省，默认值与limit相同，n的默认值是1。</p><p>ex:求下列函数的导数。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200829171930.png" alt="image-20200829171929798"></p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="comment">%（1）</span></span><br><span class="line">&gt;&gt; syms x y z;</span><br><span class="line">&gt;&gt; f=<span class="built_in">sqrt</span>(<span class="number">1</span>+<span class="built_in">exp</span>(x));</span><br><span class="line">&gt;&gt; diff(f)</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"><span class="built_in">exp</span>(x)/(<span class="number">2</span>*(<span class="built_in">exp</span>(x) + <span class="number">1</span>)^(<span class="number">1</span>/<span class="number">2</span>)) </span><br><span class="line"><span class="comment">%(2)</span></span><br><span class="line">&gt;&gt; g=x*<span class="built_in">exp</span>(y)/y^<span class="number">2</span>;</span><br><span class="line">&gt;&gt; diff(g,x)</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"><span class="built_in">exp</span>(y)/y^<span class="number">2</span></span><br><span class="line">&gt;&gt; diff(g,y)</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line">(x*<span class="built_in">exp</span>(y))/y^<span class="number">2</span> - (<span class="number">2</span>*x*<span class="built_in">exp</span>(y))/y^<span class="number">3</span></span><br></pre></td></tr></table></figure><h3 id="符号函数的积分"><a class="header-anchor" href="#符号函数的积分">¶</a>符号函数的积分</h3><h4 id="不定积分"><a class="header-anchor" href="#不定积分">¶</a>不定积分</h4><p>在MATLAB中，求不定积分的函数是int()，其常用 的调用格式为：</p><p>int(f,x)</p><p>即求函数f对变量x的不定积分。</p><p>ex:求下列不定积分。</p><p><img src="../../../picture/PicGo/copypicture/image-20200829172130927.png" alt="image-20200829172130927"></p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; syms x t;</span><br><span class="line">&gt;&gt; f=(<span class="number">3</span>-x^<span class="number">2</span>)^<span class="number">3</span>;</span><br><span class="line">&gt;&gt; int(f)</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line">- x^<span class="number">7</span>/<span class="number">7</span> + (<span class="number">9</span>*x^<span class="number">5</span>)/<span class="number">5</span> - <span class="number">9</span>*x^<span class="number">3</span> + <span class="number">27</span>*x</span><br><span class="line">&gt;&gt; g=<span class="number">5</span>*x*t/(<span class="number">1</span>+x^<span class="number">2</span>);</span><br><span class="line">&gt;&gt; int(g,t)</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line">(<span class="number">5</span>*t^<span class="number">2</span>*x)/(<span class="number">2</span>*(x^<span class="number">2</span> + <span class="number">1</span>))</span><br></pre></td></tr></table></figure><h4 id="定积分"><a class="header-anchor" href="#定积分">¶</a>定积分</h4><p>在MATLAB中，定积分的计算也使用int()函数，但调用格式有区别：</p><p>int(f,x,a,b)</p><blockquote><p>其中，a、b分别表示定积分的下限和上限。</p></blockquote><ul><li>当函数f关于变量x在闭区间[a, b]可积时，函数返回一个定积分结果。</li><li>当a、b中有一个是inf时，函数返回一个广义积分。</li><li>当a、b中有一个符号表达式时，函数返回一个符号函数。</li></ul><p>ex:求下列定积分。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200829172312.png" alt="image-20200829172311087"></p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; syms x t;</span><br><span class="line">&gt;&gt; int(<span class="built_in">abs</span>(<span class="number">1</span>-x),<span class="number">1</span>,<span class="number">2</span>)</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"><span class="number">1</span>/<span class="number">2</span></span><br><span class="line">&gt;&gt; int(<span class="number">1</span>/(<span class="number">1</span>+x^<span class="number">2</span>),-<span class="built_in">inf</span>,<span class="built_in">inf</span>)</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"><span class="built_in">pi</span></span><br><span class="line">&gt;&gt; int(<span class="number">4</span>*x/t,t,<span class="number">2</span>,<span class="built_in">sin</span>(x))</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"><span class="number">4</span>*x*(<span class="built_in">log</span>(<span class="built_in">sin</span>(x)) - <span class="built_in">log</span>(<span class="number">2</span>))</span><br></pre></td></tr></table></figure><h2 id="级数"><a class="header-anchor" href="#级数">¶</a>级数</h2><ul><li>级数求和</li><li>泰勒级数</li></ul><h3 id="级数求和"><a class="header-anchor" href="#级数求和">¶</a>级数求和</h3><p>求无穷级数的和需要符号表达式求和函数symsum()，其调 用格式为：</p><p>symsum(s,v,n,m)</p><blockquote><p>其中，s表示一个级数的通项，是一个符号表达式。v是求 和变量，v省略时使用系统的默认变量。n和m是求和变量v 的初值和末值。</p></blockquote><p>ex:求下列级数之和。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200829172515.png" alt="image-20200829172514352"></p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; syms n;</span><br><span class="line">&gt;&gt; s1=symsum(n^<span class="number">2</span>,<span class="number">1</span>,<span class="number">100</span>)</span><br><span class="line">s1 =</span><br><span class="line"><span class="number">338350</span></span><br><span class="line">&gt;&gt; s2=symsum((<span class="number">-1</span>)^(n<span class="number">-1</span>)/n,<span class="number">1</span>,<span class="built_in">inf</span>)</span><br><span class="line">s2=</span><br><span class="line"><span class="built_in">log</span>(<span class="number">2</span>)</span><br><span class="line">&gt;&gt; s3=symsum((<span class="number">-1</span>)^(n<span class="number">-1</span>)/(<span class="number">2</span>*n<span class="number">-1</span>),n,<span class="number">1</span>,<span class="built_in">inf</span>)</span><br><span class="line">s3 =</span><br><span class="line">hypergeom([<span class="number">-1</span>/<span class="number">2</span>, <span class="number">1</span>], <span class="number">1</span>/<span class="number">2</span>, <span class="number">-1</span>)–<span class="number">1</span></span><br><span class="line">&gt;&gt; hypergeom([<span class="number">-1</span>/<span class="number">2</span>, <span class="number">1</span>], <span class="number">1</span>/<span class="number">2</span>, <span class="number">-1</span>) <span class="comment">%超几何函数</span></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"><span class="number">1.7854</span></span><br><span class="line">&gt;&gt; eval(s3)*<span class="number">4</span></span><br><span class="line"><span class="built_in">ans</span>=</span><br><span class="line"><span class="number">3.141592653589792</span></span><br><span class="line"><span class="comment">%即原级数之和为π/4。</span></span><br></pre></td></tr></table></figure><p>银行利率的计算问题</p><p>假设某人在银行存款50000元，年利率为4.5%，按复利计息。</p><p>①若半年期计息一次，请问一年后总金额是多少？</p><p>②若每季度计息一次，请问一年后总金额是多少？</p><p>③若每月计息一次，请问一年后总金额是多少？</p><p>④若计息时间无限短，即计息期数趋于无穷，则一年后总金额是多少？</p><p><font color='purple'>思考：期数无限多，总金额是否也会无限增长？</font></p><p><font color='purple'>问题分析：</font></p><p>假设存款（初始总金额）为p，年利率为r，计息期数为k。<br>第一期后总金额为<code>p*(1+r/k)</code>。<br>第二期后总金额为<code>p*(1+r/k)^2</code>。<br>第三期后总金额为<code>p*(1+r/k)^3</code>。<br>依此类推，第k期后总金额为<code>p*(1+r/k)^k</code>。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; syms k r;</span><br><span class="line">&gt;&gt; p2=symsum(<span class="number">50000</span>*(<span class="number">1</span>+<span class="number">0.045</span>/k)^k,k,<span class="number">2</span>,<span class="number">2</span>);</span><br><span class="line">&gt;&gt; eval(p2)</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"><span class="number">5.2275e+04</span></span><br><span class="line">&gt;&gt; p4=symsum(<span class="number">50000</span>*(<span class="number">1</span>+<span class="number">0.045</span>/k)^k,k,<span class="number">4</span>,<span class="number">4</span>);</span><br><span class="line">&gt;&gt; eval(p4)</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"><span class="number">5.2288e+04</span></span><br><span class="line">&gt;&gt; p12=symsum(<span class="number">50000</span>*(<span class="number">1</span>+<span class="number">0.045</span>/k)^k,k,<span class="number">12</span>,<span class="number">12</span>);</span><br><span class="line">&gt;&gt; eval(p12)</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"><span class="number">5.2297e+04</span></span><br><span class="line">&gt;&gt; limit((<span class="number">1</span>+r/k)^k,k,<span class="built_in">inf</span>)</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"><span class="built_in">exp</span>(r)</span><br><span class="line">&gt;&gt; <span class="number">50000</span>*<span class="built_in">exp</span>(<span class="number">0.045</span>)</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"><span class="number">5.2301e+04</span></span><br></pre></td></tr></table></figure><p>所以，即使是无数次计息，只要年利率确定， 总金额也不会无限增长，它收敛于pe^r 。</p><blockquote><p>注意：在符号计算中，因为小数都表示为有理分数的形式，随着计算次数的 增加，容易导致分子或分母出现极大整数从而无法计算的情况。</p></blockquote><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; syms n;</span><br><span class="line">&gt;&gt; s=symsum(<span class="number">1</span>/n^<span class="number">2</span>,n,<span class="number">1</span>,<span class="built_in">inf</span>)</span><br><span class="line">s =</span><br><span class="line"><span class="built_in">pi</span>^<span class="number">2</span>/<span class="number">6</span></span><br><span class="line">&gt;&gt; s1=symsum(<span class="number">1</span>/n^<span class="number">2</span>,n,<span class="number">1</span>,<span class="number">500</span>)</span><br><span class="line">s1 =</span><br><span class="line"><span class="number">40989667509417020364501093692502</span> …</span><br><span class="line">&gt;&gt; eval(s1)</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line">NaN</span><br></pre></td></tr></table></figure><h3 id="泰勒级数"><a class="header-anchor" href="#泰勒级数">¶</a>泰勒级数</h3><p>MATLAB提供了taylor()函数将函数展开为幂级数，其调用格式为：</p><p>taylor(f,v,a,Name,Value)</p><p>该函数将函数f按变量v在a点展开为泰勒级数，v的默认值 与diff函数相同，a的默认值是0。 Name和Value为选项设置，经常成对使用，前者为选项名，后者为该选项的值。</p><p>Name有3个可取字符串：</p><p>① ‘ExpansionPoint’：指定展开点，对应值可以是标量或向量。 未设置时，展开点为0。</p><p>② ‘Order’：指定截断参数，对应值为一个正整数。未设置时， 截断参数为6，即展开式的最高阶为5。</p><p>③ ‘OrderMode’：指定展开式采用绝对阶或相对阶，对应值为 ‘Absolute’ 或’Relative’。 未设置时取’Absolute’。</p><p>ex:求函数f在x=1处的5阶泰勒级数展开式。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200829180353.png" alt="image-20200829180352257"></p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; syms x;</span><br><span class="line">&gt;&gt; f=(<span class="number">1</span>+x+x^<span class="number">2</span>)/(<span class="number">1</span>-x+x^<span class="number">2</span>);</span><br><span class="line">&gt;&gt; taylor(f,x,<span class="number">1</span>,<span class="string">&#x27;Order&#x27;</span>,<span class="number">6</span>)</span><br><span class="line"> </span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"> </span><br><span class="line"><span class="number">2</span>*(x - <span class="number">1</span>)^<span class="number">3</span> - <span class="number">2</span>*(x - <span class="number">1</span>)^<span class="number">2</span> - <span class="number">2</span>*(x - <span class="number">1</span>)^<span class="number">5</span> + <span class="number">3</span></span><br><span class="line"> </span><br><span class="line">&gt;&gt; expand(<span class="built_in">ans</span>)</span><br><span class="line"> </span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"> </span><br><span class="line">- <span class="number">2</span>*x^<span class="number">5</span> + <span class="number">10</span>*x^<span class="number">4</span> - <span class="number">18</span>*x^<span class="number">3</span> + <span class="number">12</span>*x^<span class="number">2</span> + <span class="number">1</span></span><br></pre></td></tr></table></figure><p>复杂函数的计算方法问题</p><p>除了四则运算以外，计算机对其他复杂函数怎么计算？ 是否存在一种方法，使得计算机只需要通过四则运算， 就能计算其他复杂函数？</p><p><font color='purple'>泰勒级数展开就是一种非常好的解决方案。</font></p><p>ex:利用泰勒展开式计算三角函数的值。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; syms x;</span><br><span class="line">&gt;&gt; f=taylor(<span class="built_in">cos</span>(x),x,<span class="built_in">pi</span>)</span><br><span class="line"> </span><br><span class="line">f =</span><br><span class="line"> </span><br><span class="line">(x - <span class="built_in">pi</span>)^<span class="number">2</span>/<span class="number">2</span> - (x - <span class="built_in">pi</span>)^<span class="number">4</span>/<span class="number">24</span> - <span class="number">1</span></span><br><span class="line"> </span><br><span class="line">&gt;&gt; x=<span class="number">3</span>;</span><br><span class="line">&gt;&gt; eval(f)</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">   <span class="number">-0.9900</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; <span class="built_in">cos</span>(<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">   <span class="number">-0.9900</span></span><br></pre></td></tr></table></figure><blockquote><p>通过泰勒级数展开的方法，成功地将三角函数的计算转换成了四则运算。</p></blockquote><h2 id="符号方程求解"><a class="header-anchor" href="#符号方程求解">¶</a>符号方程求解</h2><ul><li>代数方程符号求解</li><li>常微分方程符号求解</li></ul><h3 id="代数方程符号求解"><a class="header-anchor" href="#代数方程符号求解">¶</a>代数方程符号求解</h3><p>在MATLAB中，求解用符号表达式表示的代数方程可由函数 solve()实现，其调用格式为：</p><p>① solve(s)：求解符号表达式s的代数方程，求解变量为 默认变量。<br>② solve(s,v)：求解符号表达式s的代数方程，求解变量 为v。<br>③ solve(s1,s2,…,sn,v1,v2,…,vn)：求解符号表达式 s1，s2，…，sn组成的代数方程组，求解变量分别为v1， v2，…，vn。</p><p>ex:解方程 <code>a*x^2+b*x+c=0</code>。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; syms x y a b c;</span><br><span class="line"><span class="comment">%①</span></span><br><span class="line">&gt;&gt; solve(a*x^<span class="number">2</span>+b*x+c==<span class="number">0</span>)</span><br><span class="line"> </span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"> </span><br><span class="line"> -(b + (b^<span class="number">2</span> - <span class="number">4</span>*a*c)^(<span class="number">1</span>/<span class="number">2</span>))/(<span class="number">2</span>*a)</span><br><span class="line"> -(b - (b^<span class="number">2</span> - <span class="number">4</span>*a*c)^(<span class="number">1</span>/<span class="number">2</span>))/(<span class="number">2</span>*a)</span><br><span class="line"> <span class="comment">%②</span></span><br><span class="line">&gt;&gt; f=a*x^<span class="number">2</span>+b*x+c==<span class="number">0</span>;</span><br><span class="line">&gt;&gt; solve(f)</span><br><span class="line"> </span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"> </span><br><span class="line"> -(b + (b^<span class="number">2</span> - <span class="number">4</span>*a*c)^(<span class="number">1</span>/<span class="number">2</span>))/(<span class="number">2</span>*a)</span><br><span class="line"> -(b - (b^<span class="number">2</span> - <span class="number">4</span>*a*c)^(<span class="number">1</span>/<span class="number">2</span>))/(<span class="number">2</span>*a)</span><br><span class="line"> <span class="comment">%③</span></span><br><span class="line">&gt;&gt; solve(a*x^<span class="number">2</span>+b*x+c)</span><br><span class="line"> </span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"> </span><br><span class="line"> -(b + (b^<span class="number">2</span> - <span class="number">4</span>*a*c)^(<span class="number">1</span>/<span class="number">2</span>))/(<span class="number">2</span>*a)</span><br><span class="line"> -(b - (b^<span class="number">2</span> - <span class="number">4</span>*a*c)^(<span class="number">1</span>/<span class="number">2</span>))/(<span class="number">2</span>*a)</span><br><span class="line"> <span class="comment">%④</span></span><br><span class="line">&gt;&gt; f=a*x^<span class="number">2</span>+b*x+c</span><br><span class="line"> </span><br><span class="line">f =</span><br><span class="line"> </span><br><span class="line">a*x^<span class="number">2</span> + b*x + c</span><br><span class="line"> </span><br><span class="line">&gt;&gt; solve(f)</span><br><span class="line"> </span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"> </span><br><span class="line"> -(b + (b^<span class="number">2</span> - <span class="number">4</span>*a*c)^(<span class="number">1</span>/<span class="number">2</span>))/(<span class="number">2</span>*a)</span><br><span class="line"> -(b - (b^<span class="number">2</span> - <span class="number">4</span>*a*c)^(<span class="number">1</span>/<span class="number">2</span>))/(<span class="number">2</span>*a)</span><br></pre></td></tr></table></figure><blockquote><p>注意：solve()函数求解方程时，所得到的结果不一定准确。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200829190446.png" alt="image-20200829190445337"></p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; syms x y;</span><br><span class="line">&gt;&gt; [u,v]=solve(x+y==<span class="number">98</span>,x^(<span class="number">1</span>/<span class="number">3</span>)+y^(<span class="number">1</span>/<span class="number">3</span>)==<span class="number">2</span>)</span><br><span class="line"> </span><br><span class="line">u =</span><br><span class="line"> </span><br><span class="line">Empty sym: <span class="number">0</span>-by<span class="number">-1</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">v =</span><br><span class="line"> </span><br><span class="line">Empty sym: <span class="number">0</span>-by<span class="number">-1</span></span><br></pre></td></tr></table></figure><p><font color='purple'>转化过后，再解方程：</font></p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; syms x y;</span><br><span class="line">&gt;&gt; u=solve(x+(<span class="number">2</span>-x^(<span class="number">1</span>/<span class="number">3</span>))^<span class="number">3</span>==<span class="number">98</span>)</span><br><span class="line"> </span><br><span class="line">u =</span><br><span class="line"> </span><br><span class="line"><span class="number">125</span></span><br><span class="line"> </span><br><span class="line">&gt;&gt; v=<span class="number">98</span>-u</span><br><span class="line"> </span><br><span class="line">v =</span><br><span class="line"> </span><br><span class="line"><span class="number">-27</span></span><br></pre></td></tr></table></figure><h3 id="常微分方程符号求解"><a class="header-anchor" href="#常微分方程符号求解">¶</a>常微分方程符号求解</h3><ul><li><p>在MATLAB中，用大写字母D表示导数。例如，Dy表示y’，D2y表示y’’， Dy(0)=5表示y’(0)=5。D3y+D2y+Dy-x+5=0表示微分方程y’’’+y’’+y’-x+5=0。</p></li><li><p>符号常微分方程求解可以通过函数dsolve()函数来实现，其调用格式为：</p><p>dsolve(e,c,v)</p><p>用于求解常微分方程e在初值条件c下的特解。参数v是方程中的自变量，省 略时按默认原则处理，若没有给出初值条件c，则求方程的通解。</p></li><li><p>dsolve在求常微分方程组时的调用格式为：</p><p>dsolve(e1,e2,…,en,c1,c2,…,cn,v)</p><p>用于求解常微分方程组e1, e2, …, en在初值条件c1, c2, …, cn下的特解，若不 给出初值条件，则求方程组的通解。v给出求解变量，如果没有指定自变量， 则采用默认自变量t。</p></li></ul><p>ex:求下列微分方程或方程组的解。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200829190847.png" alt="image-20200829190846323"></p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; syms x y t;</span><br><span class="line">&gt;&gt; y=dsolve(<span class="string">&#x27;Dy-(x^2+y^2)/x^2/2&#x27;</span>,x)</span><br><span class="line">y =</span><br><span class="line">x</span><br><span class="line">-x*(<span class="number">1</span>/(C5 + <span class="built_in">log</span>(x)/<span class="number">2</span>) - <span class="number">1</span>)</span><br><span class="line">&gt;&gt; [x,y]=dsolve(<span class="string">&#x27;Dx=4*x-2*y&#x27;</span>,<span class="string">&#x27;Dy=2*x-y&#x27;</span>,t)</span><br><span class="line">x =</span><br><span class="line">C8/<span class="number">2</span> + <span class="number">2</span>*C7*<span class="built_in">exp</span>(<span class="number">3</span>*t)</span><br><span class="line">y =</span><br><span class="line">C8 + C7*<span class="built_in">exp</span>(<span class="number">3</span>*t)</span><br></pre></td></tr></table></figure><h1>MATLAB图形用户界面设计</h1><h2 id="图形窗口与坐标轴"><a class="header-anchor" href="#图形窗口与坐标轴">¶</a>图形窗口与坐标轴</h2><ul><li>图形对象的句柄</li><li>图形对象的属性</li><li>图形窗口的操作</li><li>坐标轴的操作</li></ul><h3 id="图形对象句柄"><a class="header-anchor" href="#图形对象句柄">¶</a>图形对象句柄</h3><h4 id="句柄的概念"><a class="header-anchor" href="#句柄的概念">¶</a>句柄的概念</h4><p>在MATLAB中，每一个具体的图形都是由若干个不同的图形对象组成的。</p><p>在MATLAB中，用句柄来标识对象，通过句柄来访问相应对象的属性。</p><p>ex:绘制多个图形，并保存图形句柄。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">t=<span class="number">0</span>:<span class="built_in">pi</span>/<span class="number">10</span>:<span class="number">2</span>*<span class="built_in">pi</span>;</span><br><span class="line">h1=<span class="built_in">plot3</span>(t+<span class="built_in">pi</span>,t<span class="number">-2</span>*<span class="built_in">pi</span>,<span class="built_in">sin</span>(t),<span class="string">&#x27;r&#x27;</span>);</span><br><span class="line"><span class="built_in">hold</span> on;</span><br><span class="line">[x,y]=<span class="built_in">meshgrid</span>(t);</span><br><span class="line">z=<span class="built_in">sin</span>(x);</span><br><span class="line">h2=mesh(t<span class="number">-2</span>*<span class="built_in">pi</span>,t+<span class="built_in">pi</span>,z);</span><br><span class="line">[x3,y3,z3]=cylinder(t);</span><br><span class="line">h3=surf(x3,y3,z3);</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200829213442.png" alt="image-20200829213441217"></p><h4 id="访问图形对象"><a class="header-anchor" href="#访问图形对象">¶</a>访问图形对象</h4><p>访问图形对象是指获取或设置图形对象的属性。不同图形对象所具有的属性不同，但访问的方法是一样的。</p><p>对象句柄.属性名</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; x=<span class="number">0</span>:<span class="built_in">pi</span>/<span class="number">10</span>:<span class="number">2</span>*<span class="built_in">pi</span>;</span><br><span class="line">&gt;&gt; y=<span class="built_in">sin</span>(x);</span><br><span class="line">&gt;&gt; h0=<span class="built_in">plot</span>(x,y);</span><br><span class="line">&gt;&gt; h0.Color</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"><span class="number">0</span> <span class="number">0.4470</span> <span class="number">0.7410</span></span><br><span class="line">&gt;&gt; h0.LineWidth=<span class="number">2</span>;</span><br><span class="line">&gt;&gt; h0.LineStyle=<span class="string">&#x27;-.&#x27;</span>;</span><br></pre></td></tr></table></figure><h4 id="获取特定图形对象句柄的函数"><a class="header-anchor" href="#获取特定图形对象句柄的函数">¶</a>获取特定图形对象句柄的函数</h4><ul><li>gcf:获取当前图形窗口的句柄。</li><li>gca:获取当前坐标轴的句柄。</li><li>gco:获取最近被选中的图形对象的句柄。</li><li>findobj:按照指定的属性来获取图形对象的句柄。</li></ul><h3 id="图形对象属性"><a class="header-anchor" href="#图形对象属性">¶</a>图形对象属性</h3><h4 id="图形对象的常用公共属性"><a class="header-anchor" href="#图形对象的常用公共属性">¶</a>图形对象的常用公共属性</h4><ul><li>Children属性:该对象的所有子对象的句柄组成的一个向量。</li><li>Parent属性:该对象的父对象的句柄。</li><li>Type属性:对象的类型，这是一个只读属性。</li><li>Tag属性:用于给对象定义一个标识符。</li></ul><p>ex:分别在两个子图中绘制曲线和曲面。然后设置子图1的背景色为黄 色，曲线线条颜色为红色，设置子图2的背景色为青色。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">subplot(<span class="number">1</span>,<span class="number">2</span>,<span class="number">1</span>)</span><br><span class="line">h1=fplot(@(t)t.*<span class="built_in">sin</span>(t),@(t)t.*<span class="built_in">cos</span>(t),[<span class="number">0</span>,<span class="number">6</span>*<span class="built_in">pi</span>] );</span><br><span class="line">axis equal</span><br><span class="line">subplot(<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>)</span><br><span class="line">[x,y,z]=peaks(<span class="number">20</span>);</span><br><span class="line">h2=mesh(x,y,z);</span><br><span class="line">h10=h1.Parent;</span><br><span class="line">h10.Color=<span class="string">&#x27;y&#x27;</span>;</span><br><span class="line">h1.Color=<span class="string">&#x27;r&#x27;</span>;</span><br><span class="line">h2.Parent.Color=<span class="string">&#x27;cyan&#x27;</span>;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200829214455.png" alt="image-20200829214453961"></p><h4 id="图形对象的常用动态属性"><a class="header-anchor" href="#图形对象的常用动态属性">¶</a>图形对象的常用动态属性</h4><ul><li>KeyPressFcn属性:定义按下键盘按键事件的响应。</li><li>CreateFcn属性:定义创建图形对象时做出的响应。</li><li>DeleteFcn属性:定义取消图形对象时做出的响应。</li><li>WindowButtonDownFcn或ButtonDownFcn属性:定义鼠标键按下事件的响应。</li></ul><h3 id="图形窗口的操作"><a class="header-anchor" href="#图形窗口的操作">¶</a>图形窗口的操作</h3><h4 id="建立图形窗口对象"><a class="header-anchor" href="#建立图形窗口对象">¶</a>建立图形窗口对象</h4><p>MATLAB通过figure函数来创建窗口对象，其调用格式为：</p><ul><li>句柄变量=figure(属性1,属性值1,属性2,属性值2,…)</li></ul><blockquote><p>其中，属性用于设置图形窗口的特征。</p></blockquote><ul><li>句柄变量=figure</li></ul><blockquote><p>按MATLAB默认的属性值建立图形窗口。</p></blockquote><ul><li>figure(窗口句柄)</li></ul><blockquote><p>设定该句柄对应的窗口为当前窗口。</p></blockquote><h4 id="图形窗口属性"><a class="header-anchor" href="#图形窗口属性">¶</a>图形窗口属性</h4><ul><li><p>MenuBar属性:控制图形窗口是否具有菜单条，其取值为’none’或’figure’。</p></li><li><p>Name属性:指定图形窗口的标题。</p></li><li><p>NumberTitle属性:决定着在图形窗口的标题中是否以“Figure n:&quot;为标题前缀。</p></li><li><p>Color属性:设定图形窗口背景的颜色。</p></li><li><p>Position属性：定义图形窗口对象在屏幕上的位置和大小，值是一 个4元行向量：<br>[x，y，w，h]</p></li><li><p>Units属性：定义图形窗口使用的度量单位，将影响一切定义大小 的属性项。</p><ul><li>‘pixels’:指定度量单位为像素（默认值）。</li><li>‘inches’:指定度量单位为英寸。厘米、磅。</li><li>‘centimeters’:指定度量单位为厘米。</li><li>‘points’:指定度量单位为磅。</li><li>‘normalized’:指定用相对单位。</li></ul></li></ul><p>ex:建立一个图形窗口。该图形窗口没有菜单条，标题名称为“图 形窗口示例”，起始于屏幕左下角、宽度和高度分别为300像素点和 150像素点，背景颜色为青色，且当用户从键盘按下任意一个键时，然 后在窗口中单击鼠标左键，在鼠标指针所在位置将显示 “Hello,World!” 。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">hf=<span class="built_in">figure</span>;</span><br><span class="line">hf.Color=[<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>];</span><br><span class="line">hf.Position=[<span class="number">1</span>,<span class="number">1</span>,<span class="number">300</span>,<span class="number">150</span>];</span><br><span class="line">hf.Name=<span class="string">&#x27;图形窗口示例&#x27;</span>;</span><br><span class="line">hf.NumberTitle=<span class="string">&#x27;off&#x27;</span>;</span><br><span class="line">hf.MenuBar=<span class="string">&#x27;none&#x27;</span>;</span><br><span class="line">hf.ButtonDownFcn=<span class="string">&#x27;gtext(&#x27;&#x27;Hello,World!&#x27;&#x27;)&#x27;</span>;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200829215020.png" alt="image-20200829215019375"></p><h3 id="坐标轴对象的操作"><a class="header-anchor" href="#坐标轴对象的操作">¶</a>坐标轴对象的操作</h3><h4 id="建立坐标轴对象"><a class="header-anchor" href="#建立坐标轴对象">¶</a>建立坐标轴对象</h4><p>使用axes函数，其调用格式为：</p><ul><li>句柄变量=axes(属性1,属性值1,属性2,属性值2,…)</li></ul><blockquote><p>其中，属性用于设置坐标轴的外观和行为。</p></blockquote><ul><li>句柄变量=axes</li></ul><blockquote><p>按MATLAB默认的属性值在当前图形窗口创建坐标轴。</p></blockquote><ul><li>axes(坐标轴句柄)</li></ul><blockquote><p>设定该句柄代表的坐标轴为当前坐标轴。</p></blockquote><h4 id="坐标轴对象的属性"><a class="header-anchor" href="#坐标轴对象的属性">¶</a>坐标轴对象的属性</h4><ul><li>Position属性:定义坐标轴在图形窗口中的位置和大小。</li><li>Units属性:定义坐标轴使用的度量单位，默认值是’normalized’。</li><li>Box属性:决定坐标轴是否带有边框，可取值是’on’或’off’（默认值）。</li><li>GridLineStyle属性:用于定义网格线的类型，可取值是’:’(默认值）、’’、’-. ‘、’–’、 ‘none’。</li><li>Title属性:用于对坐标轴标题对象进行操作，取值是通过title函数建立的标题对象的句柄。</li><li>XLabel、YLabel、ZLabel属性：取值分别是通过xlabel、ylabel、 zlabel函数建立的标签对象的句柄。</li><li>XLim、YLim、ZLim 属性：分别定义各坐标轴的下限和上限，取值 是2元向量[Lmin, Lmax]，默认值为[0，1]。</li><li>XScale、YScale、ZScale 属性：定义各坐标轴的刻度类型。可取 值是’linear’ 、 ‘log’。</li><li>View属性：定义视点，取值是2元向量[az, el]，az定义视点的方位角，el定义视点的仰角。坐标轴默认视点的方位角为0°，仰角为 90°。</li></ul><p>ex:利用坐标轴对象实现图形窗口的分割。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">ha1=axes(<span class="string">&#x27;Position&#x27;</span>,[<span class="number">0.1</span>,<span class="number">0.1</span>,<span class="number">0.7</span>,<span class="number">0.7</span>]);</span><br><span class="line">contour(peaks(<span class="number">20</span>))</span><br><span class="line">ha1.Title=title(<span class="string">&#x27;等高线&#x27;</span>);</span><br><span class="line">ha1.YLabel=ylabel(<span class="string">&#x27;南北向&#x27;</span>);</span><br><span class="line">ha1.XLabel=xlabel(<span class="string">&#x27;东西向&#x27;</span>);</span><br><span class="line">ha2=axes(<span class="string">&#x27;Position&#x27;</span>,[<span class="number">0.65</span>,<span class="number">0.7</span>,<span class="number">0.28</span>,<span class="number">0.28</span>]);</span><br><span class="line">surf(peaks(<span class="number">20</span>))</span><br><span class="line">ha2.View=[<span class="number">-30</span>,<span class="number">45</span>];</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200829215536.png" alt="image-20200829215535465"></p><ul><li>ColorOrder属性：用于设置多条曲线的颜色顺序，是一个n×3矩阵， 每行用RGB三元组表示一种颜色，默认n为7。</li></ul><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; hc=gca;</span><br><span class="line">&gt;&gt; C=hc.ColorOrder</span><br><span class="line">C =</span><br><span class="line"><span class="number">0</span> <span class="number">0.4470</span> <span class="number">0.7410</span></span><br><span class="line"><span class="number">0.8500</span> <span class="number">0.3250</span> <span class="number">0.0980</span></span><br><span class="line"><span class="number">0.9290</span> <span class="number">0.6940</span> <span class="number">0.1250</span></span><br><span class="line"><span class="number">0.4940</span> <span class="number">0.1840</span> <span class="number">0.5560</span></span><br><span class="line"><span class="number">0.4660</span> <span class="number">0.6740</span> <span class="number">0.1880</span></span><br><span class="line"><span class="number">0.3010</span> <span class="number">0.7450</span> <span class="number">0.9330</span></span><br><span class="line"><span class="number">0.6350</span> <span class="number">0.0780</span> <span class="number">0.1840</span></span><br></pre></td></tr></table></figure><p>ex:定义包含4种颜色的ColorOrder属性，绘制6条曲线。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">x=[<span class="number">0</span>,<span class="number">0</span>];y=[<span class="number">0</span>,<span class="number">1</span>];</span><br><span class="line">ha=axes;</span><br><span class="line">ha.ColorOrder=[<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>; <span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>; <span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>; <span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>];</span><br><span class="line"><span class="built_in">hold</span> on</span><br><span class="line"><span class="built_in">plot</span>(x,y,x+<span class="number">0.5</span>,y,x+<span class="number">1</span>,y,x+<span class="number">1.5</span>,y,x+<span class="number">2</span>,y,x+<span class="number">2.5</span>,y);</span><br><span class="line">ha.XLim=[<span class="number">-0.2</span>,<span class="number">3</span>];</span><br><span class="line">ha.YLim=[<span class="number">-0.2</span>,<span class="number">1.2</span>];</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200829220222.png" alt="image-20200829215647610"></p><h2 id="曲线与曲面对象"><a class="header-anchor" href="#曲线与曲面对象">¶</a>曲线与曲面对象</h2><ul><li>曲线对象</li><li>曲面对象</li><li>光照处理</li><li>图形对象的反射特性</li></ul><h3 id="曲线对象"><a class="header-anchor" href="#曲线对象">¶</a>曲线对象</h3><h4 id="建立曲线对象"><a class="header-anchor" href="#建立曲线对象">¶</a>建立曲线对象</h4><p>line函数的调用格式为：</p><p>句柄变量=line(x, y, z, 属性1, 属性值1, 属性2, 属性值2, …)</p><blockquote><p>其中，x、y、z存储数据点的坐标，与plot、plot3函数含义相同。</p></blockquote><h4 id="曲线对象常用属性"><a class="header-anchor" href="#曲线对象常用属性">¶</a>曲线对象常用属性</h4><ul><li>Color属性：定义曲线的颜色，默认值为[0 0 0]。</li><li>LineStyle属性：定义线型，默认值为’-’。</li><li>LineWidth属性：定义线宽，默认值为0.5磅。</li><li>Marker属性：定义数据点标记符号，默认值为’none’。</li><li>MarkerSize属性：定义数据点标记符号的大小，默认值为6磅。</li><li>XData、YData、ZData属性：用于设置3个坐标轴的数据源。</li></ul><p>ex:利用曲线对象绘制五环图案。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">t=<span class="number">-0.1</span> : <span class="number">0.1</span> : <span class="number">2</span>*<span class="built_in">pi</span>;</span><br><span class="line">x=<span class="built_in">cos</span>(t); y=<span class="built_in">sin</span>(t);</span><br><span class="line">line(x,y,<span class="string">&#x27;Color&#x27;</span>,<span class="string">&#x27;b&#x27;</span>)</span><br><span class="line">line(x+<span class="number">1.2</span>,y<span class="number">-1</span>,<span class="string">&#x27;Color&#x27;</span>,<span class="string">&#x27;y&#x27;</span>)</span><br><span class="line">line(x+<span class="number">2.4</span>,y,<span class="string">&#x27;Color&#x27;</span>,<span class="string">&#x27;k&#x27;</span>)</span><br><span class="line">line(x+<span class="number">3.6</span>,y<span class="number">-1</span>,<span class="string">&#x27;Color&#x27;</span>,<span class="string">&#x27;g&#x27;</span>)</span><br><span class="line">line(x+<span class="number">4.8</span>,y,<span class="string">&#x27;Color&#x27;</span>,<span class="string">&#x27;r&#x27;</span>)</span><br><span class="line">ha=gca;</span><br><span class="line"><span class="keyword">for</span> n=<span class="number">1</span>:<span class="built_in">size</span>(ha.Children)</span><br><span class="line">ha.Children(n).LineWidth=<span class="number">5</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">ha.XLim=[<span class="number">-2</span>,<span class="number">7</span>];</span><br><span class="line">ha.YLim=[<span class="number">-3</span>,<span class="number">2</span>];</span><br><span class="line">axis equal</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200829220217.png" alt="image-20200829215946706"></p><h3 id="曲面对象"><a class="header-anchor" href="#曲面对象">¶</a>曲面对象</h3><h4 id="建立曲面对象"><a class="header-anchor" href="#建立曲面对象">¶</a>建立曲面对象</h4><p>建立曲面对象使用surface函数，其调用格式为：</p><p>句柄变量=surface(x,y,z,c,属性1,属性值1,属性2,属性值2,…)</p><blockquote><p>其中，x、y、z存储数据点的坐标，与mesh、surf函数含义相同；c用 于指定在不同高度下的曲面颜色。</p></blockquote><p>surf函数每调用一次，就会刷新坐标轴，清空原有图形，再绘制新的 图形。而surface函数生成的曲面则在已有图形上叠加显示。</p><p>利用surface函数建立的曲面对象，默认视点在图形正上方，即方位角 为0°，仰角为90°。</p><h4 id="与曲面形态有关的属性："><a class="header-anchor" href="#与曲面形态有关的属性：">¶</a>与曲面形态有关的属性：</h4><ul><li><p>FaceColor属性：定义曲面网格片的颜色，可取值：</p><ul><li>‘flat’：每一个网格片用单一颜色填充。</li><li>‘interp’：用渐变方式填充网格片。</li><li>‘none’：网格片无颜色。</li><li>‘texturemap’：用Cdata属性定义的颜色填充网格片。</li><li>RGB向量或代表颜色的字符</li></ul></li><li><p>EdgeColor属性：定义曲面网格线的颜色。</p></li></ul><p>ex:利用曲面对象绘制立体圆环，圆环方程为:</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200829220206.png" alt="image-20200829220205761"></p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">r=<span class="built_in">linspace</span>(<span class="number">0</span>,<span class="number">2</span>*<span class="built_in">pi</span>,<span class="number">60</span>);</span><br><span class="line">[u,v]=<span class="built_in">meshgrid</span>(r);</span><br><span class="line">x=(<span class="number">8</span>+<span class="number">3</span>*<span class="built_in">cos</span>(v)).*<span class="built_in">cos</span>(u);</span><br><span class="line">y=(<span class="number">8</span>+<span class="number">3</span>*<span class="built_in">cos</span>(v)).*<span class="built_in">sin</span>(u);</span><br><span class="line">z=<span class="number">3</span>*<span class="built_in">sin</span>(v);</span><br><span class="line">axes(<span class="string">&#x27;view&#x27;</span>,[<span class="number">-37.5</span>,<span class="number">30</span>])</span><br><span class="line">hs=surface(x,y,z);</span><br><span class="line">axis equal;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200829220340.png" alt="image-20200829220339527"></p><h3 id="光照处理"><a class="header-anchor" href="#光照处理">¶</a>光照处理</h3><h4 id="创建光源对象"><a class="header-anchor" href="#创建光源对象">¶</a>创建光源对象</h4><p>light函数的调用格式为：</p><p>对象句柄=light(属性1,属性值1,属性2,属性值2,…)</p><blockquote><p>其中，属性指定光源的特性。</p></blockquote><h4 id="光源对象的属性"><a class="header-anchor" href="#光源对象的属性">¶</a>光源对象的属性</h4><ul><li>Color属性:设置光的颜色。</li><li>Style属性:设置光源类型，其取值为’infinite’（默认值）或’local’.</li><li>Position属性:指定光源位置，值是一个3元向量。</li></ul><p>利用lighting命令可以设置光照模式，lighting命令格式为：</p><p>lighting 选项</p><blockquote><p>其中，选项可取值为</p><ul><li>flat:使得入射光均匀洒落在图形对象的每个面上（默认值）。</li><li>gouraud:先对顶点颜色插补，再对顶点勾画的面上颜色进行插补。</li><li>phong:对顶点处的法线插值，再计算各个像素的反光。</li><li>none:关闭所有光源。</li></ul></blockquote><p>ex:绘制光照处理后的圆环面并观察不同光照模式下的效果。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">r=<span class="built_in">linspace</span>(<span class="number">0</span>,<span class="number">2</span>*<span class="built_in">pi</span>,<span class="number">60</span>); [u,v]=<span class="built_in">meshgrid</span>(r);</span><br><span class="line">x=(<span class="number">8</span>+<span class="number">3</span>*<span class="built_in">cos</span>(v)).*<span class="built_in">cos</span>(u); y=(<span class="number">8</span>+<span class="number">3</span>*<span class="built_in">cos</span>(v)).*<span class="built_in">sin</span>(u); z=<span class="number">3</span>*<span class="built_in">sin</span>(v);</span><br><span class="line">axes(<span class="string">&#x27;Position&#x27;</span>,[<span class="number">0.05</span>,<span class="number">0.675</span>,<span class="number">1.0</span>,<span class="number">0.3</span>], <span class="string">&#x27;View&#x27;</span>,[<span class="number">-37.5</span>,<span class="number">30</span>]);</span><br><span class="line">hs1=surface(x,y,z); axis equal;</span><br><span class="line">hs1.EdgeColor=<span class="string">&#x27;none&#x27;</span>; hs1.FaceColor=<span class="string">&#x27;interp&#x27;</span>;</span><br><span class="line">axes(<span class="string">&#x27;Position&#x27;</span>,[<span class="number">0.05</span>,<span class="number">0.35</span>,<span class="number">1.0</span>,<span class="number">0.3</span>], <span class="string">&#x27;View&#x27;</span>,[<span class="number">-37.5</span>,<span class="number">30</span>]);</span><br><span class="line">hs2=surface(x,y,z); axis equal;</span><br><span class="line">hs2.EdgeColor=<span class="string">&#x27;none&#x27;</span>; hs2.FaceColor=<span class="string">&#x27;interp&#x27;</span>;</span><br><span class="line">light(<span class="string">&#x27;Position&#x27;</span>,[<span class="number">0</span>,<span class="number">0</span>,<span class="number">8</span>])</span><br><span class="line">lighting flat</span><br><span class="line">axes(<span class="string">&#x27;Position&#x27;</span>,[<span class="number">0.05</span>,<span class="number">0.025</span>,<span class="number">1.0</span>,<span class="number">0.3</span>], <span class="string">&#x27;View&#x27;</span>,[<span class="number">-37.5</span>,<span class="number">30</span>]);</span><br><span class="line">hs3=surface(x,y,z); axis equal;</span><br><span class="line">hs3.EdgeColor=<span class="string">&#x27;none&#x27;</span>; hs3.FaceColor=<span class="string">&#x27;interp&#x27;</span>;</span><br><span class="line">light(<span class="string">&#x27;Position&#x27;</span>,[<span class="number">0</span>,<span class="number">0</span>,<span class="number">8</span>])</span><br><span class="line">lighting phong</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200829220748.png" alt="image-20200829220746419"></p><h3 id="图形对象的反射特性"><a class="header-anchor" href="#图形对象的反射特性">¶</a>图形对象的反射特性</h3><ul><li>SpecularStrength属性：控制对象表面镜面反射的强度，属性值取 0~1之间的数，默认为0.9。</li><li>DiffuseStrength 属性：控制对象表面漫反射的强度，属性值取0~1 之间的数，默认为0.6。</li><li>AmbientStrength属性：确定环境光的强度，属性值取0~1之间的数 ，默认为0.3。  SpecularExponent属性：控制镜面反射指数，值大于等于1，大多设 置在[5 20]之间，默认为10。</li><li>BackFaceLighting属性：控制对象内表面和外表面的差别，取值为<ul><li>‘unlit’</li><li>‘lit’</li><li>‘reverselit’（默认值）</li></ul></li></ul><p>ex:绘制具有不同反射特性的圆环面并观察反射特性对图形效果的影响。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">r=<span class="built_in">linspace</span>(<span class="number">0</span>,<span class="number">2</span>*<span class="built_in">pi</span>,<span class="number">60</span>); [u,v]=<span class="built_in">meshgrid</span>(r);</span><br><span class="line">x=(<span class="number">8</span>+<span class="number">3</span>*<span class="built_in">cos</span>(v)).*<span class="built_in">cos</span>(u); y=(<span class="number">8</span>+<span class="number">3</span>*<span class="built_in">cos</span>(v)).*<span class="built_in">sin</span>(u); z=<span class="number">3</span>*<span class="built_in">sin</span>(v);</span><br><span class="line">axes(<span class="string">&#x27;Position&#x27;</span>,[<span class="number">0.05</span>,<span class="number">0.675</span>,<span class="number">1.0</span>,<span class="number">0.3</span>],<span class="string">&#x27;View&#x27;</span>,[<span class="number">-37.5</span>,<span class="number">30</span>]);</span><br><span class="line">hs1=surface(x,y,z);axis equal;</span><br><span class="line">hs1.EdgeColor=<span class="string">&#x27;none&#x27;</span>;hs1.FaceColor=<span class="string">&#x27;interp&#x27;</span>;</span><br><span class="line">light(<span class="string">&#x27;Position&#x27;</span>,[<span class="number">0</span>,<span class="number">0</span>,<span class="number">8</span>]) ;lighting phong</span><br><span class="line">hs1.SpecularStrength=<span class="number">0.1</span>;</span><br><span class="line">axes(<span class="string">&#x27;Position&#x27;</span>, [<span class="number">0.05</span>,<span class="number">0.35</span>,<span class="number">1.0</span>,<span class="number">0.3</span>],<span class="string">&#x27;View&#x27;</span>,[<span class="number">-37.5</span>,<span class="number">30</span>]);</span><br><span class="line">hs2=surface(x,y,z);axis equal;</span><br><span class="line">hs2.EdgeColor=<span class="string">&#x27;none&#x27;</span>;hs2.FaceColor=<span class="string">&#x27;interp&#x27;</span>;</span><br><span class="line">light(<span class="string">&#x27;Position&#x27;</span>,[<span class="number">0</span>,<span class="number">0</span>,<span class="number">8</span>]) ;lighting phong</span><br><span class="line">hs2.SpecularStrength=<span class="number">0.5</span>;</span><br><span class="line">axes(<span class="string">&#x27;Position&#x27;</span>, [<span class="number">0.05</span>,<span class="number">0.025</span>,<span class="number">1.0</span>,<span class="number">0.3</span>],<span class="string">&#x27;View&#x27;</span>,[<span class="number">-37.5</span>,<span class="number">30</span>]);</span><br><span class="line">hs3=surface(x,y,z);axis equal;</span><br><span class="line">hs3.EdgeColor=<span class="string">&#x27;none&#x27;</span>;hs3.FaceColor=<span class="string">&#x27;interp&#x27;</span>;</span><br><span class="line">light(<span class="string">&#x27;Position&#x27;</span>,[<span class="number">0</span>,<span class="number">0</span>,<span class="number">8</span>]) ;lighting phong ;</span><br><span class="line">hs3.SpecularStrength=<span class="number">1.0</span>;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200829222132.png" alt="image-20200829220934946"></p><h2 id="图形用户界面设计方法"><a class="header-anchor" href="#图形用户界面设计方法">¶</a>图形用户界面设计方法</h2><ul><li>图形用户界面的组成</li><li>控件对象及其操作</li><li>菜单对象及其操作</li></ul><h3 id="图形用户界面的组成"><a class="header-anchor" href="#图形用户界面的组成">¶</a>图形用户界面的组成</h3><ul><li>图形用户界面（Graphical User Interface，GUI）：用户与计算 机进行信息交流的窗口。</li><li>设计图形用户界面的方法<ul><li>调用建立用户界面控件的函数</li><li>使用MATLAB提供的GUIDE工具进行可视化设计</li></ul></li></ul><h3 id="控件对象及其操作"><a class="header-anchor" href="#控件对象及其操作">¶</a>控件对象及其操作</h3><h4 id="常用控件"><a class="header-anchor" href="#常用控件">¶</a>常用控件</h4><ul><li>输入和输出类控件：编辑框、静态文本、列表框、滑动条等。</li><li>实施确认、选择操作类控件：按钮、双位按钮、单选按钮、复选框等。</li></ul><h4 id="建立控件对象"><a class="header-anchor" href="#建立控件对象">¶</a>建立控件对象</h4><p>函数uicontrol用于建立控件对象，其调用格式为：</p><p>句柄变量=uicontrol(图形窗口句柄,属性1,属性值1,属性2,属性值2,…)</p><blockquote><p>其中，属性及其取值决定了控件的特征。若省略图形窗口句柄，默认 在当前图形窗口建立控件对象。</p></blockquote><h4 id="控件对象的基本控制属性"><a class="header-anchor" href="#控件对象的基本控制属性">¶</a>控件对象的基本控制属性</h4><ul><li>Style属性：定义控件对象的类型，例如‘pushbutton’表示按钮对 象，'edit’表示编辑框，等等。</li><li>String属性：定义控件对象的说明文字。</li><li>Tag属性：标识控件对象。</li><li>Enable属性：控制控件对象是否可用。</li><li>Position属性：定义控件对象的位置，其取值形式为[x，y，w，h]。</li><li>Callback属性：其属性值是描述命令的字符串或函数句柄，当选中控 件时，系统将自动执行字符串描述的命令或调用句柄所代表的函数， 实施相关操作。</li></ul><p>ex1:在图形窗口中建立三个按钮对象，当单击按钮时分别绘制正弦曲 线、显示或隐藏坐标轴的网格、清除坐标轴的图形。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">ha= axes(<span class="string">&#x27;Units&#x27;</span>,<span class="string">&#x27;pixels&#x27;</span>,<span class="string">&#x27;Position&#x27;</span>,[<span class="number">40</span>,<span class="number">40</span>,<span class="number">360</span>,<span class="number">360</span>]);</span><br><span class="line">ptgrid=uicontrol(<span class="string">&#x27;Style&#x27;</span>,<span class="string">&#x27;pushbutton&#x27;</span>,<span class="string">&#x27;String&#x27;</span>,<span class="string">&#x27;网格&#x27;</span>, <span class="string">&#x27;Position&#x27;</span>, [<span class="number">450</span>,<span class="number">120</span>,<span class="number">48</span>,<span class="number">20</span>],<span class="string">&#x27;Callback&#x27;</span>,<span class="string">&#x27;grid&#x27;</span> );</span><br><span class="line">btncla = uicontrol(<span class="string">&#x27;Style&#x27;</span>, <span class="string">&#x27;pushbutton&#x27;</span>,<span class="string">&#x27;String&#x27;</span>, <span class="string">&#x27;清除&#x27;</span>,<span class="string">&#x27;Position&#x27;</span>, [<span class="number">450</span>,<span class="number">80</span>,<span class="number">48</span>,<span class="number">20</span>],<span class="string">&#x27;Callback&#x27;</span>,<span class="string">&#x27;cla&#x27;</span> );</span><br><span class="line">btnplot = uicontrol(<span class="string">&#x27;Style&#x27;</span>, <span class="string">&#x27;pushbutton&#x27;</span>,<span class="string">&#x27;String&#x27;</span>,<span class="string">&#x27;绘图&#x27;</span>,<span class="string">&#x27;Position&#x27;</span>, [<span class="number">450</span>,<span class="number">160</span>,<span class="number">48</span>,<span class="number">20</span>]);</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200829222125.png" alt="image-20200829221851937"></p><p>回调函数定义对象怎样处理信息并响应某事件。回调函数的定义格式：</p><p>function 函数名(source, eventdata)</p><p>……</p><p>end</p><blockquote><p>其中，参数source是发生事件的源控件对象句柄，eventdata存储事件 数据。</p></blockquote><p>ex2:将上例的“绘图”按钮要实现的功能定义为回调函数plot_sin。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">plot_sin</span><span class="params">(source, callbackdata)</span></span></span><br><span class="line">t=-<span class="built_in">pi</span>:<span class="built_in">pi</span>/<span class="number">20</span>:<span class="built_in">pi</span>;</span><br><span class="line"><span class="built_in">plot</span>(t,<span class="built_in">sin</span>(t));</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">ha= axes(<span class="string">&#x27;Units&#x27;</span>,<span class="string">&#x27;pixels&#x27;</span>,<span class="string">&#x27;Position&#x27;</span>,[<span class="number">40</span>,<span class="number">40</span>,<span class="number">360</span>,<span class="number">360</span>]);</span><br><span class="line">ptgrid=uicontrol(<span class="string">&#x27;Style&#x27;</span>,<span class="string">&#x27;pushbutton&#x27;</span>,...</span><br><span class="line"><span class="string">&#x27;String&#x27;</span>,<span class="string">&#x27;网格&#x27;</span>, <span class="string">&#x27;Position&#x27;</span>, [<span class="number">450</span>,<span class="number">120</span>,<span class="number">48</span>,<span class="number">20</span>],...</span><br><span class="line"><span class="string">&#x27;Callback&#x27;</span>,<span class="string">&#x27;grid&#x27;</span> );</span><br><span class="line">btncla = uicontrol(<span class="string">&#x27;Style&#x27;</span>, <span class="string">&#x27;pushbutton&#x27;</span>, ...</span><br><span class="line"><span class="string">&#x27;String&#x27;</span>, <span class="string">&#x27;清除&#x27;</span>,<span class="string">&#x27;Position&#x27;</span>, [<span class="number">450</span>,<span class="number">80</span>,<span class="number">48</span>,<span class="number">20</span>],...</span><br><span class="line"><span class="string">&#x27;Callback&#x27;</span>,<span class="string">&#x27;cla&#x27;</span> );</span><br><span class="line">btnplot = uicontrol(<span class="string">&#x27;Style&#x27;</span>, <span class="string">&#x27;pushbutton&#x27;</span>, ...</span><br><span class="line"><span class="string">&#x27;String&#x27;</span>,<span class="string">&#x27;绘图&#x27;</span>,<span class="string">&#x27;Position&#x27;</span>, [<span class="number">450</span>,<span class="number">160</span>,<span class="number">48</span>,<span class="number">20</span>]);</span><br><span class="line"><span class="comment">%设置“绘图”按钮的Callback属性值是plot_sin函数句柄。</span></span><br><span class="line">btnplot.Callback=@plot_sin;</span><br></pre></td></tr></table></figure><h3 id="菜单对象"><a class="header-anchor" href="#菜单对象">¶</a>菜单对象</h3><h4 id="建立菜单对象"><a class="header-anchor" href="#建立菜单对象">¶</a>建立菜单对象</h4><p>uimenu函数用于创建、设置、修改菜单。</p><ul><li>建立一级菜单项的函数调用格式为：</li></ul><p>一级菜单项句柄=uimenu(图形窗口句柄,属性,属性值1,属性2,属性值2,…)</p><ul><li>建立子菜单项的函数调用格式为：</li></ul><p>子菜单项句柄=uimenu(上级菜单项句柄,属性1,属性值1,属性2,属性值2,…)</p><h4 id="菜单属性"><a class="header-anchor" href="#菜单属性">¶</a>菜单属性</h4><ul><li>Label属性：定义菜单项的名字。</li><li>Accelerator属性：定义菜单项的快捷键。</li><li>Checked属性：指示菜单项是否已选中。E</li><li>nable属性：控制菜单项的可选择性。</li><li>Separator属性：在菜单项上方添加一条分隔线。</li></ul><p>ex3:在ex1的界面中添加“图形选项”菜单项，其中包括一个二级菜 单项“线型”，其下又有3个子菜单项，分别为“实线”、“虚线”、 “双划线”。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">hopt=uimenu(gcf,<span class="string">&#x27;Label&#x27;</span>,<span class="string">&#x27;图形选项&#x27;</span>,<span class="string">&#x27;Accelerator&#x27;</span>,<span class="string">&#x27;L&#x27;</span>);</span><br><span class="line">hLStyle=uimenu(hopt,<span class="string">&#x27;Label&#x27;</span>,<span class="string">&#x27;线型&#x27;</span>,<span class="string">&#x27;Tag&#x27;</span>,<span class="string">&#x27;LStyle&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;Enable&#x27;</span>,<span class="string">&#x27;off&#x27;</span>);</span><br><span class="line">hL_Solid=uimenu(hLStyle,<span class="string">&#x27;Label&#x27;</span>,<span class="string">&#x27;实线&#x27;</span>,...</span><br><span class="line"><span class="string">&#x27;Tag&#x27;</span>,<span class="string">&#x27;Solid&#x27;</span>,<span class="string">&#x27;Callback&#x27;</span>, @MLine_Type);</span><br><span class="line">hL_Dotted=uimenu(hLStyle,<span class="string">&#x27;Label&#x27;</span>,<span class="string">&#x27;虚线&#x27;</span>,...</span><br><span class="line"><span class="string">&#x27;Tag&#x27;</span>,<span class="string">&#x27;Dotted&#x27;</span>,<span class="string">&#x27;Callback&#x27;</span>, @MLine_Type);</span><br><span class="line">hL_Dashed=uimenu(hLStyle,<span class="string">&#x27;Label&#x27;</span>,<span class="string">&#x27;双划线&#x27;</span>,...</span><br><span class="line"><span class="string">&#x27;Tag&#x27;</span>,<span class="string">&#x27;Dashed&#x27;</span>,<span class="string">&#x27;Callback&#x27;</span>, @MLine_Type);</span><br></pre></td></tr></table></figure><p>新建函数文件MLine_Type.m，内容如下：</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">MLine_Type</span><span class="params">(source,callbackdata)</span></span></span><br><span class="line">hline=findobj(<span class="string">&#x27;Type&#x27;</span>,<span class="string">&#x27;line&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span> strcmp(source.Tag,<span class="string">&#x27;Solid&#x27;</span> )==<span class="number">1</span></span><br><span class="line">hline.LineStyle=<span class="string">&#x27;-&#x27;</span>;</span><br><span class="line"><span class="keyword">elseif</span> strcmp(source.Tag,<span class="string">&#x27;Dotted&#x27;</span> )==<span class="number">1</span></span><br><span class="line">hline.LineStyle=<span class="string">&#x27;:&#x27;</span>;</span><br><span class="line"><span class="keyword">elseif</span> strcmp(source.Tag,<span class="string">&#x27;Dashed&#x27;</span> )==<span class="number">1</span></span><br><span class="line">hline.LineStyle=<span class="string">&#x27;--&#x27;</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>修改函数文件plot_sin.m，内容如下：</p><div class="note default flat"><p>在运行时报错，source, callbackdata，未使用参数，换成了~</p></div><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">plot_sin</span><span class="params">(~, ~)</span></span></span><br><span class="line">t=-<span class="built_in">pi</span>:<span class="built_in">pi</span>/<span class="number">20</span>:<span class="built_in">pi</span>;</span><br><span class="line"><span class="built_in">plot</span>(t,<span class="built_in">sin</span>(t));</span><br><span class="line">h1=findobj(<span class="string">&#x27;Tag&#x27;</span>,<span class="string">&#x27;LStyle&#x27;</span>);</span><br><span class="line">h1.Enable=<span class="string">&#x27;On&#x27;</span>; <span class="comment">%使得 “线型”菜单项可用</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>程序的运行结果。 首先运行ex1的程序生成图形界面，再 运行ex2程序，在界面中添加“图形选 项”菜单项，这时“线型”菜单项不 可用，单击“绘图”按钮绘制正弦函 数曲线后“线型”菜单项变为可用， 这时可以改变线型，例如双划线，这时界面如图所示。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200829223223.png" alt="image-20200829223222692"></p><h2 id="用户界面设计工具"><a class="header-anchor" href="#用户界面设计工具">¶</a>用户界面设计工具</h2><ul><li>图形界面设计窗口</li><li>图形用户界面设计工具</li><li>定义回调函数</li></ul><h3 id="图形用户界面设计窗口"><a class="header-anchor" href="#图形用户界面设计窗口">¶</a>图形用户界面设计窗口</h3><h4 id="打开GUIDE"><a class="header-anchor" href="#打开GUIDE">¶</a>打开GUIDE</h4><ul><li>在MATLAB命令行窗口输入guide命令。</li><li>在MATLAB主窗口中选择“主页”选项卡，单击工具栏的“新建”命令按钮，再选择“应用程序”下的GUIDE命令。</li></ul><h4 id="图形用户界面设计模板"><a class="header-anchor" href="#图形用户界面设计模板">¶</a>图形用户界面设计模板</h4><ul><li>Blank GUI (Default)</li><li>GUI with Uicontrols</li><li>GUI with Axes and Menu</li><li>Modal Question Dialog</li></ul><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200829224022.png" alt="image-20200829224020745"></p><h4 id="图形用户界面设计窗口-v2"><a class="header-anchor" href="#图形用户界面设计窗口-v2">¶</a>图形用户界面设计窗口</h4><p>图形用户界面设计窗口由菜单栏、 工具栏、组件选项板、界面设计区、状 态栏等部分组成。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200829224239.png" alt="image-20200829224237966"></p><p>ex:建立一个图形用户界面，该界面包括1个坐标轴，3个静态文本，3 个可编辑文本，2个按钮。还有1个按钮组，里面有两个单选按钮。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200829224645.png" alt="image-20200829224644316"></p><h3 id="图形用户界面设计工具"><a class="header-anchor" href="#图形用户界面设计工具">¶</a>图形用户界面设计工具</h3><ul><li>对齐对象工具</li><li>菜单编辑器</li><li>Tab键顺序编辑器</li><li>工具栏编辑器</li><li>代码编辑器</li><li>对象属性检查器</li><li>对象浏览器</li></ul><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200829225044.png" alt="image-20200829224931549"></p><h4 id="对象属性检查器"><a class="header-anchor" href="#对象属性检查器">¶</a>对象属性检查器</h4><p>对象属性检查器是用于检查/修改对象属性的工具。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200829225034.png" alt="image-20200829225033302"></p><p>ex2:利用属性检查器设置ex1界面对象上显示的文字和对象标识。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200829225513.png" alt="image-20200829225512519"></p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200829225854.png" alt="image-20200829225853500"></p><ul><li>设置控件的String属性</li></ul><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200829230320.png" alt="image-20200829230319345"></p><ul><li>设置控件的Tag 属性</li><li>设置按钮组的Title 属性</li></ul><h4 id="菜单编辑器"><a class="header-anchor" href="#菜单编辑器">¶</a>菜单编辑器</h4><ul><li><p>菜单编辑器构成</p><ul><li>工具栏</li><li>菜单列表</li><li>菜单属性面板</li></ul></li><li><p>图形窗口的MenuBar属性</p><ul><li>figure</li><li>none</li></ul></li></ul><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200829231354.png" alt="image-20200829231353261"></p><p>ex3:在ex2的菜单栏添加一个一级菜单项“绘图选项” ，而且这个菜 单只有在画有曲线时才是可用的。其下有6项，前3项定义线型，后3项 定义曲线颜色。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200829235227.png" alt="image-20200829235226564"></p><div class='tip error'><p>注意：出现错误，未解决<p></div><ul><li>添加自定义菜单<ul><li>新建菜单</li><li>新建菜单项</li><li>设置菜单项属性</li></ul></li></ul><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200829235454.png" alt="image-20200829235453021"></p><h4 id="对象浏览器"><a class="header-anchor" href="#对象浏览器">¶</a>对象浏览器</h4><p>对象浏览器用于查看图形对象和展示界面的组织架构。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200829235947.png" alt="image-20200829235543324"></p><h3 id="回调属性与回调函数"><a class="header-anchor" href="#回调属性与回调函数">¶</a>回调属性与回调函数</h3><h4 id="回调属性"><a class="header-anchor" href="#回调属性">¶</a>回调属性</h4><ul><li>Callback属性：按钮类控件和菜单项的单击事件的默认回调属性。</li><li>CreateFcn属性：定义创建图形对象的响应。</li><li>DeleteFcn属性：定义取消图形对象的响应。</li><li>ButtonDownFcn属性：定义单击鼠标键按下的响应。</li><li>KeyPressFcn属性：定义键盘键按下的响应。</li><li>SelectionChangeFcn属性：定义改变选项的响应。</li></ul><h4 id="回调函数框架"><a class="header-anchor" href="#回调函数框架">¶</a>回调函数框架</h4><p>function 对象标识_Callback(hObject, eventdata, handles)</p><blockquote><p>其中，hObject为发生事件的源控件，eventdata为事件数据，handles保 存图形界面中所有对象的句柄。</p></blockquote><h4 id="回调函数举例"><a class="header-anchor" href="#回调函数举例">¶</a>回调函数举例</h4><ul><li>“绘图”按钮的Callback函数</li></ul><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">pushbutton1_Callback</span><span class="params">(hObject, eventdata, handles)</span></span></span><br><span class="line">A=eval(handles.editfz.String);</span><br><span class="line">f=eval(handles.editpl.String)/<span class="number">50</span>;</span><br><span class="line">theta=eval(handles.editxj.String)/<span class="number">180</span>*<span class="built_in">pi</span>;</span><br><span class="line">x=<span class="built_in">linspace</span>(<span class="number">0</span>,<span class="number">2</span>*<span class="built_in">pi</span>,<span class="number">60</span>);</span><br><span class="line"><span class="keyword">if</span> handles.OpSin.Value==<span class="number">1</span></span><br><span class="line">y=A*<span class="built_in">sin</span>(f*x+theta);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">y=A*<span class="built_in">cos</span>(f*x+theta);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="built_in">plot</span>(x,y);</span><br><span class="line">handles.PStyle.Enable=<span class="string">&#x27;On&#x27;</span>;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200829235947.png" alt="image-20200829235812870"></p><ul><li>“实线”菜单项的回调函数</li></ul><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Solid_Callback</span><span class="params">(hObject, eventdata, handles)</span></span></span><br><span class="line">hline=findobj(<span class="string">&#x27;Type&#x27;</span>,<span class="string">&#x27;line&#x27;</span>);</span><br><span class="line">hline.LineStyle=<span class="string">&#x27;-&#x27;</span>;</span><br><span class="line">handles.Solid.Checked=<span class="string">&#x27;On&#x27;</span>;</span><br><span class="line">handles.Dotted.Checked=<span class="string">&#x27;Off&#x27;</span>;</span><br><span class="line">handles.Dashed.Checked=<span class="string">&#x27;Off&#x27;</span>;</span><br></pre></td></tr></table></figure><ul><li>“红”菜单项的回调函数</li></ul><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">r_Callback</span><span class="params">(hObject, eventdata, handles)</span></span></span><br><span class="line">hline=findobj(<span class="string">&#x27;Type&#x27;</span>,<span class="string">&#x27;line&#x27;</span>);</span><br><span class="line">hline.Color=<span class="string">&#x27;r&#x27;</span>;</span><br><span class="line">handles.r.Checked=<span class="string">&#x27;On&#x27;</span>;</span><br><span class="line">handles.g.Checked=<span class="string">&#x27;Off&#x27;</span>;</span><br><span class="line">handles.b.Checked=<span class="string">&#x27;Off&#x27;</span>;</span><br></pre></td></tr></table></figure><h4 id="运行图形用户界面的方法"><a class="header-anchor" href="#运行图形用户界面的方法">¶</a>运行图形用户界面的方法</h4><ul><li>在GUIDE窗口中单击工具栏上的“运行图形”命令按钮。</li><li>在GUIDE窗口中选择“工具”菜单中的“运行”命令。</li></ul><h1>Simulink系统仿真</h1><h2 id="Simulink仿真基础"><a class="header-anchor" href="#Simulink仿真基础">¶</a>Simulink仿真基础</h2><ul><li>Simulink的启动</li><li>系统仿真模型的创建</li><li>仿真参数的设置</li></ul><h3 id="Simulink的启动"><a class="header-anchor" href="#Simulink的启动">¶</a>Simulink的启动</h3><ul><li>在MATLAB主窗口选择“主页”选项卡，再单击“文件”命令组中的“新建”命令按钮，然后从下拉菜单中选择“Simulink Model”命令。</li><li>在MATLAB主窗口选择“主页”选项卡，再单击“SIMULINK”命令组中的 “Simulink”命令按钮。</li><li>在MATLAB的命令行窗口输入simulink命令。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200830105132.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200830104938.png" alt=""></p><ul><li>利用File→New命令，可以建立新的仿真模型；利用File→Open命令，可以打 开已经建立好的模型文件。</li><li>单击“Library Browser”按钮，将打开Simulink模块库浏览器窗口，此时， 可以通过鼠标将模块库中的模块拖动到模型编辑窗口，再将各个模块连接起来， 就构成了仿真模型。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200830105425.png" alt=""></p><h3 id="系统仿真模型的创建"><a class="header-anchor" href="#系统仿真模型的创建">¶</a>系统仿真模型的创建</h3><h4 id="Simulink-Library-Browser窗口"><a class="header-anchor" href="#Simulink-Library-Browser窗口">¶</a>Simulink Library Browser窗口</h4><p>“Simulink模块库浏览器”窗口 包含两个窗格，左侧的窗格以树 状列表的形式列出了所有模块库。 单击某个模块库，即在右侧窗格 中列出该模块库的子模块库；再 双击其中的子模块库图标，即列 出该子模块库的所有模块。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200830105739.png" alt=""></p><p>Simulink的模块库大体分为两类，一类是基本模块库,即Simulink 模块库，另一类是专业模块库,种类很多。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200830105912.png" alt=""></p><p>如果双击连续系统子模块库图标，模块库浏览器窗口左侧展开了 Simulink基本模块库的全部子模块库，并且目前选中连续系统子模块库， 右侧显示了连续系统子模块库的各个模块，可供连续系统建模使用。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200830110000.png" alt=""></p><h4 id="Simulink模块的操作"><a class="header-anchor" href="#Simulink模块的操作">¶</a>Simulink模块的操作</h4><ul><li><font color="red">模块的添加：</font>首先要在Simulink模块库浏览器窗口中找到该模块， 然后用鼠标将这个模块拖曳到模型编辑窗口中即可。</li><li><font color="red">模块的删除或复制：</font>需要先选定模块，再按删除键；或在模型编 辑窗口选择Edit菜单项中的Cut、Copy、Paste等剪贴板操作命令。</li><li><font color="red">两个模块的连接：</font>先将鼠标指针移动到一个模块的输出端，当鼠标 指针变成十字形光标时按住鼠标左键，移动鼠标指针到另一个模块 的输入端，当连接线由虚线变成实线时，释放鼠标左键就完成了两 个模块的连接。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200830110548.png" alt=""></p><ul><li><font color='red'>连线的分支：</font>在先连好一条线之后，把鼠标指针移到分支点的 位置，先按下Ctrl键，然后按住鼠标拖曳到目标模块的输入端， 释放鼠标和Ctrl键。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200830110502.png" alt=""></p><h4 id="模型存盘"><a class="header-anchor" href="#模型存盘">¶</a>模型存盘</h4><ul><li>在Simulink模型编辑窗口选择File→Save命令或Save as命令。</li><li>单击模型编辑窗口工具栏中的Save命令按钮。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200830111023.png" alt=""></p><h4 id="模块参数的设置"><a class="header-anchor" href="#模块参数的设置">¶</a>模块参数的设置</h4><ul><li>双击要设置的模块。</li><li>选择要设置的模块，再选择Diagram→Block Parameters命令。</li><li>右击要设置的模块，从快捷菜单中选择Block Parameters命令。</li></ul><p>模块参数设置对话框分为两部分， 上面一部分是模块功能说明，下面 一部分用来进行模块参数设置。例 如，正弦波模块参数对话框，用户 可以设置它的幅值、偏移量、频率、 相位、采样时间等参数。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200830111012.png" alt=""></p><h3 id="仿真参数的设置"><a class="header-anchor" href="#仿真参数的设置">¶</a>仿真参数的设置</h3><ul><li>选择Simulation→Model Configuration Paramerers命令。</li><li>二单击工具栏中的Model Configuration Paramerers命令按钮。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200830111236.png" alt=""></p><p>在仿真参数设置对话框中，仿真参数分为7类，Solver参数用于设置仿 真起始和终止时间，选择微分方程求解算法并为其规定参数，以及选择某些输出选项。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200830111940.png" alt=""></p><p>仿真算法的选择首先设定算法类别：固定步长或变步长算法，再选择具体算法。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200830112116.png" alt="(a)固定步长"></p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200830112237.png" alt="(b)变步长"></p><p>设置完仿真参数之后，单击模型编辑窗口工具栏中的Run按钮，或选择 Simulation菜单项中的Run命令，便可启动对当前模型的仿真。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200830162723.png" alt=""></p><p>利用Simulink仿真，分别显示曲线y=sint和y=cost，同时显示sint对 cost的变化曲线。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200830164041.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200830170647.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200830170702.png" alt=""></p><div class='tip success'><p>注意：scope默认是一个接口，可以在双击之后，左上角设置Number of input ports为2实现cosx可以相位延时pi/2。模块属性中直接设置，将Phase（rad）设置为-pi/2即可。        <p></div><p>Simulink系统仿真的步骤：</p><ul><li>建立系统仿真模型</li><li>设置仿真参数</li><li>启动仿真并分析仿真结果</li></ul><h2 id="子系统的创建与封装"><a class="header-anchor" href="#子系统的创建与封装">¶</a>子系统的创建与封装</h2><ul><li>子系统的创建</li><li>子系统的封装</li><li>子系统的条件执行</li></ul><h3 id="子系统的创建"><a class="header-anchor" href="#子系统的创建">¶</a>子系统的创建</h3><ul><li>通过Subsystem模块建立子系统</li><li>将已有的模块转换为子系统</li></ul><p>两者的区别是：前者先建立子系统，再为其添加功能模块；后者先 选择模块，再建立子系统。</p><p>下面以创建y=kx+b子系统为例，说明具体操作。</p><h4 id="通过Subsystem模块建立子系统"><a class="header-anchor" href="#通过Subsystem模块建立子系统">¶</a>通过Subsystem模块建立子系统</h4><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200830172151.png" alt=""></p><p>双击子系统模块打开子系统编辑窗口，窗口中已经自动添加了相互连接 的一个输入模块和输出模块，表示子系统的输入端口和输出端口。将要组合的模块插入到输入模块和输出模块中间，这里需要k和b两个常数模块，一个乘法模块和一个加法模块，将这些模块重新连接起来，一个子 系统就建好了。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200830172140.png" alt=""></p><p>启动仿真后查看示波器的曲线，其中蓝色曲线是正弦曲线，黄色曲线 是经过y=kx+b变换之后的曲线，这里在MATLAB命令行窗口事先给k赋3， b赋2，即黄色曲线代表y=3sint+2。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200830172938.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200830172959.png" alt=""></p><h4 id="通过已有的模块建立子系统"><a class="header-anchor" href="#通过已有的模块建立子系统">¶</a>通过已有的模块建立子系统</h4><p>建立的系统模型如图所示，选中系统模型中的所有模块，在模型编辑窗 口选择Diagram菜单项中的相关命令（Diagram →Subsystem &amp; Model Reference→Create Subsystem from Selection命令），或按Ctrl+G组 合键建立子系统，所选模块将被一个子系统模块取代，如果想要查看子 系统的内部结构又可以双击子系统模块。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200830173259.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200830173322.png" alt=""></p><h3 id="子系统的封装"><a class="header-anchor" href="#子系统的封装">¶</a>子系统的封装</h3><p>先选中所要封装的子系统，再在模型编辑窗口选择Diagram菜单项中的 Create Mask命令，或按Ctrl+M组合键，这时将出现封装编辑器（Mask Editor）对话框。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200830173723.png" alt=""></p><ul><li>第一个选项卡用于设置被封装模块的图标。</li><li>第二个选项卡用来设置子系统参数设置对话框。</li><li>第三个选项卡用于设置初始化命令。</li><li>第四个选项卡用于定义封装模 块的类型、描述和帮助文本。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200830173934.png" alt=""></p><p>第二个选项卡由3部分组成：左侧为控件工具箱（Controls），中间 区域显示对话框中的控件，右侧区域用于显示和修改控件的属性。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200830174050.png" alt=""></p><p>下面以y=kx+b子系统为例，说明子系统参数设置对话框的设置方法。 在第二个选项卡的左侧控件工具箱中，连续2次单击Edit按钮，为子系统的2个变量准备输入位置。在中间区域分别输入该控件的提示信息和控件名，最后单击OK按钮确认设置。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200830175026.png" alt="">子系统参数设置对话框设置完成后，双击子系统图标将出现其参数对话 框。例如，双击仿真模型中的y=kx+b子系统图标，则弹出如图所示的参 数对话框，允许用户输入参数k和b的值。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200830175020.png" alt=""></p><p>受控制信号控制的子系统称为条件执行子系统。在条件执行子系统 中，输出信号取决于输入信号和控制信号。</p><p>条件执行子系统：</p><ul><li>使能子系统</li><li>触发子系统</li><li>使能加触发子系统</li></ul><h3 id="子系统的条件执行"><a class="header-anchor" href="#子系统的条件执行">¶</a>子系统的条件执行</h3><h4 id="使能子系统"><a class="header-anchor" href="#使能子系统">¶</a>使能子系统</h4><p>使能子系统表示控制信号由负变正时子系统开始执行，直到控制信号 再次变为负时结束。控制信号可以是标量也可以是向量。如果控制信 号是标量，则当标量的值大于0时子系统开始执行。如果控制信号是 向量，则向量中任何一个元素大于0，子系统将执行。</p><p>使能子系统外观上有一个“使能”控制信号输入端口。“使能”是指当 且仅当“使能”输入信号为正时，该模块才接收输入端的信号。可直接 选择使能子系统模块来建立使能子系统，双击使能子系统模块，打开其 内部结构窗口。</p><p>也可以展开已有子系统，添加端口与子系统（Ports &amp; Subsystems）模块库中的使能（Enable）模块，将该子系统转换为使能子系统。</p><div class="justified-gallery"><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200830175739.png" alt=""></p>          </div><div class="justified-gallery"><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200830175733.png" alt=""></p>          </div><p>ex:利用使能子系统构成一个正弦半波整流器。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200830175723.png" alt=""></p><p>新建一个仿真模型，将正弦波（Sine Wave）、使能子系统（Enabled Subsystem）和示波器（Scope）三个模块拖至新打开的模型编辑窗口，连接各 模块、设置参数并存盘，创建一个使能子系统。其中使能信号端接正弦模块。 在示波器窗口设置输入端口数（Number of input ports）为2，并设置输出布 局（Layout）。</p><p>在模型编辑窗口单击工具栏的Run命令按钮，就可看到半波整流波形和正弦波形。这里正弦信号当控制信号，当控制信号为负值时子系统停止执行， 输出是零。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200830180219.png" alt=""></p><h4 id="触发子系统"><a class="header-anchor" href="#触发子系统">¶</a>触发子系统</h4><p>触发子系统是指当触发事件发生时开始执行子系统。</p><p>与使能子系统相类似，触发子系统的建立可直接选择Triggered Subsystem模块，或者展开已有子系统，添加Ports &amp; Subsystems模块 库中的Trigger模块，将该子系统转换为触发子系统。</p><ul><li>rising（上跳沿触发）：控制信号从负值或0上升到正值时子系统开始执行。</li><li>falling（下跳沿触发）：控制信号从正值或0下降到负值时子系统开始执行。</li><li>either（上跳沿或下跳沿触发）：当控制信号满足上跳沿或下跳沿触发条 件时，子系统开始执行。</li><li>function-call（函数调用触发）：这种触发方式必须与S函数配合使用。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200830180208.png" alt=""></p><p>ex:利用触发子系统将一锯齿波转换成方波。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200830182316.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200830182330.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200830182401.png" alt=""></p><div class='tip error'><p>error:没出现，方波太长<p></div><h4 id="使能加触发子系统"><a class="header-anchor" href="#使能加触发子系统">¶</a>使能加触发子系统</h4><p>所谓使能加触发子系统就是当使能控制信号和触发控制信号共 同作用时执行子系统。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200830183411.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200830183441.png" alt=""></p><h2 id="S函数的设计与应用"><a class="header-anchor" href="#S函数的设计与应用">¶</a>S函数的设计与应用</h2><ul><li>什么叫S函数</li><li>用M文件编写S函数的方法</li><li>在仿真模型中使用S函数的方法</li></ul><h3 id="什么叫S函数"><a class="header-anchor" href="#什么叫S函数">¶</a>什么叫S函数</h3><ul><li>S函数是系统函数(System Function)的简称,是指采用一种程序设 计语言描述的一个功能模块。</li><li>用户可以采用MATLAB语言，也可以采用C、C++或FORTRAN等语言来编写S函数。</li><li>S函数有自己特定的语法构成规则,可以用来描述并实现连续系统、 离散系统以及复合系统。</li><li>S函数能够接收来自Simulink求解算法的相关信息,并对求解算法发出的命令做出适当的响应,这种交互作用类似于Simulink系统模块与求解算法的相互作用。</li></ul><h3 id="用MATLAB语言编写S函数"><a class="header-anchor" href="#用MATLAB语言编写S函数">¶</a>用MATLAB语言编写S函数</h3><p>在MATLAB命令行窗口输入命令，打开模板文件。</p><p><font color='purple'>&gt;&gt; edit sfuntmpl.m</font></p><p>模板文件sfuntmpl.m包括：</p><ul><li>1个主函数</li><li>6个子函数</li></ul><h4 id="主函数"><a class="header-anchor" href="#主函数">¶</a>主函数</h4><p>主函数的引导语句为：</p><p><font color='purple'>function [sys,x0,str,ts]=fname(t,x,u,flag)</font></p><ul><li>fname是S函数的函数名。</li><li>输入形参t、x、u、flag分别为仿真时间、状态向量、输入向量 和子函数调用标志。</li><li>输出形参sys代表一种返回参数；x0是初始状态值；对于M文件S 函数，str将被置成一个空阵；ts是一个两列矩阵。</li></ul><h4 id="子函数"><a class="header-anchor" href="#子函数">¶</a>子函数</h4><p>S函数共有6个子函数， 这些子函数的前辍为mdl，由flag的值来控 制在仿真的各阶段调用S函数的哪一个子函数。</p><ul><li><font color='purple'>flag取0：</font>调用初始化子函数mdlInitializeSizes。</li><li><font color='purple'>flag取1：</font>调用子函数mdlDerivatives实现连续状态的更新。</li><li><font color='purple'>flag取2：</font>调用子函数mdlUpdate实现离散状态的更新。</li><li><font color='purple'>flag取3：</font>调用输出子函数mdlOutputs。</li></ul><h3 id="S函数的应用"><a class="header-anchor" href="#S函数的应用">¶</a>S函数的应用</h3><p>采用S函数实现y=kx+b。</p><h4 id="定义S函数"><a class="header-anchor" href="#定义S函数">¶</a>定义S函数</h4><p>①主函数</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="params">[sys,x0,str,ts]</span>=<span class="title">timekb</span><span class="params">(t,x,u,flag,k,b)</span></span></span><br><span class="line"><span class="keyword">switch</span> flag</span><br><span class="line"><span class="keyword">case</span> <span class="number">0</span></span><br><span class="line">[sys,x0,str,ts]=mdlInitializeSizes; <span class="comment">%初始化</span></span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span></span><br><span class="line">sys=mdlOutputs(t,x,u,k,b); <span class="comment">%计算输出量</span></span><br><span class="line"><span class="keyword">case</span> &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">4</span>,<span class="number">9</span>&#125;</span><br><span class="line">sys=[];</span><br><span class="line"><span class="keyword">otherwise</span> <span class="comment">%出错处理</span></span><br><span class="line">error(num2str(flag))</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>②初始化子函数</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="params">[sys,x0,str,ts]</span>=<span class="title">mdlInitializeSizes</span><span class="params">()</span></span></span><br><span class="line">sizes=simsizes;</span><br><span class="line">sizes.NumContStates=<span class="number">0</span>; <span class="comment">%无连续状态</span></span><br><span class="line">sizes.NumDiscStates=<span class="number">0</span>; <span class="comment">%无离散状态</span></span><br><span class="line">sizes.NumOutputs=<span class="number">1</span>; <span class="comment">%有一个输出量</span></span><br><span class="line">sizes.NumInputs=<span class="number">1</span>; <span class="comment">%有一个输入信号</span></span><br><span class="line">sizes.DirFeedthrough=<span class="number">1</span>; <span class="comment">%输出量中含有输入量</span></span><br><span class="line">sizes.NumSampleTimes=<span class="number">1</span>; <span class="comment">%单个采样周期</span></span><br><span class="line">sys=simsizes(sizes);</span><br><span class="line"><span class="comment">%给其他返回参数赋值</span></span><br><span class="line">x0=[]; <span class="comment">%设置初始状态为零状态</span></span><br><span class="line">str=[]; <span class="comment">%将str变量设置为空字符串</span></span><br><span class="line">ts=[<span class="number">-1</span>,<span class="number">0</span>]; <span class="comment">%假定继承输入信号的采样周期</span></span><br></pre></td></tr></table></figure><p>③输出子函数</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sys</span>=<span class="title">mdlOutputs</span><span class="params">(t,x,u,k,b)</span></span></span><br><span class="line">sys=k*u+b;</span><br></pre></td></tr></table></figure><h4 id="在Simulink模型中使用S函数"><a class="header-anchor" href="#在Simulink模型中使用S函数">¶</a>在Simulink模型中使用S函数</h4><p>新建一个模型，向模型编辑窗口中添加S函数模块、Sine Wave模 块和Scope模块。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200830184543.png" alt=""></p><p>在模型编辑窗口中双击S函数模块，打开其参数对话框，填入S函数名 timesn，填入外部参数k和b。如果有多个外部参数，参数之间用逗号分隔。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200830185558.png" alt=""></p><p>在模型编辑窗口选中S函数模块，选择Diagram→Mask→Create Mask命令， 打开封装编辑器，选择Parameters &amp; Dialog选项卡，在左侧控件工具箱 中单击Edit工具，往中间的Dialog box区域的控件列表中添加编辑框控 件#1，选中该控件后，在右侧的Property editor中，在Name栏填入k， Prompt栏填入“放大倍数”，再设置参数b，设置完成后单击OK按钮。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200830185551.png" alt=""></p><p>S函数模块被封装后，双击它，则得到模块参数对话框。当输入k的值为 3，b的值为2时，得到的仿真结果。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200830185545.png" alt=""></p><p>第一根曲线是经过S函数变化后的曲线2+3sinx，第二根曲线是sinx。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200830185539.png" alt=""></p><ul><li>利用S函数可以创建用户自己的Simulink模块，从而使得 Simulink可以应用于更复杂系统的建模与仿真。</li><li>Simulink提供了现成的S函数模板文件，用户可以通过直 接修改模板文件来编写S函数。</li></ul><h2 id="Simulink仿真应用举例"><a class="header-anchor" href="#Simulink仿真应用举例">¶</a>Simulink仿真应用举例</h2><ul><li>蹦极跳系统的Simulink仿真模型</li><li>蹦极跳系统的安全性</li></ul><h3 id="蹦极跳（Bungee-Jumping）系统的建模与仿真"><a class="header-anchor" href="#蹦极跳（Bungee-Jumping）系统的建模与仿真">¶</a>蹦极跳（Bungee Jumping）系统的建模与仿真</h3><p>采用Simulink对蹦极跳系统进行仿真研究。要求如下：</p><ul><li>建立蹦极跳系统的Simulink仿真模型。</li><li>分析蹦极跳系统的安全性，包括：<ul><li>当弹力绳弹性系数一定时，求蹦极者的安全体重。</li><li>当蹦极者体重一定时，求弹力绳的最小弹性系数。</li></ul></li></ul><h4 id="系统分析"><a class="header-anchor" href="#系统分析">¶</a>系统分析</h4><p>蹦极者从跳台自由下落，跳台距水面的高度为h，弹力绳的长 度为s。蹦极者受到的力包括自身的重力、弹力绳的张力和空 气的阻力。设k为弹力绳的弹性系数，同时我们定义人站在跳 台时弹力绳的下端为坐标原点O，y为蹦极者相对于坐标原点的 距离，b(y)表示弹力绳的张力，其数学表达式为：</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200830185532.png" alt=""></p><p>又设m为蹦极者的质量，g为重力加速度，a1与a2为空气阻力系 数，则系统方程可表示为这样的方程：</p><p><code>mg+b(y)-a1y'-a2y'|y'|=my''</code></p><blockquote><p>其中第3项和第4项表示空气的阻力。方程的初始条件为 y(0)=-s, y’(0)=0，也就是初始速度为0。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200830185458.png" alt=""></p><h4 id="仿真模型"><a class="header-anchor" href="#仿真模型">¶</a>仿真模型</h4><p>启动Simulink，打开模型编辑窗口。因为该微分方程包含的导数最高为2 阶，所以在仿真模型中需要两个积分器，可以从Simulink的连续系统模 块库中，将积分模块添加到模型编辑窗口并实现连接，y的二阶导数经过 积分环节后得到y的一阶导数，y的一阶导数经过积分环节后得到y。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200830185755.png" alt=""></p><p>空气阻力有两项，都与y的一阶导数，即速度有关。使用数学运算模块库（Math Operations）中的增益模块表示空气阻力比例系数，使用用户自定义函数模块库 （User-defined Functions）中函数（Fcn）模块表示空气阻力中的非线性部分， 同时将增益模块和函数模块翻转180度，并确定它们的参数。另外添加数学运算模 块库（Math Operations）中的加法模块，并设置好参数。还有个增益模块，其输 出是y的二阶导数。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200830190906.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200830191552.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200830191533.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200830191527.png" alt=""></p><p>再回到蹦极跳系统，进行弹力绳张力的模块连接。用Switch模块来实现弹 力绳的张力，同时需要增益模块和常数模块，设置好参数并进行模块连接后得到此时的仿真模型。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200830192535.png" alt=""></p><p>最后添加重力模块和输出模块。添加信号源模块中的常数模块，表示蹦极者的重力， 添加输出模块库中的示波器模块，用于输出蹦极者弹出的距离，同时还输出蹦极者与 水面的距离，即坐标原点距水面的距离，也就是h-s，再减去蹦极者弹起的距离y，如 果该值小于零，即表示人将在蹦极过程中接触水面，这是不安全的。添加常数模块、 加法模块和示波器模块，设置模块参数并进行连接，这样系统仿真模型就建好了。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200830214110.png" alt=""></p><h4 id="仿真结果及分析"><a class="header-anchor" href="#仿真结果及分析">¶</a>仿真结果及分析</h4><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; m=<span class="number">75</span>;</span><br><span class="line">&gt;&gt; g=<span class="number">9.8</span>;</span><br><span class="line">&gt;&gt; k=<span class="number">20</span>;</span><br><span class="line">&gt;&gt; a1=<span class="number">1</span>;</span><br><span class="line">&gt;&gt; a2=<span class="number">1</span>;</span><br><span class="line">&gt;&gt; h=<span class="number">100</span>;</span><br><span class="line">&gt;&gt; s=<span class="number">40</span>;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200830214103.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200830214055.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200830213906.png" alt=""></p><div class="note info flat"><p>注意设置步长为100，从Configuration Parameters修改默认步长！！！</p></div><p>&gt;&gt; m=65;</p><p>现在将蹦极者的体重改为65kg， 其他参数不变，查看此时的曲 线，人距离水面的距离大于0， 系统是安全的，因此在系统其 他参数确定之后，对蹦极者的 体重是有要求的。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200830214037.png" alt=""></p><h3 id="蹦极跳系统的安全性"><a class="header-anchor" href="#蹦极跳系统的安全性">¶</a>蹦极跳系统的安全性</h3><h4 id="求最大安全体重"><a class="header-anchor" href="#求最大安全体重">¶</a>求最大安全体重</h4><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> m=<span class="number">100</span>:<span class="number">-0.5</span>:<span class="number">20</span></span><br><span class="line">    [t,x,y_w]=sim(<span class="string">&#x27;bengji&#x27;</span>,<span class="number">0</span>:<span class="number">0.01</span>:<span class="number">100</span>);</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">min</span>(y_w)&gt;<span class="number">1.5</span></span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="built_in">disp</span>([<span class="string">&#x27;最大安全体重是&#x27;</span>,num2str(m)])</span><br><span class="line">dis=<span class="built_in">min</span>(y_w);</span><br><span class="line"><span class="built_in">disp</span>([<span class="string">&#x27;最小的安全距离是&#x27;</span>,num2str(dis)])</span><br><span class="line"><span class="built_in">plot</span>(t,y_w)</span><br><span class="line">grid on</span><br></pre></td></tr></table></figure><div class="note info flat"><p>注意simulink仿真要保存为bengji的名称，与上述代码中保持一致。否则会报错！！</p></div><p>程序运行后，得到结果如下：</p><p><font color='purple'>最大安全体重是67.5</font><br><font color='purple'>最小的安全距离是1.6803</font></p><p>弹力绳的弹性系数是20时，安全体重是67.5kg，安全距离是1.68m。 人到水面距离的变化曲线如图所示。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200830215544.png" alt=""></p><h4 id="求最小弹性系数"><a class="header-anchor" href="#求最小弹性系数">¶</a>求最小弹性系数</h4><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">m=<span class="number">65</span>;</span><br><span class="line"><span class="keyword">for</span> k=<span class="number">10</span>:<span class="number">0.1</span>:<span class="number">50</span></span><br><span class="line">    [t,x,y_w]=sim(<span class="string">&#x27;bengji&#x27;</span>,<span class="number">0</span>:<span class="number">0.01</span>:<span class="number">100</span>);</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">min</span>(y_w)&gt;<span class="number">1.5</span></span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="built_in">disp</span>([<span class="string">&#x27;最小弹性系数k是&#x27;</span>,num2str(k)])</span><br><span class="line">dis=<span class="built_in">min</span>(y_w);</span><br><span class="line"><span class="built_in">disp</span>([<span class="string">&#x27;最小的安全距离是&#x27;</span>,num2str(dis)])</span><br><span class="line"><span class="built_in">plot</span>(t,y_w)</span><br><span class="line">grid on</span><br></pre></td></tr></table></figure><p>程序运行后，得到结果如下：</p><p><font color='purple'>最小弹性系数k是18.9</font><br><font color='purple'>最小的安全距离是1.5521</font></p><p>最小安全弹性常数是18.9，蹦极者与地面之间的最小距离是1.55m， 最小安全弹性常数下系统的仿真结果如图所示。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200830220148.png" alt=""></p><h1>外部程序接口</h1><h2 id="在Excel中使用MATLAB"><a class="header-anchor" href="#在Excel中使用MATLAB">¶</a>在Excel中使用MATLAB</h2><ul><li>Spreadsheet Link程序</li><li>将Excel表格中的数据导出到MATLAB工作空间中</li><li>从MATLAB工作空间导入数据到Excel表格中</li><li>在Excel中调用MATLAB函数进行运算</li></ul><h3 id="Spreadsheet-Link程序"><a class="header-anchor" href="#Spreadsheet-Link程序">¶</a>Spreadsheet Link程序</h3><p>Spreadsheet Link程序是MATLAB提供的Excel与MATLAB的接口 ，通过 Spreadsheet Link，可以在Excel工作区和MATLAB工作区之间进行数据交换 ，也可以在Excel中调用MATLAB的函数。</p><h4 id="安装"><a class="header-anchor" href="#安装">¶</a>安装</h4><p>Spreadsheet Link的安装是在MATLAB安装过程中，随其他组件一起安装的。安装完成后，还需要在Excel中进行一些设置后才能使用。</p><h4 id="设置"><a class="header-anchor" href="#设置">¶</a>设置</h4><p>①选 Excel “文件”菜单的 “选项” 菜单项，打开“Excel选项”对话框。 在“Excel选项”对话框中，选左边栏的 “加载项”， 然后单击右边面板下部的 “转到”按钮，弹出 “加载宏”对话框 。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200830231405.png" alt=""></p><p>②在“加载宏”对话框中，单击“浏览” 按钮，打开文件“浏览”对话框。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200830231513.png" alt=""></p><p>③在文件“浏览”对话框，选MATLAB的安装文件夹的子文件夹 toolbox\exlink。在文件夹exlink中选excllink.xlam文件，单击“确 定”按钮返回。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200830231824.png" alt=""></p><p>“加载宏”对话框的“可用加载宏”列表中多了一个 “Spreadsheet Link 3.2.5 for use with MATLAB and Excel”选项。选中该项，返回Excel窗口。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200830231814.png" alt=""></p><h4 id="MATLAB命令组"><a class="header-anchor" href="#MATLAB命令组">¶</a>MATLAB命令组</h4><p>加载Spreadsheet Link 后，在Excel窗口“开始”选项卡中多了一个 MATLAB命令组。命令组中包含的一组命令项，分别用于实现启动MATLAB、 导入和导出数据、调用MATLAB函数等。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200830232100.png" alt="image-20200830232059357"></p><h3 id="将Excel表格中的数据导出到MATLAB工作空间"><a class="header-anchor" href="#将Excel表格中的数据导出到MATLAB工作空间">¶</a>将Excel表格中的数据导出到MATLAB工作空间</h3><p>ex:文件“测试数据.xlsx”存储某门店销售数据，将其中的A~E列的数 据导出MATLAB工作区，存入变量sale。</p><h4 id="操作步骤"><a class="header-anchor" href="#操作步骤">¶</a>操作步骤</h4><p>① 在Excel中选中5列，单击 “开始” 选项卡工具栏“MATLAB”按钮，从下 拉列表中选“Send data to MATLAB” 命令。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200830233206.png" alt=""></p><p>② 在弹出的对话框中填入变量名sale， 单击“确定”按钮完成导出操作。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200830234046.png" alt=""></p><p>因为选中的各列数据类型不同，所以sale 为cell数组。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200830234041.png" alt=""></p><h3 id="从MATLAB工作空间导入数据到Excel表格中"><a class="header-anchor" href="#从MATLAB工作空间导入数据到Excel表格中">¶</a>从MATLAB工作空间导入数据到Excel表格中</h3><p>在Excel表单选中要导入数据的起始单元格，单击 “MATLAB”按钮，从下拉列表 中选“Get data from MATLAB” 命令，在 弹出的对话框中输入MATLAB变量名，单击“ 确定”按钮完成导入操作。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200830234035.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200830234023.png" alt=""></p><h3 id="在Excel中调用MATLAB函数进行运算"><a class="header-anchor" href="#在Excel中调用MATLAB函数进行运算">¶</a>在Excel中调用MATLAB函数进行运算</h3><p>ex:调用MATLAB的magic函数在Excel中生成6阶魔方矩阵。</p><h4 id="选择函数"><a class="header-anchor" href="#选择函数">¶</a>选择函数</h4><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200830234229.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200830234434.png" alt=""></p><h4 id="设置参数"><a class="header-anchor" href="#设置参数">¶</a>设置参数</h4><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200831000123.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200830234657.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200831000116.png" alt=""></p><h2 id="MATLAB文件操作"><a class="header-anchor" href="#MATLAB文件操作">¶</a>MATLAB文件操作</h2><ul><li>文件打开与关闭</li><li>文本文件的读写</li><li>二进制文件的读写</li><li>数据文件定位</li></ul><h3 id="文件打开与关闭"><a class="header-anchor" href="#文件打开与关闭">¶</a>文件打开与关闭</h3><h4 id="fopen函数"><a class="header-anchor" href="#fopen函数">¶</a>fopen函数</h4><p>用于打开文件，其调用格式为：</p><p>fid=fopen(filename,permission)</p><blockquote><p>其中，fid为文件识别号，打开文件成功时，fid返回一整数，用来标识该文 件；打开文件不成功时，fid值为-1。filename为待操作的文件名， permission为对文件的允许使用方式。</p></blockquote><p>文件的使用方式：</p><ul><li>‘r’： 以读方式打开一个文件。</li><li>‘w’：以写方式打开一个文件。</li><li>‘a’：在该文件尾添加数据。</li><li>‘r+’：以读和写方式打开一个文件。</li></ul><h4 id="fclose函数"><a class="header-anchor" href="#fclose函数">¶</a>fclose函数</h4><p>用于关闭已打开的文件，其调用格式为：</p><p>status=fclose(fid)</p><blockquote><p>fid是要关闭文件的标识号。如果fid为all，则关闭所有已打开的文 件，但标准文件除外，即屏幕、键盘。返回0表示关闭成功，返回-1 则表示关闭不成功。</p></blockquote><h3 id="文本文件的读写"><a class="header-anchor" href="#文本文件的读写">¶</a>文本文件的读写</h3><h4 id="fscanf函数和fprintf函数"><a class="header-anchor" href="#fscanf函数和fprintf函数">¶</a>fscanf函数和fprintf函数</h4><p>fscanf函数用于读取文本文件的内容，fprintf函数用于将数据写入文本文件中。调用格式为：</p><p>[A,count]=fscanf(fid,fmt,size)</p><p>count=fprintf(fid,fmt,A)</p><blockquote><p>其中，A用于存放读写的数据，count返回成功读写的数据元素个数； 参数fid为文件标识号，fmt用以控制读取的数据格式，size用于指定A的大小。</p></blockquote><ul><li><p>fmt由%加上格式符组成，常见的数值格式控制符如下：</p><ul><li>‘%d’ ：整数。</li><li>‘%f’：小数形式的实数。</li><li>‘%e’：科学计数法形式的实数。</li><li>‘%c’：字符。</li><li>‘%s’ ：字符串。<br>在%之后还可以加上数据宽度。</li></ul></li><li><p>size可取值：</p><ul><li>n：指定读取n个数据。</li><li>Inf：指定读取文件中的所有数据。</li><li>[m,n]：指定读取m×n个数据，数据按列顺序存放到矩阵A。</li></ul></li></ul><p>ex:文件“观测记录.txt”的内容如图 所示，读取文件前10行的数据。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200831000103.png" alt=""></p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">fid=fopen(<span class="string">&#x27;观测记录.txt&#x27;</span>,<span class="string">&#x27;r&#x27;</span>);</span><br><span class="line">title=fscanf(fid,<span class="string">&#x27;%s&#x27;</span>,<span class="number">6</span>);</span><br><span class="line">qxsj=[];</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:<span class="number">10</span></span><br><span class="line"> qxsj&#123;<span class="built_in">i</span>,<span class="number">1</span>&#125;=fscanf(fid,<span class="string">&#x27;%s&#x27;</span>,<span class="number">1</span>);</span><br><span class="line"> qxsj&#123;<span class="built_in">i</span>,<span class="number">2</span>&#125;=fscanf(fid,<span class="string">&#x27;%s&#x27;</span>,<span class="number">1</span>);</span><br><span class="line"> qxsj&#123;<span class="built_in">i</span>,<span class="number">3</span>&#125;=fscanf(fid,<span class="string">&#x27;%f&#x27;</span>,<span class="number">1</span>);</span><br><span class="line"> qxsj&#123;<span class="built_in">i</span>,<span class="number">4</span>&#125;=fscanf(fid,<span class="string">&#x27;%f&#x27;</span>,<span class="number">1</span>);</span><br><span class="line"> qxsj&#123;<span class="built_in">i</span>,<span class="number">5</span>&#125;=fscanf(fid,<span class="string">&#x27;%f&#x27;</span>,<span class="number">1</span>);</span><br><span class="line"> qxsj&#123;<span class="built_in">i</span>,<span class="number">6</span>&#125;=fscanf(fid,<span class="string">&#x27;%s&#x27;</span>,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">fclose(fid);</span><br></pre></td></tr></table></figure><h3 id="二进制文件的读写"><a class="header-anchor" href="#二进制文件的读写">¶</a>二进制文件的读写</h3><h4 id="fread函数和fwrite函数"><a class="header-anchor" href="#fread函数和fwrite函数">¶</a>fread函数和fwrite函数</h4><p>fread函数用于读取二进制文件，fwrite 函数将数据写入文件。这是函数的调用格式。</p><p>[A,count]=fread(fid,size,precision,skip)</p><p>count=fwrite(fid,A,precision)</p><blockquote><p>其中，A用于存放读写的数据，count返回读写成功的数据个数。fid为 文件识别号，precision指定读写数据的类型，size用于指定A的大小， skip指定按比例周期性地跳过一些数据。</p></blockquote><p>ex:计算y=(e^x)*sinx，其中x∈[0,2π ]。将x、y写入二进制文件“模拟数据.dat”。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">fid=fopen(<span class="string">&#x27;模拟数据.dat&#x27;</span>,<span class="string">&#x27;w&#x27;</span>);</span><br><span class="line">x=<span class="built_in">linspace</span>(<span class="number">0</span>,<span class="number">2</span>*<span class="built_in">pi</span>,<span class="number">100</span>);</span><br><span class="line">y=<span class="built_in">exp</span>(x).*<span class="built_in">sin</span>(x);</span><br><span class="line">count=fwrite(fid, [x; y], <span class="string">&#x27;double&#x27;</span>);</span><br><span class="line">fclose(fid);</span><br></pre></td></tr></table></figure><h3 id="数据文件定位"><a class="header-anchor" href="#数据文件定位">¶</a>数据文件定位</h3><h4 id="fseek函数"><a class="header-anchor" href="#fseek函数">¶</a>fseek函数</h4><p>该函数用于改变文件位置指针的位置，其调用格式为：</p><p>fseek(fid, offset, origin)</p><blockquote><p>其中参数fid为文件识别号，offset表示位置指针相对移动的字节数；origin 表示位置指针移动的参照位置。</p></blockquote><ul><li>origin的可取值：<ul><li>'cof '或0表示文件指针的当前位置</li><li>'bof '或-1表示文件的开始位置</li><li>'eof’或1表示文件的结束位置。</li></ul></li></ul><p>例如：fseek(fid,0,-1) 、fseek(fid,-5,‘eof’)</p><h4 id="ftell函数"><a class="header-anchor" href="#ftell函数">¶</a>ftell函数</h4><p>用于查询文件指针的当前位置，其调用格式为：</p><p>position=ftell(fid)</p><blockquote><p>返回值为从文件头到指针当前位置的字节数。若返回值为-1，表 示获取文件当前位置失败。</p></blockquote><h4 id="feof函数"><a class="header-anchor" href="#feof函数">¶</a>feof函数</h4><p>用于判断当前的文件位置指针是否到达文件尾部：</p><p>status=feof(fid)</p><blockquote><p>当到达文件结束位置时，返回值为1，否则为0。</p></blockquote><p>ex:读取上例生成的文件中的后40组数据，并绘制图形</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">fid=fopen(<span class="string">&#x27;模拟数据.dat&#x27;</span>,<span class="string">&#x27;r&#x27;</span>);</span><br><span class="line">status=fseek(fid, <span class="number">-40</span>*<span class="number">2</span>*<span class="number">8</span>, <span class="string">&#x27;eof&#x27;</span>);</span><br><span class="line">x=[]; y=[];</span><br><span class="line"><span class="keyword">while</span> ~feof(fid)</span><br><span class="line"> x=[x; fread(fid,<span class="number">1</span>,<span class="string">&#x27;double&#x27;</span>)];</span><br><span class="line"> y=[y; fread(fid,<span class="number">1</span>,<span class="string">&#x27;double&#x27;</span>)];</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="built_in">plot</span>(x,y);</span><br><span class="line">fclose(fid);</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200831000754.png" alt=""></p><h2 id="在其他语言程序中读写MATLAB的数据文件"><a class="header-anchor" href="#在其他语言程序中读写MATLAB的数据文件">¶</a>在其他语言程序中读写MATLAB的数据文件</h2><ul><li>MAT文件的概念</li><li>C++程序中MAT文件的基本操作</li><li>mxArray对象</li><li>生成应用程序并运行</li></ul><h3 id="MAT文件的概念"><a class="header-anchor" href="#MAT文件的概念">¶</a>MAT文件的概念</h3><p>MAT文件是MATLAB存储数据的标准格式。MAT文件中不仅保存变量的值，而且保存变量的名称和类型等。</p><ul><li><p>在MATLAB中操作MAT文件：</p><ul><li>save命令：将工作区的数据保存为MAT文件。</li><li>load命令：读取MAT文件中的数据并加载到工作区。</li></ul></li><li><p>操作MAT文件的API函数封装于两个标准库文件中：</p><ul><li>libmat.lib：包含对MAT文件的操作函数。</li><li>libmx.lib：包含对MAT文件中mxArray矩阵的操作函数。</li></ul></li></ul><h3 id="C-程序中MAT文件的基本操作"><a class="header-anchor" href="#C-程序中MAT文件的基本操作">¶</a>C++程序中MAT文件的基本操作</h3><p>在C++程序中，通过指向MAT文件的指针对文件进行操作，因此，首先需要申明一个文件指针。</p><ul><li>定义指向MAT文件的指针</li></ul><p>MATFile *mfp;</p><blockquote><p>其中， MATFile指定指针类型，mfp为指针变量。</p></blockquote><ul><li>打开与关闭MAT文件</li></ul><p>mfp=matOpen(filename,mode)</p><p>matClose(mfp)</p><blockquote><p>其中，mfp为MATFile类型的指针，filename为待操作的文件名，mode 为对文件的使用方式。 如果文件打开成功，则返回文件句柄，否则返回NULL。</p></blockquote><ul><li><p>MAT文件的访问方式：</p><ul><li>‘r’：只读模式。</li><li>‘w’：只写模式。</li><li>’ u ’ ：更新模式。</li></ul></li><li><p>读写MAT文件</p></li></ul><p>matPutVariable(mfp,name,mp)</p><p>matGetVariable(mfp,name)</p><blockquote><p>其中，mfp是已经定义的MAT文件指针，name是指定存储数据的变量名，mp 是指向MATLAB工作区mxArray类型变量的指针。</p></blockquote><p>写文件，如果文件中存在与name同名的变量，那么将覆盖原来的值；如果 不存在同名的变量，则在文件末尾添加该变量。函数执行成功，返回0，否 则返回一个非零值。</p><h3 id="mxArray对象"><a class="header-anchor" href="#mxArray对象">¶</a>mxArray对象</h3><p>MATLAB和其他应用软件或程序交换数据使用<strong>mxArray</strong>对象。</p><p>操作mxArray对象要用到<strong>mx函数</strong>，mx函数有四类：</p><h4 id="建立和清除mxArray变量的函数"><a class="header-anchor" href="#建立和清除mxArray变量的函数">¶</a>建立和清除mxArray变量的函数</h4><ul><li>mxArray *mxCreateDoubleScalar(double value)</li></ul><p>用于创建一个数值标量， 并用参数value初始化该变量。</p><ul><li>mxArray *mxCreateDoubleMatrix(mwSize m, mwSize n, mxComplexity CFlag);</li></ul><p>用于创建存储数值数据的mxArray矩阵。</p><blockquote><p>其中，m、n指定mxArray矩阵的大小， CFlag 指定成员值是否为复数，当CFlag为mxREAL 时，成员值是实数。</p></blockquote><ul><li>mxArray *mxCreateString(const char *str);</li></ul><p>用于创建存储字符串的mxArray变量，并用str指向的字符串初始化该变量。</p><ul><li>void mxDestroyArray(mxArray *pm);</li></ul><p>用于清除pm 所指向的mxArray变量。</p><h4 id="验证数据类型的函数"><a class="header-anchor" href="#验证数据类型的函数">¶</a>验证数据类型的函数</h4><p>bool mxIsDouble(const mxArray *pm);</p><p>bool mxIsNumeric(const mxArray *pm);</p><blockquote><p>其中，pm是指向mxArray变量的指针。</p></blockquote><h4 id="读写数据的函数"><a class="header-anchor" href="#读写数据的函数">¶</a>读写数据的函数</h4><p>size_t mxGetM(const mxArray *pm);</p><p>void mxSetM(mxArray *pm, mwSize m);</p><p>double *mxGetPr(const mxArray *pm);</p><p>void mxSetPr(mxArray *pm, double *pr);</p><blockquote><p>其中，pm是指向mxArray变量的指针。mxGetM函数获取mxArray变量大小， mxGetPr函数获取mxArray变量地址。</p></blockquote><h4 id="转换类型的函数"><a class="header-anchor" href="#转换类型的函数">¶</a>转换类型的函数</h4><p>char *mxArrayToString(const mxArray *pm);</p><p>将mxArray变量内容转换为字符串。其中， pm是指向mxArray变量的指针。</p><p>ex:编写C++程序，创建一个MAT文件mattest.mat ，并写入三种类 型的数据。</p><ul><li>导入MAT命名空间</li></ul><p>#include “mat.h”</p><ul><li>定义MAT文件指针和指向mxArray类型数据的指针</li></ul><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">MATFile *mat;</span><br><span class="line">mxArray *pa1, *pa2, *pa3;</span><br><span class="line"><span class="comment">//定义要写入的数据</span></span><br><span class="line"><span class="keyword">double</span> data[<span class="number">9</span>] = &#123;<span class="number">1.1</span>, <span class="number">2.2</span>, <span class="number">3.3</span>, <span class="number">4.4</span>, <span class="number">5.5</span>, <span class="number">6.6</span>, <span class="number">7.7</span>, <span class="number">8.8</span>, <span class="number">9.9</span>&#125;;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span> *file = <span class="string">&quot;mattest.mat&quot;</span>; <span class="comment">//定义要操作的文件</span></span><br><span class="line"><span class="keyword">int</span> status; <span class="comment">//定义存储函数返回值的变量</span></span><br></pre></td></tr></table></figure><ul><li>打开MAT文件</li></ul><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;生成文件 : &quot;</span> &lt;&lt; file &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">pmat = matOpen(file, <span class="string">&quot;w&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> (pmat == <span class="literal">NULL</span>) &#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;不能创建文件 : &quot;</span> &lt;&lt; file &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;(请确认是否有权限访问指定文件夹?)\n&quot;</span>;</span><br><span class="line"><span class="keyword">return</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>创建MATLAB变量</li></ul><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">pa1 = mxCreateDoubleScalar(<span class="number">1.234</span>);</span><br><span class="line"><span class="keyword">if</span> (pa1 == NULL) &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;不能创建变量。\n&quot;</span>;</span><br><span class="line"><span class="keyword">return</span>(<span class="number">0</span>); &#125;</span><br><span class="line">pa2 = mxCreateDoubleMatrix(<span class="number">3</span>, <span class="number">3</span>, mxREAL);</span><br><span class="line"><span class="keyword">if</span> (pa2 == NULL) &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;不能创建矩阵。\n&quot;</span>;</span><br><span class="line"><span class="keyword">return</span>(<span class="number">0</span>); &#125;</span><br><span class="line">memcpy((void *)(mxGetPr(pa2)), (void *)data, sizeof(data));</span><br><span class="line">pa3 = mxCreateString(<span class="string">&quot;MAT文件示例&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> (pa3 == NULL) &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;不能创建字符串。\n&quot;</span>;</span><br><span class="line"><span class="keyword">return</span>(<span class="number">0</span>); &#125;</span><br></pre></td></tr></table></figure><ul><li>将MATLAB变量写入文件</li></ul><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">status = matPutVariable(pmat, <span class="string">&quot;LocalDouble&quot;</span>, pa1);</span><br><span class="line"><span class="keyword">if</span> (status != <span class="number">0</span>) &#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;写入局部变量时发生错误。\n &quot;</span> ;</span><br><span class="line"><span class="keyword">return</span>(<span class="number">0</span>); &#125;</span><br><span class="line">status = matPutVariableAsGlobal(pmat, <span class="string">&quot;GlobalDouble&quot;</span>, pa2);</span><br><span class="line"><span class="keyword">if</span> (status != <span class="number">0</span>) &#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;写入全局变量时发生错误。\n&quot;</span>;</span><br><span class="line"><span class="keyword">return</span>(<span class="number">0</span>); &#125;</span><br><span class="line">status = matPutVariable(pmat, <span class="string">&quot;LocalString&quot;</span>, pa3);</span><br><span class="line"><span class="keyword">if</span> (status != <span class="number">0</span>) &#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;: 写入String类型数据时发生错误。\n &quot;</span>;</span><br><span class="line"><span class="keyword">return</span>(<span class="number">0</span>); &#125;</span><br></pre></td></tr></table></figure><ul><li>释放内存空间</li></ul><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">mxDestroyArray(pa1);</span><br><span class="line">mxDestroyArray(pa2);</span><br><span class="line">mxDestroyArray(pa3);</span><br><span class="line"><span class="keyword">if</span> (matClose(pmat) != <span class="number">0</span>) &#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;关闭文件时发生错误 &quot;</span> &lt;&lt; file &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;文件创建成功！\n&quot;</span>;</span><br><span class="line"><span class="keyword">return</span>(<span class="number">1</span>);</span><br></pre></td></tr></table></figure><h3 id="生成应用程序并运行"><a class="header-anchor" href="#生成应用程序并运行">¶</a>生成应用程序并运行</h3><ul><li>生成应用程序<ul><li>利用Microsoft Visual Studio 集成环境</li><li>利用MATLAB编译器</li></ul></li></ul><p>&gt;&gt; mex -v -client engine MatFile.cpp</p><p>编译成功，生成文件MatFile.exe。</p><ul><li>运行应用程序</li></ul><p>运行文件MatFile.cpp，将建立一个MAT文件mattest.mat。</p><ul><li>加载文件mattest.mat</li></ul><p>&gt;&gt; load(‘mattest.mat’)</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200831003236.png" alt=""></p><h2 id="在MATLAB中调用其他语言编写的程序"><a class="header-anchor" href="#在MATLAB中调用其他语言编写的程序">¶</a>在MATLAB中调用其他语言编写的程序</h2><ul><li>MEX库函数</li><li>MEX文件源程序的构成</li><li>MEX文件的编译</li></ul><p>MEX是MATLAB Executable的缩写，是MATLAB提供的调用其它语言编写的子程序的接口。</p><p>用其他语言编写的MEX程序经过编译，生成MEX文件，可以作为MATLAB的扩展函数。</p><h3 id="MEX库函数"><a class="header-anchor" href="#MEX库函数">¶</a>MEX库函数</h3><p>用于MEX程序与MATLAB环境交换数据和从MATLAB工作空间获取相应信息。常用MEX库函数：</p><p>mexCallMATLAB：用于调用MATLAB函数。</p><p>mexErrMsgTxt：输出从MATLAB工作空间获取运行过程错误信息。</p><p>mexEvalString：用于在MATLAB环境中执行表达式。</p><p>mexGetVariable：用于MEX文件从MATLAB工作区获取指定变量。</p><p>mexPutVariable：用于MEX文件向MATLAB工作区输出指定变量。</p><h3 id="MEX文件源程序的构成"><a class="header-anchor" href="#MEX文件源程序的构成">¶</a>MEX文件源程序的构成</h3><h4 id="入口子程序"><a class="header-anchor" href="#入口子程序">¶</a>入口子程序</h4><p>定义被MATLAB调用的外部子程序的入口地址、MATLAB系统和计算子程序传递的参数等 。入口子程序的定义格式如下：</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">void mexFunction(int nlhs,mxArray <span class="emphasis">*plhs[],int nrhs,const mxArray *</span>prhs[])</span><br><span class="line">&#123;</span><br><span class="line"> …</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><blockquote><p>其中，nlhs定义输出结果的个数，plhs指向用于返回输出结果的对象，nrhs定义输入 参数的个数，prhs指向存储输入参数的对象。</p></blockquote><h4 id="计算子程序"><a class="header-anchor" href="#计算子程序">¶</a>计算子程序</h4><p>包含所有完成计算功能的程序代码，由入口子程序调用。计算子程序的定 义格式如下：</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">返回值类型 子程序名(输入形参表)</span><br><span class="line">&#123;</span><br><span class="line"> …</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>ex:用C++编写判断两个数是否互质的MEX文件源程序，并编译生成 MEX文件。调用该MEX文件，若两个数互质，则输出1，否则输出0。</p><ul><li>新建源程序MEXDemo.cpp</li></ul><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;mex.h&quot;</span> </span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">isCoprime</span><span class="params">(<span class="keyword">double</span> *inx,<span class="keyword">double</span> *outy)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"> <span class="keyword">int</span> x=*inx, y=*outy, tmp;</span><br><span class="line"> <span class="keyword">if</span>(x&lt;y)</span><br><span class="line"> &#123; tmp=x; x=y; y=tmp;&#125;</span><br><span class="line"> tmp=x%y;</span><br><span class="line"> <span class="keyword">while</span>(tmp)</span><br><span class="line"> &#123;</span><br><span class="line"> x=y; y=tmp; tmp=x%y;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">if</span>(y==<span class="number">1</span>)</span><br><span class="line"> <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line"> <span class="keyword">else</span></span><br><span class="line"> <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125; </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">mexFunction</span><span class="params">( <span class="keyword">int</span> nlhs, mxArray *plhs[], <span class="keyword">int</span> nrhs, <span class="keyword">const</span> mxArray *prhs[] )</span></span></span><br><span class="line"><span class="function"></span>&#123;<span class="keyword">double</span> *result;</span><br><span class="line"> <span class="keyword">int</span> m,n,i;</span><br><span class="line"><span class="comment">//检查调用时输入、输出是否符合要求</span></span><br><span class="line"> <span class="keyword">if</span>(nrhs!=<span class="number">2</span>) &#123;</span><br><span class="line"> mexErrMsgTxt(<span class="string">&quot;输入参数应有两个！&quot;</span>); <span class="keyword">return</span>; &#125;</span><br><span class="line"> <span class="keyword">if</span>(nlhs!=<span class="number">1</span>) &#123;</span><br><span class="line"> mexErrMsgTxt(<span class="string">&quot;输出参数应只有1个！&quot;</span>); <span class="keyword">return</span>; &#125;</span><br><span class="line"> <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">2</span>;i++)&#123;</span><br><span class="line"> m = <span class="keyword">int</span>(mxGetM(prhs[i]));</span><br><span class="line"> n = <span class="keyword">int</span>(mxGetN(prhs[i]));</span><br><span class="line"> <span class="keyword">if</span>( !mxIsDouble(prhs[i]) || m!=<span class="number">1</span> || n!=<span class="number">1</span>) &#123;</span><br><span class="line"> mexErrMsgTxt(<span class="string">&quot;输入参数必须是单个的数！&quot;</span>); <span class="keyword">return</span>; &#125;</span><br><span class="line"> &#125;</span><br><span class="line">z= MEXdemo(x, y)</span><br><span class="line"><span class="comment">//在MATLAB工作区建立一个矩阵，用于存放计算结果，</span></span><br><span class="line"><span class="comment">//矩阵的大小与输入实参的大小相同。</span></span><br><span class="line">plhs[<span class="number">0</span>] = mxCreateDoubleMatrix(m,n, mxREAL);</span><br><span class="line"> result = mxGetPr(plhs[<span class="number">0</span>]); <span class="comment">//获取MEX文件输出实参的地址</span></span><br><span class="line"> <span class="keyword">if</span> (isCoprime(mxGetPr(prhs[<span class="number">0</span>]), mxGetPr(prhs[<span class="number">1</span>])))</span><br><span class="line"> *result=<span class="number">1</span>;</span><br><span class="line"> <span class="keyword">else</span></span><br><span class="line"> *result=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="MEX文件的编译"><a class="header-anchor" href="#MEX文件的编译">¶</a>MEX文件的编译</h3><ul><li>编译MEX程序</li></ul><p>&gt;&gt; mex MEXDemo.cpp</p><p>编译成功，将生成一个mex文件：MEXDemo.mexw64</p><blockquote><p>mexw64表示生成的是一个可以在64位Windows系统下运行的mex文件。</p></blockquote><ul><li>调用MEX文件</li></ul><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; rt = MEXDemo(<span class="number">11</span>,<span class="number">13</span>)</span><br><span class="line">rt =</span><br><span class="line"> <span class="number">1</span></span><br><span class="line">&gt;&gt; rt = MEXDemo(<span class="number">15</span>,<span class="number">33</span>)</span><br><span class="line">rt =</span><br><span class="line"> <span class="number">0</span></span><br></pre></td></tr></table></figure><h2 id="在其他语言程序中调用MATLAB函数"><a class="header-anchor" href="#在其他语言程序中调用MATLAB函数">¶</a>在其他语言程序中调用MATLAB函数</h2><ul><li>MATLAB引擎的概念</li><li>MATLAB引擎的使用</li><li>MATLAB引擎程序的编译与运行</li></ul><h3 id="MATLAB引擎的概念"><a class="header-anchor" href="#MATLAB引擎的概念">¶</a>MATLAB引擎的概念</h3><p>MATLAB引擎（engine）是用于和外部程序结合使用的一组函数和程序 库，在其他语言程序中利用MATLAB引擎来调用MATLAB中的函数。</p><ul><li>定义指向MATLAB引擎对象的指针</li></ul><p>Engine *mep</p><blockquote><p>其中， Engine指定指针类型，mep为指针变量。</p></blockquote><ul><li><p>C++常用引擎函数包括：</p><ul><li>Engine *engOpen(const char *startcmd);</li></ul><p>用于启动MATLAB计算引擎，打开一个MATLAB工作区，参数startcmd指定启动 Matlab引擎的方式。</p><ul><li>int engClose(Engine *ep);</li></ul><p>用于关闭计算引擎所打开的MATLAB工作区。</p><ul><li>mxArray *engGetVariable(Engine *ep, const char *name);</li></ul><p>用于从MATLAB引擎工作区读取数据 • int engPutVariable(Engine *ep, const char *name, const mxArray *pm); 用于向MATLAB引擎工作区输出数据。</p><ul><li>int engEvalString(Engine *ep, const char *string);</li></ul><p>用于执行MATLAB命令。</p></li></ul><h3 id="MATLAB引擎的使用"><a class="header-anchor" href="#MATLAB引擎的使用">¶</a>MATLAB引擎的使用</h3><p>使用MATLAB的计算引擎，需要使用mxArray变量，用来在MATLAB的工作空间和其他应用程序交换数据。</p><ul><li>创建mxArray变量。</li></ul><p>mxArray *mxCreateDoubleMatrix(mwSize m, mwSize n, mxComplexity CFlag);</p><ul><li>给mxArray类型的变量赋值。</li></ul><p>void * memcpy ( void * destinationPtr, const void * sourcePtr, size_t num );</p><blockquote><p>其中， destinationPtr、 sourcePtr分别为指向目标矩阵、源矩阵的指针， num指定 复制的数据个数（size_t是engine.h中定义的unsigned int或unsigned long的类型名 ）。</p></blockquote><ul><li>将变量放入MATLAB引擎所启动的工作区中</li></ul><p>用C++编写一个程序，该程序按极坐标方程ρ =a+bθ 计算数据点坐标，然后调 用MATLAB的绘图函数绘制出曲线。</p><ul><li>新建C++源程序文件Mengine.h 头文件engine.h</li></ul><p>包含了计算引擎库函数的定义，头文件iostream .h包含了输 入输出流操作方法的定义。因此在文件首加入两个宏命令和using语句。</p><p>程序如下：</p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;engine.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"> <span class="comment">//定义一个engine类型的指针ep，用于操作引擎对象。</span></span><br><span class="line"> Engine *ep;</span><br><span class="line"> <span class="comment">//定义mxArray 类型的指针，用于指向所调用MATLAB函数的输入对象。</span></span><br><span class="line"> mxArray *T = <span class="literal">NULL</span>, *R = <span class="literal">NULL</span>;</span><br><span class="line"> <span class="comment">//定义存储数据的变量，并按给定表达式生成数据。</span></span><br><span class="line"> <span class="keyword">double</span> t[<span class="number">180</span>],r[<span class="number">180</span>];</span><br><span class="line"> <span class="keyword">double</span> a,b;</span><br><span class="line"> a=<span class="number">2</span>;b=<span class="number">3</span>;</span><br><span class="line"> <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">180</span>;i++) &#123;</span><br><span class="line"> t[i]=i*<span class="number">0.1</span>;</span><br><span class="line"> r[i]=a+b*t[i]; &#125;</span><br><span class="line"><span class="comment">//启动MATLAB计算引擎</span></span><br><span class="line"><span class="comment">//Windows系统中，engOpen函数的参数为空字符串，指定在本机启动计算引擎。</span></span><br><span class="line"><span class="keyword">if</span> (!(ep = engOpen(<span class="string">&quot;&quot;</span>))) &#123;</span><br><span class="line"> <span class="built_in">cout</span>&lt;&lt; <span class="string">&quot;\n不能启动MATLAB引擎\n&quot;</span>;</span><br><span class="line"> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//建立MATLAB变量，调用MATLAB函数</span></span><br><span class="line"> T = mxCreateDoubleMatrix(<span class="number">1</span>, <span class="number">180</span>, mxREAL);</span><br><span class="line"> <span class="built_in">memcpy</span>((<span class="keyword">void</span> *)mxGetPr(T), (<span class="keyword">void</span> *)t, <span class="keyword">sizeof</span>(t));</span><br><span class="line"> engPutVariable(ep, <span class="string">&quot;T&quot;</span>, T);</span><br><span class="line"> R = mxCreateDoubleMatrix(<span class="number">1</span>, <span class="number">180</span>, mxREAL);</span><br><span class="line"> <span class="built_in">memcpy</span>((<span class="keyword">void</span> *)mxGetPr(R), (<span class="keyword">void</span> *)r, <span class="keyword">sizeof</span>(r));</span><br><span class="line"> engPutVariable(ep, <span class="string">&quot;R&quot;</span>, R);</span><br><span class="line"> engEvalString(ep, <span class="string">&quot;polar(T,R);&quot;</span>);</span><br><span class="line"> engEvalString(ep, <span class="string">&quot;title(&#x27;阿基米德螺线&#x27;);&quot;</span>); </span><br><span class="line"><span class="comment">//释放内存空间，关闭计算引擎</span></span><br><span class="line"> system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"> mxDestroyArray(T);</span><br><span class="line"> mxDestroyArray(R);</span><br><span class="line"> engClose(ep);</span><br><span class="line"> <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="MATLAB引擎程序的编译与运行"><a class="header-anchor" href="#MATLAB引擎程序的编译与运行">¶</a>MATLAB引擎程序的编译与运行</h3><p>使用mex命令对源程序文件进行编译。</p><p>&gt;&gt; mex -client engine Mengine.cpp</p><p>编译选项-client指定生成客户端程序， 选项engine指定连接时加入MATLAB计算引擎库。</p><p>启动MATLAB引擎后，应用程序会打开一个新的MATLAB进程，通过调用引擎函数可以控制这个进程完成计算和绘图操作。</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200831004147.png" alt=""></p><h1>思维导图</h1><div class="justified-gallery"><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200831163118.jpg" alt="专题1知识点总结_1_1"></p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200831163149.jpg" alt="专题2知识点总结_1_1"></p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200831163213.jpg" alt="专题3知识点总结_1_1"></p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200831163232.jpg" alt="专题4知识点总结_1_1"></p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200831163248.jpg" alt="专题5知识点总结_1_1"></p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200831163309.jpg" alt="专题6知识点总结_1_1"></p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200831163329.jpg" alt="专题7知识点总结_1_1"></p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200831163345.jpg" alt="专题8知识点总结_1_1"></p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200831163359.jpg" alt="专题9知识点总结_1_1"></p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20200831163037.jpg" alt="专题10知识点总结_1_1"></p>          </div>]]></content>
    
    
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; class=&quot;aplayer-secondary-script-marker&quot;&gt;&lt;/script&gt;&lt;h1&gt;引言&lt;/h1&gt;
&lt;p&gt;MATLAB语言的主要功能：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;数值计算&lt;/li&gt;
&lt;li&gt;符号计算&lt;/li&gt;
&lt;li&gt;图形绘制&lt;/li&gt;
&lt;li&gt;程序流程控制&lt;/li&gt;
&lt;li&gt;工具箱&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;MATLAB的优势:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;不需要过多了解各种数值计算方法的具体细节和计算公式，&lt;br&gt;
也不需要繁琐的底层编程。&lt;/li&gt;
&lt;li&gt;可以专注于实际问题的分析和设计，大大地提高:工作效率和&lt;br&gt;
质量，为科学研究与工程应用提供重要手段。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;MATLAB基础知识&lt;/h1&gt;
&lt;h2 id=&quot;数值类型&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#数值类型&quot;&gt;¶&lt;/a&gt;数值类型&lt;/h2&gt;
&lt;p&gt;数值数据类型的分类&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;整型&lt;/li&gt;
&lt;li&gt;浮点型&lt;/li&gt;
&lt;li&gt;复数型&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="matlab" scheme="http://stardust14.com/categories/matlab/"/>
    
    
    <category term="matlab" scheme="http://stardust14.com/tags/matlab/"/>
    
  </entry>
  
  <entry>
    <title>hexo一些配置（不定期更新）</title>
    <link href="http://stardust14.com/2020/08/10/hexo%E5%8D%9A%E5%AE%A2/"/>
    <id>http://stardust14.com/2020/08/10/hexo%E5%8D%9A%E5%AE%A2/</id>
    <published>2020-08-10T06:58:42.000Z</published>
    <updated>2020-10-29T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1>Front-matter</h1><p>这一部分是写博客时，档案最上方以<code>---</code>分隔的区域，用于指定个别参数。</p><h2 id="page-Front-matter"><a class="header-anchor" href="#page-Front-matter">¶</a>page Front-matter</h2><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title:</span><br><span class="line">date:</span><br><span class="line">updated:</span><br><span class="line">type:</span><br><span class="line">comments:</span><br><span class="line">description:</span><br><span class="line">keywords:</span><br><span class="line">top<span class="emphasis">_img:</span></span><br><span class="line"><span class="emphasis">mathjax:</span></span><br><span class="line"><span class="emphasis">katex:</span></span><br><span class="line"><span class="emphasis">aside:</span></span><br><span class="line"><span class="emphasis">aplayer：</span></span><br><span class="line"><span class="emphasis">top: 1</span></span><br><span class="line"><span class="emphasis">---</span></span><br></pre></td></tr></table></figure><table><thead><tr><th>写法</th><th>解释</th></tr></thead><tbody><tr><td>title</td><td>【必需】页面标题</td></tr><tr><td>date</td><td>【必需】页面创建日期</td></tr><tr><td>type</td><td>【必需】标籤、分类和友情链接三个页面需要配置</td></tr><tr><td>updated</td><td>【可选】页面更新日期</td></tr><tr><td>description</td><td>【可选】页面描述</td></tr><tr><td>keywords</td><td>【可选】页面关键字</td></tr><tr><td>comments</td><td>【可选】显示页面评论模块 (默认 true)</td></tr><tr><td>top_img</td><td>【可选】页面顶部图片</td></tr><tr><td>mathjax</td><td>【可选】显示 mathjax (当设置 mathjax 的 per_page: false 时，才需要配置，默认 false)</td></tr><tr><td>katex</td><td>【可选】显示 katex (当设置 katex 的 per_page: false 时，才需要配置，默认 false)</td></tr><tr><td>aside</td><td>【可选】显示侧边栏 (默认 true)</td></tr><tr><td>aplayer</td><td>【可选】在需要的页面加载 aplayer 的 js 和 css</td></tr><tr><td>highlight_shrink</td><td>【可选】配置代码框是否展开 (true/false)(默认为设置中 highlight_shrink 的配置)</td></tr><tr><td>top</td><td>【可选】支持文章置顶,数值越大,置顶的优先级越大</td></tr></tbody></table><h2 id="Post-Front-matter"><a class="header-anchor" href="#Post-Front-matter">¶</a>Post Front-matter</h2><blockquote><p>这是基于Butterfly主题下的写法</p></blockquote><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title:</span><br><span class="line">date:</span><br><span class="line">updated:</span><br><span class="line">tags:</span><br><span class="line">categories:</span><br><span class="line">keywords:</span><br><span class="line">description:</span><br><span class="line">top<span class="emphasis">_img:</span></span><br><span class="line"><span class="emphasis">comments：</span></span><br><span class="line"><span class="emphasis">cover:  </span></span><br><span class="line"><span class="emphasis">toc:  </span></span><br><span class="line"><span class="emphasis">toc_</span>number:</span><br><span class="line">auto<span class="emphasis">_open:</span></span><br><span class="line"><span class="emphasis">copyright:</span></span><br><span class="line"><span class="emphasis">copyright_</span>author:</span><br><span class="line">copyright<span class="emphasis">_author_</span>href:</span><br><span class="line">copyright<span class="emphasis">_url:</span></span><br><span class="line"><span class="emphasis">copyright_</span>info:</span><br><span class="line">mathjax:</span><br><span class="line">katex:</span><br><span class="line">aplayer：</span><br><span class="line">highlight<span class="emphasis">_shrink：</span></span><br></pre></td></tr></table></figure><table><thead><tr><th>写法</th><th>解释</th></tr></thead><tbody><tr><td>title</td><td>【必需】文章标题</td></tr><tr><td>date</td><td>【必需】文章创建日期</td></tr><tr><td>updated</td><td>【可选】文章更新日期</td></tr><tr><td>tags</td><td>【可选】文章标籤</td></tr><tr><td>categories</td><td>【可选】文章分类</td></tr><tr><td>keywords</td><td>【可选】文章关键字</td></tr><tr><td>description</td><td>【可选】文章描述</td></tr><tr><td>top_img</td><td>【可选】文章顶部图片</td></tr><tr><td>cover</td><td>【可选】文章缩略图 (如果没有设置  top_img, 文章页顶部将显示缩略图，可设为 false / 图片地址 / 留空)</td></tr><tr><td>comments</td><td>【可选】显示文章评论模块 (默认  true)</td></tr><tr><td>toc</td><td>【可选】显示文章 TOC (默认为设置中 toc 的 enable 配置)</td></tr><tr><td>toc_number</td><td>【可选】显示 toc_number (默认为设置中 toc 的 number 配置)</td></tr><tr><td>auto_open</td><td>【可选】是否自动打开 TOC (默认为设置中 toc 的 auto_open 配置)</td></tr><tr><td>copyright</td><td>【可选】显示文章版权模块 (默认为设置中 post_copyright 的 enable 配置)</td></tr><tr><td>copyright_author</td><td>【可选】文章版权模块的文章作者</td></tr><tr><td>copyright_author_href</td><td>【可选】文章版权模块的文章作者链接</td></tr><tr><td>copyright_url</td><td>【可选】文章版权模块的文章连结链接</td></tr><tr><td>copyright_info</td><td>【可选】文章版权模块的版权声明文字</td></tr><tr><td>mathjax</td><td>【可选】显示 mathjax (当设置 mathjax 的 per_page: false 时，才需要配置，默认 false)</td></tr><tr><td>katex</td><td>【可选】显示 katex (当设置  katex 的 per_page: false 时，才需要配置，默认 false)</td></tr><tr><td>aplayer</td><td>【可选】在需要的页面加载 aplayer 的 js 和 css, 请参考文章下面的音乐 配置</td></tr><tr><td>highlight_shrink</td><td>【可选】配置代码框是否展开 (true/false)(默认为设置中 highlight_shrink 的配置)</td></tr></tbody></table><h1>标签外挂</h1><h2 id="Note"><a class="header-anchor" href="#Note">¶</a>Note</h2><p>用法</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% note [class] [no-icon] %&#125;</span><br><span class="line">Any content (support inline tags too.io).</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">[class]   : default | primary | success | info | warning | danger.</span><br><span class="line">[no-icon] : Disable icon in note.</span><br><span class="line"></span><br><span class="line">All parameters are optional.</span><br></pre></td></tr></table></figure><div class="note info flat"><p>info 直接写在markdown下就可以</p><p>标籤外挂虽然能为主题带来一些额外的功能和 UI 方面的强化，但是，标籤外挂也有明显的限制，使用时请留意。</p></div><p>例如：</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% note default %&#125;</span><br><span class="line">default 提示块标籤</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary no-icon %&#125;</span><br><span class="line">primary 提示块标籤</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success %&#125;</span><br><span class="line">success 提示块标籤</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info %&#125;</span><br><span class="line">info 提示块标籤</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning %&#125;</span><br><span class="line">warning 提示块标籤</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger %&#125;</span><br><span class="line">danger 提示块标籤</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><div class="note default flat"><p>default 提示块标籤</p></div><div class="note primary no-icon flat"><p>primary 提示块标籤</p></div><div class="note success flat"><p>success 提示块标籤</p></div><div class="note info flat"><p>info 提示块标籤</p></div><div class="note warning flat"><p>warning 提示块标籤</p></div><div class="note danger flat"><p>danger 提示块标籤</p></div><h3 id="渐变note"><a class="header-anchor" href="#渐变note">¶</a>渐变note</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&#x27;tip&#x27;</span> &gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>默认情况<span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&#x27;tip success&#x27;</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>success<span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&#x27;tip error&#x27;</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>error<span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&#x27;tip warning&#x27;</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>warning<span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><div class='tip' ><p>默认情况<p></div><div class='tip success'><p>success<p></div><div class='tip error'><p>error<p></div><div class='tip warning'><p>warning<p></div><h2 id="Gallery-相册图库"><a class="header-anchor" href="#Gallery-相册图库">¶</a>Gallery(相册图库)</h2><p>写法：</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gallery-group-main&quot;</span>&gt;</span></span></span><br><span class="line">&#123;% galleryGroup name description link img-url %&#125;</span><br><span class="line">&#123;% galleryGroup name description link img-url %&#125;</span><br><span class="line">&#123;% galleryGroup name description link img-url %&#125;</span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure><ul><li>name：图库名字</li><li>description：图库描述</li><li>link：连接到对应相册的地址</li><li>img-url：图库封面的地址</li></ul><p>example：</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gallery-group-main&quot;</span>&gt;</span></span></span><br><span class="line">&#123;% galleryGroup &#x27;壁纸&#x27; &#x27;收藏的一些壁纸&#x27; &#x27;/Gallery/wallpaper&#x27; https://i.loli.net/2019/11/10/T7Mu8Aod3egmC4Q.png %&#125;</span><br><span class="line">&#123;% galleryGroup &#x27;漫威&#x27; &#x27;关于漫威的图片&#x27; &#x27;/Gallery/marvel&#x27; https://i.loli.net/2019/12/25/8t97aVlp4hgyBGu.jpg %&#125;</span><br><span class="line">&#123;% galleryGroup &#x27;OH MY GIRL&#x27; &#x27;关于OH MY GIRL的图片&#x27; &#x27;/Gallery/ohmygirl&#x27; https://i.loli.net/2019/12/25/hOqbQ3BIwa6KWpo.jpg %&#125;</span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure><div class="gallery-group-main">  <figure class="gallery-group">  <img class="gallery-group-img" src='https://i.loli.net/2019/11/10/T7Mu8Aod3egmC4Q.png' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">壁纸</div>  <p>收藏的一些壁纸</p>  <a href='/Gallery/wallpaper'></a>  </figcaption>  </figure>    <figure class="gallery-group">  <img class="gallery-group-img" src='https://i.loli.net/2019/12/25/8t97aVlp4hgyBGu.jpg' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">漫威</div>  <p>关于漫威的图片</p>  <a href='/Gallery/marvel'></a>  </figcaption>  </figure>    <figure class="gallery-group">  <img class="gallery-group-img" src='https://i.loli.net/2019/12/25/hOqbQ3BIwa6KWpo.jpg' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">OH MY GIRL</div>  <p>关于OH MY GIRL的图片</p>  <a href='/Gallery/ohmygirl'></a>  </figcaption>  </figure>  </div>### volantis 主题的 note 标签<h2 id="Gallery相册"><a class="header-anchor" href="#Gallery相册">¶</a>Gallery相册</h2><p>区别于旧版的 Gallery 相册，新的 Gallery 相册会自动根据图片长度进行排版，书写也更加方便，与 markdown 格式一样。可根据需要插入到相应的 md。</p><p>写法：</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% gallery %&#125;</span><br><span class="line">markdown 图片格式</span><br><span class="line">&#123;% endgallery %&#125;</span><br></pre></td></tr></table></figure><p>example:</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% gallery %&#125;</span><br><span class="line">![](https://i.loli.net/2019/12/25/Fze9jchtnyJXMHN.jpg)</span><br><span class="line">![](https://i.loli.net/2019/12/25/ryLVePaqkYm4TEK.jpg)</span><br><span class="line">![](https://i.loli.net/2019/12/25/gEy5Zc1Ai6VuO4N.jpg)</span><br><span class="line">![](https://i.loli.net/2019/12/25/d6QHbytlSYO4FBG.jpg)</span><br><span class="line">![](https://i.loli.net/2019/12/25/6nepIJ1xTgufatZ.jpg)</span><br><span class="line">![](https://i.loli.net/2019/12/25/E7Jvr4eIPwUNmzq.jpg)</span><br><span class="line">![](https://i.loli.net/2019/12/25/mh19anwBSWIkGlH.jpg)</span><br><span class="line">![](https://i.loli.net/2019/12/25/2tu9JC8ewpBFagv.jpg)</span><br><span class="line">&#123;% endgallery %&#125;</span><br></pre></td></tr></table></figure><h2 id="tag-hide"><a class="header-anchor" href="#tag-hide">¶</a>tag-hide</h2><p>如果你想把一些文字、内容隐藏起来，并提供按钮让用户点击显示。可以使用这个inline标签外挂。</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% hideInline content,display,bg,color %&#125;</span><br></pre></td></tr></table></figure><p>待续····</p><h2 id="Button"><a class="header-anchor" href="#Button">¶</a>Button</h2><blockquote><p>3.0以上适用</p></blockquote><p>使用方法</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% btn [url],[text],[icon],[color] [style] [layout] [position] [size] %&#125;</span><br><span class="line"></span><br><span class="line">[url]         : 链接</span><br><span class="line">[text]        : 按钮文字</span><br><span class="line">[icon]        : [可选] 图标</span><br><span class="line">[color]       : [可选] 按钮背景顔色(默认style时）</span><br><span class="line"><span class="code">                      按钮字体和边框顔色(outline时)</span></span><br><span class="line"><span class="code">                      default/blue/pink/red/purple/orange/green</span></span><br><span class="line"><span class="code">[style]       : [可选] 按钮样式 默认实心</span></span><br><span class="line"><span class="code">                      outline/留空</span></span><br><span class="line"><span class="code">[layout]      : [可选] 按钮佈局 默认为line</span></span><br><span class="line"><span class="code">                      block/留空</span></span><br><span class="line"><span class="code">[position]    : [可选] 按钮位置 前提是设置了layout为block 默认为左边</span></span><br><span class="line"><span class="code">                      center/right/留空</span></span><br><span class="line"><span class="code">[size]        : [可选] 按钮大小</span></span><br><span class="line"><span class="code">                      larger/留空</span></span><br></pre></td></tr></table></figure><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">This is my website, click the button &#123;% btn &#x27;https://stardust14.github.io/&#x27;,STAR %&#125;</span><br><span class="line">This is my website, click the button &#123;% btn &#x27;https://stardust14.github.io/&#x27;,STAR,far fa-hand-point-right %&#125;</span><br><span class="line">This is my website, click the button &#123;% btn &#x27;https://stardust14.github.io/&#x27;,STAR,,outline %&#125;</span><br><span class="line">This is my website, click the button &#123;% btn &#x27;https://stardust14.github.io/&#x27;,STAR,far fa-hand-point-right,outline %&#125;</span><br><span class="line">This is my website, click the button &#123;% btn &#x27;https://stardust14.github.io/&#x27;,STAR,far fa-hand-point-right,larger %&#125;</span><br></pre></td></tr></table></figure><p>This is my website, click the button <a class="btn-beautify button--animated " href="https://stardust14.github.io/"   title="STAR"><span>STAR</span></a><br>This is my website, click the button <a class="btn-beautify button--animated " href="https://stardust14.github.io/"   title="STAR"><i class="far fa-hand-point-right fa-fw"></i><span>STAR</span></a><br>This is my website, click the button <a class="btn-beautify button--animated outline" href="https://stardust14.github.io/"   title="STAR"><span>STAR</span></a><br>This is my website, click the button <a class="btn-beautify button--animated outline" href="https://stardust14.github.io/"   title="STAR"><i class="far fa-hand-point-right fa-fw"></i><span>STAR</span></a><br>This is my website, click the button <a class="btn-beautify button--animated larger" href="https://stardust14.github.io/"   title="STAR"><i class="far fa-hand-point-right fa-fw"></i><span>STAR</span></a></p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% btn &#x27;https://stardust14.github.io&#x27;,STAR,far fa-hand-point-right,block %&#125;</span><br><span class="line">&#123;% btn &#x27;https://stardust14.github.io&#x27;,STAR,far fa-hand-point-right,block center larger %&#125;</span><br><span class="line">&#123;% btn &#x27;https://stardust14.github.io&#x27;,STAR,far fa-hand-point-right,block right outline larger %&#125;</span><br></pre></td></tr></table></figure><a class="btn-beautify button--animated block" href="https://stardust14.github.io"   title="STAR"><i class="far fa-hand-point-right fa-fw"></i><span>STAR</span></a><a class="btn-beautify button--animated block center larger" href="https://stardust14.github.io"   title="STAR"><i class="far fa-hand-point-right fa-fw"></i><span>STAR</span></a><a class="btn-beautify button--animated block right outline larger" href="https://stardust14.github.io"   title="STAR"><i class="far fa-hand-point-right fa-fw"></i><span>STAR</span></a><h2 id="小标签及边框颜色"><a class="header-anchor" href="#小标签及边框颜色">¶</a>小标签及边框颜色</h2><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;inline-tag [red|green|blue|yellow|grey]&quot;</span>&gt;</span></span>语法<span class="xml"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;inline-tag red&quot;</span>&gt;</span></span>红色小标签<span class="xml"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;inline-tag green&quot;</span>&gt;</span></span>绿色小标签<span class="xml"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;inline-tag blue&quot;</span>&gt;</span></span>蓝色小标签<span class="xml"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;inline-tag yellow&quot;</span>&gt;</span></span>黄色小标签<span class="xml"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;inline-tag grey&quot;</span>&gt;</span></span>灰色小标签<span class="xml"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p><span class="inline-tag red">红色小标签</span><br><span class="inline-tag green">绿色小标签</span><br><span class="inline-tag blue">蓝色小标签</span><br><span class="inline-tag yellow">黄色小标签</span><br><span class="inline-tag grey">灰色小标签</span></p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;inline-tag&quot;</span> <span class="attr">style</span>=<span class="string">&quot;--Color:#881B12&quot;</span>&gt;</span>自定义颜色小标签<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><p><span class="inline-tag" style="--Color:#881B12">自定义颜色小标签</span></p><h3 id="边框"><a class="header-anchor" href="#边框">¶</a>边框</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;div-border [left|right|top|bottom] [red|green|blue|yellow|grey]&quot;</span>&gt;</span></span><br><span class="line">  语法</span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;div-border top red&quot;</span>&gt;</span>上边框<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;div-border right red&quot;</span>&gt;</span>右边框<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;div-border bottom red&quot;</span>&gt;</span>下边框<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;div-border left red&quot;</span>&gt;</span>左边框<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p class="div-border top red">上边框</p><p class="div-border right red">右边框</p><p class="div-border bottom red">下边框</p><p class="div-border left red">左边框</p><p>自定义颜色</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;inline-tag&quot;</span> <span class="attr">style</span>=<span class="string">&quot;--Color:#881B12&quot;</span>&gt;</span>自定义颜色小标签<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><p><span class="inline-tag" style="--Color:#881B12">自定义颜色小标签</span></p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;div-border top style=&quot;</span><span class="attr">--Color:</span>#<span class="attr">881B12</span>&quot;&quot;&gt;</span>上边框<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p class="div-border top style="--Color:#881B12"">上边框</p><p>全边框及自定义颜色</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span></span></span><br><span class="line"><span class="tag">  <span class="attr">class</span>=<span class="string">&quot;div-border&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">style</span>=<span class="string">&quot;background-color: rgba(82,196,26,.1);border: 1px solid #52c41a;border-radius: 0.4rem;&quot;</span></span></span><br><span class="line"><span class="tag">&gt;</span></span><br><span class="line">  全边框</span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">/* 或者如下写法 */</span><br><span class="line"><span class="tag">&lt;<span class="name">p</span></span></span><br><span class="line"><span class="tag">  <span class="attr">style</span>=<span class="string">&quot;background-color: rgba(82,196,26,.1);border: 1px solid #52c41a;border-radius: 0.4rem;display: block;padding: 10px;&quot;</span></span></span><br><span class="line"><span class="tag">&gt;</span></span><br><span class="line">  全边框</span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">/* 内置样式 */</span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;div-border green&quot;</span>&gt;</span>绿色<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;div-border red&quot;</span>&gt;</span>红色<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;div-border yellow&quot;</span>&gt;</span>黄色<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;div-border grey&quot;</span>&gt;</span>灰色<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;div-border blue&quot;</span>&gt;</span>蓝色<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><h1>音乐</h1><p>由于部署aplayer插件出现好几次错误，也不懂，所以换用明月浩空音乐播放器，直接在主题目录下配置inject。</p><h1>JS Deliver加速</h1><p>对PicGo设置域名<code>https://cdn.jsdelivr.net/gh/用户名/图床仓库名</code></p><p>上传完毕后，我们就可以通过【<code>https://cdn.jsdelivr.net/gh/用户名/图床仓库名/图片路径</code>】加速访问我们的图片</p><p>例如<code>https://cdn.jsdelivr.net/gh/stardust14/picture/img/test01.jpg</code></p><p>或着使用：<code>https://cdn.jsdelivr.net/gh/你的用户名/你的仓库名@发布的版本号/文件路径</code></p><blockquote><p>注意：</p></blockquote><h1>多窗口显示</h1><p>使用方法</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% tabs Unique name, [index] %&#125;</span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- tab [Tab caption] [@icon] --&gt;</span></span></span><br><span class="line">Any content (support inline tags too).</span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- endtab --&gt;</span></span></span><br><span class="line">&#123;% endtabs %&#125;</span><br><span class="line"></span><br><span class="line">Unique name   : Unique name of tabs block tag without comma.</span><br><span class="line"><span class="code">                Will be used in #id&#x27;s as prefix for each tab with their index numbers.</span></span><br><span class="line"><span class="code">                If there are whitespaces in name, for generate #id all whitespaces will replaced by dashes.</span></span><br><span class="line"><span class="code">                Only for current url of post/page must be unique!</span></span><br><span class="line"><span class="code">[index]       : Index number of active tab.</span></span><br><span class="line"><span class="code">                If not specified, first tab (1) will be selected.</span></span><br><span class="line"><span class="code">                If index is -1, no tab will be selected. It&#x27;s will be something like spoiler.</span></span><br><span class="line"><span class="code">                Optional parameter.</span></span><br><span class="line"><span class="code">[Tab caption] : Caption of current tab.</span></span><br><span class="line"><span class="code">                If not caption specified, unique name with tab index suffix will be used as caption of tab.</span></span><br><span class="line"><span class="code">                If not caption specified, but specified icon, caption will empty.</span></span><br><span class="line"><span class="code">                Optional parameter.</span></span><br><span class="line"><span class="code">[@icon]       : FontAwesome icon name (full-name, look like &#x27;fas fa-font&#x27;)</span></span><br><span class="line"><span class="code">                Can be specified with or without space; e.g. &#x27;Tab caption @icon&#x27; similar to &#x27;Tab caption@icon&#x27;.</span></span><br><span class="line"><span class="code">                Optional parameter.</span></span><br></pre></td></tr></table></figure><blockquote><p>Demo 1 - 预设选择第一个【默认】</p></blockquote><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% tabs test1 %&#125;</span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- tab --&gt;</span></span></span><br><span class="line"><span class="strong">**This is Tab 1.**</span></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- endtab --&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- tab --&gt;</span></span></span><br><span class="line"><span class="strong">**This is Tab 2.**</span></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- endtab --&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- tab --&gt;</span></span></span><br><span class="line"><span class="strong">**This is Tab 3.**</span></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- endtab --&gt;</span></span></span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><div class="tabs" id="test1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test1-1">test1 1</button></li><li class="tab"><button type="button" data-href="#test1-2">test1 2</button></li><li class="tab"><button type="button" data-href="#test1-3">test1 3</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><p><strong>This is Tab 1.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-2"><p><strong>This is Tab 2.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-3"><p><strong>This is Tab 3.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><blockquote><p>Demo 2 - 预设选择tabs</p></blockquote><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% tabs test2, 3 %&#125;</span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- tab --&gt;</span></span></span><br><span class="line"><span class="strong">**This is Tab 1.**</span></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- endtab --&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- tab --&gt;</span></span></span><br><span class="line"><span class="strong">**This is Tab 2.**</span></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- endtab --&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- tab --&gt;</span></span></span><br><span class="line"><span class="strong">**This is Tab 3.**</span></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- endtab --&gt;</span></span></span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><div class="tabs" id="test2"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#test2-1">test2 1</button></li><li class="tab"><button type="button" data-href="#test2-2">test2 2</button></li><li class="tab active"><button type="button" data-href="#test2-3">test2 3</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="test2-1"><p><strong>This is Tab 1.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test2-2"><p><strong>This is Tab 2.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="test2-3"><p><strong>This is Tab 3.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><blockquote><p>Demo 3 - 无预设值</p></blockquote><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% tabs test3, -1 %&#125;</span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- tab --&gt;</span></span></span><br><span class="line"><span class="strong">**This is Tab 1.**</span></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- endtab --&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- tab --&gt;</span></span></span><br><span class="line"><span class="strong">**This is Tab 2.**</span></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- endtab --&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- tab --&gt;</span></span></span><br><span class="line"><span class="strong">**This is Tab 3.**</span></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- endtab --&gt;</span></span></span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><div class="tabs" id="test3"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#test3-1">test3 1</button></li><li class="tab"><button type="button" data-href="#test3-2">test3 2</button></li><li class="tab"><button type="button" data-href="#test3-3">test3 3</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="test3-1"><p><strong>This is Tab 1.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test3-2"><p><strong>This is Tab 2.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test3-3"><p><strong>This is Tab 3.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><blockquote><p>Demo 4 - 自定义Tab名 + 只有icon + icon和Tab名</p></blockquote><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% tabs test4 %&#125;</span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- tab 第一个Tab --&gt;</span></span></span><br><span class="line"><span class="strong">**tab名字为第一个Tab**</span></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- endtab --&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- tab @fab fa-apple-pay --&gt;</span></span></span><br><span class="line"><span class="strong">**只有图标 没有Tab名字**</span></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- endtab --&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- tab 炸弹@fas fa-bomb --&gt;</span></span></span><br><span class="line"><span class="strong">**名字+icon**</span></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- endtab --&gt;</span></span></span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><div class="tabs" id="test4"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test4-1">第一个Tab</button></li><li class="tab"><button type="button" data-href="#test4-2"><i class="fab fa-apple-pay" style="text-align: center;"></i></button></li><li class="tab"><button type="button" data-href="#test4-3"><i class="fas fa-bomb"></i>炸弹</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test4-1"><p><strong>tab名字为第一个Tab</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-2"><p><strong>只有图标 没有Tab名字</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-3"><p><strong>名字+icon</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><p>大多参考自Butterfly主题文档blog，具体详细请点击<a class="btn-beautify button--animated " href="https://butterfly.js.org/posts/4aa8abbe/#Tabs"   title="点我啊"><i class="far fa-hand-point-right fa-fw"></i><span>点我啊</span></a></p><h1>PDF文件上传</h1><p>先创建一个文件夹在source目录下，用<code>hexo new page pdf</code>，把上传的文件夹复制到这个文件夹下，然后hexo g，hexo d，上传到GitHub上去。用网址<code>博客域名/pdf/如果讓我重做一次研究生.pdf</code>就可以访问这个pdf文件了</p><p>安装插件</p><p><code>cnpm i hexo-pdf -S</code></p><p>在md文章中添加以下代码</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">&#123;% pdf https://stardust14.github.io/pdf/如果讓我重做一次研究生.pdf %&#125;</span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h1>hexo博客主题butterfly升级</h1><ol><li><p>先进入themes文件夹，使用Git Bash工具跳转到主题文件对应的文件中，例如<code>cd butterfly1</code></p></li><li><p>先更新工作的状态树：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">git add .</span><br></pre></td></tr></table></figure></li><li><p>之后，输入如下命令，将文件放在堆栈中，获取更新后，再弹栈：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">git stash</span><br><span class="line">git pull</span><br><span class="line">git stash pop</span><br></pre></td></tr></table></figure></li></ol><p>操作截图：</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201007101322.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201007101429.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201007101552.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201007101653.png" alt=""></p><h2 id="附：相关Git命令知识"><a class="header-anchor" href="#附：相关Git命令知识">¶</a>附：相关Git命令知识</h2><p><strong>git add .</strong><br>他会监控工作区的状态树，使用它会把工作时的所有变化提交到暂存区，包括文件内容修改(modified)以及新文件(new)，但不包括被删除的文件。</p><p><strong>git stash</strong><br>能够将所有未提交的修改（工作区和暂存区）保存至堆栈中，用于后续恢复当前工作目录。</p><p><strong>git stash save</strong><br>作用等同于git stash，区别是可以加一些注释</p><p><strong>git stash list</strong><br>查看当前stash中的内容</p><p><strong>git stash pop</strong><br>将当前stash中的内容弹出，并应用到当前分支对应的工作目录上。<br>注：该命令将堆栈中最近保存的内容删除（栈是先进后出）<br>如果从stash中恢复的内容和当前目录中的内容发生了冲突，也就是说，恢复的内容和当前目录修改了同一行的数据，那么会提示报错，需要解决冲突，可以通过创建新的分支来解决冲突。</p><p><strong>git stash apply</strong><br>将堆栈中的内容应用到当前目录，不同于git stash pop，该命令不会将内容从堆栈中删除，也就说该命令能够将堆栈的内容多次应用到工作目录中，适应于多个分支的情况。<br>堆栈中的内容并没有删除。<br>可以使用git stash apply + stash名字（如stash@{1}）指定恢复哪个stash到当前的工作目录。</p><p><strong>git stash clear</strong><br>清除堆栈中的所有内容</p><p><strong>git stash show</strong><br>查看堆栈中最新保存的stash和当前目录的差异。</p><blockquote><p>通过<code>git stash</code>将工作区恢复到上次提交的内容，同时备份本地所做的修改，之后就可以正常<code>git pull</code>了，<code>git pull</code>完成后，执行<code>git stash pop</code>将之前本地做的修改应用到当前工作区。</p></blockquote><p>参考网上的文章 <a class="btn-beautify button--animated " href="https://blog.csdn.net/qq_41462923/article/details/100149605"   title="跳转到文章"><span>跳转到文章</span></a></p><h1>在本地上传到GitHub上代码</h1><p>三个命令：</p><ol><li><code>git add .</code></li><li><code>git commit -m&quot;这里添加修改的备注&quot;</code></li><li><code>git push -u origin master</code> 上传到GitHub上去</li></ol><h1>文章加密</h1><p>hexo博客butterfly好像没有文章加密的功能,因此要安装插件进行文章加密</p><h2 id="安装"><a class="header-anchor" href="#安装">¶</a>安装</h2><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">npm install --save hexo-blog-encrypt</span><br></pre></td></tr></table></figure><h2 id="使用说明"><a class="header-anchor" href="#使用说明">¶</a>使用说明</h2><ul><li>将“password”加入到Front-matter中</li></ul><p>也可按照标签加密</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: Hello World</span><br><span class="line">tags:</span><br><span class="line"><span class="bullet">-</span> 作为日记加密</span><br><span class="line">date: 2016-03-30 21:12:21</span><br><span class="line">password: mikemessi</span><br><span class="line">abstract: 有东西被加密了, 请输入密码查看.</span><br><span class="line">message: 您好, 这里需要密码.</span><br><span class="line">wrong<span class="emphasis">_pass_</span>message: 抱歉, 这个密码看着不太对, 请再试试.</span><br><span class="line">wrong<span class="emphasis">_hash_</span>message: 抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.</span><br><span class="line">---</span><br></pre></td></tr></table></figure><ul><li>密码的主题</li></ul><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: &#x27;Theme Test - Xray&#x27;</span><br><span class="line">date: 2020-12-23 22:21:50</span><br><span class="line">tags:</span><br><span class="line">theme: xray</span><br><span class="line">password: hello</span><br><span class="line">message: This is encrypted by Theme - xray</span><br><span class="line">--</span><br></pre></td></tr></table></figure><h1>文章置顶</h1><p>使用插件<code>hexo-generator-index</code>，修改源码</p><p>修改博客目录下的“<code>node_modules\hexo-generator-index\lib</code>”目录，其中的“<code>generator.js</code>”文件就是需要修改的文件。</p><p>实现该功能需要在<code>const posts = locals.posts.sort(config.index_generator.order_by);</code><br>代码下添加一下内容：</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">  posts.data = posts.data.sort(function(a, b) &#123;</span><br><span class="line"><span class="code">    if(a.top &amp;&amp; b.top) &#123; // 两篇文章都有top，top大的在前</span></span><br><span class="line"><span class="code">        if(a.top == b.top)</span></span><br><span class="line"><span class="code">return b.date - a.date; // 若top值一样，最新的文章在前面</span></span><br><span class="line"><span class="code">        else</span></span><br><span class="line"><span class="code">return b.top - a.top; // top大的在前面</span></span><br><span class="line"><span class="code">    &#125;</span></span><br><span class="line"><span class="code">    else if(a.top &amp;&amp; !b.top) &#123; // 以下是只有一篇文章top有定义，那么将有top的排在前面</span></span><br><span class="line"><span class="code">        return -1;</span></span><br><span class="line"><span class="code">    &#125;</span></span><br><span class="line"><span class="code">    else if(!a.top &amp;&amp; b.top) &#123;</span></span><br><span class="line"><span class="code">        return 1;</span></span><br><span class="line"><span class="code">    &#125;</span></span><br><span class="line"><span class="code">    else return b.date - a.date; //都没有top标签，最新的文章在前面</span></span><br><span class="line"><span class="code">&#125;);</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20210407180508.png" alt=""></p><p>直接在文章的front-matter区域里添加<code>sticky: 100</code>属性来把这篇文章置顶。数值越大，置顶的优先级越大。</p>]]></content>
    
    
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; class=&quot;aplayer-secondary-script-marker&quot;&gt;&lt;/script&gt;&lt;h1&gt;Front-matter&lt;/h1&gt;
&lt;p&gt;这一部分是写博客时，档案最上方以&lt;code&gt;---&lt;/code&gt;分隔的区域，用于指定个别参数。&lt;/p&gt;
&lt;h2 id=&quot;page-Front-matter&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#page-Front-matter&quot;&gt;¶&lt;/a&gt;page Front-matter&lt;/h2&gt;
&lt;figure class=&quot;highlight markdown&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;---&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;title:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;date:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;updated:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;type:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;comments:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;description:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;keywords:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;top&lt;span class=&quot;emphasis&quot;&gt;_img:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;emphasis&quot;&gt;mathjax:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;emphasis&quot;&gt;katex:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;emphasis&quot;&gt;aside:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;emphasis&quot;&gt;aplayer：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;emphasis&quot;&gt;top: 1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;emphasis&quot;&gt;---&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;写法&lt;/th&gt;
&lt;th&gt;解释&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;title&lt;/td&gt;
&lt;td&gt;【必需】页面标题&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;date&lt;/td&gt;
&lt;td&gt;【必需】页面创建日期&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;type&lt;/td&gt;
&lt;td&gt;【必需】标籤、分类和友情链接三个页面需要配置&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;updated&lt;/td&gt;
&lt;td&gt;【可选】页面更新日期&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;description&lt;/td&gt;
&lt;td&gt;【可选】页面描述&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;keywords&lt;/td&gt;
&lt;td&gt;【可选】页面关键字&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;comments&lt;/td&gt;
&lt;td&gt;【可选】显示页面评论模块 (默认 true)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;top_img&lt;/td&gt;
&lt;td&gt;【可选】页面顶部图片&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;mathjax&lt;/td&gt;
&lt;td&gt;【可选】显示 mathjax (当设置 mathjax 的 per_page: false 时，才需要配置，默认 false)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;katex&lt;/td&gt;
&lt;td&gt;【可选】显示 katex (当设置 katex 的 per_page: false 时，才需要配置，默认 false)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;aside&lt;/td&gt;
&lt;td&gt;【可选】显示侧边栏 (默认 true)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;aplayer&lt;/td&gt;
&lt;td&gt;【可选】在需要的页面加载 aplayer 的 js 和 css&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;highlight_shrink&lt;/td&gt;
&lt;td&gt;【可选】配置代码框是否展开 (true/false)(默认为设置中 highlight_shrink 的配置)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;top&lt;/td&gt;
&lt;td&gt;【可选】支持文章置顶,数值越大,置顶的优先级越大&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&quot;Post-Front-matter&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#Post-Front-matter&quot;&gt;¶&lt;/a&gt;Post Front-matter&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;这是基于Butterfly主题下的写法&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight markdown&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;---&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;title:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;date:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;updated:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tags:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;categories:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;keywords:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;description:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;top&lt;span class=&quot;emphasis&quot;&gt;_img:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;emphasis&quot;&gt;comments：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;emphasis&quot;&gt;cover:  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;emphasis&quot;&gt;toc:  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;emphasis&quot;&gt;toc_&lt;/span&gt;number:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;auto&lt;span class=&quot;emphasis&quot;&gt;_open:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;emphasis&quot;&gt;copyright:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;emphasis&quot;&gt;copyright_&lt;/span&gt;author:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;copyright&lt;span class=&quot;emphasis&quot;&gt;_author_&lt;/span&gt;href:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;copyright&lt;span class=&quot;emphasis&quot;&gt;_url:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;emphasis&quot;&gt;copyright_&lt;/span&gt;info:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mathjax:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;katex:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;aplayer：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;highlight&lt;span class=&quot;emphasis&quot;&gt;_shrink：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;写法&lt;/th&gt;
&lt;th&gt;解释&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;title&lt;/td&gt;
&lt;td&gt;【必需】文章标题&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;date&lt;/td&gt;
&lt;td&gt;【必需】文章创建日期&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;updated&lt;/td&gt;
&lt;td&gt;【可选】文章更新日期&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;tags&lt;/td&gt;
&lt;td&gt;【可选】文章标籤&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;categories&lt;/td&gt;
&lt;td&gt;【可选】文章分类&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;keywords&lt;/td&gt;
&lt;td&gt;【可选】文章关键字&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;description&lt;/td&gt;
&lt;td&gt;【可选】文章描述&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;top_img&lt;/td&gt;
&lt;td&gt;【可选】文章顶部图片&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cover&lt;/td&gt;
&lt;td&gt;【可选】文章缩略图 (如果没有设置  top_img, 文章页顶部将显示缩略图，可设为 false / 图片地址 / 留空)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;comments&lt;/td&gt;
&lt;td&gt;【可选】显示文章评论模块 (默认  true)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;toc&lt;/td&gt;
&lt;td&gt;【可选】显示文章 TOC (默认为设置中 toc 的 enable 配置)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;toc_number&lt;/td&gt;
&lt;td&gt;【可选】显示 toc_number (默认为设置中 toc 的 number 配置)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;auto_open&lt;/td&gt;
&lt;td&gt;【可选】是否自动打开 TOC (默认为设置中 toc 的 auto_open 配置)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;copyright&lt;/td&gt;
&lt;td&gt;【可选】显示文章版权模块 (默认为设置中 post_copyright 的 enable 配置)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;copyright_author&lt;/td&gt;
&lt;td&gt;【可选】文章版权模块的文章作者&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;copyright_author_href&lt;/td&gt;
&lt;td&gt;【可选】文章版权模块的文章作者链接&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;copyright_url&lt;/td&gt;
&lt;td&gt;【可选】文章版权模块的文章连结链接&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;copyright_info&lt;/td&gt;
&lt;td&gt;【可选】文章版权模块的版权声明文字&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;mathjax&lt;/td&gt;
&lt;td&gt;【可选】显示 mathjax (当设置 mathjax 的 per_page: false 时，才需要配置，默认 false)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;katex&lt;/td&gt;
&lt;td&gt;【可选】显示 katex (当设置  katex 的 per_page: false 时，才需要配置，默认 false)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;aplayer&lt;/td&gt;
&lt;td&gt;【可选】在需要的页面加载 aplayer 的 js 和 css, 请参考文章下面的音乐 配置&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;highlight_shrink&lt;/td&gt;
&lt;td&gt;【可选】配置代码框是否展开 (true/false)(默认为设置中 highlight_shrink 的配置)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;</summary>
    
    
    
    <category term="hexo使用手册" scheme="http://stardust14.com/categories/hexo%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/"/>
    
    
    <category term="hexo" scheme="http://stardust14.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Python基础知识</title>
    <link href="http://stardust14.com/2020/07/28/Python%E5%AD%A6%E4%B9%A0/"/>
    <id>http://stardust14.com/2020/07/28/Python%E5%AD%A6%E4%B9%A0/</id>
    <published>2020-07-28T07:22:21.000Z</published>
    <updated>2020-08-07T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1>前言</h1><p>Python是一种面向对象、 解释型、弱类型的脚本语言,它也是一种功能强大而完善的通用型语言。</p><p>Python的两大特色是<strong>清晰的语法</strong>和<strong>可扩展性</strong>:</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">Python的语法非常清晰,它甚至不是一 种格式自由的语言。例如,它要求if语句的下一-行必须向右缩进,否则不能通过编译。</span><br><span class="line">Python的可扩展性体现为它的模块, Python具有脚本语言中最丰富和强大的类库(这些类库被形象地称为&quot;batteries included , 内置电池”), 这些类库覆盖 了文件I/O、GUI、 网络编程、数据库访问、文本操作等绝大部分应用场景。</span><br></pre></td></tr></table></figure><blockquote><p>+“空格” 出现小圆点</p></blockquote><p>学习通过https://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000</p><h1>基础语法</h1><h2 id="变量命名规则"><a class="header-anchor" href="#变量命名规则">¶</a>变量命名规则</h2><ul><li>变量必须以字母(a-Z,A-Z)或下划线(_)开头</li><li>其他字符可以是字母，数字或</li><li>变量<em><strong>区分大小写</strong></em></li><li>Python关键字不能用作变量名。</li><li>变量的命名不能以数字来开头</li></ul><p>命名规范：</p><ul><li>见名知意，尽量使用有语义的单词命名。如使用password用作密码，<code>username</code>用户名。</li><li>小驼峰式命名法:第一个单词首字母小写其他单词首字母大写，如<code>userName</code></li><li>大驼峰式命名法:全部单词首字母都用大写， 如<code>UserName</code></li><li>下划线命名法:每个单词用_下划线连接，如<code>user_name</code>.</li></ul><h2 id="python保留字"><a class="header-anchor" href="#python保留字">¶</a>python保留字</h2><p>保留字即关键字，我们不能把它们用作任何标识符名称。Python 的标准库提供了一个 keyword 模块，可以输出当前版本的所有关键字：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> keyword</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>keyword.kwlist</span><br><span class="line">[<span class="string">&#x27;False&#x27;</span>, <span class="string">&#x27;None&#x27;</span>, <span class="string">&#x27;True&#x27;</span>, <span class="string">&#x27;and&#x27;</span>, <span class="string">&#x27;as&#x27;</span>, <span class="string">&#x27;assert&#x27;</span>, <span class="string">&#x27;break&#x27;</span>, <span class="string">&#x27;class&#x27;</span>, <span class="string">&#x27;continue&#x27;</span>, <span class="string">&#x27;def&#x27;</span>, <span class="string">&#x27;del&#x27;</span>, <span class="string">&#x27;elif&#x27;</span>, <span class="string">&#x27;else&#x27;</span>, <span class="string">&#x27;except&#x27;</span>, <span class="string">&#x27;finally&#x27;</span>, <span class="string">&#x27;for&#x27;</span>, <span class="string">&#x27;from&#x27;</span>, <span class="string">&#x27;global&#x27;</span>, <span class="string">&#x27;if&#x27;</span>, <span class="string">&#x27;import&#x27;</span>, <span class="string">&#x27;in&#x27;</span>, <span class="string">&#x27;is&#x27;</span>, <span class="string">&#x27;lambda&#x27;</span>, <span class="string">&#x27;nonlocal&#x27;</span>, <span class="string">&#x27;not&#x27;</span>, <span class="string">&#x27;or&#x27;</span>, <span class="string">&#x27;pass&#x27;</span>, <span class="string">&#x27;raise&#x27;</span>, <span class="string">&#x27;return&#x27;</span>, <span class="string">&#x27;try&#x27;</span>, <span class="string">&#x27;while&#x27;</span>, <span class="string">&#x27;with&#x27;</span>, <span class="string">&#x27;yield&#x27;</span>]</span><br></pre></td></tr></table></figure><h2 id="注释"><a class="header-anchor" href="#注释">¶</a>注释</h2><p>Python中单行注释以 <strong>#</strong> 开头</p><p>多行注释可以用多个 <strong>#</strong> 号，还有 <code>'''</code> 和 <code>&quot;&quot;&quot;</code></p><h2 id="多行语句"><a class="header-anchor" href="#多行语句">¶</a>多行语句</h2><p>Python 通常是一行写完一条语句，但如果语句很长，我们可以使用反斜杠()来实现多行语句。</p><p>在 [], {}, 或 () 中的多行语句，不需要使用反斜杠()</p><h2 id="等待用户输入"><a class="header-anchor" href="#等待用户输入">¶</a>等待用户输入</h2><p>执行下面的程序在按回车键后就会<strong>等待用户输入</strong>：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">input(<span class="string">&quot;\n\n按下 enter 键后退出。&quot;</span>)</span><br></pre></td></tr></table></figure><p>以上代码中 ，&quot;\n\n&quot;在结果输出前会输出两个新的空行。一旦用户按下 enter 键时，程序将退出。</p><h2 id="同一行显示多条语句"><a class="header-anchor" href="#同一行显示多条语句">¶</a>同一行显示多条语句</h2><p>Python可以在同一行中使用多条语句，语句之间使用分号(;)分割，以下是一个简单的实例：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> sys;x = <span class="string">&#x27;hello&#x27;</span>;sys.stdout.write(x + <span class="string">&#x27;\n&#x27;</span>)</span><br></pre></td></tr></table></figure><h2 id="多个语句构成代码组"><a class="header-anchor" href="#多个语句构成代码组">¶</a>多个语句构成代码组</h2><p>缩进相同的一组语句构成一个代码块，我们称之代码组。</p><p>像if、while、def和class这样的复合语句，首行以关键字开始，以冒号( : )结束，该行之后的一行或多行代码构成代码组。</p><p>我们将首行及后面的代码组称为一个子句(clause)。</p><h2 id="Print-输出"><a class="header-anchor" href="#Print-输出">¶</a>Print 输出</h2><p>print 默认输出是换行的，如果要实现不换行需要在变量末尾加上 <strong>end=&quot;&quot;</strong>：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">x=<span class="string">&quot;a&quot;</span></span><br><span class="line">y=<span class="string">&quot;b&quot;</span></span><br><span class="line"><span class="comment"># 换行输出</span></span><br><span class="line">print( x )</span><br><span class="line">print( y )</span><br><span class="line"> </span><br><span class="line">print(<span class="string">&#x27;---------&#x27;</span>)</span><br><span class="line"><span class="comment"># 不换行输出</span></span><br><span class="line">print( x, end=<span class="string">&quot; &quot;</span> )</span><br><span class="line">print( y, end=<span class="string">&quot; &quot;</span> )</span><br><span class="line">print()</span><br></pre></td></tr></table></figure><h2 id="import-与-from…import"><a class="header-anchor" href="#import-与-from…import">¶</a>import 与 from…import</h2><p>在 python 用 <code>import</code> 或者 <code>from...import</code> 来导入相应的模块。</p><p>将整个模块(somemodule)导入，格式为： <code>import somemodule</code></p><p>从某个模块中导入某个函数,格式为： <code>from somemodule import somefunction</code></p><p>从某个模块中导入多个函数,格式为： <code>from somemodule import firstfunc, secondfunc, thirdfunc</code></p><p>将某个模块中的全部函数导入，格式为： <code>from somemodule import </code></p><h2 id="多个变量赋值"><a class="header-anchor" href="#多个变量赋值">¶</a>多个变量赋值</h2><p>Python允许同时为多个变量进行赋值。</p><h2 id="行与缩进"><a class="header-anchor" href="#行与缩进">¶</a>行与缩进</h2><p>python最具特色的就是使用缩进来表示代码块，不需要使用大括号 <strong>{}</strong> 。</p><p>缩进的空格数是可变的，但是同一个代码块的语句必须包含相同的缩进空格数。</p><h1>基本数据类型</h1><p>Python3 中有六个标准的数据类型：</p><ul><li>Number（数字）</li><li>String（字符串）</li><li>List（列表）</li><li>Tuple（元组）</li><li>Set（集合）</li><li>Dictionary（字典）</li></ul><p>Python3 的六个标准数据类型中：</p><ul><li>**不可变数据（3 个）：**Number（数字）、String（字符串）、Tuple（元组）；</li><li>**可变数据（3 个）：**List（列表）、Dictionary（字典）、Set（集合）。</li></ul><h2 id="字符串"><a class="header-anchor" href="#字符串">¶</a>字符串</h2><ul><li><p>python中单引号和双引号使用完全相同。</p></li><li><p>使用三引号(’’'或&quot;&quot;&quot;)可以指定一个多行字符串。</p></li><li><p>转义符 ‘’</p></li><li><p>反斜杠可以用来转义，使用r可以让反斜杠不发生转义。。 如 r&quot;this is a line with \n&quot; 则\n会显示，并不是换行。</p></li><li><p>按字面意义级联字符串，如&quot;this &quot; &quot;is &quot; &quot;string&quot;会被自动转换为this is string。</p></li><li><p>字符串可以用 + 运算符连接在一起，用 * 运算符重复。</p></li><li><p>Python 中的字符串有两种索引方式，从左往右以 0 开始，从右往左以 -1 开始。</p></li><li><p>Python中的字符串不能改变。</p></li><li><p>Python 没有单独的字符类型，一个字符就是长度为 1 的字符串。</p></li><li><p>字符串的截取的语法格式如下：<strong>变量[头下标:尾下标:步长]</strong></p></li></ul> <figure class="highlight python"><table><tr><td class="code"><pre><span class="line">str = <span class="string">&#x27;helloworld&#x27;</span></span><br><span class="line">print(str)  <span class="comment"># 输出字符串</span></span><br><span class="line">print(str[<span class="number">0</span>:<span class="number">-1</span>])  <span class="comment"># 输出第一个到倒数第二个的所有字符</span></span><br><span class="line">print(str[<span class="number">0</span>])  <span class="comment"># 输出字符串第一个字符</span></span><br><span class="line">print(str[<span class="number">2</span>:<span class="number">5</span>])  <span class="comment"># 输出从第三个开始到第五个的字符</span></span><br><span class="line">print(str[<span class="number">2</span>:])  <span class="comment"># 输出从第三个开始后的所有字符</span></span><br><span class="line">print(str * <span class="number">2</span>)  <span class="comment"># 输出字符串两次</span></span><br><span class="line">print(str + <span class="string">&#x27;你好&#x27;</span>)  <span class="comment"># 连接字符串</span></span><br><span class="line"></span><br><span class="line">print(<span class="string">&#x27;------------------------------&#x27;</span>)</span><br><span class="line"></span><br><span class="line">print(<span class="string">&#x27;hello\nrunoob&#x27;</span>)  <span class="comment"># 使用反斜杠(\)+n转义特殊字符</span></span><br><span class="line">print(<span class="string">r&#x27;hello\nrunoob&#x27;</span>)  <span class="comment"># 在字符串前面添加一个 r，表示原始字符串，不会发生转义</span></span><br></pre></td></tr></table></figure><p>另外，反斜杠<code>\</code>可以作为续行符，表示下一行是上一行的延续。也可以使用 <strong>“”&quot;…&quot;&quot;&quot;</strong> 或者 <strong>‘’’…’’’</strong> 跨越多行。</p><p>注意，Python 没有单独的字符类型，一个字符就是长度为1的字符串。</p><p><strong>注意：</strong></p><ul><li>1、反斜杠可以用来转义，使用r可以让反斜杠不发生转义。</li><li>2、字符串可以用+运算符连接在一起，用*运算符重复。</li><li>3、Python中的字符串有两种索引方式，从左往右以0开始，从右往左以-1开始。</li><li>4、Python中的字符串不能改变。</li></ul><p>对于<font class='red'><strong>单个字符</strong></font>的编码，Python提供了<code>ord()</code>函数获取字符的整数表示，<code>chr()</code>函数把编码转换为对应的字符：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>ord(<span class="string">&#x27;A&#x27;</span>)</span><br><span class="line"><span class="number">65</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>ord(<span class="string">&#x27;中&#x27;</span>)</span><br><span class="line"><span class="number">20013</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>chr(<span class="number">66</span>)</span><br><span class="line"><span class="string">&#x27;B&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>chr(<span class="number">25991</span>)</span><br><span class="line"><span class="string">&#x27;文&#x27;</span></span><br></pre></td></tr></table></figure><p>如果知道字符的整数编码，还可以用十六进制这么写<code>str</code>：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt;<span class="string">&#x27;\u4e2d\u6587&#x27;</span></span><br><span class="line"><span class="string">&#x27;中文&#x27;</span></span><br></pre></td></tr></table></figure><p>由于Python的字符串类型是<code>str</code>，在内存中以Unicode表示，一个字符对应若干个字节。如果要在网络上传输，或者保存到磁盘上，就需要把<code>str</code>变为以字节为单位的<code>bytes</code>。</p><p>Python对<code>bytes</code>类型的数据用带<code>b</code>前缀的单引号或双引号表示：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">x = <span class="string">b&#x27;ABC&#x27;</span></span><br></pre></td></tr></table></figure><blockquote><p>要注意区分<code>'ABC'</code>和<code>b'ABC'</code>，前者是<code>str</code>，后者虽然内容显示得和前者一样，但<code>bytes</code>的每个字符都只占用一个字节。</p></blockquote><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&#x27;ABC&#x27;</span>.encode(<span class="string">&#x27;ascii&#x27;</span>)</span><br><span class="line"><span class="string">b&#x27;ABC&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&#x27;中文&#x27;</span>.encode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line"><span class="string">b&#x27;\xe4\xb8\xad\xe6\x96\x87&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&#x27;中文&#x27;</span>.encode(<span class="string">&#x27;ascii&#x27;</span>)</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;&lt;stdin&gt;&quot;</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">UnicodeEncodeError: <span class="string">&#x27;ascii&#x27;</span> codec can<span class="string">&#x27;t encode characters in position 0-1: ordinal not in range(128)</span></span><br></pre></td></tr></table></figure><p>上面的代码说明：纯英文的<code>str</code>可以用<code>ASCII</code>编码为<code>bytes</code>，内容是一样的，含有中文的<code>str</code>可以用<code>UTF-8</code>编码为<code>bytes</code>。含有中文的<code>str</code>无法用<code>ASCII</code>编码，因为中文编码的范围超过了<code>ASCII</code>编码的范围，Python会报错。</p><p>在<code>bytes</code>中，无法显示为ASCII字符的字节，用<code>\x##</code>显示。</p><p>反过来，如果我们从网络或磁盘上读取了字节流，那么读到的数据就是<code>bytes</code>。要把<code>bytes</code>变为<code>str</code>，就需要用<code>decode()</code>方法：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">b&#x27;ABC&#x27;</span>.decode(<span class="string">&#x27;ascii&#x27;</span>)</span><br><span class="line"><span class="string">&#x27;ABC&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">b&#x27;\xe4\xb8\xad\xe6\x96\x87&#x27;</span>.decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line"><span class="string">&#x27;中文&#x27;</span></span><br></pre></td></tr></table></figure><p>如果<code>bytes</code>中包含无法解码的字节，<code>decode()</code>方法会报错：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">b&#x27;\xe4\xb8\xad\xff&#x27;</span>.decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;&lt;pyshell#2&gt;&quot;</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    <span class="string">b&#x27;\xe4\xb8\xad\xff&#x27;</span>.decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">UnicodeDecodeError: <span class="string">&#x27;utf-8&#x27;</span> codec can<span class="string">&#x27;t decode byte 0xff in position 3: invalid start byte</span></span><br></pre></td></tr></table></figure><p>如果<code>bytes</code>中只有一小部分无效的字节，可以传入<code>errors='ignore'</code>忽略错误的字节：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">b&#x27;\xe4\xb8\xad\xff&#x27;</span>.decode(<span class="string">&#x27;utf-8&#x27;</span>,errors=<span class="string">&#x27;ignore&#x27;</span>)</span><br><span class="line"><span class="string">&#x27;中&#x27;</span></span><br></pre></td></tr></table></figure><p>要计算<code>str</code>包含多少个字符，可以用<code>len()</code>函数：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>len(<span class="string">&#x27;safkdbafldbkjlB LB &#x27;</span>)</span><br><span class="line"><span class="number">19</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>len(<span class="string">&#x27;你好世界&#x27;</span>)</span><br><span class="line"><span class="number">4</span></span><br></pre></td></tr></table></figure><blockquote><p>空格也算一个字符</p></blockquote><p><code>len()</code>函数计算的是<code>str</code>的字符数，如果换成<code>bytes</code>，<code>len()</code>函数就计算字节数：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>len(<span class="string">b&#x27;adskancaohfaACna ainca&#x27;</span>)</span><br><span class="line"><span class="number">22</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>len(<span class="string">b&#x27;\xe4\xb8\xad\xe6\x96\x87&#x27;</span>)</span><br><span class="line"><span class="number">6</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>len(<span class="string">&#x27;你好世界&#x27;</span>.encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line"><span class="number">12</span></span><br></pre></td></tr></table></figure><p>可见，1个中文字符经过UTF-8编码后通常会占用<strong>3个字节</strong>，而1个英文字符只占用<strong>1个字节</strong>。</p><p><span class="inline-tag red">注意：</span></p><p>由于Python源代码也是一个文本文件，所以，当你的源代码中包含中文的时候，在保存源代码时，就需要务必指定保存为UTF-8编码。当Python解释器读取源代码时，为了让它按UTF-8编码读取，我们通常在文件开头写上这两行：</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section">#!/usr/bin/env python3</span></span><br><span class="line"><span class="section"># -<span class="emphasis">*- coding: utf-8 -*</span>-</span></span><br></pre></td></tr></table></figure><p>第一行注释是为了告诉Linux/OS X系统，这是一个Python可执行程序，Windows系统会忽略这个注释；</p><p>第二行注释是为了告诉Python解释器，按照UTF-8编码读取源代码，否则，你在源代码中写的中文输出可能会有乱码。</p><p>申明了UTF-8编码并不意味着你的<code>.py</code>文件就是UTF-8编码的，必须并且要确保文本编辑器正在使用UTF-8 without BOM编码。</p><p>如果<code>.py</code>文件本身使用UTF-8编码，并且也申明了<code># -*- coding: utf-8 -*-</code>，打开命令提示符测试就可以正常显示中文。</p><h3 id="格式化"><a class="header-anchor" href="#格式化">¶</a>格式化</h3><p>最后一个常见的问题是如何输出格式化的字符串。我们经常会输出类似<code>'亲爱的xxx你好！你xx月的话费是xx，余额是xx'</code>之类的字符串，而xxx的内容都是根据变量变化的，所以，需要一种简便的格式化字符串的方式。</p><p>在Python中，采用的格式化方式和C语言是一致的，用<code>%</code>实现，举例如下：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&#x27;Hello,%s&#x27;</span> %<span class="string">&#x27;world&#x27;</span></span><br><span class="line"><span class="string">&#x27;Hello,world&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&#x27;hello,world&#x27;</span></span><br><span class="line"><span class="string">&#x27;hello,world&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&#x27;Hi,%s,you have $%d.&#x27;</span>%(<span class="string">&#x27;Bing&#x27;</span>,<span class="number">10000</span>)</span><br><span class="line"><span class="string">&#x27;Hi,Bing,you have $10000.&#x27;</span></span><br></pre></td></tr></table></figure><p><code>%</code>运算符就是用来格式化字符串的。在字符串内部，<code>%s</code>表示用字符串替换，<code>%d</code>表示用整数替换，有几个<code>%?</code>占位符，后面就跟几个变量或者值，顺序要对应好。如果只有一个<code>%?</code>，括号可以省略。</p><p>常见的占位符有：</p><table><thead><tr><th style="text-align:left">占位符</th><th style="text-align:left">替换内容</th></tr></thead><tbody><tr><td style="text-align:left">%d</td><td style="text-align:left">整数</td></tr><tr><td style="text-align:left">%f</td><td style="text-align:left">浮点数</td></tr><tr><td style="text-align:left">%s</td><td style="text-align:left">字符串</td></tr><tr><td style="text-align:left">%x</td><td style="text-align:left">十六进制整数</td></tr></tbody></table><p>其中，格式化整数和浮点数还可以指定是否补0和整数与小数的位数：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(<span class="string">&#x27;%2d-%02d&#x27;</span> %(<span class="number">3</span>,<span class="number">1</span>))</span><br><span class="line"> <span class="number">3</span><span class="number">-01</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(<span class="string">&#x27;%.2f&#x27;</span>%<span class="number">3.1415926</span>)</span><br><span class="line"><span class="number">3.14</span></span><br></pre></td></tr></table></figure><p>如果不太确定应该用什么，<code>%s</code>永远起作用，它会把任何数据类型转换为字符串：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&#x27;Hi,%s. I\&#x27;m %s&#x27;</span> %(<span class="string">&#x27;Ross&#x27;</span>,<span class="string">&#x27;Rachel&#x27;</span>)</span><br><span class="line"><span class="string">&quot;Hi,Ross. I&#x27;m Rachel&quot;</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&#x27;Hi,%s. I\&#x27;m %s&#x27;</span> %(Ross,Rachel)</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;&lt;pyshell#21&gt;&quot;</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    <span class="string">&#x27;Hi,%s. I\&#x27;m %s&#x27;</span> %(Ross,Rachel)</span><br><span class="line">NameError: name <span class="string">&#x27;Ross&#x27;</span> <span class="keyword">is</span> <span class="keyword">not</span> defined</span><br></pre></td></tr></table></figure><div class="note info flat"><p>出现几次错误，自己的理解是因为字符串要用<code>''</code>括起来，相当于定义，并且要用到转义字符<code>\</code>，数字不用括起来。</p></div><p>有些时候，字符串里面的<code>%</code>是一个普通字符怎么办？这个时候就需要转义，用<code>%%</code>来表示一个<code>%</code>：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&#x27;growth rate: %d %%&#x27;</span> % <span class="number">7</span></span><br><span class="line"><span class="string">&#x27;growth rate: 7 %&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="format"><a class="header-anchor" href="#format">¶</a>format()</h3><p>另一种格式化字符串的方法是使用字符串的<code>format()</code>方法，它会用传入的参数依次替换字符串内的占位符<code>&#123;0&#125;</code>、<code>&#123;1&#125;</code>……，不过这种方式写起来比%要麻烦得多：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&#x27;Hello,&#123;0&#125;,成绩提高了&#123;1:.1f&#125;%&#x27;</span>.format(<span class="string">&#x27;川&#x27;</span>,<span class="number">-161561.13</span>)<span class="comment">#1f是数字1</span></span><br><span class="line"><span class="string">&#x27;Hello,川,成绩提高了-161561.1%&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="f-string"><a class="header-anchor" href="#f-string">¶</a>f-string</h3><p>最后一种格式化字符串的方法是使用以<code>f</code>开头的字符串，称之为<code>f-string</code>，它和普通字符串不同之处在于，字符串如果包含<code>&#123;xxx&#125;</code>，就会以对应的变量替换：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>r=<span class="number">3</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s=<span class="number">3.14</span>*r**<span class="number">2</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(<span class="string">f&#x27;The area of a circle with radius <span class="subst">&#123;r&#125;</span> is <span class="subst">&#123;s:<span class="number">.2</span>f&#125;</span>&#x27;</span>)</span><br><span class="line">The area of a circle <span class="keyword">with</span> radius <span class="number">3</span> <span class="keyword">is</span> <span class="number">28.26</span></span><br></pre></td></tr></table></figure><p>上述代码中，<code>&#123;r&#125;</code>被变量<code>r</code>的值替换，<code>&#123;s:.2f&#125;</code>被变量<code>s</code>的值替换，并且<code>:</code>后面的<code>.2f</code>指定了格式化参数（即保留两位小数），因此，<code>&#123;s:.2f&#125;</code>的替换结果是<code>28.26</code>。</p><h3 id="练习"><a class="header-anchor" href="#练习">¶</a>练习</h3><p>小明的成绩从去年的72分提升到了今年的88分，请计算小明成绩提升的百分点，并用字符串格式化显示出<code>'xx.x%'</code>，只保留小数点后1位：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">s1=<span class="number">72</span></span><br><span class="line">s2=<span class="number">88</span></span><br><span class="line">r=(s2-s1)/s1*<span class="number">100</span></span><br><span class="line">print(<span class="string">f&#x27;成绩提高了<span class="subst">&#123;r:<span class="number">.3</span>f&#125;</span>%&#x27;</span>)<span class="comment">#f-string方法</span></span><br><span class="line">print(<span class="string">&#x27;成绩提高了%.2f%%&#x27;</span> %r)<span class="comment">#用占位法</span></span><br><span class="line">print(<span class="string">&#x27;成绩提高了&#123;0:.1f&#125;%&#x27;</span>.format(r))<span class="comment">#format方法</span></span><br></pre></td></tr></table></figure><h2 id="数字类型"><a class="header-anchor" href="#数字类型">¶</a>数字类型</h2><p>python中数字有四种类型：整数、布尔型、浮点数和复数。</p><ul><li><p><strong>int</strong> (整数), 如 1, 只有一种整数类型 int，表示为长整型，没有 python2 中的 Long。</p></li><li><p><strong>bool</strong> (布尔), 如 True。</p></li><li><p><strong>float</strong> (浮点数), 如 1.23、3E-2</p></li><li><p><strong>complex</strong> (复数), 如 1 + 2j、 1.1 + 2.2j</p></li></ul><blockquote><p>删除了python2中的long类型</p></blockquote><h3 id="数据类型转换"><a class="header-anchor" href="#数据类型转换">¶</a>数据类型转换</h3><p>Python内置的常用函数还包括数据类型转换函数，比如<code>int()</code>函数可以把其他数据类型转换为整数：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>int(<span class="string">&#x27;123&#x27;</span>)</span><br><span class="line"><span class="number">123</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>int(<span class="number">12.34</span>)</span><br><span class="line"><span class="number">12</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>float(<span class="string">&#x27;12.34&#x27;</span>)</span><br><span class="line"><span class="number">12.34</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>str(<span class="number">1.23</span>)</span><br><span class="line"><span class="string">&#x27;1.23&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>str(<span class="number">100</span>)</span><br><span class="line"><span class="string">&#x27;100&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>bool(<span class="number">1</span>)</span><br><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>bool(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"><span class="literal">False</span></span><br></pre></td></tr></table></figure><p>函数名其实就是指向一个函数对象的引用，完全可以把函数名赋给一个变量，相当于给这个函数起了一个“别名”：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = abs <span class="comment"># 变量a指向abs函数</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a(<span class="number">-1</span>) <span class="comment"># 所以也可以通过a调用abs函数</span></span><br><span class="line"><span class="number">1</span></span><br></pre></td></tr></table></figure><h3 id="练习-v2"><a class="header-anchor" href="#练习-v2">¶</a>练习</h3><p>请利用Python内置的<code>hex()</code>函数把一个整数转换成十六进制表示的字符串：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">n1=<span class="number">255</span></span><br><span class="line">n2=<span class="number">1000</span></span><br><span class="line">print(hex(n1))</span><br><span class="line">print(hex(n2))</span><br></pre></td></tr></table></figure><h2 id="List（列表）"><a class="header-anchor" href="#List（列表）">¶</a>List（列表）</h2><p>List（列表） 是 Python 中使用最频繁的数据类型。</p><p>列表可以完成大多数集合类的数据结构实现。列表中元素的类型可以不相同，它支持数字，字符串甚至可以包含列表（所谓嵌套）。</p><p>列表是写在方括号 <strong>[]</strong> 之间、用逗号分隔开的元素列表。</p><p>和字符串一样，列表同样可以被索引和截取，列表被截取后返回一个包含所需元素的新列表。</p><p>列表截取的语法格式如下：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#变量[头下标:尾下标]</span></span><br></pre></td></tr></table></figure><p>索引值以 0 为开始值，-1 为从<strong>末尾</strong>的开始位置(倒数第一开始数数)。</p><p>加号 <code>+</code> 是列表连接运算符，星号 <code>*</code> 是重复操作</p><p>与Python字符串不一样的是，列表中的元素是可以改变的：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#定义list列表的元素,索引从0开始</span></span><br><span class="line">list1 = [<span class="string">&#x27;Friends&#x27;</span>,<span class="number">1314</span>]</span><br><span class="line">list = [<span class="string">&#x27;str&#x27;</span>, <span class="string">&#x27;hexo&#x27;</span>, <span class="string">&#x27;blog&#x27;</span>, <span class="string">&#x27;study&#x27;</span>,list1,<span class="number">112</span>]<span class="comment">#还可以进行列表的嵌套</span></span><br><span class="line"></span><br><span class="line">list[<span class="number">0</span>] =<span class="number">6</span></span><br><span class="line">list[<span class="number">1</span>] = <span class="string">&#x27;Hexo&#x27;</span></span><br><span class="line"></span><br><span class="line">print(list)  <span class="comment">#输出整个字符串</span></span><br><span class="line">print(list[<span class="number">3</span>]) <span class="comment">#输出第四个列表元素</span></span><br><span class="line">print(list[<span class="number">1</span>:<span class="number">4</span>]) <span class="comment">#输出第二个元素到第四个列表元素</span></span><br><span class="line">print(list * <span class="number">2</span>)  <span class="comment">#输出两边列表元素</span></span><br><span class="line">print(list + list1)  <span class="comment">#连接列表</span></span><br><span class="line">print(list[<span class="number">0</span>:<span class="number">-1</span>])  <span class="comment">#输出第一个到倒数第二个元素之间的元素/除最后一个元素不输出，其他元素都输出</span></span><br><span class="line">print(list[<span class="number">2</span>:])  <span class="comment">#输出从第三个元素的所有元素</span></span><br></pre></td></tr></table></figure><p>Python 列表截取可以接收第三个参数，参数作用是截取的步长。如果第三个参数为负数表示逆向读取，以下实例用于翻转字符串：</p><p><strong>///！！！！！！！！待定</strong></p><p>list是一个可变的有序表，所以，可以往list中追加元素到末尾：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>classmate=[<span class="string">&#x27;cacacd&#x27;</span>,<span class="string">&#x27;cadvxa&#x27;</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>classmate.append(<span class="string">&#x27;cnd&#x27;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>classmate</span><br><span class="line">[<span class="string">&#x27;cacacd&#x27;</span>, <span class="string">&#x27;cadvxa&#x27;</span>, <span class="string">&#x27;cnd&#x27;</span>]</span><br></pre></td></tr></table></figure><p>也可以把元素插入到指定的位置，比如索引号为<code>1</code>的位置：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>classmate.insert(<span class="number">1</span>,<span class="string">&#x27;fff&#x27;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>classmate</span><br><span class="line">[<span class="string">&#x27;cacacd&#x27;</span>, <span class="string">&#x27;fff&#x27;</span>, <span class="string">&#x27;cadvxa&#x27;</span>, <span class="string">&#x27;cnd&#x27;</span>]</span><br></pre></td></tr></table></figure><p>要删除list<strong>末尾</strong>的元素，用<code>pop()</code>方法：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>classmate.pop()</span><br><span class="line"><span class="string">&#x27;cnd&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>classmate</span><br><span class="line">[<span class="string">&#x27;cacacd&#x27;</span>, <span class="string">&#x27;fff&#x27;</span>, <span class="string">&#x27;cadvxa&#x27;</span>]</span><br></pre></td></tr></table></figure><p>要删除指定位置的元素，用<code>pop(i)</code>方法，其中<code>i</code>是索引位置：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>classmate.pop(<span class="number">2</span>)</span><br><span class="line"><span class="string">&#x27;cadvxa&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>classmate</span><br><span class="line">[<span class="string">&#x27;cacacd&#x27;</span>, <span class="string">&#x27;fff&#x27;</span>]</span><br></pre></td></tr></table></figure><p>要把某个元素替换成别的元素，可以直接赋值给对应的索引位置：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>classmate[<span class="number">1</span>]=<span class="string">&#x27;aaa&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>classmate</span><br><span class="line">[<span class="string">&#x27;cacacd&#x27;</span>, <span class="string">&#x27;aaa&#x27;</span>]</span><br></pre></td></tr></table></figure><p>list里面的元素的数据类型也可以不同，比如：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>L=[<span class="string">&#x27;a&#x27;</span>,<span class="number">123</span>,<span class="literal">True</span>,<span class="number">25.6</span>]</span><br></pre></td></tr></table></figure><p>list元素也可以是另一个list，比如：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>s=[<span class="string">&#x27;s&#x27;</span>,[<span class="string">&#x27;sjsn&#x27;</span>,<span class="number">1</span>,<span class="number">5.6</span>,<span class="literal">True</span>],<span class="string">&#x27;uunc&#x27;</span>,<span class="number">8</span>,<span class="literal">True</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>len(s)</span><br><span class="line"><span class="number">5</span></span><br></pre></td></tr></table></figure><p>要注意<code>s</code>只有5个元素，其中<code>s[1]</code>又是一个list，如果拆开写就更容易理解了：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>p=[<span class="string">&#x27;sjsn&#x27;</span>,<span class="number">1</span>,<span class="number">5.6</span>,<span class="literal">True</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s=[<span class="string">&#x27;s&#x27;</span>,p,<span class="string">&#x27;uunc&#x27;</span>,<span class="number">8</span>,<span class="literal">True</span>]</span><br></pre></td></tr></table></figure><p>如果一个list中一个元素也没有，就是一个空的list，它的长度为0：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>L = []</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>len(L)</span><br><span class="line"><span class="number">0</span></span><br></pre></td></tr></table></figure><h2 id="Tuple（元组）"><a class="header-anchor" href="#Tuple（元组）">¶</a>Tuple（元组）</h2><p>元组（tuple）与列表类似，不同之处在于元组的元素<strong>不能修改</strong>。元组写在小括号 <strong>()</strong> 里，元素之间用逗号隔开。</p><p>元组中的元素类型也可以不相同：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">tuple = (<span class="string">&#x27;abcd&#x27;</span>, <span class="string">&#x27;god&#x27;</span>, <span class="number">123</span>, <span class="number">6.66</span>) <span class="comment">#不能嵌套元组</span></span><br><span class="line">tinytuple = (<span class="string">&#x27;hello&#x27;</span>, <span class="number">3.415</span>)</span><br><span class="line"></span><br><span class="line">print(tuple)  <span class="comment">#输出整个元组</span></span><br><span class="line">print(tuple[<span class="number">2</span>])  <span class="comment">#输出第三个元素</span></span><br><span class="line">print(tuple[<span class="number">0</span>:<span class="number">3</span>])  <span class="comment">#输出从第一个元素到第三个元素</span></span><br><span class="line">print(tuple[<span class="number">2</span>:])  <span class="comment">#输出第三个元素之后的元素</span></span><br><span class="line">print(tinytuple * <span class="number">2</span>) <span class="comment">#输出两遍元素</span></span><br><span class="line">print(tuple + tinytuple) <span class="comment">#连接元组</span></span><br></pre></td></tr></table></figure><p>元组与字符串类似，可以被索引且下标索引从0开始，-1 为从末尾开始的位置。也可以进行截取（看上面，这里不再赘述）。</p><p>其实，可以把字符串看作一种特殊的元组。</p><p>虽然tuple的元素不可改变，但它可以包含可变的对象，比如list列表。</p><blockquote><p>string、list 和 tuple 都属于 sequence（序列）。</p></blockquote><p><strong>注意：</strong></p><ul><li>1、与字符串一样，元组的元素<strong>不能修改</strong>。</li><li>2、元组也可以被索引和切片，方法一样。</li><li>3、注意构造包含 0 或 1 个元素的元组的特殊语法规则。</li><li>4、元组也可以使用+操作符进行拼接。</li></ul><p>同样是列出同学的名字：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>classmate=(<span class="string">&#x27;aaa&#x27;</span>,<span class="string">&#x27;bbb&#x27;</span>,<span class="string">&#x27;cccc&#x27;</span>)</span><br></pre></td></tr></table></figure><p>这个tuple不能变，它也没有append()，insert()这样的方法。其他获取元素的方法和list是一样的，你可以正常地使用<code>classmates[0]</code>，<code>classmates[-1]</code>，但不能赋值成另外的元素。</p><p>不可变的tuple有什么意义？因为tuple不可变，所以代码更安全。如果可能，能用tuple代替list就尽量用tuple。</p><p>tuple的陷阱：当你定义一个tuple时，在定义的时候，tuple的元素就必须被确定下来，比如：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>classmate=(<span class="string">&#x27;aaa&#x27;</span>,<span class="string">&#x27;bbb&#x27;</span>,<span class="string">&#x27;cccc&#x27;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>classmate</span><br><span class="line">(<span class="string">&#x27;aaa&#x27;</span>, <span class="string">&#x27;bbb&#x27;</span>, <span class="string">&#x27;cccc&#x27;</span>)</span><br></pre></td></tr></table></figure><p>如果要定义一个空的tuple，可以写成<code>()</code>：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>t = ()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>t</span><br><span class="line">()</span><br></pre></td></tr></table></figure><p>但是，要定义一个只有1个元素的tuple，如果你这么定义：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>t = (<span class="number">1</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>t</span><br><span class="line"><span class="number">1</span></span><br></pre></td></tr></table></figure><p>定义的不是tuple，是<code>1</code>这个数！这是因为括号<code>()</code>既可以表示tuple，又可以表示数学公式中的小括号，这就产生了歧义，因此，Python规定，这种情况下，按小括号进行计算，计算结果自然是<code>1</code>。</p><p>所以，只有1个元素的tuple定义时必须加一个逗号<code>,</code>，来消除歧义：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>t = (<span class="number">1</span>,)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>t</span><br><span class="line">(<span class="number">1</span>,)</span><br></pre></td></tr></table></figure><blockquote><p>Python在显示只有1个元素的tuple时，也会加一个逗号<code>,</code>，以免你误解成数学计算意义上的括号。</p></blockquote><p>最后来看一个“可变的”tuple：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>t=(<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,[<span class="string">&#x27;A&#x27;</span>,<span class="string">&#x27;B&#x27;</span>])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>t[<span class="number">2</span>][<span class="number">0</span>]=<span class="string">&#x27;x&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>t[<span class="number">2</span>][<span class="number">1</span>]=<span class="string">&#x27;y&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>t</span><br><span class="line">(<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, [<span class="string">&#x27;x&#x27;</span>, <span class="string">&#x27;y&#x27;</span>])</span><br></pre></td></tr></table></figure><p>这个tuple定义的时候有3个元素，分别是<code>'a'</code>，<code>'b'</code>和一个list。不是说tuple一旦定义后就不可变了吗？怎么后来又变了？</p><p>我们先看看定义的时候tuple包含的3个元素：</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201013095326" alt="tuple-0"></p><p>当我们把list的元素<code>'A'</code>和<code>'B'</code>修改为<code>'x'</code>和<code>'y'</code>后，tuple变为：</p><p><img src="https://cdn.jsdelivr.net/gh/stardust14/picture/img/20201013095621" alt="tuple-1"></p><p>表面上看，tuple的元素确实变了，但其实变的不是tuple的元素，而是list的元素。tuple一开始指向的list并没有改成别的list，所以，tuple所谓的“不变”是说，tuple的每个元素，指向永远不变。即指向<code>'a'</code>，就不能改成指向<code>'b'</code>，指向一个list，就不能改成指向其他对象，但指向的这个list本身是可变的！</p><p>理解了“指向不变”后，要创建一个内容也不变的tuple怎么做？那就必须保证tuple的每一个元素本身也不能变。</p><h3 id="练习-v3"><a class="header-anchor" href="#练习-v3">¶</a>练习</h3><p>请用索引取出下面list的指定元素：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">L = [</span><br><span class="line">    [<span class="string">&#x27;Apple&#x27;</span>, <span class="string">&#x27;Google&#x27;</span>, <span class="string">&#x27;Microsoft&#x27;</span>],</span><br><span class="line">    [<span class="string">&#x27;Java&#x27;</span>, <span class="string">&#x27;Python&#x27;</span>, <span class="string">&#x27;Ruby&#x27;</span>, <span class="string">&#x27;PHP&#x27;</span>],</span><br><span class="line">    [<span class="string">&#x27;Adam&#x27;</span>, <span class="string">&#x27;Bart&#x27;</span>, <span class="string">&#x27;Lisa&#x27;</span>]</span><br><span class="line">]</span><br><span class="line"><span class="comment"># 打印Apple:</span></span><br><span class="line">print(L[<span class="number">0</span>][<span class="number">0</span>])</span><br><span class="line"><span class="comment"># 打印Python:</span></span><br><span class="line">print(L[<span class="number">1</span>][<span class="number">1</span>])</span><br><span class="line"><span class="comment"># 打印Lisa:</span></span><br><span class="line">print(L[<span class="number">2</span>][<span class="number">2</span>])</span><br></pre></td></tr></table></figure><h2 id="Set（集合）"><a class="header-anchor" href="#Set（集合）">¶</a>Set（集合）</h2><p>集合（set）是由一个或数个形态各异的大小整体组成的，构成集合的事物或对象称作元素或是成员。</p><p><strong>基本功能</strong>是进行成员关系测试和删除重复元素。</p><p>可以使用大括号 <code>&#123; &#125;</code> 或者 <code>set()</code> 函数创建集合，注意：创建一个空集合必须用 <code>set()</code> 而不是 <code>&#123; &#125;</code>，因为 <code>&#123; &#125;</code> 是用来创建一个<strong>空字典</strong>。</p><p>创建格式：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">parame = &#123;value01,value02,...&#125;</span><br><span class="line">或者</span><br><span class="line">set(value)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">sites = &#123;<span class="string">&#x27;oh&#x27;</span>, <span class="string">&#x27;my&#x27;</span>,<span class="string">&#x27;god&#x27;</span>, <span class="string">&#x27;oh&#x27;</span>, <span class="string">&#x27;no&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line">print(sites)  <span class="comment">#输出集合，重复的元素被自动划去</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#成员测试</span></span><br><span class="line"><span class="keyword">if</span> <span class="string">&#x27;no&#x27;</span> <span class="keyword">in</span> sites :</span><br><span class="line">    print(<span class="string">&#x27;no在sites集合中&#x27;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">&#x27;no不在sites集合中&#x27;</span>)</span><br><span class="line"></span><br><span class="line">print(<span class="string">&#x27;===================&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># set可以进行集合运算</span></span><br><span class="line">a = set(<span class="string">&#x27;anvkajvbakb&#x27;</span>)<span class="comment">#好像是随机单字符排列，去重复</span></span><br><span class="line">b = set(<span class="string">&#x27;anfwbakb23&#x27;</span>)<span class="comment">#好像不进行数字的比较</span></span><br><span class="line"></span><br><span class="line">print(a)</span><br><span class="line">print(b)</span><br><span class="line"></span><br><span class="line">print(a - b)  <span class="comment">#a和b的差集</span></span><br><span class="line"></span><br><span class="line">print(a | b)  <span class="comment">#a和b的并集</span></span><br><span class="line"></span><br><span class="line">print(a &amp; b)  <span class="comment">#a和b的交集</span></span><br><span class="line"></span><br><span class="line">print(a ^ b)  <span class="comment">#a和b中不同是存在的元素</span></span><br></pre></td></tr></table></figure><p>set和dict类似，也是一组key的集合，但不存储value。由于key不能重复，所以，在set中，没有重复的key。</p><p>要创建一个set，需要提供一个list作为输入集合：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt;s=set([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>])</span><br><span class="line">&gt;&gt;&gt;s</span><br><span class="line">&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;</span><br></pre></td></tr></table></figure><p>通过<code>add(key)</code>方法可以添加元素到set中，可以重复添加，但不会有效果：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>s.add(<span class="number">4</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s</span><br><span class="line">&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s.add(<span class="number">4</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s</span><br><span class="line">&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>&#125;</span><br></pre></td></tr></table></figure><p>通过<code>remove(key)</code>方法可以删除元素：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>s.remove(<span class="number">3</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s</span><br><span class="line">&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">4</span>&#125;</span><br></pre></td></tr></table></figure><p>set可以看成数学意义上的无序和无重复元素的集合，因此，两个set可以做数学意义上的交集、并集等操作：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>s1=set([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s2=set([<span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s1&amp;s2</span><br><span class="line">&#123;<span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s1|s2</span><br><span class="line">&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>&#125;</span><br></pre></td></tr></table></figure><p>set和dict的唯一区别仅在于没有存储对应的value，但是，set的原理和dict一样，所以，同样不可以放入可变对象，因为无法判断两个可变对象是否相等，也就无法保证set内部“不会有重复元素”。试试把list放入set，看看是否会报错。</p><h3 id="再议不可变对象"><a class="header-anchor" href="#再议不可变对象">¶</a>再议不可变对象</h3><p>对于可变对象，比如list，对list进行操作，list内部的内容是会变化的，比如：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>a=[<span class="string">&#x27;z&#x27;</span>,<span class="string">&#x27;x&#x27;</span>,<span class="string">&#x27;c&#x27;</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a.sort()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a</span><br><span class="line">[<span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;x&#x27;</span>, <span class="string">&#x27;z&#x27;</span>]</span><br></pre></td></tr></table></figure><blockquote><p>sort()函数：</p></blockquote><p>而对于不可变对象，比如str，对str进行操作呢：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>a=<span class="string">&#x27;abc&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a.replace(<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;A&#x27;</span>)</span><br><span class="line"><span class="string">&#x27;Abc&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a</span><br><span class="line"><span class="string">&#x27;abc&#x27;</span></span><br></pre></td></tr></table></figure><p>虽然字符串有个<code>replace()</code>方法，也确实变出了<code>'Abc'</code>，但变量<code>a</code>最后仍是<code>'abc'</code>，应该怎么理解呢？</p><p>我们先把代码改成下面这样：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>a=<span class="string">&#x27;abc&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b=a.replace(<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;A&#x27;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b</span><br><span class="line"><span class="string">&#x27;Abc&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a</span><br><span class="line"><span class="string">&#x27;abc&#x27;</span></span><br></pre></td></tr></table></figure><p>要始终牢记的是，<code>a</code>是变量，而<code>'abc'</code>才是字符串对象！有些时候，我们经常说，对象<code>a</code>的内容是<code>'abc'</code>，但其实是指，<code>a</code>本身是一个变量，它指向的对象的内容才是<code>'abc'</code>：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">┌───┐                  ┌───────┐</span><br><span class="line">│ a │─────────────────&gt;│ &#39;abc&#39; │</span><br><span class="line">└───┘                  └───────┘</span><br></pre></td></tr></table></figure><p>当我们调用<code>a.replace('a', 'A')</code>时，实际上调用方法<code>replace</code>是作用在字符串对象<code>'abc'</code>上的，而这个方法虽然名字叫<code>replace</code>，但却没有改变字符串<code>'abc'</code>的内容。相反，<code>replace</code>方法创建了一个新字符串<code>'Abc'</code>并返回，如果我们用变量<code>b</code>指向该新字符串，就容易理解了，变量<code>a</code>仍指向原有的字符串<code>'abc'</code>，但变量<code>b</code>却指向新字符串<code>'Abc'</code>了：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">┌───┐                  ┌───────┐</span><br><span class="line">│ a │─────────────────&gt;│ &#39;abc&#39; │</span><br><span class="line">└───┘                  └───────┘</span><br><span class="line">┌───┐                  ┌───────┐</span><br><span class="line">│ b │─────────────────&gt;│ &#39;Abc&#39; │</span><br><span class="line">└───┘                  └───────┘</span><br></pre></td></tr></table></figure><p>所以，对于不变对象来说，调用对象自身的任意方法，也不会改变该对象自身的内容。相反，这些方法会创建新的对象并返回，这样，就保证了不可变对象本身永远是不可变的。</p><h2 id="Dictionary（字典）"><a class="header-anchor" href="#Dictionary（字典）">¶</a>Dictionary（字典）</h2><p>字典（dictionary）是Python中另一个非常有用的内置数据类型。</p><p><em>列表</em>是<strong>有序</strong>的对象集合，<em>字典</em>是<strong>无序</strong>的对象集合。两者之间的区别在于：字典当中的元素是通过<strong>键</strong>来存取的，而<strong>不是</strong>通过偏移存取。</p><p>字典是一种映射类型，字典用 <code>&#123; &#125;</code> 标识，它是<u>一个无序</u>的 <strong>键(key) : 值(value)</strong> 的集合。</p><p>键(key)必须使用不可变类型。</p><p>在同一个字典中，键(key)必须是唯一的。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dict = &#123;&#125;<span class="comment">#空字典</span></span><br><span class="line">dict[<span class="string">&#x27;one&#x27;</span>] = <span class="string">&quot;hello&quot;</span></span><br><span class="line">dict[<span class="number">2</span>] = <span class="string">&#x27;world&#x27;</span></span><br><span class="line"></span><br><span class="line">tinydict = &#123;<span class="string">&#x27;name&#x27;</span> : <span class="string">&#x27;my&#x27;</span>, <span class="string">&#x27;code&#x27;</span>: <span class="string">&#x27;god&#x27;</span>,<span class="string">&#x27;site&#x27;</span>:<span class="string">&#x27;helloworld&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line">print(dict[<span class="string">&#x27;one&#x27;</span>])      <span class="comment"># 输出键为 &#x27;one&#x27; 的值</span></span><br><span class="line">print(dict[<span class="number">2</span>])          <span class="comment"># 输出键为 2 的值</span></span><br><span class="line">print(tinydict)         <span class="comment"># 输出完整的字典</span></span><br><span class="line">print(tinydict.keys()) <span class="comment"># 输出所有键</span></span><br><span class="line">print(tinydict.values()) <span class="comment"># 输出所有值</span></span><br></pre></td></tr></table></figure><p><strong>注意：</strong></p><ul><li>1、字典是一种映射类型，它的元素是键值对。</li><li>2、字典的关键字必须为不可变类型，且不能重复。</li><li>3、创建空字典使用 <code>&#123; &#125;</code>。</li></ul><blockquote><p>字典类型也有一些内置的函数，例如clear()、keys()、values()等。</p></blockquote><p>举个例子，假设要根据同学的名字查找对应的成绩，如果用list实现，需要两个list：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">name=[<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;c&#x27;</span>]</span><br><span class="line">score=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br></pre></td></tr></table></figure><p>给定一个名字，要查找对应的成绩，就先要在names中找到对应的位置，再从scores取出对应的成绩，list越长，耗时越长。</p><p>如果用dict实现，只需要一个“名字”-“成绩”的对照表，直接根据名字查找成绩，无论这个表有多大，查找速度都不会变慢。用Python写一个dict如下：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt;name=&#123;<span class="string">&#x27;a&#x27;</span>:<span class="number">1</span>,<span class="string">&#x27;b&#x27;</span>:<span class="number">2</span>,<span class="string">&#x27;c&#x27;</span>:<span class="number">3</span>&#125;</span><br><span class="line">&gt;&gt;&gt;name[<span class="string">&#x27;a&#x27;</span>]</span><br><span class="line"><span class="number">1</span></span><br></pre></td></tr></table></figure><p>为什么dict查找速度这么快？因为dict的实现原理和查字典是一样的。假设字典包含了1万个汉字，我们要查某一个字，一个办法是把字典从第一页往后翻，直到找到我们想要的字为止，这种方法就是在list中查找元素的方法，list越大，查找越慢。</p><p>第二种方法是先在字典的索引表里（比如部首表）查这个字对应的页码，然后直接翻到该页，找到这个字。无论找哪个字，这种查找速度都非常快，不会随着字典大小的增加而变慢。</p><p>dict就是第二种实现方式，给定一个名字，比如<code>'a'</code>，dict在内部就可以直接计算出<code>a</code>对应的存放成绩的“页码”，也就是<code>1</code>这个数字存放的内存地址，直接取出来，所以速度非常快。</p><p>你可以猜到，这种key-value存储方式，在放进去的时候，必须根据key算出value的存放位置，这样，取的时候才能根据key直接拿到value。</p><p>把数据放入dict的方法，除了初始化时指定外，还可以通过key放入：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt;name[<span class="string">&#x27;d&#x27;</span>]=<span class="number">4</span></span><br><span class="line">&gt;&gt;&gt;name[<span class="string">&#x27;d&#x27;</span>]</span><br><span class="line"><span class="number">4</span></span><br></pre></td></tr></table></figure><p>由于一个key只能对应一个value，所以，多次对一个key放入value，后面的值会把前面的值冲掉：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt;name[<span class="string">&#x27;e&#x27;</span>]=<span class="number">5</span></span><br><span class="line">&gt;&gt;&gt;name[<span class="string">&#x27;e&#x27;</span>]</span><br><span class="line"><span class="number">5</span></span><br><span class="line">&gt;&gt;&gt;name[<span class="string">&#x27;e&#x27;</span>]=<span class="number">55</span></span><br><span class="line">&gt;&gt;&gt;name[<span class="string">&#x27;e&#x27;</span>]</span><br><span class="line"><span class="number">55</span></span><br></pre></td></tr></table></figure><p>如果key不存在，dict就会报错：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt;name[<span class="string">&#x27;f&#x27;</span>]</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;&lt;input&gt;&quot;</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">KeyError: <span class="string">&#x27;f&#x27;</span></span><br></pre></td></tr></table></figure><p>要避免key不存在的错误，有两种办法，一是通过<code>in</code>判断key是否存在：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt;<span class="string">&#x27;f&#x27;</span> <span class="keyword">in</span> name</span><br><span class="line"><span class="literal">False</span></span><br></pre></td></tr></table></figure><p>二是通过dict提供的<code>get()</code>方法，如果key不存在，可以返回<code>None</code>，或者自己指定的value：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt;name.get(<span class="string">&#x27;f&#x27;</span>)</span><br><span class="line">&gt;&gt;&gt;name.get(<span class="string">&#x27;f&#x27;</span>,<span class="number">-1</span>)</span><br><span class="line"><span class="number">-1</span></span><br></pre></td></tr></table></figure><blockquote><p>注意：返回<code>None</code>的时候Python的交互环境不显示结果。</p></blockquote><p>要删除一个key，用<code>pop(key)</code>方法，对应的value也会从dict中删除：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt;name.pop(<span class="string">&#x27;e&#x27;</span>)</span><br><span class="line"><span class="number">55</span></span><br><span class="line">&gt;&gt;&gt;name</span><br><span class="line">&#123;<span class="string">&#x27;a&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;b&#x27;</span>: <span class="number">2</span>, <span class="string">&#x27;c&#x27;</span>: <span class="number">3</span>, <span class="string">&#x27;d&#x27;</span>: <span class="number">4</span>&#125;</span><br></pre></td></tr></table></figure><p>请务必注意，dict内部存放的顺序和key放入的顺序是没有关系的。</p><p>和list比较，dict有以下几个特点：</p><ol><li>查找和插入的速度极快，不会随着key的增加而变慢；</li><li>需要占用大量的内存，内存浪费多。</li></ol><p>而list相反：</p><ol><li>查找和插入的时间随着元素的增加而增加；</li><li>占用空间小，浪费内存很少。</li></ol><p>所以，dict是用空间来换取时间的一种方法。</p><p>dict可以用在需要高速查找的很多地方，在Python代码中几乎无处不在，正确使用dict非常重要，需要牢记的第一条就是dict的key必须是<strong>不可变对象</strong>。</p><p>这是因为dict根据key来计算value的存储位置，如果每次计算相同的key得出的结果不同，那dict内部就完全混乱了。这个通过key计算位置的算法称为哈希算法（Hash）。</p><p>要保证hash的正确性，作为key的对象就不能变。在Python中，字符串、整数等都是不可变的，因此，可以放心地作为key。而list是可变的，就不能作为key：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt;key=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line">&gt;&gt;&gt;name[key]=<span class="string">&#x27;a list&#x27;</span></span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;&lt;input&gt;&quot;</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">TypeError: unhashable type: <span class="string">&#x27;list&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="Python数据类型转换"><a class="header-anchor" href="#Python数据类型转换">¶</a>Python数据类型转换</h2><table><thead><tr><th style="text-align:left">函数</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left"><code>[int(x [,base\])]</code></td><td style="text-align:left">将x转换为一个整数</td></tr><tr><td style="text-align:left"><code>[float(x)]</code></td><td style="text-align:left">将x转换到一个浮点数</td></tr><tr><td style="text-align:left"><code>[complex(real [,imag\])]</code></td><td style="text-align:left">创建一个复数</td></tr><tr><td style="text-align:left"><code>[str(x)]</code></td><td style="text-align:left">将对象 x 转换为字符串</td></tr><tr><td style="text-align:left"><code>[repr(x)]</code></td><td style="text-align:left">将对象 x 转换为表达式字符串</td></tr><tr><td style="text-align:left"><code>[eval(str)]</code></td><td style="text-align:left">用来计算在字符串中的有效Python表达式,并返回一个对象</td></tr><tr><td style="text-align:left"><code>[tuple(s)]</code></td><td style="text-align:left">将序列 s 转换为一个元组</td></tr><tr><td style="text-align:left"><code>[list(s)]</code></td><td style="text-align:left">将序列 s 转换为一个列表</td></tr><tr><td style="text-align:left"><code>[set(s)]</code></td><td style="text-align:left">转换为可变集合</td></tr><tr><td style="text-align:left"><code>[dict(d)]</code></td><td style="text-align:left">创建一个字典。d 必须是一个 (key, value)元组序列。</td></tr><tr><td style="text-align:left"><code>[frozenset(s)]</code></td><td style="text-align:left">转换为不可变集合</td></tr><tr><td style="text-align:left"><code>[chr(x)]</code></td><td style="text-align:left">将一个整数转换为一个字符</td></tr><tr><td style="text-align:left"><code>[ord(x)]</code></td><td style="text-align:left">将一个字符转换为它的整数值</td></tr><tr><td style="text-align:left"><code>[hex(x)]</code></td><td style="text-align:left">一个整数转换为一个十六进制字符串</td></tr><tr><td style="text-align:left"><code>[oct(x)]</code></td><td style="text-align:left">将一个整数转换为一个八进制字符串</td></tr></tbody></table><h1>运算符</h1><h2 id="算术运算符"><a class="header-anchor" href="#算术运算符">¶</a>算术运算符</h2><table><thead><tr><th style="text-align:left">运算符</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left">+</td><td style="text-align:left">加 - 两个对象相加</td></tr><tr><td style="text-align:left">-</td><td style="text-align:left">减 - 得到负数或是一个数减去另一个数</td></tr><tr><td style="text-align:left">*</td><td style="text-align:left">乘 - 两个数相乘或是返回一个被重复若干次的字符串</td></tr><tr><td style="text-align:left">/</td><td style="text-align:left">除 - x 除以 y</td></tr><tr><td style="text-align:left">%</td><td style="text-align:left">取模 - 返回除法的余数</td></tr><tr><td style="text-align:left">**</td><td style="text-align:left">幂 - 返回x的y次幂</td></tr><tr><td style="text-align:left">//</td><td style="text-align:left">取整除 - 向下取接近商的整数</td></tr></tbody></table><h2 id="比较运算符"><a class="header-anchor" href="#比较运算符">¶</a>比较运算符</h2><table><thead><tr><th style="text-align:left">运算符</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left">==</td><td style="text-align:left">等于 - 比较对象是否相等</td></tr><tr><td style="text-align:left">!=</td><td style="text-align:left">不等于 - 比较两个对象是否不相等</td></tr><tr><td style="text-align:left">&gt;</td><td style="text-align:left">大于 - 返回x是否大于y</td></tr><tr><td style="text-align:left">&lt;</td><td style="text-align:left">小于 - 返回x是否小于y。所有比较运算符返回1表示真，返回0表示假。这分别与特殊的变量True和False等价。注意，这些变量名的大写。</td></tr><tr><td style="text-align:left">&gt;=</td><td style="text-align:left">大于等于 - 返回x是否大于等于y。</td></tr><tr><td style="text-align:left">&lt;=</td><td style="text-align:left">小于等于 - 返回x是否小于等于y。</td></tr></tbody></table><h2 id="赋值运算符"><a class="header-anchor" href="#赋值运算符">¶</a>赋值运算符</h2><table><thead><tr><th style="text-align:left">运算符</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left">=</td><td style="text-align:left">简单的赋值运算符</td></tr><tr><td style="text-align:left">+=</td><td style="text-align:left">加法赋值运算符</td></tr><tr><td style="text-align:left">-=</td><td style="text-align:left">减法赋值运算符</td></tr><tr><td style="text-align:left">*=</td><td style="text-align:left">乘法赋值运算符</td></tr><tr><td style="text-align:left">/=</td><td style="text-align:left">除法赋值运算符</td></tr><tr><td style="text-align:left">%=</td><td style="text-align:left">取模赋值运算符</td></tr><tr><td style="text-align:left">**=</td><td style="text-align:left">幂赋值运算符</td></tr><tr><td style="text-align:left">//=</td><td style="text-align:left">取整除赋值运算符</td></tr><tr><td style="text-align:left">:=</td><td style="text-align:left">海象运算符，可在表达式内部为变量赋值。<strong>Python3.8 版本新增运算符</strong>。</td></tr></tbody></table><h2 id="位运算符"><a class="header-anchor" href="#位运算符">¶</a>位运算符</h2><table><thead><tr><th style="text-align:left">运算符</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left">&amp;</td><td style="text-align:left">按位与运算符：参与运算的两个值,如果两个相应位都为1,则该位的结果为1,否则为0</td></tr><tr><td style="text-align:left">|</td><td style="text-align:left">按位或运算符：只要对应的二个二进位有一个为1时，结果位就为1。</td></tr><tr><td style="text-align:left">^</td><td style="text-align:left">按位异或运算符：当两对应的二进位相异时，结果为1</td></tr><tr><td style="text-align:left">~</td><td style="text-align:left">按位取反运算符：对数据的每个二进制位取反,即把1变为0,把0变为1。<strong>~x</strong> 类似于 <strong>-x-1</strong></td></tr><tr><td style="text-align:left">&lt;&lt;</td><td style="text-align:left">左移动运算符：运算数的各二进位全部左移若干位，由&quot;&lt;&lt;&quot;右边的数指定移动的位数，高位丢弃，低位补0。</td></tr><tr><td style="text-align:left">&gt;&gt;</td><td style="text-align:left">右移动运算符：把&quot;&gt;&gt;“左边的运算数的各二进位全部右移若干位，”&gt;&gt;&quot;右边的数指定移动的位数</td></tr></tbody></table><h2 id="逻辑运算符"><a class="header-anchor" href="#逻辑运算符">¶</a>逻辑运算符</h2><table><thead><tr><th style="text-align:left">运算符</th><th style="text-align:left">逻辑表达式</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left">and</td><td style="text-align:left">x and y</td><td style="text-align:left">布尔&quot;与&quot; - 如果 x 为 False，x and y 返回 False，否则它返回 y 的计算值。</td></tr><tr><td style="text-align:left">or</td><td style="text-align:left">x or y</td><td style="text-align:left">布尔&quot;或&quot; - 如果 x 是 True，它返回 x 的值，否则它返回 y 的计算值。</td></tr><tr><td style="text-align:left">not</td><td style="text-align:left">not x</td><td style="text-align:left">布尔&quot;非&quot; - 如果 x 为 True，返回 False 。如果 x 为 False，它返回 True。</td></tr></tbody></table><h2 id="成员运算符"><a class="header-anchor" href="#成员运算符">¶</a>成员运算符</h2><table><thead><tr><th style="text-align:left">运算符</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left">in</td><td style="text-align:left">如果在指定的序列中找到值返回 True，否则返回 False。</td></tr><tr><td style="text-align:left">not in</td><td style="text-align:left">如果在指定的序列中没有找到值返回 True，否则返回 False。</td></tr></tbody></table><h2 id="身份运算符"><a class="header-anchor" href="#身份运算符">¶</a>身份运算符</h2><p>身份运算符用于比较两个对象的存储单元</p><table><thead><tr><th style="text-align:left">运算符</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left">is</td><td style="text-align:left">is 是判断两个标识符是不是引用自一个对象</td></tr><tr><td style="text-align:left">is not</td><td style="text-align:left">is not 是判断两个标识符是不是引用自不同对象</td></tr></tbody></table><p>is 与 == 区别：</p><p>is 用于判断两个变量引用对象是否为同一个， == 用于判断引用变量的值是否相等。</p><h2 id="运算符优先级"><a class="header-anchor" href="#运算符优先级">¶</a>运算符优先级</h2><table><thead><tr><th style="text-align:left">运算符</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left">**</td><td style="text-align:left">指数 (最高优先级)</td></tr><tr><td style="text-align:left">~ + -</td><td style="text-align:left">按位翻转, 一元加号和减号 (最后两个的方法名为 +@ 和 -@)</td></tr><tr><td style="text-align:left">* / % //</td><td style="text-align:left">乘，除，求余数和取整除</td></tr><tr><td style="text-align:left">+ -</td><td style="text-align:left">加法减法</td></tr><tr><td style="text-align:left">&gt;&gt; &lt;&lt;</td><td style="text-align:left">右移，左移运算符</td></tr><tr><td style="text-align:left">&amp;</td><td style="text-align:left">位 ‘AND’</td></tr><tr><td style="text-align:left">^ |</td><td style="text-align:left">位运算符</td></tr><tr><td style="text-align:left">&lt;= &lt; &gt; &gt;=</td><td style="text-align:left">比较运算符</td></tr><tr><td style="text-align:left">== !=</td><td style="text-align:left">等于运算符</td></tr><tr><td style="text-align:left">= %= /= //= -= += *= **=</td><td style="text-align:left">赋值运算符</td></tr><tr><td style="text-align:left">is is not</td><td style="text-align:left">身份运算符</td></tr><tr><td style="text-align:left">in not in</td><td style="text-align:left">成员运算符</td></tr><tr><td style="text-align:left">not and or</td><td style="text-align:left">逻辑运算符</td></tr></tbody></table><h1>语法</h1><h2 id="条件判断"><a class="header-anchor" href="#条件判断">¶</a>条件判断</h2><p>计算机之所以能做很多自动化的任务，因为它可以自己做条件判断。</p><p>比如，输入用户年龄，根据年龄打印不同的内容，在Python程序中，用<code>if</code>语句实现：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">age=<span class="number">20</span></span><br><span class="line"><span class="keyword">if</span> age&gt;=<span class="number">18</span>:</span><br><span class="line">    print(<span class="string">&#x27;你的年龄是&#x27;</span>,age)</span><br><span class="line">    print(<span class="string">&#x27;你已经是个成年人了！！！&#x27;</span>)</span><br></pre></td></tr></table></figure><p>根据Python的缩进规则，如果<code>if</code>语句判断是<code>True</code>，就把缩进的两行print语句执行了，否则，就不执行。</p><p>也可以给<code>if</code>添加一个<code>else</code>语句，意思是，如果<code>if</code>判断是<code>False</code>，不要执行<code>if</code>的内容，去把<code>else</code>执行了：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">age=<span class="number">17</span></span><br><span class="line"><span class="keyword">if</span> age&gt;=<span class="number">18</span>:</span><br><span class="line">    print(<span class="string">&#x27;你的年龄是&#x27;</span>,age)</span><br><span class="line">    print(<span class="string">&#x27;你已经是个成年人了！！！&#x27;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">&#x27;你的年龄是&#x27;</span>,age)</span><br><span class="line">    print(<span class="string">&#x27;你还需要继续成长哦~~~&#x27;</span>)</span><br></pre></td></tr></table></figure><blockquote><p>注意不要少写了冒号<code>:</code>。</p></blockquote><p>当然上面的判断是很粗略的，完全可以用<code>elif</code>做更细致的判断：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">age=<span class="number">5</span></span><br><span class="line"><span class="keyword">if</span> age&gt;=<span class="number">18</span>:</span><br><span class="line">    print(<span class="string">&#x27;你的年龄是&#x27;</span>,age,<span class="string">&#x27;岁&#x27;</span>)</span><br><span class="line">    print(<span class="string">&#x27;你已经是个成年人了！！！&#x27;</span>)</span><br><span class="line"><span class="keyword">elif</span> age&gt;=<span class="number">6</span>:</span><br><span class="line">    print(<span class="string">&#x27;你的年龄是&#x27;</span>,age,<span class="string">&#x27;岁&#x27;</span>)</span><br><span class="line">    print(<span class="string">&#x27;你现在是一名青少年了哟···&#x27;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">&#x27;你的年龄是&#x27;</span>,age,<span class="string">&#x27;岁&#x27;</span>)</span><br><span class="line">    print(<span class="string">&#x27;你还需要继续成长哦~~~&#x27;</span>)</span><br></pre></td></tr></table></figure><p><code>elif</code>是<code>else if</code>的缩写，完全可以有多个<code>elif</code>，所以<code>if</code>语句的完整形式就是：</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">if <span class="xml"><span class="tag">&lt;<span class="name">条件判断1</span>&gt;</span></span>:</span><br><span class="line"><span class="code">    &lt;执行1&gt;</span></span><br><span class="line"><span class="code">elif &lt;条件判断2&gt;:</span></span><br><span class="line"><span class="code">    &lt;执行2&gt;</span></span><br><span class="line"><span class="code">elif &lt;条件判断3&gt;:</span></span><br><span class="line"><span class="code">    &lt;执行3&gt;</span></span><br><span class="line"><span class="code">else:</span></span><br><span class="line"><span class="code">    &lt;执行4&gt;</span></span><br></pre></td></tr></table></figure><p><code>if</code>语句执行有个特点，它是从上往下判断，如果在某个判断上是<code>True</code>，把该判断对应的语句执行后，就忽略掉剩下的<code>elif</code>和<code>else</code>，所以，请测试并解释为什么下面的程序打印的是<code>teenager</code>：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">age = <span class="number">20</span></span><br><span class="line"><span class="keyword">if</span> age &gt;= <span class="number">6</span>:</span><br><span class="line">    print(<span class="string">&#x27;teenager&#x27;</span>)</span><br><span class="line"><span class="keyword">elif</span> age &gt;= <span class="number">18</span>:</span><br><span class="line">    print(<span class="string">&#x27;adult&#x27;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">&#x27;kid&#x27;</span>)</span><br></pre></td></tr></table></figure><p><code>if</code>判断条件还可以简写，比如写：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> x:</span><br><span class="line">    print(<span class="string">&#x27;True&#x27;</span>)</span><br></pre></td></tr></table></figure><p>只要<code>x</code>是非零数值、非空字符串、非空list等，就判断为<code>True</code>，否则为<code>False</code>。</p><h3 id="再议-input"><a class="header-anchor" href="#再议-input">¶</a>再议 input</h3><p>最后看一个有问题的条件判断。很多同学会用<code>input()</code>读取用户的输入，这样可以自己输入，程序运行得更有意思：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">birth = input(<span class="string">&#x27;birth: &#x27;</span>)</span><br><span class="line"><span class="keyword">if</span> birth &lt; <span class="number">2000</span>:</span><br><span class="line">    print(<span class="string">&#x27;00前&#x27;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">&#x27;00后&#x27;</span>)</span><br></pre></td></tr></table></figure><p>输入<code>1982</code>，结果报错：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;D:/Python/Code/day01/demo02.py&quot;</span>, line <span class="number">2</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    <span class="keyword">if</span> birth&lt;<span class="number">2000</span>:</span><br><span class="line">TypeError: <span class="string">&#x27;&lt;&#x27;</span> <span class="keyword">not</span> supported between instances of <span class="string">&#x27;str&#x27;</span> <span class="keyword">and</span> <span class="string">&#x27;int&#x27;</span></span><br></pre></td></tr></table></figure><p>这是因为<code>input()</code>返回的数据类型是<code>str</code>，<code>str</code>不能直接和整数比较，必须先把<code>str</code>转换成整数。Python提供了<code>int()</code>函数来完成这件事情：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">s=input(<span class="string">&#x27;birth:&#x27;</span>)</span><br><span class="line">birth=int(s)</span><br><span class="line"><span class="keyword">if</span> birth&lt;<span class="number">2000</span>:</span><br><span class="line">    print(<span class="string">&#x27;00前&#x27;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">&#x27;00后&#x27;</span>)</span><br></pre></td></tr></table></figure><p>再次运行，就可以得到正确地结果。但是，如果输入<code>abc</code>呢？又会得到一个错误信息：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;D:/Python/Code/day01/demo02.py&quot;</span>, line <span class="number">2</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    birth=int(s)</span><br><span class="line">ValueError: invalid literal <span class="keyword">for</span> int() <span class="keyword">with</span> base <span class="number">10</span>: <span class="string">&#x27;abc&#x27;</span></span><br></pre></td></tr></table></figure><p>原来<code>int()</code>函数发现一个字符串并不是合法的数字时就会报错，程序就退出了。</p><h3 id="练习-v4"><a class="header-anchor" href="#练习-v4">¶</a>练习</h3><p>小明身高1.75，体重80.5kg。请根据BMI公式（体重除以身高的平方）帮小明计算他的BMI指数，并根据BMI指数：</p><ul><li>低于18.5：过轻</li><li>18.5-25：正常</li><li>25-28：过重</li><li>28-32：肥胖</li><li>高于32：严重肥胖</li></ul><p>用<code>if-elif</code>判断并打印结果：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">h1=input(<span class="string">&#x27;请输入您的身高:&#x27;</span>)</span><br><span class="line">w1=input(<span class="string">&#x27;请输入您的体重：&#x27;</span>)</span><br><span class="line">height=float(h1)</span><br><span class="line">weight=float(w1)</span><br><span class="line">BMI=weight/(height*height)</span><br><span class="line"><span class="keyword">if</span> BMI&lt;=<span class="number">18.5</span>:</span><br><span class="line">    print(<span class="string">&#x27;您的BMI指标过轻了！&#x27;</span>)</span><br><span class="line">    print(<span class="string">&#x27;请注意增加营养哦~&#x27;</span>)</span><br><span class="line"><span class="keyword">elif</span> <span class="number">18.5</span>&lt;BMI&lt;=<span class="number">25</span>:</span><br><span class="line">    print(<span class="string">&#x27;恭喜，您的BMI指标正常&#x27;</span>)</span><br><span class="line">    print(<span class="string">&#x27;请您继续保持哦~&#x27;</span>)</span><br><span class="line"><span class="keyword">elif</span> <span class="number">25</span>&lt;BMI&lt;=<span class="number">28</span>:</span><br><span class="line">    print(<span class="string">&#x27;您的BMI有些过量了&#x27;</span>)</span><br><span class="line">    print(<span class="string">&#x27;请合理搭配饮食吖~&#x27;</span>)</span><br><span class="line"><span class="keyword">elif</span> <span class="number">28</span>&lt;BMI&lt;=<span class="number">32</span>:</span><br><span class="line">    print(<span class="string">&#x27;您的BMI指标为肥胖&#x27;</span>)</span><br><span class="line">    print(<span class="string">&#x27;请注意要增加运动呀~&#x27;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">&#x27;警告，您的BMI严重不合理了，属于严重肥胖了！！！&#x27;</span>)</span><br><span class="line">    print(<span class="string">&#x27;请保重您的身体，开始控制饮食，增加运动哟~&#x27;</span>)</span><br></pre></td></tr></table></figure><h2 id="循环"><a class="header-anchor" href="#循环">¶</a>循环</h2><p>Python的循环有两种，一种是<code>for...in</code>循环，依次把list或tuple中的每个元素迭代出来，看例子：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">names=[<span class="string">&#x27;aa&#x27;</span>,<span class="string">&#x27;bb&#x27;</span>,<span class="string">&#x27;cc&#x27;</span>]</span><br><span class="line"><span class="keyword">for</span> name <span class="keyword">in</span> names:</span><br><span class="line">    print(name)</span><br></pre></td></tr></table></figure><p>执行这段代码，会依次打印<code>names</code>的每一个元素：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">aa</span><br><span class="line">bb</span><br><span class="line">cc</span><br></pre></td></tr></table></figure><p>所以<code>for x in ...</code>循环就是把每个元素代入变量<code>x</code>，然后执行缩进块的语句。</p><p>再比如我们想计算1-10的整数之和，可以用一个<code>sum</code>变量做累加：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">list=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>]</span><br><span class="line">x=<span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> sum <span class="keyword">in</span> list:</span><br><span class="line">    x=x+sum</span><br><span class="line">print(x)</span><br></pre></td></tr></table></figure><blockquote><p>若最后的print有缩进，就相当于在for循环里面，输出的是每一次相加的结果</p><p>无缩进，就直接输出最后的相加结果：55</p></blockquote><p>如果要计算1-100的整数之和，从1写到100有点困难，幸好Python提供一个<code>range()</code>函数，可以生成一个整数序列，再通过<code>list()</code>函数可以转换为list。比如<code>range(5)</code>生成的序列是从0开始小于5的整数：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt;list(range(<span class="number">5</span>))</span><br><span class="line">[<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]</span><br></pre></td></tr></table></figure><p><code>range(101)</code>就可以生成0-100的整数序列，计算如下：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#first way</span></span><br><span class="line">x=list(range(<span class="number">101</span>))</span><br><span class="line">y=x[<span class="number">0</span>]</span><br><span class="line"><span class="keyword">for</span> sum <span class="keyword">in</span> x:<span class="comment">#sum相当于遍历每一个元素</span></span><br><span class="line">    y=y+sum<span class="comment">#y相当于累加</span></span><br><span class="line">print(y)</span><br><span class="line"><span class="comment"># second way</span></span><br><span class="line">sum=<span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> list(range(<span class="number">101</span>)):</span><br><span class="line">    sum=x+sum</span><br><span class="line">print(sum)</span><br></pre></td></tr></table></figure><p>第二种循环是while循环，只要条件满足，就不断循环，条件不满足时退出循环。比如我们要计算100以内所有奇数之和，可以用while循环实现：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">sum=<span class="number">0</span></span><br><span class="line">n=<span class="number">99</span></span><br><span class="line"><span class="keyword">while</span> n&gt;<span class="number">0</span>:<span class="comment">#while后面是判断语句</span></span><br><span class="line">    sum = sum+n<span class="comment">#sum相当于累加号，</span></span><br><span class="line">    n = n <span class="number">-2</span><span class="comment">#取出奇数号元素</span></span><br><span class="line">print(sum)</span><br></pre></td></tr></table></figure><p>在循环内部变量<code>n</code>不断自减，直到变为<code>-1</code>时，不再满足while条件，循环退出。</p><h3 id="练习-v5"><a class="header-anchor" href="#练习-v5">¶</a>练习</h3><p>请利用循环依次对list中的每个名字打印出<code>Hello, xxx!</code>：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">L = [<span class="string">&#x27;Bart&#x27;</span>, <span class="string">&#x27;Lisa&#x27;</span>, <span class="string">&#x27;Adam&#x27;</span>]</span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> L:</span><br><span class="line">    print(<span class="string">&#x27;Hello,&#x27;</span>,x,<span class="string">&#x27;!&#x27;</span>)</span><br></pre></td></tr></table></figure><h3 id="break"><a class="header-anchor" href="#break">¶</a>break</h3><p>在循环中，<code>break</code>语句可以提前退出循环。例如，本来要循环打印1～100的数字：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">n=<span class="number">1</span></span><br><span class="line"><span class="keyword">while</span> n&lt;<span class="number">101</span>:</span><br><span class="line">    print(n)</span><br><span class="line">    n=n+<span class="number">1</span></span><br><span class="line">print(<span class="string">&quot;END&quot;</span>)</span><br></pre></td></tr></table></figure><p>上面的代码可以打印出1~100。</p><p>如果要提前结束循环，可以用<code>break</code>语句：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">n=<span class="number">1</span></span><br><span class="line"><span class="keyword">while</span> n&lt;<span class="number">101</span>:</span><br><span class="line">    <span class="keyword">if</span> n&gt;<span class="number">10</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    print(n)</span><br><span class="line">    n=n+<span class="number">1</span></span><br><span class="line">print(<span class="string">&quot;END&quot;</span>)</span><br></pre></td></tr></table></figure><p>执行上面的代码可以看到，打印出1~10后，紧接着打印<code>END</code>，程序结束。</p><p>可见<code>break</code>的作用是提前结束循环。<font color='red'>(好像是跟着if判断使用)</font></p><h3 id="continue"><a class="header-anchor" href="#continue">¶</a>continue</h3><p>在循环过程中，也可以通过<code>continue</code>语句，跳过当前的这次循环，直接开始下一次循环。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">n=<span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> n&lt;<span class="number">10</span>:</span><br><span class="line">    n=n+<span class="number">1</span></span><br><span class="line">    print(n)</span><br></pre></td></tr></table></figure><p>上面的程序可以打印出1～10。但是，如果我们想只打印奇数，可以用<code>continue</code>语句跳过某些循环：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">n=<span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> n&lt;<span class="number">10</span>:</span><br><span class="line">    n=n+<span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> n%<span class="number">2</span>==<span class="number">0</span>:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    print(n)</span><br></pre></td></tr></table></figure><p>执行上面的代码可以看到，打印的不再是1～10，而是1，3，5，7，9。</p><p>可见<code>continue</code>的作用是提前结束本轮循环，并直接开始下一轮循环。</p><h3 id="小结"><a class="header-anchor" href="#小结">¶</a>小结</h3><p>循环是让计算机做重复任务的有效的方法。</p><p><code>break</code>语句可以在循环过程中直接退出循环，而<code>continue</code>语句可以提前结束本轮循环，并直接开始下一轮循环。这两个语句通常都<em>必须</em>配合<code>if</code>语句使用。</p><p><em>要特别注意</em>，不要滥用<code>break</code>和<code>continue</code>语句。<code>break</code>和<code>continue</code>会造成代码执行逻辑分叉过多，容易出错。大多数循环并不需要用到<code>break</code>和<code>continue</code>语句，上面的两个例子，都可以通过改写循环条件或者修改循环逻辑，去掉<code>break</code>和<code>continue</code>语句。</p><p>有些时候，如果代码写得有问题，会让程序陷入“死循环”，也就是永远循环下去。这时可以用<code>Ctrl+C</code>退出程序，或者强制结束Python进程。</p><p>试写一个死循环程序。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">s=input(<span class="string">&quot;请输入一个数：&quot;</span>)</span><br><span class="line"><span class="keyword">while</span> <span class="number">1</span>:</span><br><span class="line">    print(<span class="string">&#x27;死机了~~&#x27;</span>)</span><br></pre></td></tr></table></figure><blockquote><p>只要让while循环判断永远为正确的，那么永远在while循环里，最简单就让判断=1（布尔类型）</p></blockquote><h2 id="定义函数"><a class="header-anchor" href="#定义函数">¶</a>定义函数</h2><p>在Python中，定义一个函数要使用<code>def</code>语句，依次写出函数名、括号、括号中的参数和冒号<code>:</code>，然后，在缩进块中编写函数体，函数的返回值用<code>return</code>语句返回。</p><p>我们以自定义一个求绝对值的<code>my_abs</code>函数为例：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">my_abs</span>(<span class="params">x</span>):</span></span><br><span class="line">    <span class="keyword">if</span> x&gt;=<span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> x</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> -x</span><br><span class="line">print(my_abs(<span class="number">-15</span>))</span><br></pre></td></tr></table></figure><p>请注意，函数体内部的语句在执行时，一旦执行到<code>return</code>时，函数就执行完毕，并将结果返回。因此，函数内部通过条件判断和循环可以实现非常复杂的逻辑。</p><p>如果没有<code>return</code>语句，函数执行完毕后也会返回结果，只是结果为<code>None</code>。<code>return None</code>可以简写为<code>return</code>。</p><p>在Python交互环境中定义函数时，注意Python会出现<code>...</code>的提示。函数定义结束后需要按两次回车重新回到<code>&gt;&gt;&gt;</code>提示符下：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">┌────────────────────────────────────────────────────────┐</span><br><span class="line">│Command Prompt - python                           - □ x │</span><br><span class="line">├────────────────────────────────────────────────────────┤</span><br><span class="line">│&gt;&gt;&gt; def my_abs(x):                                      │</span><br><span class="line">│...     if x &gt;&#x3D; 0:                                      │</span><br><span class="line">│...         return x                                    │</span><br><span class="line">│...     else:                                           │</span><br><span class="line">│...         return -x                                   │</span><br><span class="line">│...                                                     │</span><br><span class="line">│&gt;&gt;&gt; my_abs(-9)                                          │</span><br><span class="line">│9                                                       │</span><br><span class="line">│&gt;&gt;&gt; _                                                   │</span><br><span class="line">│                                                        │</span><br><span class="line">│                                                        │</span><br><span class="line">└────────────────────────────────────────────────────────┘</span><br></pre></td></tr></table></figure><h3 id="空函数"><a class="header-anchor" href="#空函数">¶</a>空函数</h3><p>如果想定义一个什么事也不做的空函数，可以用<code>pass</code>语句：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">nop</span>():</span></span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><p><code>pass</code>语句什么都不做，那有什么用？实际上<code>pass</code>可以用来作为占位符，比如现在还没想好怎么写函数的代码，就可以先放一个<code>pass</code>，让代码能运行起来。</p><p><code>pass</code>还可以用在其他语句里，比如：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> age &gt;= <span class="number">18</span>:</span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><p>缺少了<code>pass</code>，代码运行就会有语法错误。</p><h3 id="参数检查"><a class="header-anchor" href="#参数检查">¶</a>参数检查</h3><p>调用函数时，如果参数个数不对，Python解释器会自动检查出来，并抛出<code>TypeError</code>：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>my_abs(<span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;&lt;stdin&gt;&quot;</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">TypeError: my_abs() takes <span class="number">1</span> positional argument but <span class="number">2</span> were given</span><br></pre></td></tr></table></figure><p>但是如果参数类型不对，Python解释器就无法帮我们检查。试试<code>my_abs</code>和内置函数<code>abs</code>的差别：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>my_abs(<span class="string">&#x27;A&#x27;</span>)</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;&lt;stdin&gt;&quot;</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">  File <span class="string">&quot;&lt;stdin&gt;&quot;</span>, line <span class="number">2</span>, <span class="keyword">in</span> my_abs</span><br><span class="line">TypeError: unorderable types: str() &gt;= int()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>abs(<span class="string">&#x27;A&#x27;</span>)</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;&lt;stdin&gt;&quot;</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">TypeError: bad operand type <span class="keyword">for</span> abs(): <span class="string">&#x27;str&#x27;</span></span><br></pre></td></tr></table></figure><p>当传入了不恰当的参数时，内置函数<code>abs</code>会检查出参数错误，而我们定义的<code>my_abs</code>没有参数检查，会导致<code>if</code>语句出错，出错信息和<code>abs</code>不一样。所以，这个函数定义不够完善。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">my_abs</span>(<span class="params">x</span>):</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> isinstance(x,(int,float)):</span><br><span class="line">        <span class="keyword">raise</span> TypeError(<span class="string">&#x27;bad oprand type&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> x&gt;=<span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> x</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> -x</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>my_abs(<span class="string">&#x27;A&#x27;</span>)</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;&lt;stdin&gt;&quot;</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">  File <span class="string">&quot;&lt;stdin&gt;&quot;</span>, line <span class="number">3</span>, <span class="keyword">in</span> my_abs</span><br><span class="line">TypeError: bad operand type</span><br></pre></td></tr></table></figure><h3 id="返回多个值"><a class="header-anchor" href="#返回多个值">¶</a>返回多个值</h3><p>函数可以返回多个值吗？答案是肯定的。</p><p>比如在游戏中经常需要从一个点移动到另一个点，给出坐标、位移和角度，就可以计算出新的坐标：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> math</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">move</span>(<span class="params">x,y,step,angle=<span class="number">0</span></span>):</span></span><br><span class="line">    nx=x+step*math.cos(angle)</span><br><span class="line">    ny=y-step*math.sin(angle)</span><br><span class="line">    <span class="keyword">return</span> nx,ny</span><br><span class="line"></span><br><span class="line">x,y=move(<span class="number">100</span>,<span class="number">100</span>,<span class="number">60</span>,math.pi/<span class="number">6</span>)</span><br><span class="line">print(x,y)</span><br></pre></td></tr></table></figure><blockquote><p><code>import math</code>语句表示导入<code>math</code>包，并允许后续代码引用<code>math</code>包里的<code>sin</code>、<code>cos</code>等函数。</p></blockquote><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="number">151.96152422706632</span> <span class="number">70.0</span></span><br></pre></td></tr></table></figure><p>但其实这只是一种假象，Python函数返回的仍然是单一值：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>r = move(<span class="number">100</span>, <span class="number">100</span>, <span class="number">60</span>, math.pi / <span class="number">6</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(r)</span><br><span class="line">(<span class="number">151.96152422706632</span>, <span class="number">70.0</span>)</span><br></pre></td></tr></table></figure><p>原来返回值是一个tuple！但是，在语法上，返回一个tuple可以省略括号，而多个变量可以同时接收一个tuple，按位置赋给对应的值，所以，Python的函数返回多值其实就是返回一个tuple，但写起来更方便。</p><h3 id="练习-v6"><a class="header-anchor" href="#练习-v6">¶</a>练习</h3><p>请定义一个函数<code>quadratic(a, b, c)</code>，接收3个参数，返回一元二次方程 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mi>b</mi><mi>x</mi><mo>+</mo><mi>c</mi><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">ax^2+bx+c=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">a</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">b</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">c</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span> 的两个解。</p><p>一元二次方程的求根公式为：</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mo>=</mo><mfrac><mrow><mo>−</mo><mi>b</mi><mo>±</mo><msqrt><mrow><msup><mi>b</mi><mn>2</mn></msup><mo>−</mo><mn>4</mn><mi>a</mi><mi>c</mi></mrow></msqrt></mrow><mrow><mn>2</mn><mi>a</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">x=\frac{-b\pm\sqrt{b^2-4ac}}{2a}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.384482em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.039482em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathdefault mtight">a</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.3939999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathdefault mtight">b</span><span class="mbin mtight">±</span><span class="mord sqrt mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9221171428571429em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight" style="padding-left:0.833em;"><span class="mord mtight"><span class="mord mathdefault mtight">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7463142857142857em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mtight">4</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight">c</span></span></span><span style="top:-2.882117142857143em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail mtight" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.11788285714285718em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> math</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">quadratic</span>(<span class="params">a,b,c</span>):</span></span><br><span class="line">    <span class="keyword">if</span> a==<span class="number">0</span> <span class="keyword">and</span> b==<span class="number">0</span>:</span><br><span class="line">        print(<span class="string">&#x27;a,b同时为零无意义&#x27;</span>)</span><br><span class="line">    <span class="keyword">elif</span> a==<span class="number">0</span> <span class="keyword">and</span> b!=<span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> -c/b</span><br><span class="line">    <span class="keyword">elif</span> a!=<span class="number">0</span> <span class="keyword">and</span> b==<span class="number">0</span> <span class="keyword">and</span> c&lt;<span class="number">0</span>:</span><br><span class="line">        a1=-math.sqrt(c/a)</span><br><span class="line">        a2=math.sqrt(c/a)</span><br><span class="line">        <span class="keyword">return</span> a1,a2</span><br><span class="line">    <span class="keyword">elif</span> a!=<span class="number">0</span> <span class="keyword">and</span> b==<span class="number">0</span> <span class="keyword">and</span> c&gt;<span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;方程无实数解，有复数解&#x27;</span></span><br><span class="line">    <span class="keyword">elif</span> b**<span class="number">2</span><span class="number">-4</span>*a*c&gt;=<span class="number">0</span>:</span><br><span class="line">        x1=(-b+math.sqrt(b*b<span class="number">-4</span>*a*c))/(<span class="number">2</span>*a)</span><br><span class="line">        x2=(-b-math.sqrt(b*b<span class="number">-4</span>*a*c))/(<span class="number">2</span>*a)</span><br><span class="line">        <span class="keyword">return</span> x1,x2</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">&#x27;方程无解&#x27;</span>)</span><br><span class="line"></span><br><span class="line">a=input(<span class="string">&quot;请输入a的值：&quot;</span>)</span><br><span class="line">b=input(<span class="string">&quot;请输入b的值：&quot;</span>)</span><br><span class="line">c=input(<span class="string">&quot;请输入c的值：&quot;</span>)</span><br><span class="line">r=quadratic(int(a),int(b),int(c))</span><br><span class="line">print(r)</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; class=&quot;aplayer-secondary-script-marker&quot;&gt;&lt;/script&gt;&lt;h1&gt;前言&lt;/h1&gt;
&lt;p&gt;Python是一种面向对象、 解释型、弱类型的脚本语言,它也是一种功能强大而完善的通用型语言。&lt;/p&gt;
&lt;p&gt;Python的两大特色是&lt;strong&gt;清晰的语法&lt;/strong&gt;和&lt;strong&gt;可扩展性&lt;/strong&gt;:&lt;/p&gt;
&lt;figure class=&quot;highlight markdown&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Python的语法非常清晰,它甚至不是一 种格式自由的语言。例如,它要求if语句的下一-行必须向右缩进,否则不能通过编译。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Python的可扩展性体现为它的模块, Python具有脚本语言中最丰富和强大的类库(这些类库被形象地称为&amp;quot;batteries included , 内置电池”), 这些类库覆盖 了文件I/O、GUI、 网络编程、数据库访问、文本操作等绝大部分应用场景。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;+“空格” 出现小圆点&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;学习通过https://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000&lt;/p&gt;
&lt;h1&gt;基础语法&lt;/h1&gt;
&lt;h2 id=&quot;变量命名规则&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#变量命名规则&quot;&gt;¶&lt;/a&gt;变量命名规则&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;变量必须以字母(a-Z,A-Z)或下划线(_)开头&lt;/li&gt;
&lt;li&gt;其他字符可以是字母，数字或&lt;/li&gt;
&lt;li&gt;变量&lt;em&gt;&lt;strong&gt;区分大小写&lt;/strong&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Python关键字不能用作变量名。&lt;/li&gt;
&lt;li&gt;变量的命名不能以数字来开头&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="python" scheme="http://stardust14.com/categories/python/"/>
    
    
    <category term="python" scheme="http://stardust14.com/tags/python/"/>
    
  </entry>
  
</feed>
